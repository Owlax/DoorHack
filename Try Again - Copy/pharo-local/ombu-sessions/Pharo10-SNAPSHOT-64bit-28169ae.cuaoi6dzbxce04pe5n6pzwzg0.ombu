OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:23.58-05:00' ],		#prior : OmReference [ 'Pharo10-SNAPSHOT-64bit-28169ae.e6mxc0ro60mzd83o2rtrlppt8', '8370' ],		#self : OmReference [ '1' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'BaselineOfPharoJS-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ],		#time : DateAndTime [ '2024-03-03T08:20:23.608-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #BaselineOfPharoJS-Base,		#affectedPackageName : #BaselineOfPharoJS	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ],		#time : DateAndTime [ '2024-03-03T08:20:23.611-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'BaselineOf subclass: #BaselineOfPharoJS\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'BaselineOfPharoJS-Base\'',				#superclassName : 'BaselineOf',				#traitCompositionSource : '{}'			},			#name : #BaselineOfPharoJS,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'BaselineOfPharoJS class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'BaselineOfPharoJS class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #BaselineOfPharoJS,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #BaselineOfPharoJS-Base,			#package : #BaselineOfPharoJS,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ],		#time : DateAndTime [ '2024-03-03T08:20:23.615-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'BaselineOf subclass: #BaselineOfPharoJS\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'BaselineOfPharoJS-Base\'',				#superclassName : 'BaselineOf',				#traitCompositionSource : '{}'			},			#name : #BaselineOfPharoJS,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'BaselineOfPharoJS class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'BaselineOfPharoJS class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #BaselineOfPharoJS,					#isMetaSide : false				},				#parent : @8,				#content : 'Baseline managing the PharoJS project on Git',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #BaselineOfPharoJS-Base,			#package : #BaselineOfPharoJS,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Baseline managing the PharoJS project on Git',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ],		#time : DateAndTime [ '2024-03-03T08:20:23.617-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpCategoryAddition {		#classCategoryName : #BaselineOfPharoJS-Manifest,		#affectedPackageName : #BaselineOfPharoJS	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ],		#time : DateAndTime [ '2024-03-03T08:20:23.619-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PackageManifest subclass: #ManifestBaselineOfPharoJS\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'BaselineOfPharoJS-Manifest\'',				#superclassName : 'PackageManifest',				#traitCompositionSource : '{}'			},			#name : #ManifestBaselineOfPharoJS,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ManifestBaselineOfPharoJS class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ManifestBaselineOfPharoJS class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestBaselineOfPharoJS,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #BaselineOfPharoJS-Manifest,			#package : #BaselineOfPharoJS,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ],		#time : DateAndTime [ '2024-03-03T08:20:23.621-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PackageManifest subclass: #ManifestBaselineOfPharoJS\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'BaselineOfPharoJS-Manifest\'',				#superclassName : 'PackageManifest',				#traitCompositionSource : '{}'			},			#name : #ManifestBaselineOfPharoJS,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ManifestBaselineOfPharoJS class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ManifestBaselineOfPharoJS class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestBaselineOfPharoJS,					#isMetaSide : false				},				#parent : @8,				#content : 'I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #BaselineOfPharoJS-Manifest,			#package : #BaselineOfPharoJS,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ],		#time : DateAndTime [ '2024-03-03T08:20:23.67-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfPharoJS,				#isMetaSide : false			},			#name : #'baseline:',			#protocol : #baselines,			#sourceCode : 'baseline: spec\r\t<baseline>\r\r\tself compatibility: spec.\r\t\t\r\tspec for: #\'common\' do: [\r\t\tself \r\t\t\tprerequisites: spec;\t\t\r\t\t\tpackages: spec;\r\t\t\tgroups: spec\t\r\t]',			#stamp : '',			#package : #BaselineOfPharoJS		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ],		#time : DateAndTime [ '2024-03-03T08:20:23.671-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfPharoJS,				#isMetaSide : false			},			#name : #'compatibility:',			#protocol : #'private - accessing',			#sourceCode : 'compatibility: spec\r\t"Define a \'Compatibility\' group that can be used as a dependency later to overcome differences in Pharo releases"\r\t\r\tspec for: #\'common\' do: [ spec group: \'Compatibility\' with: #() ].\t"no compatibility by default"\r\r\tspec for: #(\'pharo9.x\') do: [ spec package: \'PharoJs-Compatibility-Pharo9\';\r\t\t\t\t     \t\t\t\t\t\t\t   group: \'Compatibility\' with: #(\'PharoJs-Compatibility-Pharo9\') ].\r\t\t\t\t\t\r\tspec for: #(\'pharo8.x\') do: [ spec package: \'PharoJs-Compatibility-Pharo8\';\r\t\t\t\t     \t\t\t\t\t\t\t   group: \'Compatibility\' with: #(\'PharoJs-Compatibility-Pharo8\') ].\r\r\tspec for: #(\'pharo7.x\') do: [ spec package: \'PharoJs-Compatibility-Pharo7\';\r\t\t\t\t     \t\t\t\t\t\t\t   group: \'Compatibility\' with: #(\'PharoJs-Compatibility-Pharo7\') ].\r',			#stamp : '',			#package : #BaselineOfPharoJS		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ],		#time : DateAndTime [ '2024-03-03T08:20:23.671-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfPharoJS,				#isMetaSide : false			},			#name : #'groups:',			#protocol : #'private - accessing',			#sourceCode : 'groups: spec\r\t\t"Define groups for loading"\r\t\t\r\t\t"Transpiler"\r\t\tspec \r\t\t\tgroup: \'Transpiler\' with: #(\'PharoJs-Base-Transpiler\');\t\t\t\r\t\t\tgroup: \'OptimizedTranspiler\' with: #(\'PharoJs-Base-Transpiler\' \'PharoJs-Base-Transpiler-Optimizations\').\t\t\r\t\t\r\t\t"Other"\t\r\t\tspec \r\t\t\tgroup: \'App\' with: #(\'PharoJs-Base-App\');\r\t\t\tgroup: \'Exporter\' with: #(\'PharoJs-Base-Exporter\');\r\t\t\tgroup: \'Bridge\' with: #(\'PharoJs-Base-Bridge\')\t;\r\t\t\tgroup: \'Examples\' with: #(\'PharoJs-Examples\');\r\t\t\tgroup: \'Benchmarks\' with: #(\'PharoJs-Benchmarking\');\r\t\t\tgroup: \'Statistics\' with: #(\'PharoJs-Utilities-Statistics\');\r\t\t\tgroup: \'Tools\' with: #(\'PharoJs-Tools\').\r\t\t\t\r\t\tspec\r\t\t\tgroup: \'Electron\' with: #(\'PharoJs-Base-JS-Electron\');\r\t\t\tgroup: \'Express\' with: #(\'PharoJs-Base-JS-Express\');\r\t\t\tgroup: \'Node\' with: #(\'PharoJs-Base-JS-Node\');\r\t\t\tgroup: \'Seaside\' with: #(\'PharoJs-Base-JS-Seaside\').\r\t\t\t\r\t\tspec \t\r\t\t\tgroup: \'Tests\' with: #(\r\t\t\t\t\'PharoJs-Base-Transpiler-Tests\'\r\t\t\t\t\'PharoJs-Base-Transpiler-Optimizations-Tests\'\r\t\t\t\t\'PharoJs-Base-Exporter-Tests\'\r\t\t\t\t\'PharoJs-Base-JS-CoreLibraries-Tests\'\r\t\t\t\t\'PharoJs-Base-Serialization-Tests\'\r\t\t\t\t\'PharoJs-Base-Bridge-Tests\'\r\t\t\t\t\'PharoJs-Examples-Tests\'\r\t\t\t\t\'PharoJs-Tools-Tests\' \r\t\t\t).\t\r\t\t\t\t\r\t\tspec group: \'Deprecated\' with: #(\'PharoJs-Base-Serialization-Deprecated\').\t\t\r\t   "Virtual groups (lowercase) from Metacello"\r\t\tspec group: \'default\' with: #(\'Compatibility\' \'Transpiler\' \'OptimizedTranspiler\' \'App\' \'Exporter\' \'Bridge\' \'Examples\' \'Benchmarks\' \'Statistics\' \'Tools\' \'Deprecated\' \'Tests\').\r\t\tspec group: \'all\' with: #(\'default\' \'Express\' \'Electron\' \'Node\' \'Seaside\' \'LightweightObserverJS\')',			#stamp : '',			#package : #BaselineOfPharoJS		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ],		#time : DateAndTime [ '2024-03-03T08:20:23.672-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfPharoJS,				#isMetaSide : false			},			#name : #'packages:',			#protocol : #'private - accessing',			#sourceCode : 'packages: spec\r\t\t"Define and list all packages and their dependencies"\r\t\t\r\t\t"Transpiler"\r\t\tspec package: \'PharoJs-Base-Transpiler\' with: [ spec requires: #(\'Equals\' \'Compatibility\') ];\r\t\t\t  package: \'PharoJs-Base-Transpiler-Tests\' with: [ spec requires: #(\'PharoJs-Base-Transpiler\') ]; \r           package: \'PharoJs-Base-Transpiler-Optimizations\' with: [ spec requires: #(\'PharoJs-Base-Transpiler\') ];\r\t\t\t  package: \'PharoJs-Base-Transpiler-Optimizations-Tests\' with: [ spec requires: #(\'PharoJs-Base-Transpiler-Optimizations\' \'PharoJs-Base-Bridge-Tests\' \'PharoJs-Base-Transpiler-Tests\') ].\r\t\t\r\t\t"Exporter"\t\t\r\t\tspec package: \'PharoJs-Base-Exporter\' with: [ spec requires: #(\'PharoJs-Base-Transpiler\' \'PharoJs-Base-App\' ) ];\r\t\t\t  package: \'PharoJs-Base-Exporter-Tests\' with: [ spec requires: #(\'PharoJs-Base-Exporter\' \'PharoJs-Base-Transpiler-Tests\') ].\t\t\t\t\t\r\t\t\t\t\r\t\t"TestFramework"\t\r\t\tspec package: \'PharoJs-TestFramework\' with: [ spec requires: #(\'PharoJs-Base-Exporter\' \'PharoJs-Base-Bridge\' \'PharoJs-Base-App\') ].\t\t\t\r\r\t\t"JS - CoreLibraries"\r\t\tspec package: \'PharoJs-Base-JS-CoreLibraries\' with: [ spec requires: #(\'PharoJs-Base-Transpiler\' \'PharoExtra\') ];\r\t\t\t  package: \'PharoJs-Base-JS-CoreLibraries-Tests\' with: [ spec requires: #(\'PharoJs-Base-JS-CoreLibraries\' \'PharoJs-TestFramework\' \'PharoJs-Base-Bridge-Tests\' \'PharoJs-Base-Transpiler-Tests\') ].\t\t\t\t\t\r\r\t\t"Serialization"  \r\t\tspec package: \'PharoJs-Base-Serialization\' with: [ spec requires: #(\'PharoJs-Base-JS-CoreLibraries\')];\r\t\t\t  package: \'PharoJs-Base-Serialization-Tests\' with: [ spec requires: #(\'PharoJs-Base-Serialization\' \'PharoJs-Base-Bridge-Tests\')];\r\t\t\t  package: \'PharoJs-Base-Serialization-Deprecated\' with: [ spec requires: #(\'PharoJs-Base-App\' \'PharoJs-Base-Transpiler\' \'PharoJs-TestFramework\') ].\r\t\t\t\t\t\t\t\r\t\t"Bridge"\t  \r\t\tspec package: \'PharoJs-Base-Bridge\' with: [ spec requires: #(\'PharoJs-Base-JS-CoreLibraries\' \'PharoJs-Base-Exporter\' \'PharoJs-Base-App\' \'Zinc-WebSocket-Core\' \'PharoJs-Base-Serialization\')];\r\t\t\t  package: \'PharoJs-Base-Bridge-Tests\' with: [ spec requires: #(\'PharoJs-TestFramework\' \'PharoJs-Base-Bridge\') ].\r\t\t\r\t\t"App"\r\t\tspec package: \'PharoJs-Base-App\' with: [ spec requires: #(\'PharoJs-Base-Transpiler\' \'PharoJs-Base-JS-CoreLibraries\') ].\r\t\t\r\t\t"Examples"\t\r\t\tspec package: \'PharoJs-Examples\' with: [ spec requires: #(\'PharoJs-Base-App\' \'PharoJs-Base-Transpiler\' \'PharoJs-TestFramework\' \'PharoJs-Base-Exporter\') ];\r\t\t\t  package: \'PharoJs-Examples-Tests\' with: [ spec requires: #(\'PharoJs-Examples\' \'PharoJs-TestFramework\') ].\t\t\t\t\t\t\r\t\t\r\t\t"Benchmarking (Timing)"\r\t\tspec package: \'PharoJs-Benchmarking\' with: [ spec requires: #(\'PharoJs-Base-Transpiler-Optimizations\' \'PharoJs-Base-Bridge\') ].\r\t\t\r\t\t"Utilities - Statistics"\t\t\t\t\t\r\t\tspec package: \'PharoJs-Utilities-Statistics\' with: [ spec requires: #(\'PharoJs-Base-Exporter\') ].\r\t\t\t\t\t\t\t\t\t\t\t\t\t\r\t\t"Tools"   \t\t\r\t\tspec package: \'PharoJs-Tools\' with: [ spec requires: #(\'PharoJs-Base-Bridge\') ];\r\t\t\t  package: \'PharoJs-Tools-Tests\' with: [ spec requires: #(\'PharoJs-Tools\' \'PharoJs-TestFramework\') ].\r\t\t\r\t\t"Apps and Frameworks (Electron, Express, Node, ...)"\r\t\tspec package: \'PharoJs-Base-JS-Electron\' with: [ spec requires: #(\'PharoJs-Base-App\') ];\r\t\t\t  package: \'PharoJs-Base-JS-Express\' with: [ spec requires: #(\'PharoJs-Base-App\') ];\r\t\t\t  package: \'PharoJs-Base-JS-Node\' with: [ spec requires: #(\'PharoJs-Base-App\') ];\r\t\t\t  package: \'PharoJs-Base-JS-Seaside\' with: [ spec requires: #(\'PharoJs-Base-App\' \'Seaside3\') ];\r\t\t\t  package: \'LightweightObserverJS\' with: [ spec requires: #(\'PharoJs-Base-App\' \'LightweightObserver\') ] \r\t\t ',			#stamp : '',			#package : #BaselineOfPharoJS		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ],		#time : DateAndTime [ '2024-03-03T08:20:23.672-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfPharoJS,				#isMetaSide : false			},			#name : #'prerequisites:',			#protocol : #'private - accessing',			#sourceCode : 'prerequisites: spec\r\t"Add the projects prerequisite definitions to the given spec"\t\r\r\t"Prerequisite Baselines"\r\tspec\r\t\tbaseline: \'PharoExtra\' with: [ spec repository: \'github://bouraqadi/PharoMisc\' ];\r\t\tbaseline: \'Equals\' with: [ spec repository: \'github://bouraqadi/PharoMisc\' ];\r\t\tbaseline: \'LightweightObserver\' with: [ spec repository: \'github://bouraqadi/PharoMisc\' ];\r\t\tbaseline: \'Seaside3\' with: [ spec repository: \'github://SeasideSt/Seaside:master/repository\' ].\t\r\t\t\t\r\t"Prerequisite Packages"\t\r\tspec\r\t\tpackage: \'Zinc-WebSocket-Core\' with: [ spec repository: \'github://svenvc/zinc\' ]\t\t\t ',			#stamp : '',			#package : #BaselineOfPharoJS		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ],		#time : DateAndTime [ '2024-03-03T08:20:23.672-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestBaselineOfPharoJS class',				#isMetaSide : true			},			#name : #ruleRBLongMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBLongMethodsRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#BaselineOfPharoJS)) #\'2020-02-14T19:08:56.237579-05:00\') )',			#stamp : '',			#package : #BaselineOfPharoJS		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ],		#time : DateAndTime [ '2024-03-03T08:20:23.672-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestBaselineOfPharoJS class',				#isMetaSide : true			},			#name : #ruleRBUtilityMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBUtilityMethodsRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#BaselineOfPharoJS)) #\'2020-02-14T19:09:03.794682-05:00\') )',			#stamp : '',			#package : #BaselineOfPharoJS		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:25.21-05:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'BaselineOfEquals-CompatibleUserName.1707918508'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ],		#time : DateAndTime [ '2024-03-03T08:20:25.256-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #BaselineOfEquals,		#affectedPackageName : #BaselineOfEquals	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ],		#time : DateAndTime [ '2024-03-03T08:20:25.259-05:00' ],		#trigger : OmReference [ '15' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'BaselineOf subclass: #BaselineOfEquals\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'BaselineOfEquals\'',				#superclassName : 'BaselineOf',				#traitCompositionSource : '{}'			},			#name : #BaselineOfEquals,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'BaselineOfEquals class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'BaselineOfEquals class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #BaselineOfEquals,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #BaselineOfEquals,			#package : #BaselineOfEquals,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ],		#time : DateAndTime [ '2024-03-03T08:20:25.287-05:00' ],		#trigger : OmReference [ '15' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfEquals,				#isMetaSide : false			},			#name : #'baseline:',			#protocol : #baselines,			#sourceCode : 'baseline: spec\r\t<baseline>\r\r\tspec for: #\'common\' do: [\r\t\tspec \r\t\t\tblessing: #\'baseline\';\r\t\t\trepository: \'github://bouraqadi/PharoMisc\'; \r\t\t\tpackage: #Equals ].\r',			#stamp : '',			#package : #BaselineOfEquals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:25.445-05:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'BaselineOfPharoExtra-CompatibleUserName.1707918508'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ],		#time : DateAndTime [ '2024-03-03T08:20:25.474-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #BaselineOfPharoExtra,		#affectedPackageName : #BaselineOfPharoExtra	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ],		#time : DateAndTime [ '2024-03-03T08:20:25.477-05:00' ],		#trigger : OmReference [ '19' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'BaselineOf subclass: #BaselineOfPharoExtra\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'BaselineOfPharoExtra\'',				#superclassName : 'BaselineOf',				#traitCompositionSource : '{}'			},			#name : #BaselineOfPharoExtra,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'BaselineOfPharoExtra class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'BaselineOfPharoExtra class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #BaselineOfPharoExtra,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #BaselineOfPharoExtra,			#package : #BaselineOfPharoExtra,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ],		#time : DateAndTime [ '2024-03-03T08:20:25.505-05:00' ],		#trigger : OmReference [ '19' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfPharoExtra,				#isMetaSide : false			},			#name : #'baseline:',			#protocol : #baselines,			#sourceCode : 'baseline: spec\r\t<baseline>\r\r\tspec for: #\'common\' do: [\r\t\tspec \r\t\t\tblessing: #\'baseline\';\r\t\t\trepository: \'github://bouraqadi/PharoMisc\'; \r\t\t\tpackage: #PharoExtra. ].\r',			#stamp : '',			#package : #BaselineOfPharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:41.334-05:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoExtra-CompatibleUserName.1707918508'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ],		#time : DateAndTime [ '2024-03-03T08:20:41.364-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoExtra-Collections,		#affectedPackageName : #PharoExtra	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ],		#time : DateAndTime [ '2024-03-03T08:20:41.366-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PeSequenceableCollectionGroupingTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoExtra-Collections\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PeSequenceableCollectionGroupingTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PeSequenceableCollectionGroupingTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PeSequenceableCollectionGroupingTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PeSequenceableCollectionGroupingTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoExtra-Collections,			#package : #PharoExtra,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ],		#time : DateAndTime [ '2024-03-03T08:20:41.369-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoExtra-Chronology,		#affectedPackageName : #PharoExtra	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ],		#time : DateAndTime [ '2024-03-03T08:20:41.371-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PhDateAndTimeTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoExtra-Chronology\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PhDateAndTimeTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PhDateAndTimeTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PhDateAndTimeTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PhDateAndTimeTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoExtra-Chronology,			#package : #PharoExtra,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ],		#time : DateAndTime [ '2024-03-03T08:20:41.374-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PhDurationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoExtra-Chronology\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PhDurationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PhDurationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PhDurationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PhDurationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoExtra-Chronology,			#package : #PharoExtra,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ],		#time : DateAndTime [ '2024-03-03T08:20:41.441-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'DateAndTime class',				#isMetaSide : true			},			#name : #'todayHour:minute:',			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'todayHour: hour minute: minute \r\t^self todayHour: hour minute: minute second: 0',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ],		#time : DateAndTime [ '2024-03-03T08:20:41.442-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'DateAndTime class',				#isMetaSide : true			},			#name : #'todayHour:minute:second:',			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'todayHour: hour minute: minute second: second\r\t^self date: Date today time: (Time hour: hour minute: minute second: second)',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ],		#time : DateAndTime [ '2024-03-03T08:20:41.443-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'DateAndTime class',				#isMetaSide : true			},			#name : #'tomorrowHour:minute:',			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'tomorrowHour: hour minute: minute \r\t^self tomorrowHour: hour minute: minute second: 0',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ],		#time : DateAndTime [ '2024-03-03T08:20:41.444-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'DateAndTime class',				#isMetaSide : true			},			#name : #'tomorrowHour:minute:second:',			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'tomorrowHour: hour minute: minute second: second\r\t^self date: Date tomorrow time: (Time hour: hour minute: minute second: second)',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ],		#time : DateAndTime [ '2024-03-03T08:20:41.444-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DateAndTime,				#isMetaSide : false			},			#name : #milliSecond,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'milliSecond\r\t^self nanoSecond // 1000000',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ],		#time : DateAndTime [ '2024-03-03T08:20:41.445-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Time class',				#isMetaSide : true			},			#name : #'hour:minute:',			#protocol : #'*PharoExtra-instance creation',			#sourceCode : 'hour: hour minute: minute\r\t^self hour: hour minute: minute second: 0',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ],		#time : DateAndTime [ '2024-03-03T08:20:41.446-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Time class',				#isMetaSide : true			},			#name : #'hour:minute:second:milliSecond:',			#protocol : #'*PharoExtra-instance creation',			#sourceCode : 'hour: hour0to23 minute: minute0to59 second: second0to59 milliSecond: millis0to999 \r\t^self hour: hour0to23 minute: minute0to59 second: second0to59  nanoSecond: (millis0to999 * 1000000)',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ],		#time : DateAndTime [ '2024-03-03T08:20:41.447-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Time,				#isMetaSide : false			},			#name : #'+',			#protocol : #'*PharoExtra-Chronology',			#sourceCode : '+ aDuration\r\t^self asDateAndTime + aDuration',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ],		#time : DateAndTime [ '2024-03-03T08:20:41.448-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Duration class',				#isMetaSide : true			},			#name : #'months:',			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'months: aNumber\r\t^self seconds: aNumber * self secondsInMonth',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ],		#time : DateAndTime [ '2024-03-03T08:20:41.448-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Duration class',				#isMetaSide : true			},			#name : #secondsInDay,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'secondsInDay\r\t^86400',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ],		#time : DateAndTime [ '2024-03-03T08:20:41.449-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Duration class',				#isMetaSide : true			},			#name : #secondsInMonth,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'secondsInMonth\r\t^2628000',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ],		#time : DateAndTime [ '2024-03-03T08:20:41.449-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Duration class',				#isMetaSide : true			},			#name : #secondsInWeek,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'secondsInWeek\r\t^604800',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ],		#time : DateAndTime [ '2024-03-03T08:20:41.45-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Duration class',				#isMetaSide : true			},			#name : #secondsInYear,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'secondsInYear\r\t^31536000',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ],		#time : DateAndTime [ '2024-03-03T08:20:41.451-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duration,				#isMetaSide : false			},			#name : #daysCount,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'daysCount\r\t^self daysSecondsCount quo: self secondsInDay\r',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ],		#time : DateAndTime [ '2024-03-03T08:20:41.451-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duration,				#isMetaSide : false			},			#name : #daysSecondsCount,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'daysSecondsCount\r\t^self weeksSecondsCount rem: self secondsInWeek\r',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ],		#time : DateAndTime [ '2024-03-03T08:20:41.452-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duration,				#isMetaSide : false			},			#name : #hoursCount,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'hoursCount\r\t^self hoursSecondsCount quo: SecondsInHour',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ],		#time : DateAndTime [ '2024-03-03T08:20:41.453-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duration,				#isMetaSide : false			},			#name : #hoursSecondsCount,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'hoursSecondsCount\r\t^self daysSecondsCount rem: self secondsInDay\r',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ],		#time : DateAndTime [ '2024-03-03T08:20:41.453-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duration,				#isMetaSide : false			},			#name : #millisecondsCount,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'millisecondsCount\r\t^self wholeMilliseconds',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ],		#time : DateAndTime [ '2024-03-03T08:20:41.454-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duration,				#isMetaSide : false			},			#name : #minutesCount,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'minutesCount\r\t^self minutes',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ],		#time : DateAndTime [ '2024-03-03T08:20:41.454-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duration,				#isMetaSide : false			},			#name : #monthSecondsCount,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'monthSecondsCount\r\t^ self totalSeconds rem: self secondsInYear',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ],		#time : DateAndTime [ '2024-03-03T08:20:41.455-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duration,				#isMetaSide : false			},			#name : #monthsCount,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'monthsCount\r\t^ self monthSecondsCount quo: self secondsInMonth',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ],		#time : DateAndTime [ '2024-03-03T08:20:41.455-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duration,				#isMetaSide : false			},			#name : #secondsCount,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'secondsCount\r\t^self seconds',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ],		#time : DateAndTime [ '2024-03-03T08:20:41.456-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duration,				#isMetaSide : false			},			#name : #secondsInDay,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'secondsInDay\r\t^self class secondsInDay',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ],		#time : DateAndTime [ '2024-03-03T08:20:41.457-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duration,				#isMetaSide : false			},			#name : #secondsInMonth,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'secondsInMonth\r\t^self class secondsInMonth',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ],		#time : DateAndTime [ '2024-03-03T08:20:41.457-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duration,				#isMetaSide : false			},			#name : #secondsInWeek,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'secondsInWeek\r\t^self class secondsInWeek',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ],		#time : DateAndTime [ '2024-03-03T08:20:41.458-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duration,				#isMetaSide : false			},			#name : #secondsInYear,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'secondsInYear\r\t^self class secondsInYear',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ],		#time : DateAndTime [ '2024-03-03T08:20:41.458-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duration,				#isMetaSide : false			},			#name : #weeksCount,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'weeksCount\r\t^ self weeksSecondsCount quo: self secondsInWeek',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ],		#time : DateAndTime [ '2024-03-03T08:20:41.459-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duration,				#isMetaSide : false			},			#name : #weeksSecondsCount,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'weeksSecondsCount\r\t^ self monthSecondsCount rem: self secondsInMonth',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ],		#time : DateAndTime [ '2024-03-03T08:20:41.459-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duration,				#isMetaSide : false			},			#name : #yearsCount,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'yearsCount\r\t^self totalSeconds quo: self secondsInYear',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ],		#time : DateAndTime [ '2024-03-03T08:20:41.46-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PeSequenceableCollectionGroupingTest,				#isMetaSide : false			},			#name : #'assertGroupCount:of:groupSize:',			#protocol : #testing,			#sourceCode : 'assertGroupCount: expectedGroupCount of: collection groupSize: groupSize\r\t| actualGroupCount |\r\tactualGroupCount := 0.\r\tcollection groupsOfAtMost: groupSize atATimeDo: [ actualGroupCount := actualGroupCount + 1 ].\r\tself assert: actualGroupCount equals: expectedGroupCount.\r',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ],		#time : DateAndTime [ '2024-03-03T08:20:41.46-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PeSequenceableCollectionGroupingTest,				#isMetaSide : false			},			#name : #'assertGroupElements:of:groupSize:',			#protocol : #testing,			#sourceCode : 'assertGroupElements: expectedGroups of: collection groupSize: groupSize\r\t| actualGroups |\r\tactualGroups := OrderedCollection new.\r\tcollection groupsOfAtMost: groupSize atATimeCollect: [: aGroup | actualGroups add: aGroup].\r\tself assert: actualGroups size equals: expectedGroups size.\r\tactualGroups \r\t\twith: expectedGroups\r\t\tdo: [ : actual : expected |\r\t\t\tself assertCollection: actual equals: expected  ]',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ],		#time : DateAndTime [ '2024-03-03T08:20:41.46-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PeSequenceableCollectionGroupingTest,				#isMetaSide : false			},			#name : #testGroupCount,			#protocol : #testing,			#sourceCode : 'testGroupCount\r\tself assertGroupCount: 0 of: #() groupSize: 1.\r\tself assertGroupCount: 1 of: #(a) groupSize: 1.\r\tself assertGroupCount: 10 of: (1 to: 10) groupSize: 1.\r\r\tself assertGroupCount: 0 of: #() groupSize: 2.\r\tself assertGroupCount: 1 of: #(a) groupSize: 2.\r\tself assertGroupCount: 1 of: #(a b) groupSize: 2.\r\tself assertGroupCount: 5 of: (1 to: 10) groupSize: 2.\r\t\r\tself assertGroupCount: 0 of: #() groupSize: 3.\r\tself assertGroupCount: 1 of: #(a) groupSize: 3.\r\tself assertGroupCount: 1 of: #(a b) groupSize: 3.\r\tself assertGroupCount: 1 of: #(a b c) groupSize: 3.\r\tself assertGroupCount: 2 of: #(a b c d) groupSize: 3.\r\tself assertGroupCount: 4 of: (1 to: 10) groupSize: 3.\r',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ],		#time : DateAndTime [ '2024-03-03T08:20:41.46-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PeSequenceableCollectionGroupingTest,				#isMetaSide : false			},			#name : #testGroupElements,			#protocol : #testing,			#sourceCode : 'testGroupElements\r\tself assertGroupElements: #() of: #() groupSize: 1.\r\tself assertGroupElements: #(#(a)) of: #(a) groupSize: 1.\r\tself assertGroupElements: #(#(a) #(b) #(c)) of: #(a b c) groupSize: 1.\r\r\tself assertGroupElements: #() of: #() groupSize: 2.\r\tself assertGroupElements: #(#(a)) of: #(a) groupSize: 2.\r\tself assertGroupElements: #(#(a b)) of: #(a b) groupSize: 2.\r\tself assertGroupElements: #(#(a b) #(c)) of: #(a b c) groupSize: 2.\r\r\tself assertGroupElements: #() of: #() groupSize: 3.\r\tself assertGroupElements: #(#(a)) of: #(a) groupSize: 3.\r\tself assertGroupElements: #(#(a b)) of: #(a b) groupSize: 3.\r\tself assertGroupElements: #(#(a b c)) of: #(a b c) groupSize: 3.\r\tself assertGroupElements: #(#(a b c) #(d)) of: #(a b c d) groupSize: 3.\r\tself assertGroupElements: #(#(a b c) #(d e)) of: #(a b c d e) groupSize: 3.\r\tself assertGroupElements: #(#(a b c) #(d e f)) of: #(a b c d e f) groupSize: 3.\r\tself assertGroupElements: #(#(a b c) #(d e f) #(g)) of: #(a b c d e f g) groupSize: 3.\r',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '61' ],		#self : OmReference [ '62' ],		#time : DateAndTime [ '2024-03-03T08:20:41.46-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhDateAndTimeTest,				#isMetaSide : false			},			#name : #testToday,			#protocol : #testing,			#sourceCode : 'testToday\r\t| today |\r\ttoday := DateAndTime todayHour: 14 minute: 59 second: 33.\r\tself assert: today year equals: Date today year. \r\tself assert: today day equals: Date today day. \r\tself assert: today hour24 equals: 14.\r\tself assert: today minute equals: 59.\r\tself assert: today second equals: 33.\r',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '62' ],		#self : OmReference [ '63' ],		#time : DateAndTime [ '2024-03-03T08:20:41.46-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhDurationTest,				#isMetaSide : false			},			#name : #testDaysCount,			#protocol : #testing,			#sourceCode : 'testDaysCount\r\tself assert: 1 day daysCount equals: 1.\r\tself assert: 6 days daysCount equals: 6.\r\tself assert: 7 days daysCount equals: 0.\r\tself assert: 8 days daysCount equals: 1.\r\tself assert: 14 days daysCount equals: 0.\r\tself assert: 30 days daysCount equals: 2.\r\tself assert: 1 week daysCount equals: 0.\r\tself assert: 4 weeks daysCount equals: 0.\r\tself assert: 1 month daysCount equals: 0.\r\tself assert: 6 months daysCount equals: 0.\r\tself assert: 1 year daysCount equals: 0.\r\tself assert: 5 years daysCount equals: 0.\r\t',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '63' ],		#self : OmReference [ '64' ],		#time : DateAndTime [ '2024-03-03T08:20:41.461-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhDurationTest,				#isMetaSide : false			},			#name : #testHoursMinutesSecondsCount,			#protocol : #testing,			#sourceCode : 'testHoursMinutesSecondsCount\r\t| duration |\r\tduration := 26 hours + 83 minutes + 75 seconds.\r\tself assert: duration daysCount equals: 1.\r\tself assert: duration hoursCount equals: 3.\r\tself assert: duration minutesCount equals: 24.\r\tself assert: duration secondsCount equals: 15.\r\t',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '64' ],		#self : OmReference [ '65' ],		#time : DateAndTime [ '2024-03-03T08:20:41.461-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhDurationTest,				#isMetaSide : false			},			#name : #testMonthsCount,			#protocol : #testing,			#sourceCode : 'testMonthsCount\r\tself assert: 1 day monthsCount equals: 0.\r\tself assert: 30 days monthsCount equals: 0.\r\tself assert: 31 days monthsCount equals: 1.\r\tself assert: 60 days monthsCount equals: 1.\r\tself assert: 61 days monthsCount equals: 2.\r\tself assert: 365 days monthsCount equals: 0.\r\tself assert: 400 days monthsCount equals: 1.\r\tself assert: 1 week monthsCount equals: 0.\r\tself assert: 4 weeks monthsCount equals: 0.\r\tself assert: 5 weeks monthsCount equals: 1.\r\tself assert: 10 weeks monthsCount equals: 2.\r\tself assert: 1 month monthsCount equals: 1.\r\tself assert: 6 months monthsCount equals: 6.\r\tself assert: 12 months monthsCount equals: 0.\r\tself assert: 13 months monthsCount equals: 1.\r\tself assert: 0 year monthsCount equals: 0.\r\tself assert: 1 year monthsCount equals: 0.\r\tself assert: 23 years monthsCount equals: 0.\r\t',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '65' ],		#self : OmReference [ '66' ],		#time : DateAndTime [ '2024-03-03T08:20:41.461-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhDurationTest,				#isMetaSide : false			},			#name : #testWeeksCount,			#protocol : #testing,			#sourceCode : 'testWeeksCount\r\tself assert: 1 day weeksCount equals: 0.\r\tself assert: 6 days weeksCount equals: 0.\r\tself assert: 7 days weeksCount equals: 1.\r\tself assert: 13 days weeksCount equals: 1.\r\tself assert: 14 days weeksCount equals: 2.\r\tself assert: 30 days weeksCount equals: 4.\r\tself assert: 40 days weeksCount equals: 1.\r\tself assert: 1 week weeksCount equals: 1.\r\tself assert: 4 weeks weeksCount equals: 4.\r\tself assert: 5 weeks weeksCount equals: 0.\r\tself assert: 8 weeks weeksCount equals: 3.\r\tself assert: 1 month weeksCount equals: 0.\r\tself assert: 6 months weeksCount equals: 0.\r\tself assert: 1 year weeksCount equals: 0.\r\tself assert: 5 years weeksCount equals: 0.\r\t',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '66' ],		#self : OmReference [ '67' ],		#time : DateAndTime [ '2024-03-03T08:20:41.461-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhDurationTest,				#isMetaSide : false			},			#name : #testYearsCount,			#protocol : #testing,			#sourceCode : 'testYearsCount\r\tself assert: 1 day yearsCount equals: 0.\r\tself assert: 364 days yearsCount equals: 0.\r\tself assert: 365 days yearsCount equals: 1.\r\tself assert: 366 days yearsCount equals: 1.\r\tself assert: 400 days yearsCount equals: 1.\r\tself assert: 1095 days yearsCount equals: 3.\r\tself assert: 1 week yearsCount equals: 0.\r\tself assert: 52 weeks yearsCount equals: 0.\r\tself assert: 53 weeks yearsCount equals: 1.\r\tself assert: 54 weeks yearsCount equals: 1.\r\tself assert: 104 weeks yearsCount equals: 1.\r\tself assert: 105 weeks yearsCount equals: 2.\r\tself assert: 106 weeks yearsCount equals: 2.\r\tself assert: 1 month yearsCount equals: 0.\r\tself assert: 11 months yearsCount equals: 0.\r\tself assert: 12 months yearsCount equals: 1.\r\tself assert: 13 months yearsCount equals: 1.\r\tself assert: 48 months yearsCount equals: 4.\r\tself assert: 0 year yearsCount equals: 0.\r\tself assert: 1 year yearsCount equals: 1.\r\tself assert: 23 years yearsCount equals: 23.\r\t',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '67' ],		#self : OmReference [ '68' ],		#time : DateAndTime [ '2024-03-03T08:20:41.462-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Number,				#isMetaSide : false			},			#name : #month,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'month\r\t^self months',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '68' ],		#self : OmReference [ '69' ],		#time : DateAndTime [ '2024-03-03T08:20:41.463-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Number,				#isMetaSide : false			},			#name : #months,			#protocol : #'*PharoExtra-Chronology',			#sourceCode : 'months\r\t^Duration months: self',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '69' ],		#self : OmReference [ '70' ],		#time : DateAndTime [ '2024-03-03T08:20:41.464-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SequenceableCollection,				#isMetaSide : false			},			#name : #'groupsOfAtMost:atATimeCollect:',			#protocol : #'*PharoExtra-Collections',			#sourceCode : 'groupsOfAtMost: maxGroupSize atATimeCollect: aBlock\r\t"As opposite to groupsOf:atATimeCollect: I process all elements. The last group might be smaller than the others since it includes the leftovers."\r\t\r\t| newCollection |\r\tnewCollection := OrderedCollection new.\r\tself groupsOfAtMost: maxGroupSize atATimeDo: [:each | newCollection add: (aBlock value: each)].\r\t^newCollection',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '70' ],		#self : OmReference [ '71' ],		#time : DateAndTime [ '2024-03-03T08:20:41.464-05:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SequenceableCollection,				#isMetaSide : false			},			#name : #'groupsOfAtMost:atATimeDo:',			#protocol : #'*PharoExtra-Collections',			#sourceCode : 'groupsOfAtMost: maxGroupSize atATimeDo: aBlock\r\t"As opposite to groupsOf:atATimeDo: I process all elements. The last group might be smaller than the others since it includes the leftovers."\r\t| groupIndex firstIndex lastIndex group |\r\tgroupIndex := 1.\r\tfirstIndex := 1.\r\t[ firstIndex <= self size  ] whileTrue: [\r\t\tlastIndex := (firstIndex + maxGroupSize - 1) min: self size.\r\t"self halt."\r\t\tgroup := self copyFrom: firstIndex to: lastIndex.\r\t\taBlock cull: group.\r\t\tfirstIndex := lastIndex + 1.\r\t\tgroupIndex := groupIndex + 1 ].\r',			#stamp : '',			#package : #PharoExtra		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:41.612-05:00' ],		#prior : OmReference [ '71' ],		#self : OmReference [ '72' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Equals-CompatibleUserName.1707918508'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '72' ],		#self : OmReference [ '73' ],		#time : DateAndTime [ '2024-03-03T08:20:41.646-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #Equals-Kernel,		#affectedPackageName : #Equals	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '73' ],		#self : OmReference [ '74' ],		#time : DateAndTime [ '2024-03-03T08:20:41.649-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #TEquality\r\tinstanceVariableNames: \'\'\r\tpackage: \'Equals-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #TEquality,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'TEquality classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'TEquality classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TEquality,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #Equals-Kernel,			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '74' ],		#self : OmReference [ '75' ],		#time : DateAndTime [ '2024-03-03T08:20:41.651-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #TEquality\r\tinstanceVariableNames: \'\'\r\tpackage: \'Equals-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #TEquality,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'TEquality classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'TEquality classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TEquality,					#isMetaSide : false				},				#parent : @8,				#content : 'TEquality is a trait that provides a generic implementation for = and hash.\rIt aims avoiding to implement = and hash for simple cases.\rTo make instances of some class comparable, simply make the class use this trait.\r\rTEquality relies on message valuesToCompareForEquality sent to objects for both = and hash.\rThe default implmentation of this message is provided by Object.\rOverride ONLY valuesToCompareForEquality method for custom equality check.',				#stamp : ''			},			#category : #Equals-Kernel,			#package : #Equals		},		#oldComment : '',		#newComment : 'TEquality is a trait that provides a generic implementation for = and hash.\rIt aims avoiding to implement = and hash for simple cases.\rTo make instances of some class comparable, simply make the class use this trait.\r\rTEquality relies on message valuesToCompareForEquality sent to objects for both = and hash.\rThe default implmentation of this message is provided by Object.\rOverride ONLY valuesToCompareForEquality method for custom equality check.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '75' ],		#self : OmReference [ '76' ],		#time : DateAndTime [ '2024-03-03T08:20:41.655-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpCategoryAddition {		#classCategoryName : #Equals-Test,		#affectedPackageName : #Equals	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '76' ],		#self : OmReference [ '77' ],		#time : DateAndTime [ '2024-03-03T08:20:41.657-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #EqualityTest\r\tinstanceVariableNames: \'classFactory\'\r\tclassVariableNames: \'\'\r\tpackage: \'Equals-Test\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #EqualityTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #EqualityTest,						#isMetaSide : false					},					#name : #classFactory,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'EqualityTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'EqualityTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #EqualityTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Equals-Test,			#package : #Equals,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '77' ],		#self : OmReference [ '78' ],		#time : DateAndTime [ '2024-03-03T08:20:41.667-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #ComparableObjectForEqualityTest\r\tuses: TEquality\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Equals-Test\'',				#superclassName : 'Object',				#traitCompositionSource : 'TEquality'			},			#name : #ComparableObjectForEqualityTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ComparableObjectForEqualityTest class\r\tuses: TEquality classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'TEquality classTrait'				},				#name : #'ComparableObjectForEqualityTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ComparableObjectForEqualityTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Equals-Test,			#package : #Equals,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '78' ],		#self : OmReference [ '79' ],		#time : DateAndTime [ '2024-03-03T08:20:41.669-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpCategoryAddition {		#classCategoryName : #Equals-Examples,		#affectedPackageName : #Equals	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '79' ],		#self : OmReference [ '80' ],		#time : DateAndTime [ '2024-03-03T08:20:41.67-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Comparisons\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Equals-Examples\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Comparisons,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Comparisons class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Comparisons class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Comparisons,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Equals-Examples,			#package : #Equals,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '80' ],		#self : OmReference [ '81' ],		#time : DateAndTime [ '2024-03-03T08:20:41.673-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Comparisons subclass: #FruitComparisons\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Equals-Examples\'',				#superclassName : 'Comparisons',				#traitCompositionSource : '{}'			},			#name : #FruitComparisons,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'FruitComparisons class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'FruitComparisons class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #FruitComparisons,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Equals-Examples,			#package : #Equals,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '81' ],		#self : OmReference [ '82' ],		#time : DateAndTime [ '2024-03-03T08:20:41.676-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Comparisons subclass: #PersonComparisons\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Equals-Examples\'',				#superclassName : 'Comparisons',				#traitCompositionSource : '{}'			},			#name : #PersonComparisons,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PersonComparisons class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PersonComparisons class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PersonComparisons,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Equals-Examples,			#package : #Equals,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '82' ],		#self : OmReference [ '83' ],		#time : DateAndTime [ '2024-03-03T08:20:41.684-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Fruit\r\tuses: TEquality\r\tinstanceVariableNames: \'stage\'\r\tclassVariableNames: \'\'\r\tpackage: \'Equals-Examples\'',				#superclassName : 'Object',				#traitCompositionSource : 'TEquality'			},			#name : #Fruit,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Fruit,						#isMetaSide : false					},					#name : #stage,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Fruit class\r\tuses: TEquality classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'TEquality classTrait'				},				#name : #'Fruit class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Fruit,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Equals-Examples,			#package : #Equals,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '83' ],		#self : OmReference [ '84' ],		#time : DateAndTime [ '2024-03-03T08:20:41.705-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Fruit subclass: #Apple\r\tinstanceVariableNames: \'color\'\r\tclassVariableNames: \'\'\r\tpackage: \'Equals-Examples\'',				#superclassName : 'Fruit',				#traitCompositionSource : '{}'			},			#name : #Apple,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Apple,						#isMetaSide : false					},					#name : #color,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Apple class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Apple class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Apple,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Equals-Examples,			#package : #Equals,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '84' ],		#self : OmReference [ '85' ],		#time : DateAndTime [ '2024-03-03T08:20:41.707-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Fruit subclass: #Banana\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Equals-Examples\'',				#superclassName : 'Fruit',				#traitCompositionSource : '{}'			},			#name : #Banana,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Banana class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Banana class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Banana,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Equals-Examples,			#package : #Equals,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '85' ],		#self : OmReference [ '86' ],		#time : DateAndTime [ '2024-03-03T08:20:41.715-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Person\r\tuses: TEquality\r\tinstanceVariableNames: \'name age\'\r\tclassVariableNames: \'\'\r\tpackage: \'Equals-Examples\'',				#superclassName : 'Object',				#traitCompositionSource : 'TEquality'			},			#name : #Person,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Person,						#isMetaSide : false					},					#name : #name,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Person,						#isMetaSide : false					},					#name : #age,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Person class\r\tuses: TEquality classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'TEquality classTrait'				},				#name : #'Person class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Person,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Equals-Examples,			#package : #Equals,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '86' ],		#self : OmReference [ '87' ],		#time : DateAndTime [ '2024-03-03T08:20:41.72-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Person subclass: #Student\r\tinstanceVariableNames: \'level\'\r\tclassVariableNames: \'\'\r\tpackage: \'Equals-Examples\'',				#superclassName : 'Person',				#traitCompositionSource : '{}'			},			#name : #Student,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Student,						#isMetaSide : false					},					#name : #level,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Student class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Student class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Student,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Equals-Examples,			#package : #Equals,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '87' ],		#self : OmReference [ '88' ],		#time : DateAndTime [ '2024-03-03T08:20:41.723-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Person subclass: #Teacher\r\tinstanceVariableNames: \'experience\'\r\tclassVariableNames: \'\'\r\tpackage: \'Equals-Examples\'',				#superclassName : 'Person',				#traitCompositionSource : '{}'			},			#name : #Teacher,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Teacher,						#isMetaSide : false					},					#name : #experience,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Teacher class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Teacher class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Teacher,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Equals-Examples,			#package : #Equals,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '88' ],		#self : OmReference [ '89' ],		#time : DateAndTime [ '2024-03-03T08:20:41.97-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TEquality,				#isMetaSide : false			},			#name : #'=',			#protocol : #comparing,			#sourceCode : '= anObject \r\tself species = anObject species ifFalse: [^false].\r\t^self valuesToCompareForEquality = anObject valuesToCompareForEquality',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '89' ],		#self : OmReference [ '90' ],		#time : DateAndTime [ '2024-03-03T08:20:41.971-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TEquality,				#isMetaSide : false			},			#name : #hash,			#protocol : #comparing,			#sourceCode : 'hash\r\t^self valuesToCompareForEquality inject: self species hash into: [:hash :comparisonValue|\r\t\t(hash bitXor: comparisonValue hash) hashMultiply]\r',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '90' ],		#self : OmReference [ '91' ],		#time : DateAndTime [ '2024-03-03T08:20:41.971-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EqualityTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #setUp-tearDown,			#sourceCode : 'setUp\r\tsuper setUp.\r\tclassFactory := ClassFactoryForTestCase new.\r',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '91' ],		#self : OmReference [ '92' ],		#time : DateAndTime [ '2024-03-03T08:20:41.971-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EqualityTest,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #setUp-tearDown,			#sourceCode : 'tearDown\r\tsuper tearDown.\r\tclassFactory cleanUp\r',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '92' ],		#self : OmReference [ '93' ],		#time : DateAndTime [ '2024-03-03T08:20:41.972-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EqualityTest,				#isMetaSide : false			},			#name : #testSetContainsOnlyOneInstanceOfAClassWithIVs,			#protocol : #testing,			#sourceCode : 'testSetContainsOnlyOneInstanceOfAClassWithIVs\r\t| set object class |\r\tclass  := classFactory newSubclassOf: ComparableObjectForEqualityTest  instanceVariableNames: \'x y\' classVariableNames:  \'\'.\r\tclass compile: \'x: newX y: newY\r\t\tx := newX.\r\t\ty := newY\'.\r\tclass class compile: \'x: newX y: newY\r\t\t^self new\r\t\t\tx: newX y: newY;\r\t\t\tyourself\'.\r\tset := Set new.\r\t10 timesRepeat: [\r\t\tobject  := class x: 1 y: 2.\r\t\tset add: object].\r\tself assert: set size = 1.\r',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '93' ],		#self : OmReference [ '94' ],		#time : DateAndTime [ '2024-03-03T08:20:41.972-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EqualityTest,				#isMetaSide : false			},			#name : #testSetContainsOnlyOneInstanceOfAClassWithNoIVs,			#protocol : #testing,			#sourceCode : 'testSetContainsOnlyOneInstanceOfAClassWithNoIVs\r\t| set |\r\tset := Set new.\r\t10 timesRepeat: [set add: ComparableObjectForEqualityTest new].\r\tself assert: set size = 1.\r\tself assert: (set includes: ComparableObjectForEqualityTest new)\r',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '94' ],		#self : OmReference [ '95' ],		#time : DateAndTime [ '2024-03-03T08:20:41.972-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EqualityTest,				#isMetaSide : false			},			#name : #testSetContainsTwoInstancesOfTwoDiffrentClassesWithIVs,			#protocol : #testing,			#sourceCode : 'testSetContainsTwoInstancesOfTwoDiffrentClassesWithIVs\r\t| set otherClass yetAnotherClass |\r\totherClass := classFactory newSubclassOf: ComparableObjectForEqualityTest  instanceVariableNames: \'x y\' classVariableNames:  \'\'.\r\tyetAnotherClass := classFactory newSubclassOf: ComparableObjectForEqualityTest  instanceVariableNames: \'x y\' classVariableNames:  \'\'.\r\t{otherClass. yetAnotherClass} do: [:class|\r\t\tclass compile: \'x: newX y: newY\r\t\t\tx := newX.\r\t\t\ty := newY\'.\r\t\tclass class compile: \'x: newX y: newY\r\t\t\t^self new\r\t\t\t\tx: newX y: newY;\r\t\t\t\tyourself\'.\r\t].\r\tset := Set with: (otherClass x: \'abc\' y: 123) with: (yetAnotherClass x: \'abc\' y: 123).\r\tself assert: set size = 2.\r\tself assert: (set includes: (otherClass x: \'abc\' y: 123)).\r\tself assert: (set includes: (yetAnotherClass x: \'abc\' y: 123)).\r',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '95' ],		#self : OmReference [ '96' ],		#time : DateAndTime [ '2024-03-03T08:20:41.972-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EqualityTest,				#isMetaSide : false			},			#name : #testSetContainsTwoInstancesOfTwoDiffrentClassesWithNoIVs,			#protocol : #testing,			#sourceCode : 'testSetContainsTwoInstancesOfTwoDiffrentClassesWithNoIVs\r\t| set otherClass |\r\totherClass := classFactory newSubclassOf: ComparableObjectForEqualityTest  instanceVariableNames: \'\' classVariableNames:  \'\'.\r\tset := Set with: ComparableObjectForEqualityTest new with: otherClass new.\r\tself assert: set size = 2.\r\tself assert: (set includes: ComparableObjectForEqualityTest new).\r\tself assert: (set includes: otherClass new).\r\r',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '96' ],		#self : OmReference [ '97' ],		#time : DateAndTime [ '2024-03-03T08:20:41.972-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EqualityTest,				#isMetaSide : false			},			#name : #testTwoInstancesOfTheSameClassWithDifferentIvValuessAreNOTEqual,			#protocol : #testing,			#sourceCode : 'testTwoInstancesOfTheSameClassWithDifferentIvValuessAreNOTEqual\r\t| class |\r\tclass  := classFactory newSubclassOf: ComparableObjectForEqualityTest  instanceVariableNames: \'x y\' classVariableNames:  \'\'.\r\tclass compile: \'x: newX y: newY\r\t\tx := newX.\r\t\ty := newY\'.\r\tclass class compile: \'x: newX y: newY\r\t\t^self new\r\t\t\tx: newX y: newY;\r\t\t\tyourself\'.\r\tself deny: (class x: 1 y: \'abc\') = (class x: 1 y: \'zyx\').',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '97' ],		#self : OmReference [ '98' ],		#time : DateAndTime [ '2024-03-03T08:20:41.972-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EqualityTest,				#isMetaSide : false			},			#name : #testTwoInstancesOfTheSameClassWithNoIVsAreEqual,			#protocol : #testing,			#sourceCode : 'testTwoInstancesOfTheSameClassWithNoIVsAreEqual\r\tself assert: ComparableObjectForEqualityTest new = ComparableObjectForEqualityTest new\r\t',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '98' ],		#self : OmReference [ '99' ],		#time : DateAndTime [ '2024-03-03T08:20:41.972-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EqualityTest,				#isMetaSide : false			},			#name : #testTwoInstancesOfTheSameClassWithSameIvValuessAreEqual,			#protocol : #testing,			#sourceCode : 'testTwoInstancesOfTheSameClassWithSameIvValuessAreEqual\r\t| class |\r\tclass  := classFactory newSubclassOf: ComparableObjectForEqualityTest  instanceVariableNames: \'x y\' classVariableNames:  \'\'.\r\tclass compile: \'x: newX y: newY\r\t\tx := newX.\r\t\ty := newY\'.\r\tclass class compile: \'x: newX y: newY\r\t\t^self new\r\t\t\tx: newX y: newY;\r\t\t\tyourself\'.\r\tself assert: (class x: 1 y: \'abc\') = (class x: 1 y: \'abc\').',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '99' ],		#self : OmReference [ '100' ],		#time : DateAndTime [ '2024-03-03T08:20:41.973-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EqualityTest,				#isMetaSide : false			},			#name : #testTwoInstancesOfTowDifferentClassesWithNoIVsAreNOTEqual,			#protocol : #testing,			#sourceCode : 'testTwoInstancesOfTowDifferentClassesWithNoIVsAreNOTEqual\r\t| otherClass |\r\totherClass := classFactory newSubclassOf: ComparableObjectForEqualityTest  instanceVariableNames: \'\' classVariableNames:  \'\'.\r\tself deny: otherClass new = ComparableObjectForEqualityTest new',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '100' ],		#self : OmReference [ '101' ],		#time : DateAndTime [ '2024-03-03T08:20:41.973-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ProtoObject class',				#isMetaSide : true			},			#name : #allInstVarNamesForEqualityComparison,			#protocol : #'*Equals',			#sourceCode : 'allInstVarNamesForEqualityComparison\r\t^#()',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '101' ],		#self : OmReference [ '102' ],		#time : DateAndTime [ '2024-03-03T08:20:41.973-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Comparisons class',				#isMetaSide : true			},			#name : #'display:',			#protocol : #displaying,			#sourceCode : 'display: aBoolean\r\t| displayColor displayLabel |\r\tdisplayLabel := aBoolean ifTrue: [ \'Equal\' ] ifFalse: [ \'Different\' ].\r\tdisplayColor := aBoolean ifTrue: [ Color green ] ifFalse: [ Color yellow ].\r\tGrowlMorph \r\t\topenWithLabel: displayLabel\r\t\tcontents: \'\'\r\t\tbackgroundColor: displayColor\r\t\tlabelColor: Color black',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '102' ],		#self : OmReference [ '103' ],		#time : DateAndTime [ '2024-03-03T08:20:41.973-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'FruitComparisons class',				#isMetaSide : true			},			#name : #compareApplesOfDifferentColors,			#protocol : #comparisons,			#sourceCode : 'compareApplesOfDifferentColors\r\t"self compareApplesOfDifferentColors"\r\r\t| apple1 apple2 |\r\tapple1 := Apple color: Color red.\r\tapple2 := Apple color: Color yellow.\r\tself display: apple1 = apple2',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '103' ],		#self : OmReference [ '104' ],		#time : DateAndTime [ '2024-03-03T08:20:41.973-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'FruitComparisons class',				#isMetaSide : true			},			#name : #compareApplesOfSameColor,			#protocol : #comparisons,			#sourceCode : 'compareApplesOfSameColor\r\t"self compareApplesOfSameColor"\r\r\t| apple1 apple2 |\r\tapple1 := Apple color: Color red.\r\tapple2 := Apple color: Color red.\r\tself display: apple1 = apple2',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '104' ],		#self : OmReference [ '105' ],		#time : DateAndTime [ '2024-03-03T08:20:41.973-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'FruitComparisons class',				#isMetaSide : true			},			#name : #compareApplesOfSameColorAtDifferentStages,			#protocol : #comparisons,			#sourceCode : 'compareApplesOfSameColorAtDifferentStages\r\t"self compareApplesOfSameColorAtDifferentStages"\r\r\t| apple1 apple2 |\r\tapple1 := Apple color: Color red.\r\tapple1 beRipe.\r\tapple2 := Apple color: Color yellow.\r\tapple2 beRotten.\t\r\tself display: apple1 = apple2',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '105' ],		#self : OmReference [ '106' ],		#time : DateAndTime [ '2024-03-03T08:20:41.973-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'FruitComparisons class',				#isMetaSide : true			},			#name : #compareYellowAppleAndBanana,			#protocol : #comparisons,			#sourceCode : 'compareYellowAppleAndBanana\r\t"self compareYellowAppleAndBanana"\r\r\t| apple banana |\r\tapple := Apple color: Color yellow.\r\tbanana := Banana new.\r\tself display: apple = banana',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '106' ],		#self : OmReference [ '107' ],		#time : DateAndTime [ '2024-03-03T08:20:41.974-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PersonComparisons class',				#isMetaSide : true			},			#name : #compareStudentsAndTeacherOfSameAge,			#protocol : #comparisons,			#sourceCode : 'compareStudentsAndTeacherOfSameAge\r\t"self compareStudentsAndTeacherOfSameAge"\r\t| luc tom |\r\tluc := Teacher name: \'Luc\' age: 24.\r\ttom := Student name: \'Tom\' age: 24.\r\tself display: luc = tom',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '107' ],		#self : OmReference [ '108' ],		#time : DateAndTime [ '2024-03-03T08:20:41.974-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PersonComparisons class',				#isMetaSide : true			},			#name : #compareStudentsAndTeacherOfSameNameAndAge,			#protocol : #comparisons,			#sourceCode : 'compareStudentsAndTeacherOfSameNameAndAge\r\t"self compareStudentsAndTeacherOfSameNameAndAge"\r\t| smith1 smith2 |\r\tsmith1 := Teacher name: \'Smith\' age: 24.\r\tsmith2 := Student name: \'Smith\' age: 24.\r\tself display: smith1 = smith2',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '108' ],		#self : OmReference [ '109' ],		#time : DateAndTime [ '2024-03-03T08:20:41.974-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PersonComparisons class',				#isMetaSide : true			},			#name : #compareStudentsOfDifferentAge,			#protocol : #comparisons,			#sourceCode : 'compareStudentsOfDifferentAge\r\t"self compareStudentsOfDifferentAge"\r\t| luc tom |\r\tluc := Student name: \'Luc\' age: 24.\r\ttom := Student name: \'Tom\' age: 5.\r\tself display: luc = tom',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '109' ],		#self : OmReference [ '110' ],		#time : DateAndTime [ '2024-03-03T08:20:41.974-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PersonComparisons class',				#isMetaSide : true			},			#name : #compareStudentsOfDifferentLevels,			#protocol : #comparisons,			#sourceCode : 'compareStudentsOfDifferentLevels\r\t"self compareStudentsOfDifferentLevels"\r\t| luc tom |\r\tluc := Student name: \'Luc\' age: 24.\r\tluc level: 7.\r\ttom := Student name: \'Tom\' age: 24.\r\ttom level: 4.\r\tself display: luc = tom',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '110' ],		#self : OmReference [ '111' ],		#time : DateAndTime [ '2024-03-03T08:20:41.974-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PersonComparisons class',				#isMetaSide : true			},			#name : #compareStudentsOfSameAgeAndLevel,			#protocol : #comparisons,			#sourceCode : 'compareStudentsOfSameAgeAndLevel\r\t"self compareStudentsOfSameAgeAndLevel"\r\t| luc tom |\r\tluc := Student name: \'Luc\' age: 24.\r\tluc level: 5.\r\ttom := Student name: \'Tom\' age: 24.\r\ttom level: 5.\r\tself display: luc = tom',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '111' ],		#self : OmReference [ '112' ],		#time : DateAndTime [ '2024-03-03T08:20:41.974-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Apple class',				#isMetaSide : true			},			#name : #'color:',			#protocol : #'instance creation',			#sourceCode : 'color: aColor\r\t^self new\r\t\tcolor: aColor;\r\t\tyourself',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '112' ],		#self : OmReference [ '113' ],		#time : DateAndTime [ '2024-03-03T08:20:41.975-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Apple,				#isMetaSide : false			},			#name : #color,			#protocol : #accessing,			#sourceCode : 'color\r\t^ color',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '113' ],		#self : OmReference [ '114' ],		#time : DateAndTime [ '2024-03-03T08:20:41.975-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Apple,				#isMetaSide : false			},			#name : #'color:',			#protocol : #accessing,			#sourceCode : 'color: anObject\r\tcolor := anObject',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '114' ],		#self : OmReference [ '115' ],		#time : DateAndTime [ '2024-03-03T08:20:41.975-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Banana,				#isMetaSide : false			},			#name : #color,			#protocol : #accessing,			#sourceCode : 'color\r\t^Color yellow',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '115' ],		#self : OmReference [ '116' ],		#time : DateAndTime [ '2024-03-03T08:20:41.975-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Fruit,				#isMetaSide : false			},			#name : #'=',			#protocol : #comparing,			#sourceCode : '= anObject \r\tself species = anObject species ifFalse: [^false].\r\t^self valuesToCompareForEquality = anObject valuesToCompareForEquality',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '116' ],		#self : OmReference [ '117' ],		#time : DateAndTime [ '2024-03-03T08:20:41.975-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Fruit,				#isMetaSide : false			},			#name : #beRipe,			#protocol : #staging,			#sourceCode : 'beRipe\r\tstage := #ripe',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '117' ],		#self : OmReference [ '118' ],		#time : DateAndTime [ '2024-03-03T08:20:41.975-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Fruit,				#isMetaSide : false			},			#name : #beRotten,			#protocol : #staging,			#sourceCode : 'beRotten\r\tstage := #rotten',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '118' ],		#self : OmReference [ '119' ],		#time : DateAndTime [ '2024-03-03T08:20:41.976-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Fruit,				#isMetaSide : false			},			#name : #beUnripe,			#protocol : #staging,			#sourceCode : 'beUnripe\r\tstage := #unripe',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '119' ],		#self : OmReference [ '120' ],		#time : DateAndTime [ '2024-03-03T08:20:41.976-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Fruit,				#isMetaSide : false			},			#name : #color,			#protocol : #accessing,			#sourceCode : 'color\r\t^self subclassResponsibility',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '120' ],		#self : OmReference [ '121' ],		#time : DateAndTime [ '2024-03-03T08:20:41.976-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Fruit,				#isMetaSide : false			},			#name : #hash,			#protocol : #comparing,			#sourceCode : 'hash\r\t^self valuesToCompareForEquality inject: self species hash into: [:hash :comparisonValue|\r\t\t(hash bitXor: comparisonValue hash) hashMultiply]\r',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '121' ],		#self : OmReference [ '122' ],		#time : DateAndTime [ '2024-03-03T08:20:41.976-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Fruit,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'initialize - release',			#sourceCode : 'initialize\r\tsuper initialize.\r\tself beUnripe',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '122' ],		#self : OmReference [ '123' ],		#time : DateAndTime [ '2024-03-03T08:20:41.976-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Object class',				#isMetaSide : true			},			#name : #allInstVarNamesForEqualityComparison,			#protocol : #'*Equals',			#sourceCode : 'allInstVarNamesForEqualityComparison\r\t^self superclass allInstVarNamesForEqualityComparison, self instVarNamesForEqualityComparison',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '123' ],		#self : OmReference [ '124' ],		#time : DateAndTime [ '2024-03-03T08:20:41.977-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Object class',				#isMetaSide : true			},			#name : #instVarNamesForEqualityComparison,			#protocol : #'*Equals',			#sourceCode : 'instVarNamesForEqualityComparison\r\t^self instVarNames',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '124' ],		#self : OmReference [ '125' ],		#time : DateAndTime [ '2024-03-03T08:20:41.981-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #instVarNamesForEqualityComparison,			#protocol : #'*Equals',			#sourceCode : 'instVarNamesForEqualityComparison\r\t^self class allInstVarNamesForEqualityComparison',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '125' ],		#self : OmReference [ '126' ],		#time : DateAndTime [ '2024-03-03T08:20:41.981-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #valuesToCompareForEquality,			#protocol : #'*Equals',			#sourceCode : 'valuesToCompareForEquality\r\t^self instVarNamesForEqualityComparison collect: [:ivName|\r\t\tself instVarNamed: ivName]',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '126' ],		#self : OmReference [ '127' ],		#time : DateAndTime [ '2024-03-03T08:20:41.982-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Person class',				#isMetaSide : true			},			#name : #instVarNamesForEqualityComparison,			#protocol : #comparing,			#sourceCode : 'instVarNamesForEqualityComparison\r\t^#(age)',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '127' ],		#self : OmReference [ '128' ],		#time : DateAndTime [ '2024-03-03T08:20:41.982-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Person class',				#isMetaSide : true			},			#name : #'name:age:',			#protocol : #instance-creation,			#sourceCode : 'name: aString age: positiveInt\r\t^self new\r\t\tname: aString;\r\t\tage: positiveInt;\r\t\tyourself',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '128' ],		#self : OmReference [ '129' ],		#time : DateAndTime [ '2024-03-03T08:20:41.982-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Person,				#isMetaSide : false			},			#name : #'=',			#protocol : #comparing,			#sourceCode : '= anObject \r\tself species = anObject species ifFalse: [^false].\r\t^self valuesToCompareForEquality = anObject valuesToCompareForEquality',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '129' ],		#self : OmReference [ '130' ],		#time : DateAndTime [ '2024-03-03T08:20:41.982-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Person,				#isMetaSide : false			},			#name : #age,			#protocol : #accessing,			#sourceCode : 'age\r\t^ age',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '130' ],		#self : OmReference [ '131' ],		#time : DateAndTime [ '2024-03-03T08:20:41.982-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Person,				#isMetaSide : false			},			#name : #'age:',			#protocol : #accessing,			#sourceCode : 'age: anObject\r\tage := anObject',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '131' ],		#self : OmReference [ '132' ],		#time : DateAndTime [ '2024-03-03T08:20:41.983-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Person,				#isMetaSide : false			},			#name : #hash,			#protocol : #comparing,			#sourceCode : 'hash\r\t^self valuesToCompareForEquality inject: self species hash into: [:hash :comparisonValue|\r\t\t(hash bitXor: comparisonValue hash) hashMultiply]\r',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '132' ],		#self : OmReference [ '133' ],		#time : DateAndTime [ '2024-03-03T08:20:41.983-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Person,				#isMetaSide : false			},			#name : #name,			#protocol : #accessing,			#sourceCode : 'name\r\t^ name',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '133' ],		#self : OmReference [ '134' ],		#time : DateAndTime [ '2024-03-03T08:20:41.983-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Person,				#isMetaSide : false			},			#name : #'name:',			#protocol : #accessing,			#sourceCode : 'name: anObject\r\tname := anObject',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '134' ],		#self : OmReference [ '135' ],		#time : DateAndTime [ '2024-03-03T08:20:41.983-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Student,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'initialize - release',			#sourceCode : 'initialize\r\tsuper initialize.\r\tself level: 1',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '135' ],		#self : OmReference [ '136' ],		#time : DateAndTime [ '2024-03-03T08:20:41.983-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Student,				#isMetaSide : false			},			#name : #level,			#protocol : #accessing,			#sourceCode : 'level\r\t^ level',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '136' ],		#self : OmReference [ '137' ],		#time : DateAndTime [ '2024-03-03T08:20:41.983-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Student,				#isMetaSide : false			},			#name : #'level:',			#protocol : #accessing,			#sourceCode : 'level: anObject\r\tlevel := anObject',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '137' ],		#self : OmReference [ '138' ],		#time : DateAndTime [ '2024-03-03T08:20:41.983-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Teacher,				#isMetaSide : false			},			#name : #experience,			#protocol : #accessing,			#sourceCode : 'experience\r\t^ experience',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '138' ],		#self : OmReference [ '139' ],		#time : DateAndTime [ '2024-03-03T08:20:41.984-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Teacher,				#isMetaSide : false			},			#name : #'experience:',			#protocol : #accessing,			#sourceCode : 'experience: anObject\r\texperience := anObject',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '139' ],		#self : OmReference [ '140' ],		#time : DateAndTime [ '2024-03-03T08:20:41.984-05:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Teacher,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself experience: 0',			#stamp : '',			#package : #Equals		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:42.154-05:00' ],		#prior : OmReference [ '140' ],		#self : OmReference [ '141' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Zinc-WebSocket-Core-CompatibleUserName.1707850620'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '141' ],		#self : OmReference [ '142' ],		#time : DateAndTime [ '2024-03-03T08:20:42.196-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #Zinc-WebSocket-Core,		#affectedPackageName : #Zinc-WebSocket-Core	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '142' ],		#self : OmReference [ '143' ],		#time : DateAndTime [ '2024-03-03T08:20:42.199-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'ZnResponse subclass: #ZnWebSocketResponse\r\tinstanceVariableNames: \'continuation\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'ZnResponse',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketResponse,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketResponse,						#isMetaSide : false					},					#name : #continuation,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketResponse class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketResponse class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketResponse,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '143' ],		#self : OmReference [ '144' ],		#time : DateAndTime [ '2024-03-03T08:20:42.201-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'ZnResponse subclass: #ZnWebSocketResponse\r\tinstanceVariableNames: \'continuation\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'ZnResponse',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketResponse,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketResponse,						#isMetaSide : false					},					#name : #continuation,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketResponse class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketResponse class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketResponse,					#isMetaSide : false				},				#parent : @8,				#content : 'I am ZnWebSocketResponse used to continue the WebSocket conversation after the connection upgrade.\rI am a ZnResponse.\r\rPart of Zinc HTTP Components.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am ZnWebSocketResponse used to continue the WebSocket conversation after the connection upgrade.\rI am a ZnResponse.\r\rPart of Zinc HTTP Components.',		#oldStamp : '',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '144' ],		#self : OmReference [ '145' ],		#time : DateAndTime [ '2024-03-03T08:20:42.204-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'ZnLogEvent subclass: #ZnWebSocketLogEvent\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'ZnLogEvent',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketLogEvent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketLogEvent class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketLogEvent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketLogEvent,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '145' ],		#self : OmReference [ '146' ],		#time : DateAndTime [ '2024-03-03T08:20:42.205-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'ZnLogEvent subclass: #ZnWebSocketLogEvent\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'ZnLogEvent',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketLogEvent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketLogEvent class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketLogEvent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketLogEvent,					#isMetaSide : false				},				#parent : @8,				#content : 'I am ZnWebSocketLogEvent, a ZnLogEvent.\r\rI am the abstract superclass of all log events generated by the WebSocket subsystem.\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am ZnWebSocketLogEvent, a ZnLogEvent.\r\rI am the abstract superclass of all log events generated by the WebSocket subsystem.\r',		#oldStamp : '',		#newStamp : 'SvenVanCaekenberghe 8/2/2014 18:53'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '146' ],		#self : OmReference [ '147' ],		#time : DateAndTime [ '2024-03-03T08:20:42.207-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'ZnWebSocketLogEvent subclass: #ZnWebSocketControlFrameHandledEvent\r\tinstanceVariableNames: \'type\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'ZnWebSocketLogEvent',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketControlFrameHandledEvent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketControlFrameHandledEvent,						#isMetaSide : false					},					#name : #type,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketControlFrameHandledEvent class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketControlFrameHandledEvent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketControlFrameHandledEvent,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '147' ],		#self : OmReference [ '148' ],		#time : DateAndTime [ '2024-03-03T08:20:42.208-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'ZnWebSocketLogEvent subclass: #ZnWebSocketControlFrameHandledEvent\r\tinstanceVariableNames: \'type\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'ZnWebSocketLogEvent',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketControlFrameHandledEvent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketControlFrameHandledEvent,						#isMetaSide : false					},					#name : #type,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketControlFrameHandledEvent class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketControlFrameHandledEvent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketControlFrameHandledEvent,					#isMetaSide : false				},				#parent : @8,				#content : 'I am ZnWebSocketControlFrameHandledEvent.\rI am a ZnLogEvent.\r\rI am emitted when a WebSocket control frame is handled automatically. I know the type of frame that is being handled.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am ZnWebSocketControlFrameHandledEvent.\rI am a ZnLogEvent.\r\rI am emitted when a WebSocket control frame is handled automatically. I know the type of frame that is being handled.',		#oldStamp : '',		#newStamp : 'SvenVanCaekenberghe 6/16/2014 13:10'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '148' ],		#self : OmReference [ '149' ],		#time : DateAndTime [ '2024-03-03T08:20:42.211-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'ZnWebSocketLogEvent subclass: #ZnWebSocketGenericLogEvent\r\tinstanceVariableNames: \'subject\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'ZnWebSocketLogEvent',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketGenericLogEvent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketGenericLogEvent,						#isMetaSide : false					},					#name : #subject,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketGenericLogEvent class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketGenericLogEvent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketGenericLogEvent,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '149' ],		#self : OmReference [ '150' ],		#time : DateAndTime [ '2024-03-03T08:20:42.213-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'ZnWebSocketLogEvent subclass: #ZnWebSocketGenericLogEvent\r\tinstanceVariableNames: \'subject\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'ZnWebSocketLogEvent',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketGenericLogEvent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketGenericLogEvent,						#isMetaSide : false					},					#name : #subject,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketGenericLogEvent class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketGenericLogEvent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketGenericLogEvent,					#isMetaSide : false				},				#parent : @8,				#content : 'I am ZnWebSocketGenericLogEvent communicating about a subject.\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am ZnWebSocketGenericLogEvent communicating about a subject.\r',		#oldStamp : '',		#newStamp : 'SvenVanCaekenberghe 6/16/2014 13:24'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '150' ],		#self : OmReference [ '151' ],		#time : DateAndTime [ '2024-03-03T08:20:42.215-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Error subclass: #ZnWebSocketFailed\r\tinstanceVariableNames: \'response\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'Error',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketFailed,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketFailed,						#isMetaSide : false					},					#name : #response,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketFailed class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketFailed class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketFailed,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '151' ],		#self : OmReference [ '152' ],		#time : DateAndTime [ '2024-03-03T08:20:42.217-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Error subclass: #ZnWebSocketFailed\r\tinstanceVariableNames: \'response\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'Error',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketFailed,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketFailed,						#isMetaSide : false					},					#name : #response,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketFailed class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketFailed class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketFailed,					#isMetaSide : false				},				#parent : @8,				#content : 'I am ZnWebSocketFailed, an exception thrown when a client WebSocket cannot be created successfully.\rI am an Error.\r\rPart of Zinc HTTP Components. ',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am ZnWebSocketFailed, an exception thrown when a client WebSocket cannot be created successfully.\rI am an Error.\r\rPart of Zinc HTTP Components. ',		#oldStamp : '',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '152' ],		#self : OmReference [ '153' ],		#time : DateAndTime [ '2024-03-03T08:20:42.219-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'ConnectionClosed subclass: #ZnWebSocketClosed\r\tinstanceVariableNames: \'code reason\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'ConnectionClosed',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketClosed,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketClosed,						#isMetaSide : false					},					#name : #code,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketClosed,						#isMetaSide : false					},					#name : #reason,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketClosed class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketClosed class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketClosed,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '153' ],		#self : OmReference [ '154' ],		#time : DateAndTime [ '2024-03-03T08:20:42.22-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'ConnectionClosed subclass: #ZnWebSocketClosed\r\tinstanceVariableNames: \'code reason\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'ConnectionClosed',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketClosed,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketClosed,						#isMetaSide : false					},					#name : #code,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketClosed,						#isMetaSide : false					},					#name : #reason,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketClosed class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketClosed class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketClosed,					#isMetaSide : false				},				#parent : @8,				#content : 'I am ZnWebSocketClosed, signalled when WebSocket close frame is received.\rI am a ConnectionClosed and a NetworkError.\r\rPart of Zinc HTTP Components.\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am ZnWebSocketClosed, signalled when WebSocket close frame is received.\rI am a ConnectionClosed and a NetworkError.\r\rPart of Zinc HTTP Components.\r',		#oldStamp : '',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '154' ],		#self : OmReference [ '155' ],		#time : DateAndTime [ '2024-03-03T08:20:42.221-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #ZnWebSocket\r\tinstanceVariableNames: \'stream role\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocket,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocket,						#isMetaSide : false					},					#name : #stream,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocket,						#isMetaSide : false					},					#name : #role,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocket class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocket class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocket,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '155' ],		#self : OmReference [ '156' ],		#time : DateAndTime [ '2024-03-03T08:20:42.223-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #ZnWebSocket\r\tinstanceVariableNames: \'stream role\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocket,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocket,						#isMetaSide : false					},					#name : #stream,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocket,						#isMetaSide : false					},					#name : #role,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocket class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocket class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocket,					#isMetaSide : false				},				#parent : @8,				#content : 'I am ZnWebSocket, a bi-directional, full-duplex communication channel over a single TCP connection.\r\rWebSockets send reliable messages to each other, a String or ByteArrat.\rEach message is one-way (does not have a direct synchroneous reply). \rEach party, both client and/or server can take the initiative.\r\rThis implementation follows RFC 6455. See also:\r\r\thttp://en.wikipedia.org/wiki/Websockets\r\thttp://tools.ietf.org/html/rfc6455\r\rHere is a client side example taking to a public echo service: \r\r| webSocket |\rwebSocket := ZnWebSocket to: \'ws://echo.websocket.org\'.\r[ webSocket \r\tsendMessage: \'Pharo Smalltalk using Zinc WebSockets !\';\r\treadMessage ] ensure: [ webSocket close ].\r\rHere is the same example using secure web sockets:\r\r| webSocket |\rwebSocket := ZnWebSocket to: \'wss://echo.websocket.org\'.\r[ webSocket \r\tsendMessage: \'Pharo Smalltalk using Zinc WebSockets & Zodiac !\';\r\treadMessage ] ensure: [ webSocket close ].\r\rHere is how to start a local server running in the image implementing the same echo service:\r\rZnWebSocket startServerOn: 8080 do: ZnWebSocketEchoHandler new.\r\rA full inline implementation of the echo handler would look like:\r\rZnWebSocket \r\tstartServerOn: 8080 \r\tdo: [ :webSocket | \r\t\t[ \r\t\t\twebSocket runWith: [ :message |\r\t\t\t\tself crLog: \'Received message: \', message printString, \' echoing...\'.\r\t\t\t\twebSocket sendMessage: message ] ] \r\t\t\ton: ConnectionClosed \r\t\t\tdo: [ self crLog: \'Ignoring connection close, done\' ] ].\r\rPart of Zinc HTTP Components.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am ZnWebSocket, a bi-directional, full-duplex communication channel over a single TCP connection.\r\rWebSockets send reliable messages to each other, a String or ByteArrat.\rEach message is one-way (does not have a direct synchroneous reply). \rEach party, both client and/or server can take the initiative.\r\rThis implementation follows RFC 6455. See also:\r\r\thttp://en.wikipedia.org/wiki/Websockets\r\thttp://tools.ietf.org/html/rfc6455\r\rHere is a client side example taking to a public echo service: \r\r| webSocket |\rwebSocket := ZnWebSocket to: \'ws://echo.websocket.org\'.\r[ webSocket \r\tsendMessage: \'Pharo Smalltalk using Zinc WebSockets !\';\r\treadMessage ] ensure: [ webSocket close ].\r\rHere is the same example using secure web sockets:\r\r| webSocket |\rwebSocket := ZnWebSocket to: \'wss://echo.websocket.org\'.\r[ webSocket \r\tsendMessage: \'Pharo Smalltalk using Zinc WebSockets & Zodiac !\';\r\treadMessage ] ensure: [ webSocket close ].\r\rHere is how to start a local server running in the image implementing the same echo service:\r\rZnWebSocket startServerOn: 8080 do: ZnWebSocketEchoHandler new.\r\rA full inline implementation of the echo handler would look like:\r\rZnWebSocket \r\tstartServerOn: 8080 \r\tdo: [ :webSocket | \r\t\t[ \r\t\t\twebSocket runWith: [ :message |\r\t\t\t\tself crLog: \'Received message: \', message printString, \' echoing...\'.\r\t\t\t\twebSocket sendMessage: message ] ] \r\t\t\ton: ConnectionClosed \r\t\t\tdo: [ self crLog: \'Ignoring connection close, done\' ] ].\r\rPart of Zinc HTTP Components.',		#oldStamp : '',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '156' ],		#self : OmReference [ '157' ],		#time : DateAndTime [ '2024-03-03T08:20:42.225-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #ZnWebSocketChatroomHandler\r\tinstanceVariableNames: \'webSockets lock\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketChatroomHandler,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketChatroomHandler,						#isMetaSide : false					},					#name : #webSockets,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketChatroomHandler,						#isMetaSide : false					},					#name : #lock,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketChatroomHandler class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketChatroomHandler class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketChatroomHandler,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '157' ],		#self : OmReference [ '158' ],		#time : DateAndTime [ '2024-03-03T08:20:42.227-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #ZnWebSocketChatroomHandler\r\tinstanceVariableNames: \'webSockets lock\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketChatroomHandler,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketChatroomHandler,						#isMetaSide : false					},					#name : #webSockets,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketChatroomHandler,						#isMetaSide : false					},					#name : #lock,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketChatroomHandler class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketChatroomHandler class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketChatroomHandler,					#isMetaSide : false				},				#parent : @8,				#content : 'I am ZnWebSocketChatroomHandler, I send a copy of each incoming message over a WebSocket to all WebSockets currently open, thus implementing a simple chat room.\r\rSee the class comment of ZnWebSocketDelegate for an example using ZnWebSocketChatroomHandler.\r\rPart of Zinc HTTP Components.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am ZnWebSocketChatroomHandler, I send a copy of each incoming message over a WebSocket to all WebSockets currently open, thus implementing a simple chat room.\r\rSee the class comment of ZnWebSocketDelegate for an example using ZnWebSocketChatroomHandler.\r\rPart of Zinc HTTP Components.',		#oldStamp : '',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '158' ],		#self : OmReference [ '159' ],		#time : DateAndTime [ '2024-03-03T08:20:42.228-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #ZnWebSocketDelegate\r\tinstanceVariableNames: \'prefix handler\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketDelegate,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketDelegate,						#isMetaSide : false					},					#name : #prefix,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketDelegate,						#isMetaSide : false					},					#name : #handler,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketDelegate class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketDelegate class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketDelegate,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '159' ],		#self : OmReference [ '160' ],		#time : DateAndTime [ '2024-03-03T08:20:42.229-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #ZnWebSocketDelegate\r\tinstanceVariableNames: \'prefix handler\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketDelegate,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketDelegate,						#isMetaSide : false					},					#name : #prefix,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketDelegate,						#isMetaSide : false					},					#name : #handler,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketDelegate class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketDelegate class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketDelegate,					#isMetaSide : false				},				#parent : @8,				#content : 'I am ZnWebSocketDelegate, a plugin to allow a ZnServer to accept incoming WebSocket requests.\r\rWhen accepted, the request is upgraded and a new WebSocket is created and handed to the handler block.\r\rHere is how to get 3 examples up and running:\r\r\tZnServer startDefaultOn: 1701.\r\tZnServer default logToTranscript.\r\tZnWebSocketDelegate installExamplesInDefaultServer.\r\tZnServer stopDefault.\r\rPart of Zinc HTTP Components.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am ZnWebSocketDelegate, a plugin to allow a ZnServer to accept incoming WebSocket requests.\r\rWhen accepted, the request is upgraded and a new WebSocket is created and handed to the handler block.\r\rHere is how to get 3 examples up and running:\r\r\tZnServer startDefaultOn: 1701.\r\tZnServer default logToTranscript.\r\tZnWebSocketDelegate installExamplesInDefaultServer.\r\tZnServer stopDefault.\r\rPart of Zinc HTTP Components.',		#oldStamp : '',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '160' ],		#self : OmReference [ '161' ],		#time : DateAndTime [ '2024-03-03T08:20:42.241-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #ZnWebSocketEchoHandler\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketEchoHandler,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketEchoHandler class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketEchoHandler class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketEchoHandler,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '161' ],		#self : OmReference [ '162' ],		#time : DateAndTime [ '2024-03-03T08:20:42.242-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #ZnWebSocketEchoHandler\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketEchoHandler,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketEchoHandler class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketEchoHandler class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketEchoHandler,					#isMetaSide : false				},				#parent : @8,				#content : 'I am ZnWebSocketEchoHandler, implementing an echo service conversation as a WebSocket server: reading messages and echoing them back until ConnectionClosed.\r\rSee the class comment of ZnWebSocketDelegate for an example using ZnWebSocketEchoHandler.\r\rPart of Zinc HTTP Components.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am ZnWebSocketEchoHandler, implementing an echo service conversation as a WebSocket server: reading messages and echoing them back until ConnectionClosed.\r\rSee the class comment of ZnWebSocketDelegate for an example using ZnWebSocketEchoHandler.\r\rPart of Zinc HTTP Components.',		#oldStamp : '',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '162' ],		#self : OmReference [ '163' ],		#time : DateAndTime [ '2024-03-03T08:20:42.244-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #ZnWebSocketFrame\r\tinstanceVariableNames: \'opcode final masked body\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketFrame,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketFrame,						#isMetaSide : false					},					#name : #opcode,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketFrame,						#isMetaSide : false					},					#name : #final,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketFrame,						#isMetaSide : false					},					#name : #masked,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketFrame,						#isMetaSide : false					},					#name : #body,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketFrame class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketFrame class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketFrame,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '163' ],		#self : OmReference [ '164' ],		#time : DateAndTime [ '2024-03-03T08:20:42.245-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #ZnWebSocketFrame\r\tinstanceVariableNames: \'opcode final masked body\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketFrame,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketFrame,						#isMetaSide : false					},					#name : #opcode,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketFrame,						#isMetaSide : false					},					#name : #final,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketFrame,						#isMetaSide : false					},					#name : #masked,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnWebSocketFrame,						#isMetaSide : false					},					#name : #body,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketFrame class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketFrame class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketFrame,					#isMetaSide : false				},				#parent : @8,				#content : 'I am ZnWebSocketFrame, the elementary, low-level unit of data transfer in the WebSocket protocol.\r\rA frame has an opcode (a type), a flag indicating whether it is the final frame in a sequence, a flag indicating whether it is masked and a body (a ByteArray).\r\rThe wire encoding of a frame consists minimally of 2 bytes: the first holds the opcode and final bit, the second the size and masked bit. Sizes strictly smaller than 126 are encoded directly. If the first byte is 126, the size is encoded in 2 successive bytes. If the first byte is 127, the size is encoded in 8 successive bytes. Client to server messages are masked. A 4 byte mask is XOR-ed with all body bytes. See #readFrom: and #writeOn: for the details.\r\rThis implementation follows RFC 6455. See also:\r\r\thttp://en.wikipedia.org/wiki/Websockets\r\thttp://tools.ietf.org/html/rfc6455\r\rPart of Zinc HTTP Components.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am ZnWebSocketFrame, the elementary, low-level unit of data transfer in the WebSocket protocol.\r\rA frame has an opcode (a type), a flag indicating whether it is the final frame in a sequence, a flag indicating whether it is masked and a body (a ByteArray).\r\rThe wire encoding of a frame consists minimally of 2 bytes: the first holds the opcode and final bit, the second the size and masked bit. Sizes strictly smaller than 126 are encoded directly. If the first byte is 126, the size is encoded in 2 successive bytes. If the first byte is 127, the size is encoded in 8 successive bytes. Client to server messages are masked. A 4 byte mask is XOR-ed with all body bytes. See #readFrom: and #writeOn: for the details.\r\rThis implementation follows RFC 6455. See also:\r\r\thttp://en.wikipedia.org/wiki/Websockets\r\thttp://tools.ietf.org/html/rfc6455\r\rPart of Zinc HTTP Components.',		#oldStamp : '',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '164' ],		#self : OmReference [ '165' ],		#time : DateAndTime [ '2024-03-03T08:20:42.246-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #ZnWebSocketStatusHandler\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketStatusHandler,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketStatusHandler class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketStatusHandler class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketStatusHandler,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '165' ],		#self : OmReference [ '166' ],		#time : DateAndTime [ '2024-03-03T08:20:42.248-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #ZnWebSocketStatusHandler\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketStatusHandler,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketStatusHandler class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketStatusHandler class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketStatusHandler,					#isMetaSide : false				},				#parent : @8,				#content : 'I am ZnWebSocketStatusHandler, emitting some Smalltalk image status data every second as a stream of WebSocket messages.\r\rSee the class comment of ZnWebSocketDelegate for an example using ZnWebSocketStatusHandler.\r\rPart of Zinc HTTP Components.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am ZnWebSocketStatusHandler, emitting some Smalltalk image status data every second as a stream of WebSocket messages.\r\rSee the class comment of ZnWebSocketDelegate for an example using ZnWebSocketStatusHandler.\r\rPart of Zinc HTTP Components.',		#oldStamp : '',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '166' ],		#self : OmReference [ '167' ],		#time : DateAndTime [ '2024-03-03T08:20:42.249-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #ZnWebSocketUtils\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketUtils,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketUtils class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketUtils class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketUtils,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '167' ],		#self : OmReference [ '168' ],		#time : DateAndTime [ '2024-03-03T08:20:42.25-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #ZnWebSocketUtils\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Zinc-WebSocket-Core\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #ZnWebSocketUtils,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ZnWebSocketUtils class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ZnWebSocketUtils class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnWebSocketUtils,					#isMetaSide : false				},				#parent : @8,				#content : 'I am ZnWebSocketUtils.\r\rPart of Zinc HTTP Components.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-WebSocket-Core,			#package : #Zinc-WebSocket-Core,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am ZnWebSocketUtils.\r\rPart of Zinc HTTP Components.',		#oldStamp : '',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '168' ],		#self : OmReference [ '169' ],		#time : DateAndTime [ '2024-03-03T08:20:42.366-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketResponse,				#isMetaSide : false			},			#name : #continuation,			#protocol : #accessing,			#sourceCode : 'continuation\r\t"Return the block that represents the continuation \r\twhen the server call #useConnection: on me.\r\tThe block will be evaluated with an instanciated WebSocket."\r\r\t^ continuation',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '169' ],		#self : OmReference [ '170' ],		#time : DateAndTime [ '2024-03-03T08:20:42.367-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketResponse,				#isMetaSide : false			},			#name : #'continuation:',			#protocol : #initialize-release,			#sourceCode : 'continuation: block\r\t"Set the block that represents the continuation \r\twhen the server call #useConnection: on me.\r\tThe block will be evaluated with an instanciated WebSocket."\r\t\r\tcontinuation := block',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '170' ],		#self : OmReference [ '171' ],		#time : DateAndTime [ '2024-03-03T08:20:42.368-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketResponse,				#isMetaSide : false			},			#name : #'useConnection:',			#protocol : #accessing,			#sourceCode : 'useConnection: connection\r\t"Hook method overwritten to give the receiver the chance to \r\tkeep using connection in the current thread/process after the server wrote the response.\r\tWe start a conversation by instanciating a WebSocket and passing it to our continuation."\r\t\r\t| webSocket |\r\twebSocket := ZnWebSocket onStream: connection.\r\tself continuation value: webSocket',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '171' ],		#self : OmReference [ '172' ],		#time : DateAndTime [ '2024-03-03T08:20:42.368-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketResponse,				#isMetaSide : false			},			#name : #wantsConnectionClose,			#protocol : #testing,			#sourceCode : 'wantsConnectionClose\r\t"After we are done, the server can close the connection we were using"\r\t \r\t^ true',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '172' ],		#self : OmReference [ '173' ],		#time : DateAndTime [ '2024-03-03T08:20:42.368-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketControlFrameHandledEvent,				#isMetaSide : false			},			#name : #'printContentsOn:',			#protocol : #printing,			#sourceCode : 'printContentsOn: stream\r\tsuper printContentsOn: stream.\r\r\tstream << \'WebSocket Control Frame Handled \'; print: type',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '173' ],		#self : OmReference [ '174' ],		#time : DateAndTime [ '2024-03-03T08:20:42.368-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketControlFrameHandledEvent,				#isMetaSide : false			},			#name : #type,			#protocol : #accessing,			#sourceCode : 'type\r\t^ type',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '174' ],		#self : OmReference [ '175' ],		#time : DateAndTime [ '2024-03-03T08:20:42.368-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketControlFrameHandledEvent,				#isMetaSide : false			},			#name : #'type:',			#protocol : #accessing,			#sourceCode : 'type: anObject\r\ttype := anObject',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '175' ],		#self : OmReference [ '176' ],		#time : DateAndTime [ '2024-03-03T08:20:42.369-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketGenericLogEvent,				#isMetaSide : false			},			#name : #'printContentsOn:',			#protocol : #printing,			#sourceCode : 'printContentsOn: stream\r\tsuper printContentsOn: stream.\r\r\tstream << \'WebSocket Generic Log Event \';  print: subject',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '176' ],		#self : OmReference [ '177' ],		#time : DateAndTime [ '2024-03-03T08:20:42.369-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketGenericLogEvent,				#isMetaSide : false			},			#name : #subject,			#protocol : #accessing,			#sourceCode : 'subject\r\t^ subject',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '177' ],		#self : OmReference [ '178' ],		#time : DateAndTime [ '2024-03-03T08:20:42.369-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketGenericLogEvent,				#isMetaSide : false			},			#name : #'subject:',			#protocol : #accessing,			#sourceCode : 'subject: anObject\r\tsubject := anObject',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '178' ],		#self : OmReference [ '179' ],		#time : DateAndTime [ '2024-03-03T08:20:42.369-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketFailed class',				#isMetaSide : true			},			#name : #'response:',			#protocol : #'instance creation',			#sourceCode : 'response: response\r\t^ self new\r\t\tresponse: response;\r\t\tyourself',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '179' ],		#self : OmReference [ '180' ],		#time : DateAndTime [ '2024-03-03T08:20:42.369-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFailed,				#isMetaSide : false			},			#name : #response,			#protocol : #accessing,			#sourceCode : 'response\r\t^ response',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '180' ],		#self : OmReference [ '181' ],		#time : DateAndTime [ '2024-03-03T08:20:42.369-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFailed,				#isMetaSide : false			},			#name : #'response:',			#protocol : #accessing,			#sourceCode : 'response: anObject\r\tresponse := anObject',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '181' ],		#self : OmReference [ '182' ],		#time : DateAndTime [ '2024-03-03T08:20:42.369-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketClosed,				#isMetaSide : false			},			#name : #code,			#protocol : #accessing,			#sourceCode : 'code\r\t^ code',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '182' ],		#self : OmReference [ '183' ],		#time : DateAndTime [ '2024-03-03T08:20:42.369-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketClosed,				#isMetaSide : false			},			#name : #'code:',			#protocol : #accessing,			#sourceCode : 'code: anObject\r\tcode := anObject',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '183' ],		#self : OmReference [ '184' ],		#time : DateAndTime [ '2024-03-03T08:20:42.37-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketClosed,				#isMetaSide : false			},			#name : #reason,			#protocol : #accessing,			#sourceCode : 'reason\r\t^ reason',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '184' ],		#self : OmReference [ '185' ],		#time : DateAndTime [ '2024-03-03T08:20:42.37-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketClosed,				#isMetaSide : false			},			#name : #'reason:',			#protocol : #accessing,			#sourceCode : 'reason: anObject\r\treason := anObject',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '185' ],		#self : OmReference [ '186' ],		#time : DateAndTime [ '2024-03-03T08:20:42.37-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocket class',				#isMetaSide : true			},			#name : #'isValidWebSocketResponse:',			#protocol : #protocol,			#sourceCode : 'isValidWebSocketResponse: client\r\t"Return true when client contains a valid WebSocket response for its WebSocket request"\r\r\t| acceptKey response |\r\tacceptKey := ZnWebSocketUtils handshake: (client request headers at: \'Sec-WebSocket-Key\').\r\tresponse := client response.\r\t^ response code = 101\r\t\tand: [\r\t\t\t(response headers at: \'Upgrade\') asLowercase = \'websocket\' \r\t\t\t\tand: [\r\t\t\t\t\t(ZnWebSocketUtils containsConnectionUpgrade: response headers)\r\t\t\t\t\t\tand: [ \r\t\t\t\t\t\t\t(response headers at: \'Sec-WebSocket-Accept\') = acceptKey ] ] ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '186' ],		#self : OmReference [ '187' ],		#time : DateAndTime [ '2024-03-03T08:20:42.37-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocket class',				#isMetaSide : true			},			#name : #'onClient:',			#protocol : #'instance creation',			#sourceCode : 'onClient: client\r\t"Create and return a functioning ZnWebSocket object based on an HTTP client,\r\tassuming the initial upgrade handshake was executed. The validity of the response is checked.\r\tSignals a ZnWebSocketFailed error when unsuccessful."\r\r\t(self isValidWebSocketResponse: client)\r\t\tifTrue: [\r\t\t\t^ (self onStream: client connection)\r\t\t\t\trole: #client;\r\t\t\t\tyourself ]\r\t\tifFalse: [\r\t\t\tclient close.\r\t\t\t(ZnWebSocketFailed response: client response) signal ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '187' ],		#self : OmReference [ '188' ],		#time : DateAndTime [ '2024-03-03T08:20:42.37-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocket class',				#isMetaSide : true			},			#name : #'onStream:',			#protocol : #'instance creation',			#sourceCode : 'onStream: socketStream\r\t"Return a new ZnWebSocket instance on socketStream.\r\tIt is assumed that the initial handshake was successful."\r\t\r\t^ self new\r\t\tonStream: socketStream;\r\t\tyourself',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '188' ],		#self : OmReference [ '189' ],		#time : DateAndTime [ '2024-03-03T08:20:42.37-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocket class',				#isMetaSide : true			},			#name : #'startServerOn:do:',			#protocol : #'instance creation',			#sourceCode : 'startServerOn: port do: handler\r\t"Start and return a new ZnServer listening on port and / for client WebSocket connections.\r\tAfter a successful initial handshake, sent #value: to handler with a server side ZnWebSocket instance."\r\t\r\t^ self startServerOn: port prefix: \'\' do: handler  ',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '189' ],		#self : OmReference [ '190' ],		#time : DateAndTime [ '2024-03-03T08:20:42.37-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocket class',				#isMetaSide : true			},			#name : #'startServerOn:prefix:do:',			#protocol : #'instance creation',			#sourceCode : 'startServerOn: port prefix: prefix do: handler\r\t"Start and return a new ZnServer listening on port and /prefix for client WebSocket connections.\r\tAfter a successful initial handshake, sent #value: to handler with a server side ZnWebSocket instance."\r\t\r\t^ (ZnServer on: port)\r\t\tdelegate: (ZnWebSocketDelegate map: prefix to: handler);\r\t\tstart;\r\t\tyourself',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '190' ],		#self : OmReference [ '191' ],		#time : DateAndTime [ '2024-03-03T08:20:42.37-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocket class',				#isMetaSide : true			},			#name : #'to:',			#protocol : #'instance creation',			#sourceCode : 'to: urlObject\r\t"Attempt to create a new client WebSocket to urlObject.\r\tDo the initial upgrade handshake and return a functioning ZnWebSocket object.\r\tSignals a ZnWebSocketFailed error when unsuccessful."\r\r\t^ self to: urlObject config: [ :httpClient | ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '191' ],		#self : OmReference [ '192' ],		#time : DateAndTime [ '2024-03-03T08:20:42.371-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocket class',				#isMetaSide : true			},			#name : #'to:config:',			#protocol : #'instance creation',			#sourceCode : 'to: urlObject config: block\r\t"Attempt to create a new client WebSocket to urlObject.\r\tExecute block to further configure the HTTP client before the upgrade request.\r\tDo the initial upgrade handshake and return a functioning ZnWebSocket object.\r\tSignals a ZnWebSocketFailed error when unsuccessful."\r\r\t| client |\r\tclient := self webSocketClientTo: urlObject asZnUrl.\r\tblock value: client.\r\tclient execute.\r\t^ self onClient: client',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '192' ],		#self : OmReference [ '193' ],		#time : DateAndTime [ '2024-03-03T08:20:42.371-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocket class',				#isMetaSide : true			},			#name : #'webSocketClientTo:',			#protocol : #protocol,			#sourceCode : 'webSocketClientTo: url\r\t"Create and return a new ZnClient instance ready for the initial client side WebSocket setup request"\r\t\r\t| client |\r\tself assert: (#(ws wss) includes: url scheme).\r\t(client := ZnClient new)\r\t\turl: url;\r\t\tmethod: #GET;\r\t\theaderAt: \'Upgrade\' put: \'websocket\';\r\t\theaderAt: \'Connection\' put: \'Upgrade\';\r\t\theaderAt: \'Sec-WebSocket-Version\' put: \'13\';\r\t\theaderAt: \'Sec-WebSocket-Key\' put: ZnWebSocketUtils newClientKey.\r\t^ client   \r\t',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '193' ],		#self : OmReference [ '194' ],		#time : DateAndTime [ '2024-03-03T08:20:42.371-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #close,			#protocol : #initialize-release,			#sourceCode : 'close\r\t"Send a close frame and close the connection"\r\r\tself sendFrame: ZnWebSocketFrame close.\r\tstream close.',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '194' ],		#self : OmReference [ '195' ],		#time : DateAndTime [ '2024-03-03T08:20:42.371-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #'handleControlFrame:',			#protocol : #private,			#sourceCode : 'handleControlFrame: frame\r\t"Handle a control frame. ConnectionClosed is signalled when the other end closes."\r\t\r\tframe isClose \r\t\tifTrue: [ \r\t\t\tself logControlFrameHandled: #close.\r\t\t\tself close. \r\t\t\t^ self signalClosed: frame ].\r\tframe isPing \r\t\tifTrue: [ \r\t\t\tself logControlFrameHandled: #ping.\r\t\t\tself pong: frame body ].\r\tframe isPong \r\t\tifTrue: [\r\t\t\tself logControlFrameHandled: #pong ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '195' ],		#self : OmReference [ '196' ],		#time : DateAndTime [ '2024-03-03T08:20:42.371-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #handleControlFrameNoWait,			#protocol : #protocol,			#sourceCode : 'handleControlFrameNoWait\r\t"Peek for a control frame if any and handle it. Do not wait.\r\tReturn true when a control frame was handled, false otherwise."\r\t\r\t(stream isDataAvailable and: [ (stream peek bitAnd: 127) > 7 ])\r\t\tifTrue: [ | frame |\r\t\t\tframe := ZnWebSocketFrame readFrom: stream.\r\t\t\tself handleControlFrame: frame.\r\t\t\t^ true ].\r\t^ false',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '196' ],		#self : OmReference [ '197' ],		#time : DateAndTime [ '2024-03-03T08:20:42.371-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tsuper initialize.\r\trole := #server',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '197' ],		#self : OmReference [ '198' ],		#time : DateAndTime [ '2024-03-03T08:20:42.371-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #isClient,			#protocol : #testing,			#sourceCode : 'isClient\r\t"Return true if the receiver is the client in a WebSocket conversation"\r\t\r\t^ role = #client',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '198' ],		#self : OmReference [ '199' ],		#time : DateAndTime [ '2024-03-03T08:20:42.371-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #isConnected,			#protocol : #testing,			#sourceCode : 'isConnected\r\t"Return true when I am connected, \r\ti.e. not closed and still connected at the socket level"\r\r\t^ stream notNil and: [ stream isConnected ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '199' ],		#self : OmReference [ '200' ],		#time : DateAndTime [ '2024-03-03T08:20:42.371-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #isServer,			#protocol : #testing,			#sourceCode : 'isServer\r\t"Return true if the receiver is the server in a WebSocket conversation"\r\r\t^ role = #server',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '200' ],		#self : OmReference [ '201' ],		#time : DateAndTime [ '2024-03-03T08:20:42.372-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #'logControlFrameHandled:',			#protocol : #private,			#sourceCode : 'logControlFrameHandled: type\r\tZnWebSocketControlFrameHandledEvent new\r\t\ttype: type;\r\t\temit',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '201' ],		#self : OmReference [ '202' ],		#time : DateAndTime [ '2024-03-03T08:20:42.373-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #'logGeneric:',			#protocol : #accessing,			#sourceCode : 'logGeneric: subject\r\tZnWebSocketGenericLogEvent new\r\t\tsubject: subject;\r\t\temit',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '202' ],		#self : OmReference [ '203' ],		#time : DateAndTime [ '2024-03-03T08:20:42.374-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #'onStream:',			#protocol : #initialize-release,			#sourceCode : 'onStream: socketStream\r\t"Initialize the receiver on socketStream"\r\t\r\tstream := socketStream ',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '203' ],		#self : OmReference [ '204' ],		#time : DateAndTime [ '2024-03-03T08:20:42.374-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #ping,			#protocol : #protocol,			#sourceCode : 'ping\r\t"Send a generic ping (with an empty payload).\r\tPing messages are sent automatically from #runWith: as a keep alive\r\twhenever the connection times out and loops. \r\tThe interval is thus the connection\'s read time out"\r\t\r\tself pingEmpty',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '204' ],		#self : OmReference [ '205' ],		#time : DateAndTime [ '2024-03-03T08:20:42.374-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #'ping:',			#protocol : #protocol,			#sourceCode : 'ping: payload\r\t"Send a ping frame with payload"\r\r\t| frame |\r\tframe := ZnWebSocketFrame ping: payload.\r\tself sendFrame: frame',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '205' ],		#self : OmReference [ '206' ],		#time : DateAndTime [ '2024-03-03T08:20:42.374-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #pingEmpty,			#protocol : #protocol,			#sourceCode : 'pingEmpty\r\t"Send a ping with an empty payload."\r\r\tself ping: #[ ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '206' ],		#self : OmReference [ '207' ],		#time : DateAndTime [ '2024-03-03T08:20:42.374-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #pingRandom,			#protocol : #protocol,			#sourceCode : 'pingRandom\r\t"Send a ping with a 4-byte random payload."\r\r\tself ping: ZnWebSocketUtils newPingPayload',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '207' ],		#self : OmReference [ '208' ],		#time : DateAndTime [ '2024-03-03T08:20:42.374-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #'pong:',			#protocol : #private,			#sourceCode : 'pong: payload\r\t"Send a pong frame containing payload (in reply to a ping with that payload)"\r\t\r\t| frame |\r\tframe := ZnWebSocketFrame pong: payload.\r\tself sendFrame: frame ',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '208' ],		#self : OmReference [ '209' ],		#time : DateAndTime [ '2024-03-03T08:20:42.374-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\tsuper printOn: aStream.\r\taStream \r\t\tnextPut: $(; \r\t\tprint: role;\r\t\tnextPut: $)',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '209' ],		#self : OmReference [ '210' ],		#time : DateAndTime [ '2024-03-03T08:20:42.374-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #readFrame,			#protocol : #private,			#sourceCode : 'readFrame\r\t"Read and return the next non-control frame. Wait.\r\tControl frames are handled. ConnectionClosed is signalled when the other end closes."\r\t\r\t| frame |\r\tframe := ZnWebSocketFrame readFrom: stream.\r\tframe isControl \r\t\tifTrue: [\r\t\t\tself handleControlFrame: frame.\r\t\t\t^ self readFrame ].\r\t^ frame',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '210' ],		#self : OmReference [ '211' ],		#time : DateAndTime [ '2024-03-03T08:20:42.375-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #readMessage,			#protocol : #protocol,			#sourceCode : 'readMessage\r\t"Read and return a complete message String or ByteArray, joining frames. \r\tConnectionClosed is signalled when the other end closes."\r\t\r\t| frame bytes isText |\r\tframe := self readFrame.\r\tframe isFinal ifTrue: [ ^ frame contents ].\r\tisText := frame isText.\r\tbytes := ByteArray new: frame size * 2 streamContents: [ :output |\r\t\tframe writeRawBodyOn: output.\r\t\t[ \r\t\t\tframe := self readFrame.\r\t\t\tself assert: frame isContinuation. \r\t\t\tframe writeRawBodyOn: output.\r\t\t\tframe isFinal ] whileFalse ].\r\t^ isText \r\t\tifTrue: [ ZnUTF8Encoder new decodeBytes: bytes ]\r\t\tifFalse: [ bytes ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '211' ],		#self : OmReference [ '212' ],		#time : DateAndTime [ '2024-03-03T08:20:42.375-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #role,			#protocol : #accessing,			#sourceCode : 'role\r\t"Return the role of the receiver, either #client or #server"\r\t\r\t^ role',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '212' ],		#self : OmReference [ '213' ],		#time : DateAndTime [ '2024-03-03T08:20:42.375-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #'role:',			#protocol : #initialize-release,			#sourceCode : 'role: symbol\r\t"Set the role of the receiver, either #client or #server"\r\t\r\tself assert: (#(client server) includes: symbol).\r\trole := symbol',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '213' ],		#self : OmReference [ '214' ],		#time : DateAndTime [ '2024-03-03T08:20:42.375-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #'runWith:',			#protocol : #protocol,			#sourceCode : 'runWith: block\r\t"Start a run loop handling the WebSocket protocol.\r\tWhen a message is received, block will be passed a String or ByteArray.\r\tConnectionClosed will be signalled when the other end closes."\r\t\r\t[ | message |\r\t\tmessage := nil.\r\t\t[ message := self readMessage ] \r\t\t\ton: ConnectionTimedOut \r\t\t\tdo: [ "Ignore & continue" self ping ].\r\t\tmessage ifNotNil: [\r\t\t\tblock value: message ] ] repeat',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '214' ],		#self : OmReference [ '215' ],		#time : DateAndTime [ '2024-03-03T08:20:42.375-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #'sendByteFrames:',			#protocol : #protocol,			#sourceCode : 'sendByteFrames: sequenceableCollection\r\t"Send a binary message consisting of sequenceableCollection byte array frames"\r\r\t| frame |\r\tself assert: sequenceableCollection size > 1.\r\t(frame := ZnWebSocketFrame bytes: sequenceableCollection first)\r\t\tfinal: false.\r\tself sendFrame: frame.\r\t2 to: sequenceableCollection size - 1 do: [ :each |\r\t\t(frame := ZnWebSocketFrame bytes: (sequenceableCollection at: each))\r\t\t\tfinal: false; opcode: 0.\r\t\tself sendFrame: frame ].\r\t(frame := ZnWebSocketFrame bytes: sequenceableCollection last)\r\t\tfinal: true; opcode: 0.\r\tself sendFrame: frame\r\t',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '215' ],		#self : OmReference [ '216' ],		#time : DateAndTime [ '2024-03-03T08:20:42.375-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #'sendBytes:',			#protocol : #private,			#sourceCode : 'sendBytes: bytes\r\t"Send bytes in one binary frame"\r\r\t| frame |\r\tframe := ZnWebSocketFrame bytes: bytes.\r\tself sendFrame: frame',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '216' ],		#self : OmReference [ '217' ],		#time : DateAndTime [ '2024-03-03T08:20:42.375-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #'sendFrame:',			#protocol : #private,			#sourceCode : 'sendFrame: frame\r\t"Send a single frame, masked when I am in a client role, flush"\r\t\r\tframe masked: self isClient.\r\tframe writeOn: stream.\r\tstream flush.',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '217' ],		#self : OmReference [ '218' ],		#time : DateAndTime [ '2024-03-03T08:20:42.375-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #'sendMessage:',			#protocol : #protocol,			#sourceCode : 'sendMessage: stringOrByteArray\r\t"Send stringOrByteArray in one textual or binary frame"\r\r\tstringOrByteArray isString\r\t\tifTrue: [ self sendText: stringOrByteArray ] \r\t\tifFalse: [ self sendBytes: stringOrByteArray ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '218' ],		#self : OmReference [ '219' ],		#time : DateAndTime [ '2024-03-03T08:20:42.375-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #'sendText:',			#protocol : #private,			#sourceCode : 'sendText: string\r\t"Send string in one textual frame"\r\r\t| frame |\r\tframe := ZnWebSocketFrame text: string.\r\tself sendFrame: frame',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '219' ],		#self : OmReference [ '220' ],		#time : DateAndTime [ '2024-03-03T08:20:42.376-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #'sendTextFrames:',			#protocol : #protocol,			#sourceCode : 'sendTextFrames: sequenceableCollection\r\t"Send a textual message consisting of sequenceableCollection string frames"\r\r\t| frame |\r\tself assert: sequenceableCollection size > 1.\r\t(frame := ZnWebSocketFrame text: sequenceableCollection first)\r\t\tfinal: false.\r\tself sendFrame: frame.\r\t2 to: sequenceableCollection size - 1 do: [ :each |\r\t\t(frame := ZnWebSocketFrame text: (sequenceableCollection at: each))\r\t\t\tfinal: false; opcode: 0.\r\t\tself sendFrame: frame ].\r\t(frame := ZnWebSocketFrame text: sequenceableCollection last)\r\t\tfinal: true; opcode: 0.\r\tself sendFrame: frame\r\t',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '220' ],		#self : OmReference [ '221' ],		#time : DateAndTime [ '2024-03-03T08:20:42.376-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #'signalClosed:',			#protocol : #private,			#sourceCode : 'signalClosed: frame\r\t"Turn a close frame that we received into a ZnWebSocketClosed exception and signal it."\r\t\r\t| exception |\r\texception := ZnWebSocketClosed new.\r\tframe isEmpty \r\t\tifFalse: [\r\t\t\texception \r\t\t\t\tcode: frame closeCode;\r\t\t\t\treason: frame closeReason ].\r\texception signal.',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '221' ],		#self : OmReference [ '222' ],		#time : DateAndTime [ '2024-03-03T08:20:42.376-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocket,				#isMetaSide : false			},			#name : #stream,			#protocol : #accessing,			#sourceCode : 'stream\r\t^ stream',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '222' ],		#self : OmReference [ '223' ],		#time : DateAndTime [ '2024-03-03T08:20:42.376-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketChatroomHandler class',				#isMetaSide : true			},			#name : #clientHtml,			#protocol : #constants,			#sourceCode : 'clientHtml\r\t^ \'<!DOCTYPE html>\r<meta charset="utf-8" />\r<title>WebSocket Chatroom</title>\r\r<script language="javascript" type="text/javascript">\r\r  var wsUri = "ws://" + location.host + "/ws-chatroom";\r  var websocket;\r  var output, handleInput, messageInput, sendButton, closeButton;\r\r  function init() {\r    output = document.getElementById("output");\r    handleInput = document.getElementById("handleInput");\r    messageInput = document.getElementById("messageInput");\r    sendButton = document.getElementById("sendButton");\r    closeButton = document.getElementById("closeButton");\r    handleInput.value = "user-" + (new Date()).getMilliseconds();\r    messageInput.onkeyup = function (evt) { if (evt.keyCode == 13) sendChatMessage(evt) }\r    sendButton.onclick = function (evt) { sendChatMessage(evt) };\r    closeButton.onclick = function (evt) { closeChat(evt) };\r    testWebSocket();\r  }\r\r  function testWebSocket() {\r    writeToScreen(wsUri);\r    websocket = new WebSocket(wsUri);\r    websocket.onopen = function(evt) { onOpen(evt) };\r    websocket.onclose = function(evt) { onClose(evt) };\r    websocket.onmessage = function(evt) { onMessage(evt) };\r    websocket.onerror = function(evt) { onError(evt) };\r  }\r\r  function onOpen(evt) {\r    writeToScreen("CONNECTED");\r    doSend("Hi there !");\r  }\r\r  function onClose(evt) {\r    writeToScreen("DISCONNECTED");\r  }\r\r  function onMessage(evt) {\r    writeToScreen(evt.data);\r   }\r\r  function onError(evt) {\r    writeToScreen("<span style=\'\'color: red\'\'>ERROR:</span> " + evt.data);\r  }\r\r  function doSend(message) {\r     websocket.send(handleInput.value + ">>" + message);\r  }\r\r  function writeToScreen(message) {\r    var pre = document.createElement("p");\r    pre.style.wordWrap = "break-word";\r    pre.innerHTML = message;\r    output.appendChild(pre);\r  }\r\r  function sendChatMessage(evt) {\r    doSend(messageInput.value);\r    messageInput.value = "";\r  }\r\r  function closeChat(evt) {\r    doSend("Bye!");\r    websocket.close();\r  }\r\r  window.addEventListener("load", init, false);\r\r</script>\r\r<h2>WebSocket Chatroom</h2>\r<div>\rHandle: <input id="handleInput" type="text"/>\rMessage: <input id="messageInput" type="text" size="64"/> \r<input id="sendButton" type="submit" value="Send"/>\r<input id="closeButton" type="submit" value="Close"/>\r</div>\r<div id="output"></div>\r\r</html> \'\r',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '223' ],		#self : OmReference [ '224' ],		#time : DateAndTime [ '2024-03-03T08:20:42.376-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketChatroomHandler,				#isMetaSide : false			},			#name : #'distributeMessage:',			#protocol : #protocol,			#sourceCode : 'distributeMessage: message \r\t"Send message to all client WebSockets that we know."\r\t\r\tlock critical: [\r\t\twebSockets do: [ :each |\r\t\t\t[ each sendMessage: message ]\r\t\t\t\ton: NetworkError \r\t\t\t\tdo: [ :exception |\r\t\t\t\t\t"We can ignore this (instead of #unregister:-ing the offender), \r\t\t\t\t\tsince the listener process (see #value:) will do the right thing" \r\t\t\t\t\teach logGeneric: exception printString, \' in ditributeMessage, ignoring\' ] ] ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '224' ],		#self : OmReference [ '225' ],		#time : DateAndTime [ '2024-03-03T08:20:42.376-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketChatroomHandler,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\twebSockets := OrderedCollection new.\r\tlock := Mutex new',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '225' ],		#self : OmReference [ '226' ],		#time : DateAndTime [ '2024-03-03T08:20:42.376-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketChatroomHandler,				#isMetaSide : false			},			#name : #'register:',			#protocol : #protocol,			#sourceCode : 'register: clientWebSocket\r\tlock critical: [\r\t\twebSockets add: clientWebSocket ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '226' ],		#self : OmReference [ '227' ],		#time : DateAndTime [ '2024-03-03T08:20:42.377-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketChatroomHandler,				#isMetaSide : false			},			#name : #'unregister:',			#protocol : #protocol,			#sourceCode : 'unregister: clientWebSocket\r\tlock critical: [\r\t\twebSockets remove: clientWebSocket ifAbsent: [ ] ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '227' ],		#self : OmReference [ '228' ],		#time : DateAndTime [ '2024-03-03T08:20:42.377-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketChatroomHandler,				#isMetaSide : false			},			#name : #'value:',			#protocol : #accessing,			#sourceCode : 'value: webSocket\r\t"I implement a simple chat room service as a server:\r\tdistributing incoming messages to all known clients"\r\t\r\t[\r\t\tself register: webSocket.\r\t\twebSocket runWith: [ :message |\r\t\t\twebSocket logGeneric: \'Received message: \', message printString.\r\t\t\tself distributeMessage: message ] ] \r\t\ton: NetworkError \r\t\tdo: [\r\t\t\twebSocket logGeneric: \'Network error, cleaning up\'.\r\t\t\tself unregister: webSocket ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '228' ],		#self : OmReference [ '229' ],		#time : DateAndTime [ '2024-03-03T08:20:42.377-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketDelegate class',				#isMetaSide : true			},			#name : #demoHtml,			#protocol : #constants,			#sourceCode : 'demoHtml\r\t^ \'<?xml version="1.0" encoding="UTF-8"?>\r<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\r<html>\r<head>\r<title>Zinc WebSocket Demo</title>\r<style type="text/css">\rbody {\r  color: black;\r  background: white;\r  width: 900px;\r  font-family: Verdana, Arial, Helvetica, sans-serif;\r  font-size: 13px;\r}\rp {\r  width: 600px;\r  padding: 0 20px 10px 20px;\r} \rul,ol {\r  width: 600px;\r  padding: 0 5px 5px 30px;\r} \r#logo {\r  color: orange;\r  font-family: Helvetica, sans-serif;\r  font-weight: bold;\r  font-size: 100px;\r}\rli {\r  margin-bottom: 1em;\r}\r</style>\r</head>\r<body>\r<div id="logo">Zn</div>\r<h1>Zinc WebSocket Demo</h1>\r<ul>\r  <li><a href="ws-echo-client">Echo</a> - websocket hello world: client connects, sends one message, server does an echo, client receives and shows message and disconnects</li>\r  <li><a href="ws-echo-client-remote">Echo Remote</a> - websocket hello world against ws://echo.websocket.org (<a href="http://websocket.org">http://websocket.org</a>) for reference</li>\r  <li><a href="ws-status-client">Status</a> - server side pushes continuous updates to client web page</li>\r  <li><a href="ws-chatroom-client">Chatroom</a> - very simple chatroom: pick a handle and talk to all connected browsers</li>\r</ul>\r<h4>May the Source be with you!</h4>\r</body></html>\'',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '229' ],		#self : OmReference [ '230' ],		#time : DateAndTime [ '2024-03-03T08:20:42.377-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketDelegate class',				#isMetaSide : true			},			#name : #'handler:',			#protocol : #'instance creation',			#sourceCode : 'handler: handler\r\t"Create and return a new ZnWebSocketDelegate that maps / to handler"\r\r\t^ self new\r\t\thandler: handler;\r\t\tyourself',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '230' ],		#self : OmReference [ '231' ],		#time : DateAndTime [ '2024-03-03T08:20:42.377-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketDelegate class',				#isMetaSide : true			},			#name : #installExamplesInDefaultServer,			#protocol : #examples,			#sourceCode : 'installExamplesInDefaultServer\r\t"Install the WebSocket examples in ZnServer default, \r\tprovided it has a ZnDefaultServerDelegate"\r\t\r\tself installExamplesInServer: ZnServer default',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '231' ],		#self : OmReference [ '232' ],		#time : DateAndTime [ '2024-03-03T08:20:42.379-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketDelegate class',				#isMetaSide : true			},			#name : #'installExamplesInServer:',			#protocol : #examples,			#sourceCode : 'installExamplesInServer: znServer\r\t"Install the WebSocket examples in znServer, provided it has a ZnDefaultServerDelegate"\r\t\r\tznServer delegate\r\t     map: \'ws-demo\'\r\t\tto: [ :request | ZnResponse ok: (ZnEntity html: self demoHtml) ];\r\t\tmap: \'ws-echo-client-remote\' \r\t\tto: [ :request | ZnResponse ok: (ZnEntity html: ZnWebSocketEchoHandler clientHtmlRemote) ];\r\t\tmap: \'ws-echo-client\' \r\t\tto: [ :request | ZnResponse ok: (ZnEntity html: ZnWebSocketEchoHandler clientHtml) ];\r\t\tmap: \'ws-echo\'\r\t\tto: (self map: \'ws-echo\' to: ZnWebSocketEchoHandler new);\r\t\tmap: \'ws-chatroom-client\' \r\t\tto: [ :request | ZnResponse ok: (ZnEntity html: ZnWebSocketChatroomHandler clientHtml) ];\r\t\tmap: \'ws-chatroom\'\r\t\tto: (self map: \'ws-chatroom\' to: ZnWebSocketChatroomHandler new);\r\t\tmap: \'ws-status-client\' \r\t\tto: [ :request | ZnResponse ok: (ZnEntity html: ZnWebSocketStatusHandler clientHtml) ];\r\t\tmap: \'ws-status\'\r\t\tto: (self map: \'ws-status\' to: ZnWebSocketStatusHandler new)',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '232' ],		#self : OmReference [ '233' ],		#time : DateAndTime [ '2024-03-03T08:20:42.379-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketDelegate class',				#isMetaSide : true			},			#name : #'map:to:',			#protocol : #'instance creation',			#sourceCode : 'map: prefix to: handler\r\t"Create and return a new ZnWebSocketDelegate that maps prefix string to handler"\r\r\t^ self new\r\t\tprefixFromString: prefix;\r\t\thandler: handler;\r\t\tyourself',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '233' ],		#self : OmReference [ '234' ],		#time : DateAndTime [ '2024-03-03T08:20:42.379-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketDelegate,				#isMetaSide : false			},			#name : #continuation,			#protocol : #protocol,			#sourceCode : 'continuation\r\t"Return a block that defines what happens after a successful connection upgrade.\r\tWe will receive a ready-to-use instanciated WebSocket.\r\tWe delegate processing to our handler."\r\r\t^ [ :webSocket | self handler value: webSocket ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '234' ],		#self : OmReference [ '235' ],		#time : DateAndTime [ '2024-03-03T08:20:42.379-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketDelegate,				#isMetaSide : false			},			#name : #'handleRequest:',			#protocol : #public,			#sourceCode : 'handleRequest: request\r\t"Server delegate entry point"\r\t\r\t(prefix isNil or: [ prefix = request uri pathSegments ])\r\t\tifFalse: [ ^ ZnResponse notFound: request uri ].\r\t^ (self isValidWebSocketRequest: request)\r\t\t\tifTrue: [ self webSocketResponseForRequest: request ]\r\t\t\tifFalse: [ ZnResponse badRequest: request ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '235' ],		#self : OmReference [ '236' ],		#time : DateAndTime [ '2024-03-03T08:20:42.379-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketDelegate,				#isMetaSide : false			},			#name : #handler,			#protocol : #accessing,			#sourceCode : 'handler\r\t"Return the block that will deal with the server side WebSocket,\r\tonce a new WebSocket connection is accepted.\r\tThe block will be evaluated with an instanciated ZnWebSocket instance as argument."\r\r\t^ handler',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '236' ],		#self : OmReference [ '237' ],		#time : DateAndTime [ '2024-03-03T08:20:42.379-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketDelegate,				#isMetaSide : false			},			#name : #'handler:',			#protocol : #initialize-release,			#sourceCode : 'handler: block\r\t"Set the block that will deal with the server side WebSocket"\r\t\r\thandler := block',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '237' ],		#self : OmReference [ '238' ],		#time : DateAndTime [ '2024-03-03T08:20:42.38-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketDelegate,				#isMetaSide : false			},			#name : #'isValidWebSocketRequest:',			#protocol : #protocol,			#sourceCode : 'isValidWebSocketRequest: request\r\t"Return true when request can be considered a valid WebSocket setup request"\r\t\r\t^ request method = #GET\r\t\t\tand: [ (request headers at: \'Upgrade\' ifAbsent: [ ^ false ]) asLowercase = \'websocket\' \r\t\t\t\tand: [ (ZnWebSocketUtils containsConnectionUpgrade: request headers) \r\t\t\t\t\tand: [ (request headers at: \'Sec-WebSocket-Version\' ifAbsent: [ ^ false ]) = \'13\'\r\t\t\t\t\t\tand: [ request headers includesKey: \'Sec-WebSocket-Key\' ] ] ] ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '238' ],		#self : OmReference [ '239' ],		#time : DateAndTime [ '2024-03-03T08:20:42.38-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketDelegate,				#isMetaSide : false			},			#name : #prefix,			#protocol : #accessing,			#sourceCode : 'prefix\r\t"Return my prefix, the path elements under which I should handle a request"\r\t\r\t^ prefix',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '239' ],		#self : OmReference [ '240' ],		#time : DateAndTime [ '2024-03-03T08:20:42.38-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketDelegate,				#isMetaSide : false			},			#name : #'prefix:',			#protocol : #private,			#sourceCode : 'prefix: orderedCollection\r\t"Set my prefix to orderedCollection, interpreted as path elements.\r\tI will only handle requests that match."\r\t\r\torderedCollection isEmpty\r\t\tifFalse: [ prefix := orderedCollection ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '240' ],		#self : OmReference [ '241' ],		#time : DateAndTime [ '2024-03-03T08:20:42.38-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketDelegate,				#isMetaSide : false			},			#name : #'prefixFromString:',			#protocol : #initialize-release,			#sourceCode : 'prefixFromString: string\r\t"Set the path prefix under which I should be handling request to string,\r\tinterpreting each /-separated token as a path element"\r\r\tself prefix: (string findTokens: \'/\')',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '241' ],		#self : OmReference [ '242' ],		#time : DateAndTime [ '2024-03-03T08:20:42.38-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketDelegate,				#isMetaSide : false			},			#name : #'responseHeadersForKey:',			#protocol : #private,			#sourceCode : 'responseHeadersForKey: key\r\t"Return the headers for a WebSocket setup response, given key"\r\t\r\t^ ZnHeaders defaultResponseHeaders\r\t\t\tat: \'Upgrade\' put: \'websocket\';\r\t\t\tat: \'Connection\' put: \'Upgrade\';\r\t\t\tat: \'Sec-WebSocket-Accept\' put: key;\r\t\t\tyourself',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '242' ],		#self : OmReference [ '243' ],		#time : DateAndTime [ '2024-03-03T08:20:42.38-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketDelegate,				#isMetaSide : false			},			#name : #'value:',			#protocol : #public,			#sourceCode : 'value: request\r\t"I implement the generic #value: message as equivalent to #handleRequest:"\r\t\r\t^ self handleRequest: request',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '243' ],		#self : OmReference [ '244' ],		#time : DateAndTime [ '2024-03-03T08:20:42.38-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketDelegate,				#isMetaSide : false			},			#name : #'webSocketResponseForRequest:',			#protocol : #protocol,			#sourceCode : 'webSocketResponseForRequest: request\r\t"Given a valid WebSocket setup request, return the matching server response"\r\t\r\t| acceptKey |\r\tacceptKey := ZnWebSocketUtils handshake: (request headers at: \'Sec-WebSocket-Key\').\r\t^ ZnWebSocketResponse new\r\t\tstatusLine: (ZnStatusLine code: 101);\r\t\theaders: (self responseHeadersForKey: acceptKey);\r\t\tcontinuation: self continuation;\r\t\tyourself\r\t\t',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '244' ],		#self : OmReference [ '245' ],		#time : DateAndTime [ '2024-03-03T08:20:42.38-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketEchoHandler class',				#isMetaSide : true			},			#name : #clientHtml,			#protocol : #constants,			#sourceCode : 'clientHtml\r\t^ \'<!DOCTYPE html>\r<meta charset="utf-8" />\r<title>WebSocket Test</title>\r\r<script language="javascript" type="text/javascript">\r\r  var wsUri = "ws://" + location.host + "/ws-echo";\r  var output;\r\r  function init() {\r    output = document.getElementById("output");\r    testWebSocket();\r  }\r\r  function testWebSocket() {\r    writeToScreen(wsUri);\r    websocket = new WebSocket(wsUri);\r    websocket.onopen = function(evt) { onOpen(evt) };\r    websocket.onclose = function(evt) { onClose(evt) };\r    websocket.onmessage = function(evt) { onMessage(evt) };\r    websocket.onerror = function(evt) { onError(evt) };\r  }\r\r  function onOpen(evt) {\r    writeToScreen("CONNECTED");\r    doSend("WebSocket rocks");\r  }\r\r  function onClose(evt) {\r    writeToScreen("DISCONNECTED");\r  }\r\r  function onMessage(evt) {\r    writeToScreen("<span style=\'\'color: blue;\'\'>RESPONSE: " + evt.data+"</span>");\r    websocket.close();\r  }\r\r  function onError(evt) {\r    writeToScreen("<span style=\'\'color: red\'\'>ERROR:</span> " + evt.data);\r  }\r\r  function doSend(message) {\r    writeToScreen("SENT: " + message); \r    websocket.send(message);\r  }\r\r  function writeToScreen(message) {\r    var pre = document.createElement("p");\r    pre.style.wordWrap = "break-word";\r    pre.innerHTML = message;\r    output.appendChild(pre);\r  }\r\r  window.addEventListener("load", init, false);\r\r</script>\r\r<h2>WebSocket Test</h2>\r<div id="output"></div>\r\r</html> \'',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '245' ],		#self : OmReference [ '246' ],		#time : DateAndTime [ '2024-03-03T08:20:42.381-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketEchoHandler class',				#isMetaSide : true			},			#name : #clientHtmlRemote,			#protocol : #constants,			#sourceCode : 'clientHtmlRemote\r\t^ \'<!DOCTYPE html>\r<meta charset="utf-8" />\r<title>WebSocket Test</title>\r\r<script language="javascript" type="text/javascript">\r\r  var wsUri = "ws://echo.websocket.org";\r  var output;\r\r  function init() {\r    output = document.getElementById("output");\r    testWebSocket();\r  }\r\r  function testWebSocket() {\r    writeToScreen(wsUri);\r    websocket = new WebSocket(wsUri);\r    websocket.onopen = function(evt) { onOpen(evt) };\r    websocket.onclose = function(evt) { onClose(evt) };\r    websocket.onmessage = function(evt) { onMessage(evt) };\r    websocket.onerror = function(evt) { onError(evt) };\r  }\r\r  function onOpen(evt) {\r    writeToScreen("CONNECTED");\r    doSend("WebSocket rocks");\r  }\r\r  function onClose(evt) {\r    writeToScreen("DISCONNECTED");\r  }\r\r  function onMessage(evt) {\r    writeToScreen("<span style=\'\'color: blue;\'\'>RESPONSE: " + evt.data+"</span>");\r    websocket.close();\r  }\r\r  function onError(evt) {\r    writeToScreen("<span style=\'\'color: red\'\'>ERROR:</span> " + evt.data);\r  }\r\r  function doSend(message) {\r    writeToScreen("SENT: " + message); \r    websocket.send(message);\r  }\r\r  function writeToScreen(message) {\r    var pre = document.createElement("p");\r    pre.style.wordWrap = "break-word";\r    pre.innerHTML = message;\r    output.appendChild(pre);\r  }\r\r  window.addEventListener("load", init, false);\r\r</script>\r\r<h2>WebSocket Test</h2>\r<div id="output"></div>\r\r</html> \'',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '246' ],		#self : OmReference [ '247' ],		#time : DateAndTime [ '2024-03-03T08:20:42.381-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketEchoHandler,				#isMetaSide : false			},			#name : #'value:',			#protocol : #accessing,			#sourceCode : 'value: webSocket\r\t"I implement an echo service conversation as a server:\r\treading messages and echoing them back until ConnectionClosed"\r\t\r\t[ \r\t\twebSocket runWith: [ :message |\r\t\t\twebSocket logGeneric: \'Received message: \', message printString, \', echoing\'.\r\t\t\twebSocket sendMessage: message ] ] \r\t\ton: ConnectionClosed \r\t\tdo: [ webSocket logGeneric: \'Ignoring connection close, done\' ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '247' ],		#self : OmReference [ '248' ],		#time : DateAndTime [ '2024-03-03T08:20:42.381-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketFrame class',				#isMetaSide : true			},			#name : #'bytes:',			#protocol : #'instance creation',			#sourceCode : 'bytes: byteArray\r\t^ self new\r\t\topcode: 2;\r\t\tfinal: true;\r\t\tbody: byteArray;\r\t\tyourself',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '248' ],		#self : OmReference [ '249' ],		#time : DateAndTime [ '2024-03-03T08:20:42.381-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketFrame class',				#isMetaSide : true			},			#name : #close,			#protocol : #'instance creation',			#sourceCode : 'close\r\t^ self new\r\t\topcode: 8;\r\t\tfinal: true;\r\t\tyourself',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '249' ],		#self : OmReference [ '250' ],		#time : DateAndTime [ '2024-03-03T08:20:42.381-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketFrame class',				#isMetaSide : true			},			#name : #'ping:',			#protocol : #'instance creation',			#sourceCode : 'ping: bytes\r\t^ self new\r\t\topcode: 9;\r\t\tfinal: true;\r\t\tbody: bytes;\r\t\tyourself',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '250' ],		#self : OmReference [ '251' ],		#time : DateAndTime [ '2024-03-03T08:20:42.381-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketFrame class',				#isMetaSide : true			},			#name : #'pong:',			#protocol : #'instance creation',			#sourceCode : 'pong: bytes\r\t^ self new\r\t\topcode: 10;\r\t\tfinal: true;\r\t\tbody: bytes;\r\t\tyourself',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '251' ],		#self : OmReference [ '252' ],		#time : DateAndTime [ '2024-03-03T08:20:42.381-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketFrame class',				#isMetaSide : true			},			#name : #'readFrom:',			#protocol : #'instance creation',			#sourceCode : 'readFrom: stream\r\t^ self new\r\t\treadFrom: stream;\r\t\tyourself',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '252' ],		#self : OmReference [ '253' ],		#time : DateAndTime [ '2024-03-03T08:20:42.381-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketFrame class',				#isMetaSide : true			},			#name : #'text:',			#protocol : #'instance creation',			#sourceCode : 'text: string\r\t^ self new\r\t\topcode: 1;\r\t\tfinal: true;\r\t\ttext: string;\r\t\tyourself',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '253' ],		#self : OmReference [ '254' ],		#time : DateAndTime [ '2024-03-03T08:20:42.382-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #body,			#protocol : #accessing,			#sourceCode : 'body\r\t^ body',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '254' ],		#self : OmReference [ '255' ],		#time : DateAndTime [ '2024-03-03T08:20:42.382-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #'body:',			#protocol : #accessing,			#sourceCode : 'body: anObject\r\tbody := anObject',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '255' ],		#self : OmReference [ '256' ],		#time : DateAndTime [ '2024-03-03T08:20:42.382-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #closeCode,			#protocol : #accessing,			#sourceCode : 'closeCode\r\tself assert: self isClose.\r\tself assert: self isEmpty not.\r\t^ (body readStream next: 2) asInteger\r\t',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '256' ],		#self : OmReference [ '257' ],		#time : DateAndTime [ '2024-03-03T08:20:42.382-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #closeReason,			#protocol : #accessing,			#sourceCode : 'closeReason\r\tself assert: self isClose.\r\tself assert: self isEmpty not.\r\t^ ZnUTF8Encoder new decodeBytes: (body allButFirst: 2)\r\t',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '257' ],		#self : OmReference [ '258' ],		#time : DateAndTime [ '2024-03-03T08:20:42.382-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #contents,			#protocol : #accessing,			#sourceCode : 'contents\r\tself assert: self isControl not.\r\t^ self isText\r\t\tifTrue: [ self text ]\r\t\tifFalse: [ body ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '258' ],		#self : OmReference [ '259' ],		#time : DateAndTime [ '2024-03-03T08:20:42.382-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #final,			#protocol : #accessing,			#sourceCode : 'final\r\t^ final',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '259' ],		#self : OmReference [ '260' ],		#time : DateAndTime [ '2024-03-03T08:20:42.382-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #'final:',			#protocol : #accessing,			#sourceCode : 'final: anObject\r\tfinal := anObject',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '260' ],		#self : OmReference [ '261' ],		#time : DateAndTime [ '2024-03-03T08:20:42.382-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tsuper initialize.\r\tfinal := true',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '261' ],		#self : OmReference [ '262' ],		#time : DateAndTime [ '2024-03-03T08:20:42.382-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #isBinary,			#protocol : #testing,			#sourceCode : 'isBinary\r\t^ opcode = 2',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '262' ],		#self : OmReference [ '263' ],		#time : DateAndTime [ '2024-03-03T08:20:42.382-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #isClose,			#protocol : #testing,			#sourceCode : 'isClose\r\t^ opcode = 8',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '263' ],		#self : OmReference [ '264' ],		#time : DateAndTime [ '2024-03-03T08:20:42.382-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #isContinuation,			#protocol : #testing,			#sourceCode : 'isContinuation\r\t^ opcode = 0',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '264' ],		#self : OmReference [ '265' ],		#time : DateAndTime [ '2024-03-03T08:20:42.383-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #isControl,			#protocol : #testing,			#sourceCode : 'isControl\r\t^ opcode > 7',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '265' ],		#self : OmReference [ '266' ],		#time : DateAndTime [ '2024-03-03T08:20:42.383-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #testing,			#sourceCode : 'isEmpty\r\t^ self size = 0',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '266' ],		#self : OmReference [ '267' ],		#time : DateAndTime [ '2024-03-03T08:20:42.383-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #isFinal,			#protocol : #testing,			#sourceCode : 'isFinal\r\t^ final',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '267' ],		#self : OmReference [ '268' ],		#time : DateAndTime [ '2024-03-03T08:20:42.383-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #isMasked,			#protocol : #testing,			#sourceCode : 'isMasked\r\t^ masked',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '268' ],		#self : OmReference [ '269' ],		#time : DateAndTime [ '2024-03-03T08:20:42.383-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #isPing,			#protocol : #testing,			#sourceCode : 'isPing\r\t^ opcode = 9',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '269' ],		#self : OmReference [ '270' ],		#time : DateAndTime [ '2024-03-03T08:20:42.383-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #isPong,			#protocol : #testing,			#sourceCode : 'isPong\r\t^ opcode = 10',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '270' ],		#self : OmReference [ '271' ],		#time : DateAndTime [ '2024-03-03T08:20:42.383-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #isText,			#protocol : #testing,			#sourceCode : 'isText\r\t^ opcode = 1',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '271' ],		#self : OmReference [ '272' ],		#time : DateAndTime [ '2024-03-03T08:20:42.383-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #masked,			#protocol : #accessing,			#sourceCode : 'masked\r\t^ masked',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '272' ],		#self : OmReference [ '273' ],		#time : DateAndTime [ '2024-03-03T08:20:42.384-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #'masked:',			#protocol : #accessing,			#sourceCode : 'masked: anObject\r\tmasked := anObject',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '273' ],		#self : OmReference [ '274' ],		#time : DateAndTime [ '2024-03-03T08:20:42.384-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #opcode,			#protocol : #accessing,			#sourceCode : 'opcode\r\t^ opcode',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '274' ],		#self : OmReference [ '275' ],		#time : DateAndTime [ '2024-03-03T08:20:42.384-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #'opcode:',			#protocol : #accessing,			#sourceCode : 'opcode: anObject\r\topcode := anObject',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '275' ],		#self : OmReference [ '276' ],		#time : DateAndTime [ '2024-03-03T08:20:42.384-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #opcodeName,			#protocol : #accessing,			#sourceCode : 'opcodeName\r\t| name |\r\tself assert: (opcode between: 0 and: 15).\r\tname := #(continuation text binary nil nil nil nil nil close ping pong nil nil nil nil nil) at: opcode + 1.\r\t^ name ifNil: [ opcode asString ] ifNotNil: [ name ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '276' ],		#self : OmReference [ '277' ],		#time : DateAndTime [ '2024-03-03T08:20:42.384-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: stream\r\tsuper printOn: stream.\r\tstream \r\t\tnextPut: $(; \r\t\tprint: self opcodeName;\r\t\tspace;\r\t\tprint: self size; nextPut: $B; \r\t\tspace;\r\t\tnextPutAll: (final ifTrue: [ \'final\' ] ifFalse: [ \'non-final\' ]);\r\t\tnextPut: $)',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '277' ],		#self : OmReference [ '278' ],		#time : DateAndTime [ '2024-03-03T08:20:42.384-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #'readBodyOfSize:from:',			#protocol : #private,			#sourceCode : 'readBodyOfSize: size from: stream\r\t| mask |\r\tmasked \r\t\tifTrue: [ \r\t\t\tmask := stream next: 4.\r\t\t\tbody := ByteArray new: size streamContents: [ :out |\r\t\t\t\t1 to: size do: [ :index |\r\t\t\t\t\tout nextPut: (stream next bitXor: (mask at: ((index - 1) \\\\ 4) + 1)) ] ] ]\r\t\tifFalse: [\r\t\t\tbody := stream next: size ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '278' ],		#self : OmReference [ '279' ],		#time : DateAndTime [ '2024-03-03T08:20:42.384-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #'readFrom:',			#protocol : #reading,			#sourceCode : 'readFrom: stream\r\t| byte size mask |\r\t(byte := stream next) ifNil: [ ConnectionClosed signal ].\r\tfinal := (byte bitAt: 8) = 1.\r\topcode := byte bitAnd: 127.\r\t(byte := stream next) ifNil: [ ConnectionClosed signal ].\r\tmasked := (byte bitAt: 8) = 1.\r\tsize := byte bitAnd: 127.\r\tsize < 126\r\t\tifFalse: [\r\t\t\tsize = 126\r\t\t\t\tifTrue: [ size := (stream next: 2) asInteger ]\r\t\t\t\tifFalse: [ size := (stream next: 8) asInteger ].\r\t\t\tsize = 0 ifTrue: [ ConnectionClosed signal ] ].\r\tself readBodyOfSize: size from: stream',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '279' ],		#self : OmReference [ '280' ],		#time : DateAndTime [ '2024-03-03T08:20:42.384-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #size,			#protocol : #accessing,			#sourceCode : 'size\r\t"Return the body size in bytes"\r\t\r\t^ body \r\t\tifNil: [ 0 ] \r\t\tifNotNil: [ body size ].',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '280' ],		#self : OmReference [ '281' ],		#time : DateAndTime [ '2024-03-03T08:20:42.385-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #text,			#protocol : #accessing,			#sourceCode : 'text\r\t^ ZnUTF8Encoder new decodeBytes: body',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '281' ],		#self : OmReference [ '282' ],		#time : DateAndTime [ '2024-03-03T08:20:42.385-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #'text:',			#protocol : #accessing,			#sourceCode : 'text: string\r\tself body: (ZnUTF8Encoder new encodeString: string)\r',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '282' ],		#self : OmReference [ '283' ],		#time : DateAndTime [ '2024-03-03T08:20:42.385-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #'writeBodyOfSize:on:',			#protocol : #private,			#sourceCode : 'writeBodyOfSize: size on: stream\r\t| mask |\r\tmasked\r\t\tifTrue: [\r\t\t\tmask := ZnWebSocketUtils newMask.\r\t\t\tstream nextPutAll: mask ].\r\tsize = 0 ifTrue: [ ^ self ].\r\tmasked \r\t\tifTrue: [\r\t\t\tbody doWithIndex: [ :each :index |\r\t\t\t\tstream nextPut: (each bitXor: (mask at: ((index - 1) \\\\ 4) + 1)) ] ] \r\t\tifFalse: [ self writeRawBodyOn: stream ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '283' ],		#self : OmReference [ '284' ],		#time : DateAndTime [ '2024-03-03T08:20:42.385-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #'writeOn:',			#protocol : #writing,			#sourceCode : 'writeOn: stream\r\t| byte size |\r\tbyte := (final ifTrue: [ 128 ] ifFalse: [ 0 ]) + opcode.\r\tstream nextPut: byte.\r\tbyte := (masked ifTrue: [ 128 ] ifFalse: [ 0 ]).\r\t(size := self size) < 126\r\t\tifTrue: [ stream nextPut: (byte + size) ]\r\t\tifFalse: [\r\t\t\tsize < 65536\r\t\t\t\tifTrue: [ stream nextPut: (byte + 126); nextPutAll: (size asByteArrayOfSize: 2) ]\r\t\t\t\tifFalse: [\r\t\t\t\t\tself assert: size < (2 raisedTo: 31).\r\t\t\t\t\tstream nextPut: (byte + 127); nextPutAll: (size asByteArrayOfSize: 8) ] ].\r\tself writeBodyOfSize: size on: stream ',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '284' ],		#self : OmReference [ '285' ],		#time : DateAndTime [ '2024-03-03T08:20:42.385-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketFrame,				#isMetaSide : false			},			#name : #'writeRawBodyOn:',			#protocol : #private,			#sourceCode : 'writeRawBodyOn: stream\r\tself isEmpty\r\t\tifFalse: [ stream nextPutAll: body ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '285' ],		#self : OmReference [ '286' ],		#time : DateAndTime [ '2024-03-03T08:20:42.385-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketStatusHandler class',				#isMetaSide : true			},			#name : #clientHtml,			#protocol : #constants,			#sourceCode : 'clientHtml\r\t^ \'<!DOCTYPE html>\r<meta charset="utf-8" />\r<title>WebSocket Smalltalk Image Status Stream</title>\r\r<script language="javascript" type="text/javascript">\r\r  var wsUri = "ws://" + location.host + "/ws-status";\r  var output, statusElement;\r\r  function init() {\r    output = document.getElementById("output");\r    statusElement = document.getElementById("status");\r    testWebSocket();\r  }\r\r  function testWebSocket() {\r    writeToScreen(wsUri);\r    websocket = new WebSocket(wsUri);\r    websocket.onopen = function(evt) { onOpen(evt) };\r    websocket.onclose = function(evt) { onClose(evt) };\r    websocket.onmessage = function(evt) { onMessage(evt) };\r    websocket.onerror = function(evt) { onError(evt) };\r  }\r\r  function onOpen(evt) {\r    writeToScreen("CONNECTED");\r    setStatus("Waiting for status data...");\r   }\r\r  function onClose(evt) {\r    writeToScreen("DISCONNECTED");\r  }\r\r  function onMessage(evt) {\r    setStatus(evt.data);\r  }\r\r  function onError(evt) {\r    writeToScreen("<span style=\'\'color: red\'\'>ERROR:</span> " + evt.data);\r  }\r\r  function writeToScreen(message) {\r    var pre = document.createElement("p");\r    pre.style.wordWrap = "break-word";\r    pre.innerHTML = message;\r    output.appendChild(pre);\r  }\r\r  function setStatus(text) {\r    statusElement.innerHTML = text;\r  }\r\r  window.addEventListener("load", init, false);\r\r</script>\r\r<h2>WebSocket Smalltalk Image Status Stream</h2>\r<div><pre id="status"></pre></div>\r<h3>Log</h3>\r<div id="output"></div>\r\r</html> \'',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '286' ],		#self : OmReference [ '287' ],		#time : DateAndTime [ '2024-03-03T08:20:42.385-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketStatusHandler,				#isMetaSide : false			},			#name : #processes,			#protocol : #accessing,			#sourceCode : 'processes\r\t| allProcesses |\r\tallProcesses := (Process allSubInstances\r\t\treject: [ :each | each isTerminated or: [ each = Processor activeProcess ] ])\r\t\t\tsorted: [ :a :b | a priority >= b priority ].\r\t^ String streamContents: [ :out |\r\t\tallProcesses doWithIndex: [ :each :index |\r\t\t\tout \r\t\t\t\tprint: index; nextPut: $.; space; \r\t\t\t\tnextPutAll: each name; space;\r\t\t\t\tnextPut: $[; print: each priority; nextPut: $]; space;\r\t\t\t\tprint: each; cr ] ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '287' ],		#self : OmReference [ '288' ],		#time : DateAndTime [ '2024-03-03T08:20:42.386-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketStatusHandler,				#isMetaSide : false			},			#name : #status,			#protocol : #accessing,			#sourceCode : 'status\r\t^ String cr join: { \r\t\tDateAndTime now printString. \r\t\tself systemVersionInfo. \r\t\tself vmStats. \r\t\tself processes }\r',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '288' ],		#self : OmReference [ '289' ],		#time : DateAndTime [ '2024-03-03T08:20:42.386-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketStatusHandler,				#isMetaSide : false			},			#name : #systemVersionInfo,			#protocol : #accessing,			#sourceCode : 'systemVersionInfo\r\t^ String streamContents: [ :stream |\r\t\t\tstream \r\t\t\t\tprint: SystemVersion current; \r\t\t\t\tnextPutAll: \' - \'; \r\t\t\t\tnextPutAll: ZnConstants defaultServerString ]',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '289' ],		#self : OmReference [ '290' ],		#time : DateAndTime [ '2024-03-03T08:20:42.386-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketStatusHandler,				#isMetaSide : false			},			#name : #'value:',			#protocol : #accessing,			#sourceCode : 'value: webSocket\r\t"I stream status messages to a WebSocket client, once every second \r\tuntil ConnectionClosed or no longer isConnected"\r\t\r\t[ \r\t\twebSocket logGeneric: \'Started status streaming\'.\r\t\t[ \r\t\t\twebSocket sendMessage: self status.\r\t\t\t1 second asDelay wait.\r\t\t\twebSocket isConnected ] whileTrue ] \r\t\ton: NetworkError  \r\t\tdo: [ webSocket logGeneric: \'Ignoring network error\' ].\r\twebSocket logGeneric: \'Stopping status streaming\' ',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '290' ],		#self : OmReference [ '291' ],		#time : DateAndTime [ '2024-03-03T08:20:42.386-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnWebSocketStatusHandler,				#isMetaSide : false			},			#name : #vmStats,			#protocol : #accessing,			#sourceCode : 'vmStats\r\t^ SmalltalkImage current vm statisticsReport',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '291' ],		#self : OmReference [ '292' ],		#time : DateAndTime [ '2024-03-03T08:20:42.386-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketUtils class',				#isMetaSide : true			},			#name : #'containsConnectionUpgrade:',			#protocol : #accessing,			#sourceCode : 'containsConnectionUpgrade: headers\r\t^ (((headers at: \'Connection\' ifAbsent: [ ^ false ]) \r\t\t\tfindTokens: \',\') \r\t\t\t\tcollect: [ :each | each trimBoth asLowercase ]) \r\t\t\t\t\tincludes: \'upgrade\'',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '292' ],		#self : OmReference [ '293' ],		#time : DateAndTime [ '2024-03-03T08:20:42.386-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketUtils class',				#isMetaSide : true			},			#name : #'handshake:',			#protocol : #protocol,			#sourceCode : 'handshake: clientKey\r\t"Perform the WebSocket key handshake"\r\t\r\t"self handshake: \'dGhlIHNhbXBsZSBub25jZQ==\'"\r\t\r\t| string hash |\r\tstring := clientKey, self serverGUID.\r\thash := SHA1 hashMessage: string.\r\t^ ZnUtils encodeBase64: hash',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '293' ],		#self : OmReference [ '294' ],		#time : DateAndTime [ '2024-03-03T08:20:42.386-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketUtils class',				#isMetaSide : true			},			#name : #newClientKey,			#protocol : #protocol,			#sourceCode : 'newClientKey\r\t"Generate a new WebSocket client key"\r\t\r\t| rawKey |\r\trawKey := self randomByteArrayOfSize: 16.\r\t^ ZnUtils encodeBase64: rawKey',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '294' ],		#self : OmReference [ '295' ],		#time : DateAndTime [ '2024-03-03T08:20:42.386-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketUtils class',				#isMetaSide : true			},			#name : #newMask,			#protocol : #accessing,			#sourceCode : 'newMask\r\t^ self randomByteArrayOfSize: 4',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '295' ],		#self : OmReference [ '296' ],		#time : DateAndTime [ '2024-03-03T08:20:42.386-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketUtils class',				#isMetaSide : true			},			#name : #newPingPayload,			#protocol : #accessing,			#sourceCode : 'newPingPayload\r\t^ self randomByteArrayOfSize: 4',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '296' ],		#self : OmReference [ '297' ],		#time : DateAndTime [ '2024-03-03T08:20:42.387-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketUtils class',				#isMetaSide : true			},			#name : #'randomByteArrayOfSize:',			#protocol : #accessing,			#sourceCode : 'randomByteArrayOfSize: size\r\t^ ByteArray new: size streamContents: [ :stream |\r\t\tsize timesRepeat: [ \r\t\t\tstream nextPut: 256 atRandom - 1 ] ].\r',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '297' ],		#self : OmReference [ '298' ],		#time : DateAndTime [ '2024-03-03T08:20:42.387-05:00' ],		#trigger : OmReference [ '141' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnWebSocketUtils class',				#isMetaSide : true			},			#name : #serverGUID,			#protocol : #constants,			#sourceCode : 'serverGUID\r\t"This is the special WebSocket server GUID"\r\t\r\t^ \'258EAFA5-E914-47DA-95CA-C5AB0DC85B11\'',			#stamp : '',			#package : #Zinc-WebSocket-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:42.566-05:00' ],		#prior : OmReference [ '298' ],		#self : OmReference [ '299' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-Base-Transpiler-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '299' ],		#self : OmReference [ '300' ],		#time : DateAndTime [ '2024-03-03T08:20:42.618-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Transpiler-Kernel,		#affectedPackageName : #PharoJs-Base-Transpiler	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '300' ],		#self : OmReference [ '301' ],		#time : DateAndTime [ '2024-03-03T08:20:42.621-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTClosedBlockClosure\r\tinstanceVariableNames: \'originalBlock externalVariablesDict\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTClosedBlockClosure,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTClosedBlockClosure classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTClosedBlockClosure classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTClosedBlockClosure,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '301' ],		#self : OmReference [ '302' ],		#time : DateAndTime [ '2024-03-03T08:20:42.629-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTClosedBlockClosure\r\tinstanceVariableNames: \'originalBlock externalVariablesDict\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTClosedBlockClosure,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTClosedBlockClosure classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTClosedBlockClosure classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTClosedBlockClosure,					#isMetaSide : false				},				#parent : @8,				#content : 'Trait for closed block closure handling',				#stamp : ''			},			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler		},		#oldComment : '',		#newComment : 'Trait for closed block closure handling',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '302' ],		#self : OmReference [ '303' ],		#time : DateAndTime [ '2024-03-03T08:20:42.638-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Transpiler-Globals,		#affectedPackageName : #PharoJs-Base-Transpiler	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '303' ],		#self : OmReference [ '304' ],		#time : DateAndTime [ '2024-03-03T08:20:42.64-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTJavascriptGlobalsInitializer\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Globals\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTJavascriptGlobalsInitializer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTJavascriptGlobalsInitializer classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTJavascriptGlobalsInitializer classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTJavascriptGlobalsInitializer,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-Base-Transpiler-Globals,			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '304' ],		#self : OmReference [ '305' ],		#time : DateAndTime [ '2024-03-03T08:20:42.641-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTJavascriptGlobalsInitializer\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Globals\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTJavascriptGlobalsInitializer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTJavascriptGlobalsInitializer classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTJavascriptGlobalsInitializer classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTJavascriptGlobalsInitializer,					#isMetaSide : false				},				#parent : @8,				#content : 'I am dedicated to shared dictionaries with JS globals that are defined outside PharoJS  i.e. subclasses of PjJavascriptGlobals of PharoJS users. I provide them with the class side initialize method to ensure the JS globals are initialized to JS proxies in Pharo.',				#stamp : ''			},			#category : #PharoJs-Base-Transpiler-Globals,			#package : #PharoJs-Base-Transpiler		},		#oldComment : '',		#newComment : 'I am dedicated to shared dictionaries with JS globals that are defined outside PharoJS  i.e. subclasses of PjJavascriptGlobals of PharoJS users. I provide them with the class side initialize method to ensure the JS globals are initialized to JS proxies in Pharo.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '305' ],		#self : OmReference [ '306' ],		#time : DateAndTime [ '2024-03-03T08:20:42.648-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTStreamWriter\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTStreamWriter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTStreamWriter classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTStreamWriter classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTStreamWriter,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '306' ],		#self : OmReference [ '307' ],		#time : DateAndTime [ '2024-03-03T08:20:42.65-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTStreamWriter\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTStreamWriter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTStreamWriter classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTStreamWriter classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTStreamWriter,					#isMetaSide : false				},				#parent : @8,				#content : 'I provide implementations for common and low-level stream writing methods for PjStringGenerator, PjSelectorGenerator, and PjTranspiler',				#stamp : ''			},			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler		},		#oldComment : '',		#newComment : 'I provide implementations for common and low-level stream writing methods for PjStringGenerator, PjSelectorGenerator, and PjTranspiler',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '307' ],		#self : OmReference [ '308' ],		#time : DateAndTime [ '2024-03-03T08:20:42.663-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Transpiler-Manifest,		#affectedPackageName : #PharoJs-Base-Transpiler	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '308' ],		#self : OmReference [ '309' ],		#time : DateAndTime [ '2024-03-03T08:20:42.665-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PackageManifest subclass: #ManifestPharoJsBaseTranspiler\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Manifest\'',				#superclassName : 'PackageManifest',				#traitCompositionSource : '{}'			},			#name : #ManifestPharoJsBaseTranspiler,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ManifestPharoJsBaseTranspiler class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ManifestPharoJsBaseTranspiler class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestPharoJsBaseTranspiler,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Manifest,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '309' ],		#self : OmReference [ '310' ],		#time : DateAndTime [ '2024-03-03T08:20:42.667-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PackageManifest subclass: #ManifestPharoJsBaseTranspiler\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Manifest\'',				#superclassName : 'PackageManifest',				#traitCompositionSource : '{}'			},			#name : #ManifestPharoJsBaseTranspiler,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ManifestPharoJsBaseTranspiler class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ManifestPharoJsBaseTranspiler class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestPharoJsBaseTranspiler,					#isMetaSide : false				},				#parent : @8,				#content : 'I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Manifest,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '310' ],		#self : OmReference [ '311' ],		#time : DateAndTime [ '2024-03-03T08:20:42.669-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'SharedPool subclass: #PjJavascriptGlobals\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Globals\'',				#superclassName : 'SharedPool',				#traitCompositionSource : '{}'			},			#name : #PjJavascriptGlobals,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjJavascriptGlobals class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjJavascriptGlobals class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjJavascriptGlobals,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Globals,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '311' ],		#self : OmReference [ '312' ],		#time : DateAndTime [ '2024-03-03T08:20:42.671-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'SharedPool subclass: #PjJavascriptGlobals\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Globals\'',				#superclassName : 'SharedPool',				#traitCompositionSource : '{}'			},			#name : #PjJavascriptGlobals,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjJavascriptGlobals class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjJavascriptGlobals class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjJavascriptGlobals,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the master class for all Javascript global sharedpools.\r\rSubclasses may simply enumerate globals as class variables, or they may be polyfills that will emit some extra code to enable the appropriate global to be accessed.\r\rEach polyfil subclass should override one or more of the *Polyfill: methods to write the necessary header code to install the polyfill',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Globals,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the master class for all Javascript global sharedpools.\r\rSubclasses may simply enumerate globals as class variables, or they may be polyfills that will emit some extra code to enable the appropriate global to be accessed.\r\rEach polyfil subclass should override one or more of the *Polyfill: methods to write the necessary header code to install the polyfill',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '312' ],		#self : OmReference [ '313' ],		#time : DateAndTime [ '2024-03-03T08:20:42.674-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptGlobals subclass: #PjProcessPolyfill\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'process\'\r\tpackage: \'PharoJs-Base-Transpiler-Globals\'',				#superclassName : 'PjJavascriptGlobals',				#traitCompositionSource : '{}'			},			#name : #PjProcessPolyfill,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjProcessPolyfill class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjProcessPolyfill class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjProcessPolyfill,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProcessPolyfill,						#isMetaSide : false					},					#name : #process,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Globals,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '313' ],		#self : OmReference [ '314' ],		#time : DateAndTime [ '2024-03-03T08:20:42.677-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptGlobals subclass: #PjProcessPolyfill\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'process\'\r\tpackage: \'PharoJs-Base-Transpiler-Globals\'',				#superclassName : 'PjJavascriptGlobals',				#traitCompositionSource : '{}'			},			#name : #PjProcessPolyfill,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjProcessPolyfill class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjProcessPolyfill class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjProcessPolyfill,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a polyfill to initialize some globals in a web browser.',				#stamp : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProcessPolyfill,						#isMetaSide : false					},					#name : #process,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Globals,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a polyfill to initialize some globals in a web browser.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '314' ],		#self : OmReference [ '315' ],		#time : DateAndTime [ '2024-03-03T08:20:42.68-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptGlobals subclass: #PjUniversalGlobals\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'JSON Math console global\'\r\tpackage: \'PharoJs-Base-Transpiler-Globals\'',				#superclassName : 'PjJavascriptGlobals',				#traitCompositionSource : '{}'			},			#name : #PjUniversalGlobals,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjUniversalGlobals class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjUniversalGlobals class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjUniversalGlobals,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjUniversalGlobals,						#isMetaSide : false					},					#name : #JSON,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjUniversalGlobals,						#isMetaSide : false					},					#name : #Math,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjUniversalGlobals,						#isMetaSide : false					},					#name : #console,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjUniversalGlobals,						#isMetaSide : false					},					#name : #global,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Globals,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '315' ],		#self : OmReference [ '316' ],		#time : DateAndTime [ '2024-03-03T08:20:42.681-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptGlobals subclass: #PjUniversalGlobals\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'JSON Math console global\'\r\tpackage: \'PharoJs-Base-Transpiler-Globals\'',				#superclassName : 'PjJavascriptGlobals',				#traitCompositionSource : '{}'			},			#name : #PjUniversalGlobals,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjUniversalGlobals class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjUniversalGlobals class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjUniversalGlobals,					#isMetaSide : false				},				#parent : @8,				#content : 'I contain globals for all Javascript engines',				#stamp : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjUniversalGlobals,						#isMetaSide : false					},					#name : #JSON,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjUniversalGlobals,						#isMetaSide : false					},					#name : #Math,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjUniversalGlobals,						#isMetaSide : false					},					#name : #console,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjUniversalGlobals,						#isMetaSide : false					},					#name : #global,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Globals,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I contain globals for all Javascript engines',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '316' ],		#self : OmReference [ '317' ],		#time : DateAndTime [ '2024-03-03T08:20:42.683-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptGlobals subclass: #PjNodeMinGlobals\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'module require\'\r\tpoolDictionaries: \'PjProcessPolyfill PjUniversalGlobals\'\r\tpackage: \'PharoJs-Base-Transpiler-Globals\'',				#superclassName : 'PjJavascriptGlobals',				#traitCompositionSource : '{}'			},			#name : #PjNodeMinGlobals,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNodeMinGlobals class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNodeMinGlobals class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNodeMinGlobals,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeMinGlobals,						#isMetaSide : false					},					#name : #module,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeMinGlobals,						#isMetaSide : false					},					#name : #require,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Globals,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeMinGlobals,						#isMetaSide : false					},					#name : #PjProcessPolyfill,					#parent : @8				},				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeMinGlobals,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '317' ],		#self : OmReference [ '318' ],		#time : DateAndTime [ '2024-03-03T08:20:42.685-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptGlobals subclass: #PjNodeMinGlobals\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'module require\'\r\tpoolDictionaries: \'PjProcessPolyfill PjUniversalGlobals\'\r\tpackage: \'PharoJs-Base-Transpiler-Globals\'',				#superclassName : 'PjJavascriptGlobals',				#traitCompositionSource : '{}'			},			#name : #PjNodeMinGlobals,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNodeMinGlobals class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNodeMinGlobals class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNodeMinGlobals,					#isMetaSide : false				},				#parent : @8,				#content : 'I contain the globals for the Node-based Javascript engines including Electron\r',				#stamp : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeMinGlobals,						#isMetaSide : false					},					#name : #module,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeMinGlobals,						#isMetaSide : false					},					#name : #require,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Globals,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeMinGlobals,						#isMetaSide : false					},					#name : #PjProcessPolyfill,					#parent : @8				},				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeMinGlobals,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'I contain the globals for the Node-based Javascript engines including Electron\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '318' ],		#self : OmReference [ '319' ],		#time : DateAndTime [ '2024-03-03T08:20:42.687-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptGlobals subclass: #PjWebSocketPolyfill\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'WebSocket\'\r\tpackage: \'PharoJs-Base-Transpiler-Globals\'',				#superclassName : 'PjJavascriptGlobals',				#traitCompositionSource : '{}'			},			#name : #PjWebSocketPolyfill,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjWebSocketPolyfill class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjWebSocketPolyfill class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjWebSocketPolyfill,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWebSocketPolyfill,						#isMetaSide : false					},					#name : #WebSocket,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Globals,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '319' ],		#self : OmReference [ '320' ],		#time : DateAndTime [ '2024-03-03T08:20:42.688-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptGlobals subclass: #PjWebSocketPolyfill\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'WebSocket\'\r\tpackage: \'PharoJs-Base-Transpiler-Globals\'',				#superclassName : 'PjJavascriptGlobals',				#traitCompositionSource : '{}'			},			#name : #PjWebSocketPolyfill,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjWebSocketPolyfill class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjWebSocketPolyfill class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjWebSocketPolyfill,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the polyfill for WebSocket for Node.\r\rThis will force the appropriate package to be loaded when running on Node.',				#stamp : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWebSocketPolyfill,						#isMetaSide : false					},					#name : #WebSocket,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Globals,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the polyfill for WebSocket for Node.\r\rThis will force the appropriate package to be loaded when running on Node.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '320' ],		#self : OmReference [ '321' ],		#time : DateAndTime [ '2024-03-03T08:20:42.69-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptGlobals subclass: #PjDomGlobals\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'document history location navigator screen window\'\r\tpoolDictionaries: \'PjProcessPolyfill PjUniversalGlobals PjWebSocketPolyfill\'\r\tpackage: \'PharoJs-Base-Transpiler-Globals\'',				#superclassName : 'PjJavascriptGlobals',				#traitCompositionSource : '{}'			},			#name : #PjDomGlobals,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDomGlobals class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDomGlobals class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDomGlobals,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomGlobals,						#isMetaSide : false					},					#name : #document,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomGlobals,						#isMetaSide : false					},					#name : #history,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomGlobals,						#isMetaSide : false					},					#name : #location,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomGlobals,						#isMetaSide : false					},					#name : #navigator,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomGlobals,						#isMetaSide : false					},					#name : #screen,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomGlobals,						#isMetaSide : false					},					#name : #window,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Globals,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomGlobals,						#isMetaSide : false					},					#name : #PjProcessPolyfill,					#parent : @8				},				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomGlobals,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				},				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomGlobals,						#isMetaSide : false					},					#name : #PjWebSocketPolyfill,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '321' ],		#self : OmReference [ '322' ],		#time : DateAndTime [ '2024-03-03T08:20:42.694-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptGlobals subclass: #PjDomGlobals\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'document history location navigator screen window\'\r\tpoolDictionaries: \'PjProcessPolyfill PjUniversalGlobals PjWebSocketPolyfill\'\r\tpackage: \'PharoJs-Base-Transpiler-Globals\'',				#superclassName : 'PjJavascriptGlobals',				#traitCompositionSource : '{}'			},			#name : #PjDomGlobals,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDomGlobals class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDomGlobals class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDomGlobals,					#isMetaSide : false				},				#parent : @8,				#content : 'I contain the globals for all DOM-based Javascript engines\r\rUse PjUniversalGlobals too',				#stamp : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomGlobals,						#isMetaSide : false					},					#name : #document,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomGlobals,						#isMetaSide : false					},					#name : #history,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomGlobals,						#isMetaSide : false					},					#name : #location,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomGlobals,						#isMetaSide : false					},					#name : #navigator,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomGlobals,						#isMetaSide : false					},					#name : #screen,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomGlobals,						#isMetaSide : false					},					#name : #window,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Globals,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomGlobals,						#isMetaSide : false					},					#name : #PjProcessPolyfill,					#parent : @8				},				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomGlobals,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				},				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomGlobals,						#isMetaSide : false					},					#name : #PjWebSocketPolyfill,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'I contain the globals for all DOM-based Javascript engines\r\rUse PjUniversalGlobals too',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '322' ],		#self : OmReference [ '323' ],		#time : DateAndTime [ '2024-03-03T08:20:42.696-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptGlobals subclass: #PjBrowserGlobals\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'Float32Array FormData Image MutationObserver Uint16Array Uint8Array XMLHttpRequest localStorage\'\r\tpoolDictionaries: \'PjDomGlobals PjUniversalGlobals\'\r\tpackage: \'PharoJs-Base-Transpiler-Globals\'',				#superclassName : 'PjJavascriptGlobals',				#traitCompositionSource : '{}'			},			#name : #PjBrowserGlobals,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBrowserGlobals class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBrowserGlobals class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBrowserGlobals,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserGlobals,						#isMetaSide : false					},					#name : #Float32Array,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserGlobals,						#isMetaSide : false					},					#name : #FormData,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserGlobals,						#isMetaSide : false					},					#name : #Image,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserGlobals,						#isMetaSide : false					},					#name : #MutationObserver,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserGlobals,						#isMetaSide : false					},					#name : #Uint16Array,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserGlobals,						#isMetaSide : false					},					#name : #Uint8Array,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserGlobals,						#isMetaSide : false					},					#name : #XMLHttpRequest,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserGlobals,						#isMetaSide : false					},					#name : #localStorage,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Globals,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserGlobals,						#isMetaSide : false					},					#name : #PjDomGlobals,					#parent : @8				},				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserGlobals,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '323' ],		#self : OmReference [ '324' ],		#time : DateAndTime [ '2024-03-03T08:20:42.698-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptGlobals subclass: #PjBrowserGlobals\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'Float32Array FormData Image MutationObserver Uint16Array Uint8Array XMLHttpRequest localStorage\'\r\tpoolDictionaries: \'PjDomGlobals PjUniversalGlobals\'\r\tpackage: \'PharoJs-Base-Transpiler-Globals\'',				#superclassName : 'PjJavascriptGlobals',				#traitCompositionSource : '{}'			},			#name : #PjBrowserGlobals,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBrowserGlobals class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBrowserGlobals class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBrowserGlobals,					#isMetaSide : false				},				#parent : @8,				#content : 'I contain globals for all browser Javascript engines.\r\rUse PjDomGlobals and PjUniversalGlobals too.',				#stamp : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserGlobals,						#isMetaSide : false					},					#name : #Float32Array,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserGlobals,						#isMetaSide : false					},					#name : #FormData,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserGlobals,						#isMetaSide : false					},					#name : #Image,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserGlobals,						#isMetaSide : false					},					#name : #MutationObserver,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserGlobals,						#isMetaSide : false					},					#name : #Uint16Array,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserGlobals,						#isMetaSide : false					},					#name : #Uint8Array,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserGlobals,						#isMetaSide : false					},					#name : #XMLHttpRequest,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserGlobals,						#isMetaSide : false					},					#name : #localStorage,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Globals,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserGlobals,						#isMetaSide : false					},					#name : #PjDomGlobals,					#parent : @8				},				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserGlobals,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'I contain globals for all browser Javascript engines.\r\rUse PjDomGlobals and PjUniversalGlobals too.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '324' ],		#self : OmReference [ '325' ],		#time : DateAndTime [ '2024-03-03T08:20:42.7-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptGlobals subclass: #PjNodeGlobals\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjNodeMinGlobals PjWebSocketPolyfill\'\r\tpackage: \'PharoJs-Base-Transpiler-Globals\'',				#superclassName : 'PjJavascriptGlobals',				#traitCompositionSource : '{}'			},			#name : #PjNodeGlobals,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNodeGlobals class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNodeGlobals class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNodeGlobals,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Globals,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeGlobals,						#isMetaSide : false					},					#name : #PjNodeMinGlobals,					#parent : @8				},				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeGlobals,						#isMetaSide : false					},					#name : #PjWebSocketPolyfill,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '325' ],		#self : OmReference [ '326' ],		#time : DateAndTime [ '2024-03-03T08:20:42.702-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptGlobals subclass: #PjNodeGlobals\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjNodeMinGlobals PjWebSocketPolyfill\'\r\tpackage: \'PharoJs-Base-Transpiler-Globals\'',				#superclassName : 'PjJavascriptGlobals',				#traitCompositionSource : '{}'			},			#name : #PjNodeGlobals,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNodeGlobals class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNodeGlobals class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNodeGlobals,					#isMetaSide : false				},				#parent : @8,				#content : 'I contain the globals for the NodeJS Javascript engine.\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Globals,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeGlobals,						#isMetaSide : false					},					#name : #PjNodeMinGlobals,					#parent : @8				},				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeGlobals,						#isMetaSide : false					},					#name : #PjWebSocketPolyfill,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'I contain the globals for the NodeJS Javascript engine.\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '326' ],		#self : OmReference [ '327' ],		#time : DateAndTime [ '2024-03-03T08:20:42.712-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'FullBlockClosure variableSubclass: #PjClosedFullBlockClosure\r\tuses: PjTClosedBlockClosure @ {#basicOriginalBlock:->#originalBlock:}\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'FullBlockClosure',				#traitCompositionSource : 'PjTClosedBlockClosure @ {#basicOriginalBlock:->#originalBlock:}'			},			#name : #PjClosedFullBlockClosure,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClosedFullBlockClosure,						#isMetaSide : false					},					#name : #originalBlock,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClosedFullBlockClosure,						#isMetaSide : false					},					#name : #externalVariablesDict,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClosedFullBlockClosure class\r\tuses: PjTClosedBlockClosure classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTClosedBlockClosure classTrait'				},				#name : #'PjClosedFullBlockClosure class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClosedFullBlockClosure,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '327' ],		#self : OmReference [ '328' ],		#time : DateAndTime [ '2024-03-03T08:20:42.713-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'FullBlockClosure variableSubclass: #PjClosedFullBlockClosure\r\tuses: PjTClosedBlockClosure @ {#basicOriginalBlock:->#originalBlock:}\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'FullBlockClosure',				#traitCompositionSource : 'PjTClosedBlockClosure @ {#basicOriginalBlock:->#originalBlock:}'			},			#name : #PjClosedFullBlockClosure,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClosedFullBlockClosure,						#isMetaSide : false					},					#name : #originalBlock,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClosedFullBlockClosure,						#isMetaSide : false					},					#name : #externalVariablesDict,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClosedFullBlockClosure class\r\tuses: PjTClosedBlockClosure classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTClosedBlockClosure classTrait'				},				#name : #'PjClosedFullBlockClosure class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClosedFullBlockClosure,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent a closed full block closure',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I represent a closed full block closure',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '328' ],		#self : OmReference [ '329' ],		#time : DateAndTime [ '2024-03-03T08:20:42.715-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Error subclass: #PjJavascriptTranspilationError\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'Error',				#traitCompositionSource : '{}'			},			#name : #PjJavascriptTranspilationError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjJavascriptTranspilationError class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjJavascriptTranspilationError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjJavascriptTranspilationError,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '329' ],		#self : OmReference [ '330' ],		#time : DateAndTime [ '2024-03-03T08:20:42.716-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Error subclass: #PjJavascriptTranspilationError\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'Error',				#traitCompositionSource : '{}'			},			#name : #PjJavascriptTranspilationError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjJavascriptTranspilationError class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjJavascriptTranspilationError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjJavascriptTranspilationError,					#isMetaSide : false				},				#parent : @8,				#content : 'I am an error from the PharoJS Transpiler that you are doing something wrong:\r\rPossible reasons:\r1) you have an open block that you are converting but it has free variables\r2) You reference a class that is not in the set of classes that make up your application.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am an error from the PharoJS Transpiler that you are doing something wrong:\r\rPossible reasons:\r1) you have an open block that you are converting but it has free variables\r2) You reference a class that is not in the set of classes that make up your application.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '330' ],		#self : OmReference [ '331' ],		#time : DateAndTime [ '2024-03-03T08:20:42.718-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjAstConverter\r\tinstanceVariableNames: \'blockNestingLevel isReturnLegalInBlocks hasNonLocalReturns hasInBlockSelfReferences messageConverter expressionNestingLevel tempNumber tempMaxNumber classForConversion pushingReturnClass transpiler needSelfReturn extraTempVariablesToDeclare blockClosureAnalyser nonNilIdentifiers methodPrimitive currentConvertingMethod extraBindings loopNestingLevel\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjAstConverter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #blockNestingLevel,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #isReturnLegalInBlocks,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #hasNonLocalReturns,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #hasInBlockSelfReferences,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #messageConverter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #expressionNestingLevel,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #tempNumber,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #tempMaxNumber,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #classForConversion,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #pushingReturnClass,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #transpiler,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #needSelfReturn,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #extraTempVariablesToDeclare,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #blockClosureAnalyser,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #nonNilIdentifiers,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #methodPrimitive,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #currentConvertingMethod,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #extraBindings,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #loopNestingLevel,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAstConverter class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAstConverter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAstConverter,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '331' ],		#self : OmReference [ '332' ],		#time : DateAndTime [ '2024-03-03T08:20:42.718-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjAstConverter\r\tinstanceVariableNames: \'blockNestingLevel isReturnLegalInBlocks hasNonLocalReturns hasInBlockSelfReferences messageConverter expressionNestingLevel tempNumber tempMaxNumber classForConversion pushingReturnClass transpiler needSelfReturn extraTempVariablesToDeclare blockClosureAnalyser nonNilIdentifiers methodPrimitive currentConvertingMethod extraBindings loopNestingLevel\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjAstConverter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #blockNestingLevel,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #isReturnLegalInBlocks,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #hasNonLocalReturns,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #hasInBlockSelfReferences,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #messageConverter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #expressionNestingLevel,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #tempNumber,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #tempMaxNumber,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #classForConversion,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #pushingReturnClass,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #transpiler,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #needSelfReturn,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #extraTempVariablesToDeclare,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #blockClosureAnalyser,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #nonNilIdentifiers,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #methodPrimitive,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #currentConvertingMethod,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #extraBindings,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverter,						#isMetaSide : false					},					#name : #loopNestingLevel,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAstConverter class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAstConverter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAstConverter,					#isMetaSide : false				},				#parent : @8,				#content : 'I translate Smalltalk ASTs into PjAST (javascript ASTs)',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I translate Smalltalk ASTs into PjAST (javascript ASTs)',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '332' ],		#self : OmReference [ '333' ],		#time : DateAndTime [ '2024-03-03T08:20:42.726-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjBlockClosureAnalyser\r\tinstanceVariableNames: \'externalVariables freeVariables blockForAnalysis\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjBlockClosureAnalyser,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBlockClosureAnalyser,						#isMetaSide : false					},					#name : #externalVariables,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBlockClosureAnalyser,						#isMetaSide : false					},					#name : #freeVariables,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBlockClosureAnalyser,						#isMetaSide : false					},					#name : #blockForAnalysis,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBlockClosureAnalyser class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBlockClosureAnalyser class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBlockClosureAnalyser,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '333' ],		#self : OmReference [ '334' ],		#time : DateAndTime [ '2024-03-03T08:20:42.728-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjBlockClosureAnalyser\r\tinstanceVariableNames: \'externalVariables freeVariables blockForAnalysis\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjBlockClosureAnalyser,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBlockClosureAnalyser,						#isMetaSide : false					},					#name : #externalVariables,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBlockClosureAnalyser,						#isMetaSide : false					},					#name : #freeVariables,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBlockClosureAnalyser,						#isMetaSide : false					},					#name : #blockForAnalysis,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBlockClosureAnalyser class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBlockClosureAnalyser class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBlockClosureAnalyser,					#isMetaSide : false				},				#parent : @8,				#content : 'I am used to analyse BlockClosures.\r\rTo close a block closure, i make copies of all free variables in the context of the original block.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am used to analyse BlockClosures.\r\rTo close a block closure, i make copies of all free variables in the context of the original block.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '334' ],		#self : OmReference [ '335' ],		#time : DateAndTime [ '2024-03-03T08:20:42.73-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjCore\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjUniversalGlobals\'\r\tpackage: \'PharoJs-Base-Transpiler-Globals\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjCore,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjCore class\r\tinstanceVariableNames: \'messageClass nilInJs selectorCache metaclassClass theClassClass\'',					#traitCompositionSource : '{}'				},				#name : #'PjCore class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjCore class'						},						#name : #messageClass,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjCore class'						},						#name : #nilInJs,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjCore class'						},						#name : #selectorCache,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjCore class'						},						#name : #metaclassClass,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjCore class'						},						#name : #theClassClass,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjCore,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Globals,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjCore,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '335' ],		#self : OmReference [ '336' ],		#time : DateAndTime [ '2024-03-03T08:20:42.731-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjCore\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjUniversalGlobals\'\r\tpackage: \'PharoJs-Base-Transpiler-Globals\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjCore,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjCore class\r\tinstanceVariableNames: \'messageClass nilInJs selectorCache metaclassClass theClassClass\'',					#traitCompositionSource : '{}'				},				#name : #'PjCore class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjCore class'						},						#name : #messageClass,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjCore class'						},						#name : #nilInJs,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjCore class'						},						#name : #selectorCache,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjCore class'						},						#name : #metaclassClass,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjCore class'						},						#name : #theClassClass,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjCore,					#isMetaSide : false				},				#parent : @8,				#content : 'This class is always included upon converting any code to javascript. \rIt provides core features to bootstrap PharoJs.\r\rIt is called Smalltalk in Javascript and isn\'t a class proper, because it has to be in place for normal class setup. It only has "class side" methods.\r\rIt is output specially by the Exporter.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Globals,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjCore,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'This class is always included upon converting any code to javascript. \rIt provides core features to bootstrap PharoJs.\r\rIt is called Smalltalk in Javascript and isn\'t a class proper, because it has to be in place for normal class setup. It only has "class side" methods.\r\rIt is output specially by the Exporter.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '336' ],		#self : OmReference [ '337' ],		#time : DateAndTime [ '2024-03-03T08:20:42.742-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Transpiler-AST,		#affectedPackageName : #PharoJs-Base-Transpiler	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '337' ],		#self : OmReference [ '338' ],		#time : DateAndTime [ '2024-03-03T08:20:42.744-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjJavascriptAstNode\r\tuses: TEquality\r\tinstanceVariableNames: \'myClass\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'Object',				#traitCompositionSource : 'TEquality'			},			#name : #PjJavascriptAstNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjJavascriptAstNode,						#isMetaSide : false					},					#name : #myClass,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjJavascriptAstNode class\r\tuses: TEquality classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'TEquality classTrait'				},				#name : #'PjJavascriptAstNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjJavascriptAstNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '338' ],		#self : OmReference [ '339' ],		#time : DateAndTime [ '2024-03-03T08:20:42.745-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjJavascriptAstNode\r\tuses: TEquality\r\tinstanceVariableNames: \'myClass\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'Object',				#traitCompositionSource : 'TEquality'			},			#name : #PjJavascriptAstNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjJavascriptAstNode,						#isMetaSide : false					},					#name : #myClass,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjJavascriptAstNode class\r\tuses: TEquality classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'TEquality classTrait'				},				#name : #'PjJavascriptAstNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjJavascriptAstNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I encode a Javascript AST ready to be output.\r\rUsed also for test to see if the transpilation makes the right AST\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I encode a Javascript AST ready to be output.\r\rUsed also for test to see if the transpilation makes the right AST\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '339' ],		#self : OmReference [ '340' ],		#time : DateAndTime [ '2024-03-03T08:20:42.747-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjApplyNode\r\tinstanceVariableNames: \'func args\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjApplyNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjApplyNode,						#isMetaSide : false					},					#name : #func,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjApplyNode,						#isMetaSide : false					},					#name : #args,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjApplyNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjApplyNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjApplyNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '340' ],		#self : OmReference [ '341' ],		#time : DateAndTime [ '2024-03-03T08:20:42.748-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjApplyNode\r\tinstanceVariableNames: \'func args\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjApplyNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjApplyNode,						#isMetaSide : false					},					#name : #func,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjApplyNode,						#isMetaSide : false					},					#name : #args,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjApplyNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjApplyNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjApplyNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '341' ],		#self : OmReference [ '342' ],		#time : DateAndTime [ '2024-03-03T08:20:42.75-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjArrayNode\r\tinstanceVariableNames: \'expressions\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjArrayNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjArrayNode,						#isMetaSide : false					},					#name : #expressions,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjArrayNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjArrayNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjArrayNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '342' ],		#self : OmReference [ '343' ],		#time : DateAndTime [ '2024-03-03T08:20:42.752-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjArrayNode\r\tinstanceVariableNames: \'expressions\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjArrayNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjArrayNode,						#isMetaSide : false					},					#name : #expressions,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjArrayNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjArrayNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjArrayNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '343' ],		#self : OmReference [ '344' ],		#time : DateAndTime [ '2024-03-03T08:20:42.754-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjAssignNode\r\tinstanceVariableNames: \'target expression\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjAssignNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAssignNode,						#isMetaSide : false					},					#name : #target,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAssignNode,						#isMetaSide : false					},					#name : #expression,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAssignNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAssignNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAssignNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '344' ],		#self : OmReference [ '345' ],		#time : DateAndTime [ '2024-03-03T08:20:42.755-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjAssignNode\r\tinstanceVariableNames: \'target expression\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjAssignNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAssignNode,						#isMetaSide : false					},					#name : #target,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAssignNode,						#isMetaSide : false					},					#name : #expression,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAssignNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAssignNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAssignNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '345' ],		#self : OmReference [ '346' ],		#time : DateAndTime [ '2024-03-03T08:20:42.758-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjBinaryNode\r\tinstanceVariableNames: \'operator left right\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjBinaryNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBinaryNode,						#isMetaSide : false					},					#name : #operator,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBinaryNode,						#isMetaSide : false					},					#name : #left,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBinaryNode,						#isMetaSide : false					},					#name : #right,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBinaryNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBinaryNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBinaryNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '346' ],		#self : OmReference [ '347' ],		#time : DateAndTime [ '2024-03-03T08:20:42.759-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjBinaryNode\r\tinstanceVariableNames: \'operator left right\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjBinaryNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBinaryNode,						#isMetaSide : false					},					#name : #operator,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBinaryNode,						#isMetaSide : false					},					#name : #left,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBinaryNode,						#isMetaSide : false					},					#name : #right,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBinaryNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBinaryNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBinaryNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '347' ],		#self : OmReference [ '348' ],		#time : DateAndTime [ '2024-03-03T08:20:42.761-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjFieldNode\r\tinstanceVariableNames: \'target selectorNode isNonNil\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjFieldNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjFieldNode,						#isMetaSide : false					},					#name : #target,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjFieldNode,						#isMetaSide : false					},					#name : #selectorNode,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjFieldNode,						#isMetaSide : false					},					#name : #isNonNil,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjFieldNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjFieldNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjFieldNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '348' ],		#self : OmReference [ '349' ],		#time : DateAndTime [ '2024-03-03T08:20:42.762-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjFieldNode\r\tinstanceVariableNames: \'target selectorNode isNonNil\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjFieldNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjFieldNode,						#isMetaSide : false					},					#name : #target,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjFieldNode,						#isMetaSide : false					},					#name : #selectorNode,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjFieldNode,						#isMetaSide : false					},					#name : #isNonNil,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjFieldNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjFieldNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjFieldNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '349' ],		#self : OmReference [ '350' ],		#time : DateAndTime [ '2024-03-03T08:20:42.763-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjFunctionNode\r\tinstanceVariableNames: \'parameters locals body\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjFunctionNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjFunctionNode,						#isMetaSide : false					},					#name : #parameters,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjFunctionNode,						#isMetaSide : false					},					#name : #locals,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjFunctionNode,						#isMetaSide : false					},					#name : #body,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjFunctionNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjFunctionNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjFunctionNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '350' ],		#self : OmReference [ '351' ],		#time : DateAndTime [ '2024-03-03T08:20:42.764-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjFunctionNode\r\tinstanceVariableNames: \'parameters locals body\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjFunctionNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjFunctionNode,						#isMetaSide : false					},					#name : #parameters,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjFunctionNode,						#isMetaSide : false					},					#name : #locals,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjFunctionNode,						#isMetaSide : false					},					#name : #body,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjFunctionNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjFunctionNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjFunctionNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '351' ],		#self : OmReference [ '352' ],		#time : DateAndTime [ '2024-03-03T08:20:42.766-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFunctionNode subclass: #PjBlockNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjFunctionNode',				#traitCompositionSource : '{}'			},			#name : #PjBlockNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBlockNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBlockNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBlockNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '352' ],		#self : OmReference [ '353' ],		#time : DateAndTime [ '2024-03-03T08:20:42.767-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFunctionNode subclass: #PjBlockNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjFunctionNode',				#traitCompositionSource : '{}'			},			#name : #PjBlockNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBlockNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBlockNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBlockNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '353' ],		#self : OmReference [ '354' ],		#time : DateAndTime [ '2024-03-03T08:20:42.769-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFunctionNode subclass: #PjMethodNode\r\tinstanceVariableNames: \'methodName needsSelf isClassMethod\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjFunctionNode',				#traitCompositionSource : '{}'			},			#name : #PjMethodNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMethodNode,						#isMetaSide : false					},					#name : #methodName,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMethodNode,						#isMetaSide : false					},					#name : #needsSelf,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMethodNode,						#isMetaSide : false					},					#name : #isClassMethod,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMethodNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMethodNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMethodNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '354' ],		#self : OmReference [ '355' ],		#time : DateAndTime [ '2024-03-03T08:20:42.769-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFunctionNode subclass: #PjMethodNode\r\tinstanceVariableNames: \'methodName needsSelf isClassMethod\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjFunctionNode',				#traitCompositionSource : '{}'			},			#name : #PjMethodNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMethodNode,						#isMetaSide : false					},					#name : #methodName,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMethodNode,						#isMetaSide : false					},					#name : #needsSelf,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMethodNode,						#isMetaSide : false					},					#name : #isClassMethod,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMethodNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMethodNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMethodNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '355' ],		#self : OmReference [ '356' ],		#time : DateAndTime [ '2024-03-03T08:20:42.772-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjLiteralNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjLiteralNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjLiteralNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjLiteralNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjLiteralNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '356' ],		#self : OmReference [ '357' ],		#time : DateAndTime [ '2024-03-03T08:20:42.773-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjLiteralNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjLiteralNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjLiteralNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjLiteralNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjLiteralNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '357' ],		#self : OmReference [ '358' ],		#time : DateAndTime [ '2024-03-03T08:20:42.775-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjLiteralNode subclass: #PjLiteralValueNode\r\tinstanceVariableNames: \'value\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjLiteralNode',				#traitCompositionSource : '{}'			},			#name : #PjLiteralValueNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjLiteralValueNode,						#isMetaSide : false					},					#name : #value,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjLiteralValueNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjLiteralValueNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjLiteralValueNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '358' ],		#self : OmReference [ '359' ],		#time : DateAndTime [ '2024-03-03T08:20:42.776-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjLiteralNode subclass: #PjLiteralValueNode\r\tinstanceVariableNames: \'value\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjLiteralNode',				#traitCompositionSource : '{}'			},			#name : #PjLiteralValueNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjLiteralValueNode,						#isMetaSide : false					},					#name : #value,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjLiteralValueNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjLiteralValueNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjLiteralValueNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '359' ],		#self : OmReference [ '360' ],		#time : DateAndTime [ '2024-03-03T08:20:42.777-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjLiteralNode subclass: #PjNilNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjLiteralNode',				#traitCompositionSource : '{}'			},			#name : #PjNilNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNilNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNilNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNilNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '360' ],		#self : OmReference [ '361' ],		#time : DateAndTime [ '2024-03-03T08:20:42.778-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjLiteralNode subclass: #PjNilNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjLiteralNode',				#traitCompositionSource : '{}'			},			#name : #PjNilNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNilNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNilNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNilNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '361' ],		#self : OmReference [ '362' ],		#time : DateAndTime [ '2024-03-03T08:20:42.779-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjMessageSelectorNode\r\tinstanceVariableNames: \'identifier\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjMessageSelectorNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageSelectorNode,						#isMetaSide : false					},					#name : #identifier,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageSelectorNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageSelectorNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageSelectorNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '362' ],		#self : OmReference [ '363' ],		#time : DateAndTime [ '2024-03-03T08:20:42.78-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjMessageSelectorNode\r\tinstanceVariableNames: \'identifier\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjMessageSelectorNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageSelectorNode,						#isMetaSide : false					},					#name : #identifier,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageSelectorNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageSelectorNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageSelectorNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '363' ],		#self : OmReference [ '364' ],		#time : DateAndTime [ '2024-03-03T08:20:42.782-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjObjectNode\r\tinstanceVariableNames: \'dictionary\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjObjectNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjObjectNode,						#isMetaSide : false					},					#name : #dictionary,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjObjectNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjObjectNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjObjectNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '364' ],		#self : OmReference [ '365' ],		#time : DateAndTime [ '2024-03-03T08:20:42.783-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjObjectNode\r\tinstanceVariableNames: \'dictionary\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjObjectNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjObjectNode,						#isMetaSide : false					},					#name : #dictionary,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjObjectNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjObjectNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjObjectNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I produce a Javascript object with fields from my dictionary',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I produce a Javascript object with fields from my dictionary',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '365' ],		#self : OmReference [ '366' ],		#time : DateAndTime [ '2024-03-03T08:20:42.785-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjReturnNode\r\tinstanceVariableNames: \'expression\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjReturnNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjReturnNode,						#isMetaSide : false					},					#name : #expression,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjReturnNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjReturnNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjReturnNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '366' ],		#self : OmReference [ '367' ],		#time : DateAndTime [ '2024-03-03T08:20:42.786-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjReturnNode\r\tinstanceVariableNames: \'expression\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjReturnNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjReturnNode,						#isMetaSide : false					},					#name : #expression,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjReturnNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjReturnNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjReturnNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '367' ],		#self : OmReference [ '368' ],		#time : DateAndTime [ '2024-03-03T08:20:42.793-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjReturnNode subclass: #PjNonLocalReturnNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjReturnNode',				#traitCompositionSource : '{}'			},			#name : #PjNonLocalReturnNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNonLocalReturnNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNonLocalReturnNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNonLocalReturnNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '368' ],		#self : OmReference [ '369' ],		#time : DateAndTime [ '2024-03-03T08:20:42.795-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjReturnNode subclass: #PjNonLocalReturnNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjReturnNode',				#traitCompositionSource : '{}'			},			#name : #PjNonLocalReturnNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNonLocalReturnNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNonLocalReturnNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNonLocalReturnNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '369' ],		#self : OmReference [ '370' ],		#time : DateAndTime [ '2024-03-03T08:20:42.797-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjSelfNode\r\tinstanceVariableNames: \'inBlock\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjSelfNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSelfNode,						#isMetaSide : false					},					#name : #inBlock,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSelfNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSelfNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSelfNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '370' ],		#self : OmReference [ '371' ],		#time : DateAndTime [ '2024-03-03T08:20:42.798-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjSelfNode\r\tinstanceVariableNames: \'inBlock\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjSelfNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSelfNode,						#isMetaSide : false					},					#name : #inBlock,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSelfNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSelfNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSelfNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '371' ],		#self : OmReference [ '372' ],		#time : DateAndTime [ '2024-03-03T08:20:42.799-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSelfNode subclass: #PjSuperNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjSelfNode',				#traitCompositionSource : '{}'			},			#name : #PjSuperNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSuperNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSuperNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSuperNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '372' ],		#self : OmReference [ '373' ],		#time : DateAndTime [ '2024-03-03T08:20:42.8-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSelfNode subclass: #PjSuperNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjSelfNode',				#traitCompositionSource : '{}'			},			#name : #PjSuperNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSuperNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSuperNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSuperNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '373' ],		#self : OmReference [ '374' ],		#time : DateAndTime [ '2024-03-03T08:20:42.802-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjSequenceNode\r\tinstanceVariableNames: \'expressions\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjSequenceNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSequenceNode,						#isMetaSide : false					},					#name : #expressions,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSequenceNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSequenceNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSequenceNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '374' ],		#self : OmReference [ '375' ],		#time : DateAndTime [ '2024-03-03T08:20:42.804-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjSequenceNode\r\tinstanceVariableNames: \'expressions\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjSequenceNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSequenceNode,						#isMetaSide : false					},					#name : #expressions,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSequenceNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSequenceNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSequenceNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '375' ],		#self : OmReference [ '376' ],		#time : DateAndTime [ '2024-03-03T08:20:42.806-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjTryNode\r\tinstanceVariableNames: \'body\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjTryNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTryNode,						#isMetaSide : false					},					#name : #body,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTryNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTryNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTryNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '376' ],		#self : OmReference [ '377' ],		#time : DateAndTime [ '2024-03-03T08:20:42.808-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjTryNode\r\tinstanceVariableNames: \'body\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjTryNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTryNode,						#isMetaSide : false					},					#name : #body,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTryNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTryNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTryNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '377' ],		#self : OmReference [ '378' ],		#time : DateAndTime [ '2024-03-03T08:20:42.809-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjUnaryNode\r\tinstanceVariableNames: \'operator expression\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjUnaryNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjUnaryNode,						#isMetaSide : false					},					#name : #operator,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjUnaryNode,						#isMetaSide : false					},					#name : #expression,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjUnaryNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjUnaryNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjUnaryNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '378' ],		#self : OmReference [ '379' ],		#time : DateAndTime [ '2024-03-03T08:20:42.81-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjUnaryNode\r\tinstanceVariableNames: \'operator expression\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjUnaryNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjUnaryNode,						#isMetaSide : false					},					#name : #operator,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjUnaryNode,						#isMetaSide : false					},					#name : #expression,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjUnaryNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjUnaryNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjUnaryNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '379' ],		#self : OmReference [ '380' ],		#time : DateAndTime [ '2024-03-03T08:20:42.812-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjUnparsedStringNode\r\tinstanceVariableNames: \'string\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjUnparsedStringNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjUnparsedStringNode,						#isMetaSide : false					},					#name : #string,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjUnparsedStringNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjUnparsedStringNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjUnparsedStringNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '380' ],		#self : OmReference [ '381' ],		#time : DateAndTime [ '2024-03-03T08:20:42.813-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjUnparsedStringNode\r\tinstanceVariableNames: \'string\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjUnparsedStringNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjUnparsedStringNode,						#isMetaSide : false					},					#name : #string,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjUnparsedStringNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjUnparsedStringNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjUnparsedStringNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I contain strings that ahould go literally into the output stream',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I contain strings that ahould go literally into the output stream',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '381' ],		#self : OmReference [ '382' ],		#time : DateAndTime [ '2024-03-03T08:20:42.814-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjVariableNode\r\tinstanceVariableNames: \'identifier\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjVariableNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjVariableNode,						#isMetaSide : false					},					#name : #identifier,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjVariableNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjVariableNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjVariableNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '382' ],		#self : OmReference [ '383' ],		#time : DateAndTime [ '2024-03-03T08:20:42.815-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjVariableNode\r\tinstanceVariableNames: \'identifier\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjVariableNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjVariableNode,						#isMetaSide : false					},					#name : #identifier,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjVariableNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjVariableNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjVariableNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '383' ],		#self : OmReference [ '384' ],		#time : DateAndTime [ '2024-03-03T08:20:42.817-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjVariableNode subclass: #PjArgumentNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjVariableNode',				#traitCompositionSource : '{}'			},			#name : #PjArgumentNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjArgumentNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjArgumentNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjArgumentNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '384' ],		#self : OmReference [ '385' ],		#time : DateAndTime [ '2024-03-03T08:20:42.818-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjVariableNode subclass: #PjArgumentNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjVariableNode',				#traitCompositionSource : '{}'			},			#name : #PjArgumentNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjArgumentNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjArgumentNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjArgumentNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a parameter to a method or a block argument for visiting with a subclass of PjASTVisitor',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a parameter to a method or a block argument for visiting with a subclass of PjASTVisitor',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '385' ],		#self : OmReference [ '386' ],		#time : DateAndTime [ '2024-03-03T08:20:42.82-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjVariableNode subclass: #PjClassNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjVariableNode',				#traitCompositionSource : '{}'			},			#name : #PjClassNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '386' ],		#self : OmReference [ '387' ],		#time : DateAndTime [ '2024-03-03T08:20:42.821-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjVariableNode subclass: #PjClassNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjVariableNode',				#traitCompositionSource : '{}'			},			#name : #PjClassNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a class node (a global class) for visiting with a subclass of PjASTVisitor',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a class node (a global class) for visiting with a subclass of PjASTVisitor',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '387' ],		#self : OmReference [ '388' ],		#time : DateAndTime [ '2024-03-03T08:20:42.823-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjVariableNode subclass: #PjClassVariableNode\r\tinstanceVariableNames: \'poolReference\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjVariableNode',				#traitCompositionSource : '{}'			},			#name : #PjClassVariableNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassVariableNode,						#isMetaSide : false					},					#name : #poolReference,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassVariableNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassVariableNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassVariableNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '388' ],		#self : OmReference [ '389' ],		#time : DateAndTime [ '2024-03-03T08:20:42.825-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjVariableNode subclass: #PjClassVariableNode\r\tinstanceVariableNames: \'poolReference\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjVariableNode',				#traitCompositionSource : '{}'			},			#name : #PjClassVariableNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassVariableNode,						#isMetaSide : false					},					#name : #poolReference,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassVariableNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassVariableNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassVariableNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a class variable for visiting with a subclass of PjASTVisitor',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a class variable for visiting with a subclass of PjASTVisitor',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '389' ],		#self : OmReference [ '390' ],		#time : DateAndTime [ '2024-03-03T08:20:42.826-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjClassVariableNode subclass: #PjPoolVariableNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjClassVariableNode',				#traitCompositionSource : '{}'			},			#name : #PjPoolVariableNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjPoolVariableNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjPoolVariableNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjPoolVariableNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '390' ],		#self : OmReference [ '391' ],		#time : DateAndTime [ '2024-03-03T08:20:42.827-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjClassVariableNode subclass: #PjPoolVariableNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjClassVariableNode',				#traitCompositionSource : '{}'			},			#name : #PjPoolVariableNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjPoolVariableNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjPoolVariableNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjPoolVariableNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a pool variable for visiting with a subclass of PjASTVisitor',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a pool variable for visiting with a subclass of PjASTVisitor',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '391' ],		#self : OmReference [ '392' ],		#time : DateAndTime [ '2024-03-03T08:20:42.829-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjVariableNode subclass: #PjGlobalNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjVariableNode',				#traitCompositionSource : '{}'			},			#name : #PjGlobalNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjGlobalNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjGlobalNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjGlobalNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '392' ],		#self : OmReference [ '393' ],		#time : DateAndTime [ '2024-03-03T08:20:42.83-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjVariableNode subclass: #PjGlobalNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjVariableNode',				#traitCompositionSource : '{}'			},			#name : #PjGlobalNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjGlobalNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjGlobalNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjGlobalNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a globale variable for visiting with a subclass of PjASTVisitor',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a globale variable for visiting with a subclass of PjASTVisitor',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '393' ],		#self : OmReference [ '394' ],		#time : DateAndTime [ '2024-03-03T08:20:42.831-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjVariableNode subclass: #PjInstanceVariableNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjVariableNode',				#traitCompositionSource : '{}'			},			#name : #PjInstanceVariableNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjInstanceVariableNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjInstanceVariableNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjInstanceVariableNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '394' ],		#self : OmReference [ '395' ],		#time : DateAndTime [ '2024-03-03T08:20:42.832-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjVariableNode subclass: #PjInstanceVariableNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjVariableNode',				#traitCompositionSource : '{}'			},			#name : #PjInstanceVariableNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjInstanceVariableNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjInstanceVariableNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjInstanceVariableNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am an instance variable for visiting with a subclass of PjASTVisitor',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am an instance variable for visiting with a subclass of PjASTVisitor',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '395' ],		#self : OmReference [ '396' ],		#time : DateAndTime [ '2024-03-03T08:20:42.834-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjVariableNode subclass: #PjTempVariableNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjVariableNode',				#traitCompositionSource : '{}'			},			#name : #PjTempVariableNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTempVariableNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTempVariableNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTempVariableNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '396' ],		#self : OmReference [ '397' ],		#time : DateAndTime [ '2024-03-03T08:20:42.835-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjVariableNode subclass: #PjTempVariableNode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-AST\'',				#superclassName : 'PjVariableNode',				#traitCompositionSource : '{}'			},			#name : #PjTempVariableNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTempVariableNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTempVariableNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTempVariableNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a temporary variable in a method for visiting with a subclass of PjASTVisitor',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-AST,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a temporary variable in a method for visiting with a subclass of PjASTVisitor',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '397' ],		#self : OmReference [ '398' ],		#time : DateAndTime [ '2024-03-03T08:20:42.837-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjMessageConverter\r\tinstanceVariableNames: \'conversions astConverter\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjMessageConverter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageConverter,						#isMetaSide : false					},					#name : #conversions,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageConverter,						#isMetaSide : false					},					#name : #astConverter,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageConverter class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageConverter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageConverter,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '398' ],		#self : OmReference [ '399' ],		#time : DateAndTime [ '2024-03-03T08:20:42.838-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjMessageConverter\r\tinstanceVariableNames: \'conversions astConverter\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjMessageConverter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageConverter,						#isMetaSide : false					},					#name : #conversions,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageConverter,						#isMetaSide : false					},					#name : #astConverter,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageConverter class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageConverter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageConverter,					#isMetaSide : false				},				#parent : @8,				#content : 'I manage the message conversions so that for each selector they will be executed in order, with the first successful one adopted. \r\rSee Chain-of-Responsibility pattern.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I manage the message conversions so that for each selector they will be executed in order, with the first successful one adopted. \r\rSee Chain-of-Responsibility pattern.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '399' ],		#self : OmReference [ '400' ],		#time : DateAndTime [ '2024-03-03T08:20:42.847-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjSpecialMessageConversion\r\tuses: TEquality\r\tinstanceVariableNames: \'order messageConverter\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : 'TEquality'			},			#name : #PjSpecialMessageConversion,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSpecialMessageConversion,						#isMetaSide : false					},					#name : #order,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSpecialMessageConversion,						#isMetaSide : false					},					#name : #messageConverter,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSpecialMessageConversion class\r\tuses: TEquality classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'TEquality classTrait'				},				#name : #'PjSpecialMessageConversion class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSpecialMessageConversion,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '400' ],		#self : OmReference [ '401' ],		#time : DateAndTime [ '2024-03-03T08:20:42.848-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjSpecialMessageConversion\r\tuses: TEquality\r\tinstanceVariableNames: \'order messageConverter\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : 'TEquality'			},			#name : #PjSpecialMessageConversion,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSpecialMessageConversion,						#isMetaSide : false					},					#name : #order,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSpecialMessageConversion,						#isMetaSide : false					},					#name : #messageConverter,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSpecialMessageConversion class\r\tuses: TEquality classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'TEquality classTrait'				},				#name : #'PjSpecialMessageConversion class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSpecialMessageConversion,					#isMetaSide : false				},				#parent : @8,				#content : 'I am an abstract class for PjAST optimizations\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am an abstract class for PjAST optimizations\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '401' ],		#self : OmReference [ '402' ],		#time : DateAndTime [ '2024-03-03T08:20:42.849-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Transpiler-MessageConversions,		#affectedPackageName : #PharoJs-Base-Transpiler	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '402' ],		#self : OmReference [ '403' ],		#time : DateAndTime [ '2024-03-03T08:20:42.851-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSpecialMessageConversion subclass: #PjJsAtConversion\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-MessageConversions\'',				#superclassName : 'PjSpecialMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjJsAtConversion,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjJsAtConversion class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjJsAtConversion class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjJsAtConversion,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-MessageConversions,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '403' ],		#self : OmReference [ '404' ],		#time : DateAndTime [ '2024-03-03T08:20:42.852-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSpecialMessageConversion subclass: #PjJsAtConversion\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-MessageConversions\'',				#superclassName : 'PjSpecialMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjJsAtConversion,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjJsAtConversion class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjJsAtConversion class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjJsAtConversion,					#isMetaSide : false				},				#parent : @8,				#content : 'I optimize js_at: to Javascript object/array references.\r\rRequired by bootstrap code',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-MessageConversions,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I optimize js_at: to Javascript object/array references.\r\rRequired by bootstrap code',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '404' ],		#self : OmReference [ '405' ],		#time : DateAndTime [ '2024-03-03T08:20:42.859-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJsAtConversion subclass: #PjJsAtPutConversion\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-MessageConversions\'',				#superclassName : 'PjJsAtConversion',				#traitCompositionSource : '{}'			},			#name : #PjJsAtPutConversion,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjJsAtPutConversion class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjJsAtPutConversion class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjJsAtPutConversion,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-MessageConversions,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '405' ],		#self : OmReference [ '406' ],		#time : DateAndTime [ '2024-03-03T08:20:42.86-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJsAtConversion subclass: #PjJsAtPutConversion\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-MessageConversions\'',				#superclassName : 'PjJsAtConversion',				#traitCompositionSource : '{}'			},			#name : #PjJsAtPutConversion,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjJsAtPutConversion class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjJsAtPutConversion class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjJsAtPutConversion,					#isMetaSide : false				},				#parent : @8,				#content : 'I optimize js_at:put: to Javascript object/array references.\r\rRequired by bootstrap code',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-MessageConversions,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I optimize js_at:put: to Javascript object/array references.\r\rRequired by bootstrap code',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '406' ],		#self : OmReference [ '407' ],		#time : DateAndTime [ '2024-03-03T08:20:42.865-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSpecialMessageConversion subclass: #PjJsThisConversion\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-MessageConversions\'',				#superclassName : 'PjSpecialMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjJsThisConversion,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjJsThisConversion class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjJsThisConversion class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjJsThisConversion,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-MessageConversions,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '407' ],		#self : OmReference [ '408' ],		#time : DateAndTime [ '2024-03-03T08:20:42.866-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSpecialMessageConversion subclass: #PjJsThisConversion\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-MessageConversions\'',				#superclassName : 'PjSpecialMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjJsThisConversion,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjJsThisConversion class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjJsThisConversion class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjJsThisConversion,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a weird conversion to provide a way for an event handle to reference the \'this\' value which refers to the object to which the event handler was attached.\'',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-MessageConversions,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a weird conversion to provide a way for an event handle to reference the \'this\' value which refers to the object to which the event handler was attached.\'',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '408' ],		#self : OmReference [ '409' ],		#time : DateAndTime [ '2024-03-03T08:20:42.868-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSpecialMessageConversion subclass: #PjNotOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-MessageConversions\'',				#superclassName : 'PjSpecialMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjNotOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNotOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNotOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNotOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-MessageConversions,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '409' ],		#self : OmReference [ '410' ],		#time : DateAndTime [ '2024-03-03T08:20:42.87-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSpecialMessageConversion subclass: #PjNotOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-MessageConversions\'',				#superclassName : 'PjSpecialMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjNotOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNotOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNotOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNotOptimization,					#isMetaSide : false				},				#parent : @8,				#content : 'I am an optimizatino to the unary message not',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-MessageConversions,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am an optimizatino to the unary message not',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '410' ],		#self : OmReference [ '411' ],		#time : DateAndTime [ '2024-03-03T08:20:42.874-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSpecialMessageConversion subclass: #PjOptionalMessageConversion\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'PjSpecialMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjOptionalMessageConversion,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjOptionalMessageConversion class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjOptionalMessageConversion class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjOptionalMessageConversion,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '411' ],		#self : OmReference [ '412' ],		#time : DateAndTime [ '2024-03-03T08:20:42.875-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSpecialMessageConversion subclass: #PjOptionalMessageConversion\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'PjSpecialMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjOptionalMessageConversion,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjOptionalMessageConversion class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjOptionalMessageConversion class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjOptionalMessageConversion,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a structural placeholder for all conversions that are not loaded by default.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a structural placeholder for all conversions that are not loaded by default.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '412' ],		#self : OmReference [ '413' ],		#time : DateAndTime [ '2024-03-03T08:20:42.884-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjStringGenerator\r\tuses: PjTStreamWriter\r\tinstanceVariableNames: \'currentPrecedenceLevel jsStream wroteCloseBrace currentClass currentlyDoingAssignment transpiler pharoJsSelectorPrefix\'\r\tclassVariableNames: \'AssignmentPrecedence ConditionalPrecedence EqualityPrecedence ExpressionPrecedence FunctionCallPrecedence FunctionDefnPrecedence GroupingPrecedence JsReservedWordsForInstanceVariables JsReservedWordsForVariables MemberAccessPrecedence OperatorPrecedencesDict StatementPrecedence\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : 'PjTStreamWriter'			},			#name : #PjStringGenerator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #currentPrecedenceLevel,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #jsStream,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #wroteCloseBrace,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #currentClass,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #currentlyDoingAssignment,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #transpiler,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #pharoJsSelectorPrefix,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjStringGenerator class\r\tuses: PjTStreamWriter classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTStreamWriter classTrait'				},				#name : #'PjStringGenerator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjStringGenerator,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #AssignmentPrecedence,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #ConditionalPrecedence,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #EqualityPrecedence,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #ExpressionPrecedence,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #FunctionCallPrecedence,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #FunctionDefnPrecedence,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #GroupingPrecedence,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #JsReservedWordsForInstanceVariables,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #JsReservedWordsForVariables,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #MemberAccessPrecedence,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #OperatorPrecedencesDict,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #StatementPrecedence,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '413' ],		#self : OmReference [ '414' ],		#time : DateAndTime [ '2024-03-03T08:20:42.885-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjStringGenerator\r\tuses: PjTStreamWriter\r\tinstanceVariableNames: \'currentPrecedenceLevel jsStream wroteCloseBrace currentClass currentlyDoingAssignment transpiler pharoJsSelectorPrefix\'\r\tclassVariableNames: \'AssignmentPrecedence ConditionalPrecedence EqualityPrecedence ExpressionPrecedence FunctionCallPrecedence FunctionDefnPrecedence GroupingPrecedence JsReservedWordsForInstanceVariables JsReservedWordsForVariables MemberAccessPrecedence OperatorPrecedencesDict StatementPrecedence\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : 'PjTStreamWriter'			},			#name : #PjStringGenerator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #currentPrecedenceLevel,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #jsStream,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #wroteCloseBrace,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #currentClass,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #currentlyDoingAssignment,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #transpiler,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #pharoJsSelectorPrefix,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjStringGenerator class\r\tuses: PjTStreamWriter classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTStreamWriter classTrait'				},				#name : #'PjStringGenerator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjStringGenerator,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a visitor to convert a Javascript AST into a string.\r\rIncludes $asNil$ optimization for field references in cases such as self, literals and ifNotNil. Maybe this should be extracted to another object. \r\rOne of the challenges is to produce minimal parentheses based on the crazy numer of operator presedense rules for Javascript:\r\rPrecedence\tOperator type\tAssociativity\r19\tGrouping\t\t( … )\r18\tMember Access\tleft-to-right\t. [] new\r17\tFunction Call \tleft-to-right\t… ( … )\r16\tPostfix Incr/decr\t\t…++\t…--\r15\tLogical NOT\tright-to-left\t! …\r\tBitwise NOT\tright-to-left\t~ …\r\tUnary Plus\tright-to-left\t+ …\r\tUnary Negation\tright-to-left\t- …\r\tPrefix Incr/decr\tright-to-left\t++ …\t-- …\r\ttypeof\tright-to-left\ttypeof …\r\tvoid\t\tright-to-left\tvoid …\r\tdelete\tright-to-left\tdelete …\r14\tExponentiation\tright-to-left\t… ** …\r\tMultiplication\tleft-to-right\t… * …\r\tDivision\tleft-to-right\t… / …\r\tRemainder\tleft-to-right\t… % …\r13\tAddition\tleft-to-right\t… + …\r\tSubtraction\tleft-to-right\t… - …\r12\tBitwise Left Shift\tleft-to-right\t… << …\r\tBitwise Right Shift\tleft-to-right\t… >> …\r\tBitwise Unsigned Right Shift\tleft-to-right\t… >>> …\r11\tLess Than\tleft-to-right\t… < …\r\tLess Than Or Equal\tleft-to-right\t… <= …\r\tGreater Than\tleft-to-right\t… > …\r\tGreater Than Or Equal\tleft-to-right\t… >= …\r\tin\tleft-to-right\t… in …\r\tinstanceof\tleft-to-right\t… instanceof …\r10\tEquality\tleft-to-right\t… == …\r\tInequality\tleft-to-right\t… != …\r\tStrict Equality\tleft-to-right\t… === …\r\tStrict Inequality\tleft-to-right\t… !== …\r9\tBitwise AND\tleft-to-right\t… & …\r8\tBitwise XOR\tleft-to-right\t… ^ …\r7\tBitwise OR\tleft-to-right\t… | …\r6\tLogical AND\tleft-to-right\t… && …\r5\tLogical OR\tleft-to-right\t… || …\r4\tConditional\tright-to-left\t… ? … : …\r3\tAssignment\tright-to-left\t… = … \r\tOp assign\tright-to-left\t+=\t-=\t**= \t\t\t\t\t\t\t*=\t/=\t%=\t<<=\r\t\t\t\t\t\t\t>>=\t>>>=\t&=\t^=\t|=\r2\tyield\tright-to-left\tyield …\r\tyield*\tright-to-left\tyield* …\r1\tSpread\tn/a\t... …\r0\tComma / Sequence\tleft-to-right\t… , …\r',				#stamp : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #AssignmentPrecedence,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #ConditionalPrecedence,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #EqualityPrecedence,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #ExpressionPrecedence,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #FunctionCallPrecedence,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #FunctionDefnPrecedence,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #GroupingPrecedence,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #JsReservedWordsForInstanceVariables,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #JsReservedWordsForVariables,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #MemberAccessPrecedence,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #OperatorPrecedencesDict,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjStringGenerator,						#isMetaSide : false					},					#name : #StatementPrecedence,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a visitor to convert a Javascript AST into a string.\r\rIncludes $asNil$ optimization for field references in cases such as self, literals and ifNotNil. Maybe this should be extracted to another object. \r\rOne of the challenges is to produce minimal parentheses based on the crazy numer of operator presedense rules for Javascript:\r\rPrecedence\tOperator type\tAssociativity\r19\tGrouping\t\t( … )\r18\tMember Access\tleft-to-right\t. [] new\r17\tFunction Call \tleft-to-right\t… ( … )\r16\tPostfix Incr/decr\t\t…++\t…--\r15\tLogical NOT\tright-to-left\t! …\r\tBitwise NOT\tright-to-left\t~ …\r\tUnary Plus\tright-to-left\t+ …\r\tUnary Negation\tright-to-left\t- …\r\tPrefix Incr/decr\tright-to-left\t++ …\t-- …\r\ttypeof\tright-to-left\ttypeof …\r\tvoid\t\tright-to-left\tvoid …\r\tdelete\tright-to-left\tdelete …\r14\tExponentiation\tright-to-left\t… ** …\r\tMultiplication\tleft-to-right\t… * …\r\tDivision\tleft-to-right\t… / …\r\tRemainder\tleft-to-right\t… % …\r13\tAddition\tleft-to-right\t… + …\r\tSubtraction\tleft-to-right\t… - …\r12\tBitwise Left Shift\tleft-to-right\t… << …\r\tBitwise Right Shift\tleft-to-right\t… >> …\r\tBitwise Unsigned Right Shift\tleft-to-right\t… >>> …\r11\tLess Than\tleft-to-right\t… < …\r\tLess Than Or Equal\tleft-to-right\t… <= …\r\tGreater Than\tleft-to-right\t… > …\r\tGreater Than Or Equal\tleft-to-right\t… >= …\r\tin\tleft-to-right\t… in …\r\tinstanceof\tleft-to-right\t… instanceof …\r10\tEquality\tleft-to-right\t… == …\r\tInequality\tleft-to-right\t… != …\r\tStrict Equality\tleft-to-right\t… === …\r\tStrict Inequality\tleft-to-right\t… !== …\r9\tBitwise AND\tleft-to-right\t… & …\r8\tBitwise XOR\tleft-to-right\t… ^ …\r7\tBitwise OR\tleft-to-right\t… | …\r6\tLogical AND\tleft-to-right\t… && …\r5\tLogical OR\tleft-to-right\t… || …\r4\tConditional\tright-to-left\t… ? … : …\r3\tAssignment\tright-to-left\t… = … \r\tOp assign\tright-to-left\t+=\t-=\t**= \t\t\t\t\t\t\t*=\t/=\t%=\t<<=\r\t\t\t\t\t\t\t>>=\t>>>=\t&=\t^=\t|=\r2\tyield\tright-to-left\tyield …\r\tyield*\tright-to-left\tyield* …\r1\tSpread\tn/a\t... …\r0\tComma / Sequence\tleft-to-right\t… , …\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '414' ],		#self : OmReference [ '415' ],		#time : DateAndTime [ '2024-03-03T08:20:42.893-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjTranspiler\r\tuses: PjTStreamWriter\r\tinstanceVariableNames: \'converter generatedMethods generator jsStream neededDNUs classesReferencingCache writtenDNUs beforeCodeOutputHook shouldWriteDnu poolsUsed pharoJsSelectorPrefix instanceMethodsAliasesDict classMethodsAliasesDict\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : 'PjTStreamWriter'			},			#name : #PjTranspiler,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #converter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #generatedMethods,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #generator,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #jsStream,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #neededDNUs,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #classesReferencingCache,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #writtenDNUs,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #beforeCodeOutputHook,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #shouldWriteDnu,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #poolsUsed,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #pharoJsSelectorPrefix,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #instanceMethodsAliasesDict,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #classMethodsAliasesDict,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTranspiler class\r\tuses: PjTStreamWriter classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTStreamWriter classTrait'				},				#name : #'PjTranspiler class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTranspiler,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '415' ],		#self : OmReference [ '416' ],		#time : DateAndTime [ '2024-03-03T08:20:42.894-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjTranspiler\r\tuses: PjTStreamWriter\r\tinstanceVariableNames: \'converter generatedMethods generator jsStream neededDNUs classesReferencingCache writtenDNUs beforeCodeOutputHook shouldWriteDnu poolsUsed pharoJsSelectorPrefix instanceMethodsAliasesDict classMethodsAliasesDict\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : 'PjTStreamWriter'			},			#name : #PjTranspiler,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #converter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #generatedMethods,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #generator,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #jsStream,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #neededDNUs,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #classesReferencingCache,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #writtenDNUs,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #beforeCodeOutputHook,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #shouldWriteDnu,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #poolsUsed,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #pharoJsSelectorPrefix,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #instanceMethodsAliasesDict,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspiler,						#isMetaSide : false					},					#name : #classMethodsAliasesDict,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTranspiler class\r\tuses: PjTStreamWriter classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTStreamWriter classTrait'				},				#name : #'PjTranspiler class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTranspiler,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a Transpiler from Smalltalk classes and objects to Javascript.\r\rI use the PjAstConerter to convert a Smalltalk method or block to a PjJavascriptAstNode and then PjAstTo StringGenerator to convert to Javascript code.\r\rTo avoid collisions with existing JS code, we introduce a prefix for method selectors upon conversion to javascript. The prefix is defined in the class side selectorsPrefix. The default value can be changed on demand.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a Transpiler from Smalltalk classes and objects to Javascript.\r\rI use the PjAstConerter to convert a Smalltalk method or block to a PjJavascriptAstNode and then PjAstTo StringGenerator to convert to Javascript code.\r\rTo avoid collisions with existing JS code, we introduce a prefix for method selectors upon conversion to javascript. The prefix is defined in the class side selectorsPrefix. The default value can be changed on demand.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '416' ],		#self : OmReference [ '417' ],		#time : DateAndTime [ '2024-03-03T08:20:42.902-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'BlockClosure variableSubclass: #PjClosedBlockClosure\r\tuses: PjTClosedBlockClosure\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'BlockClosure',				#traitCompositionSource : 'PjTClosedBlockClosure'			},			#name : #PjClosedBlockClosure,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClosedBlockClosure,						#isMetaSide : false					},					#name : #originalBlock,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClosedBlockClosure,						#isMetaSide : false					},					#name : #externalVariablesDict,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClosedBlockClosure class\r\tuses: PjTClosedBlockClosure classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTClosedBlockClosure classTrait'				},				#name : #'PjClosedBlockClosure class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClosedBlockClosure,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '417' ],		#self : OmReference [ '418' ],		#time : DateAndTime [ '2024-03-03T08:20:42.903-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'BlockClosure variableSubclass: #PjClosedBlockClosure\r\tuses: PjTClosedBlockClosure\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'BlockClosure',				#traitCompositionSource : 'PjTClosedBlockClosure'			},			#name : #PjClosedBlockClosure,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClosedBlockClosure,						#isMetaSide : false					},					#name : #originalBlock,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClosedBlockClosure,						#isMetaSide : false					},					#name : #externalVariablesDict,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClosedBlockClosure class\r\tuses: PjTClosedBlockClosure classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTClosedBlockClosure classTrait'				},				#name : #'PjClosedBlockClosure class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClosedBlockClosure,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent a block closure without any free variable.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I represent a block closure without any free variable.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '418' ],		#self : OmReference [ '419' ],		#time : DateAndTime [ '2024-03-03T08:20:42.905-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjClosedBlockClosure variableSubclass: #PjValuedClosedBlockClosure\r\tinstanceVariableNames: \'arguments\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'PjClosedBlockClosure',				#traitCompositionSource : '{}'			},			#name : #PjValuedClosedBlockClosure,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjValuedClosedBlockClosure,						#isMetaSide : false					},					#name : #arguments,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjValuedClosedBlockClosure class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjValuedClosedBlockClosure class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjValuedClosedBlockClosure,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '419' ],		#self : OmReference [ '420' ],		#time : DateAndTime [ '2024-03-03T08:20:42.906-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjClosedBlockClosure variableSubclass: #PjValuedClosedBlockClosure\r\tinstanceVariableNames: \'arguments\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Kernel\'',				#superclassName : 'PjClosedBlockClosure',				#traitCompositionSource : '{}'			},			#name : #PjValuedClosedBlockClosure,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjValuedClosedBlockClosure,						#isMetaSide : false					},					#name : #arguments,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjValuedClosedBlockClosure class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjValuedClosedBlockClosure class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjValuedClosedBlockClosure,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent a closed block closure that is valued upon JS code loading. I am useful for bridge interactions.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Kernel,			#package : #PharoJs-Base-Transpiler,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I represent a closed block closure that is valued upon JS code loading. I am useful for bridge interactions.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '420' ],		#self : OmReference [ '421' ],		#time : DateAndTime [ '2024-03-03T08:20:44.456-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTClosedBlockClosure classTrait',				#isMetaSide : true			},			#name : #'startpc:numArgs:originalBlock:',			#protocol : #'instance creation',			#sourceCode : 'startpc: startpc numArgs: numArgs originalBlock: aBlock\r\r\t^ (self\r\t\t   outerContext: nil\r\t\t   startpc: startpc\r\t\t   numArgs: numArgs\r\t\t   copiedValues: #())\r\t\t  originalBlock: aBlock;\r\t\t  yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '421' ],		#self : OmReference [ '422' ],		#time : DateAndTime [ '2024-03-03T08:20:44.456-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTClosedBlockClosure,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjAstConverter\r\t^ aPjAstConverter convertClosedBlock: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '422' ],		#self : OmReference [ '423' ],		#time : DateAndTime [ '2024-03-03T08:20:44.457-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTClosedBlockClosure,				#isMetaSide : false			},			#name : #asClosedBlock,			#protocol : #public,			#sourceCode : 'asClosedBlock\r\t^self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '423' ],		#self : OmReference [ '424' ],		#time : DateAndTime [ '2024-03-03T08:20:44.457-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTClosedBlockClosure,				#isMetaSide : false			},			#name : #'basicOriginalBlock:',			#protocol : #accessing,			#sourceCode : 'basicOriginalBlock: aBlock\r\toriginalBlock := aBlock.\r\texternalVariablesDict := self externalVariablesDictOf: originalBlock',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '424' ],		#self : OmReference [ '425' ],		#time : DateAndTime [ '2024-03-03T08:20:44.457-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTClosedBlockClosure,				#isMetaSide : false			},			#name : #'convertToJsUsing:',			#protocol : #converting,			#sourceCode : 'convertToJsUsing: aPjTranspiler \r\taPjTranspiler convertClosedBlock: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '425' ],		#self : OmReference [ '426' ],		#time : DateAndTime [ '2024-03-03T08:20:44.457-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTClosedBlockClosure,				#isMetaSide : false			},			#name : #'externalVariable:formContext:',			#protocol : #accessing,			#sourceCode : 'externalVariable: variable formContext: context\r\t^variable valueStartAtContext: context',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '426' ],		#self : OmReference [ '427' ],		#time : DateAndTime [ '2024-03-03T08:20:44.457-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTClosedBlockClosure,				#isMetaSide : false			},			#name : #'externalVariable:fromMethod:',			#protocol : #public,			#sourceCode : 'externalVariable: name fromMethod: method\r\t^ method instVarNamed: name',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '427' ],		#self : OmReference [ '428' ],		#time : DateAndTime [ '2024-03-03T08:20:44.458-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTClosedBlockClosure,				#isMetaSide : false			},			#name : #externalVariablesDict,			#protocol : #public,			#sourceCode : 'externalVariablesDict\r\t^ externalVariablesDict',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '428' ],		#self : OmReference [ '429' ],		#time : DateAndTime [ '2024-03-03T08:20:44.458-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTClosedBlockClosure,				#isMetaSide : false			},			#name : #isClosed,			#protocol : #testing,			#sourceCode : 'isClosed\r\t^true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '429' ],		#self : OmReference [ '430' ],		#time : DateAndTime [ '2024-03-03T08:20:44.458-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTClosedBlockClosure,				#isMetaSide : false			},			#name : #originalBlock,			#protocol : #accessing,			#sourceCode : 'originalBlock\r\t^ originalBlock',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '430' ],		#self : OmReference [ '431' ],		#time : DateAndTime [ '2024-03-03T08:20:44.458-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTClosedBlockClosure,				#isMetaSide : false			},			#name : #'originalBlock:',			#protocol : #accessing,			#sourceCode : 'originalBlock: aBlock\r\toriginalBlock := aBlock.\r\texternalVariablesDict := self externalVariablesDictOf: originalBlock',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '431' ],		#self : OmReference [ '432' ],		#time : DateAndTime [ '2024-03-03T08:20:44.458-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTClosedBlockClosure,				#isMetaSide : false			},			#name : #sourceNode,			#protocol : #accessing,			#sourceCode : 'sourceNode\r\t^ originalBlock sourceNode',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '432' ],		#self : OmReference [ '433' ],		#time : DateAndTime [ '2024-03-03T08:20:44.459-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTJavascriptGlobalsInitializer classTrait',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'class initialization',			#sourceCode : 'initialize\r\t"self initialize"\r\t| proxy |\r\tself classVarNames do: [ : varName |\r\t\tproxy := PjProxyForGlobal newProxyNamed: varName.\r\t\tself classVarNamed: varName put: proxy.\r\t]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '433' ],		#self : OmReference [ '434' ],		#time : DateAndTime [ '2024-03-03T08:20:44.459-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTStreamWriter classTrait',				#isMetaSide : true			},			#name : #jsNativePrefix,			#protocol : #'Javascript names',			#sourceCode : 'jsNativePrefix\r\t^ #js_',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '434' ],		#self : OmReference [ '435' ],		#time : DateAndTime [ '2024-03-03T08:20:44.459-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTStreamWriter,				#isMetaSide : false			},			#name : #'<<',			#protocol : #'writing low-level',			#sourceCode : '<< aString\r\r\tself jsStream << aString',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '435' ],		#self : OmReference [ '436' ],		#time : DateAndTime [ '2024-03-03T08:20:44.459-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTStreamWriter,				#isMetaSide : false			},			#name : #cr,			#protocol : #'writing low-level',			#sourceCode : 'cr\r\tself jsStream nextPut: self lineEnding',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '436' ],		#self : OmReference [ '437' ],		#time : DateAndTime [ '2024-03-03T08:20:44.459-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTStreamWriter,				#isMetaSide : false			},			#name : #crtab,			#protocol : #'writing low-level',			#sourceCode : 'crtab\r\r\tself jsStream crtab',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '437' ],		#self : OmReference [ '438' ],		#time : DateAndTime [ '2024-03-03T08:20:44.459-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTStreamWriter,				#isMetaSide : false			},			#name : #jsNativePrefix,			#protocol : #accessing,			#sourceCode : 'jsNativePrefix\r\t^ self class jsNativePrefix',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '438' ],		#self : OmReference [ '439' ],		#time : DateAndTime [ '2024-03-03T08:20:44.46-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTStreamWriter,				#isMetaSide : false			},			#name : #jsStream,			#protocol : #accessing,			#sourceCode : 'jsStream\r\tself explicitRequirement',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '439' ],		#self : OmReference [ '440' ],		#time : DateAndTime [ '2024-03-03T08:20:44.46-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTStreamWriter,				#isMetaSide : false			},			#name : #lineEnding,			#protocol : #accessing,			#sourceCode : 'lineEnding\r\tself explicitRequirement',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '440' ],		#self : OmReference [ '441' ],		#time : DateAndTime [ '2024-03-03T08:20:44.461-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTStreamWriter,				#isMetaSide : false			},			#name : #'nextPut:',			#protocol : #'writing low-level',			#sourceCode : 'nextPut: char\r\tself jsStream nextPut: char',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '441' ],		#self : OmReference [ '442' ],		#time : DateAndTime [ '2024-03-03T08:20:44.461-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTStreamWriter,				#isMetaSide : false			},			#name : #'nextPutAll:',			#protocol : #'writing low-level',			#sourceCode : 'nextPutAll: string\r\tself jsStream nextPutAll: string',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '442' ],		#self : OmReference [ '443' ],		#time : DateAndTime [ '2024-03-03T08:20:44.462-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTStreamWriter,				#isMetaSide : false			},			#name : #'print:',			#protocol : #'writing low-level',			#sourceCode : 'print: anObject\r\tanObject printJsOn: self jsStream',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '443' ],		#self : OmReference [ '444' ],		#time : DateAndTime [ '2024-03-03T08:20:44.462-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTStreamWriter,				#isMetaSide : false			},			#name : #space,			#protocol : #'writing low-level',			#sourceCode : 'space\r\tself jsStream space',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '444' ],		#self : OmReference [ '445' ],		#time : DateAndTime [ '2024-03-03T08:20:44.463-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTStreamWriter,				#isMetaSide : false			},			#name : #'writeJsSelector:',			#protocol : #writing,			#sourceCode : 'writeJsSelector: aSelector\r\tself writeJsSelector: aSelector onStream: self\r',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '445' ],		#self : OmReference [ '446' ],		#time : DateAndTime [ '2024-03-03T08:20:44.463-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTStreamWriter,				#isMetaSide : false			},			#name : #'writeJsSelector:onStream:',			#protocol : #writing,			#sourceCode : 'writeJsSelector: aSelector onStream: aStream\r\t| isBinary |\r\t(aSelector beginsWith: self jsNativePrefix) ifTrue: [ \r\t\t\t^ aStream nextPutAll: ((aSelector keywords first allButFirst: self jsNativePrefix size) copyWithout: $:) ].\r\tisBinary := aSelector isBinary.\r\taStream nextPutAll: self pharoJsSelectorPrefix.\r\taSelector do:[ :each | \r\t\t\tself writeSelectorChar: each on: aStream isInBinarySelector: isBinary ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '446' ],		#self : OmReference [ '447' ],		#time : DateAndTime [ '2024-03-03T08:20:44.464-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTStreamWriter,				#isMetaSide : false			},			#name : #'writeSelectorChar:on:isInBinarySelector:',			#protocol : #writing,			#sourceCode : 'writeSelectorChar: character on: aStream isInBinarySelector: isInBinarySelector\r\tisInBinarySelector ifTrue: [ \r\t\t\tcharacter asciiValue printOn: aStream.\r\t\t\t^aStream nextPut: $_ ].\r\tcharacter = $: ifTrue: [ \r\t\t^aStream nextPut: $_ ].\r\taStream nextPut: character',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '447' ],		#self : OmReference [ '448' ],		#time : DateAndTime [ '2024-03-03T08:20:44.464-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTStreamWriter,				#isMetaSide : false			},			#name : #'writeVariable:escapingIfIn:',			#protocol : #writing,			#sourceCode : 'writeVariable: aString escapingIfIn: aCollection\r\t(aCollection includes: aString) ifTrue: [ self nextPut: $$ ].\r\tself nextPutAll: aString',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '448' ],		#self : OmReference [ '449' ],		#time : DateAndTime [ '2024-03-03T08:20:44.465-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RBProgramNode,				#isMetaSide : false			},			#name : #isGlobalVariableNode,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isGlobalVariableNode\r\t^false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '449' ],		#self : OmReference [ '450' ],		#time : DateAndTime [ '2024-03-03T08:20:44.465-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RBProgramNode,				#isMetaSide : false			},			#name : #isLiteralNumberNode,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isLiteralNumberNode\r\t^false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '450' ],		#self : OmReference [ '451' ],		#time : DateAndTime [ '2024-03-03T08:20:44.466-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #'asJsAstUsing:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'asJsAstUsing: astConverter\r\r\t^ astConverter visitGlobalVariableNamed: self instanceSide name',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '451' ],		#self : OmReference [ '452' ],		#time : DateAndTime [ '2024-03-03T08:20:44.466-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #classInitializeSelector,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'classInitializeSelector\r\t(self hasClassMethod: #javascriptInitialize) ifTrue: [ ^#javascriptInitialize ].\r\t^#initialize',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '452' ],		#self : OmReference [ '453' ],		#time : DateAndTime [ '2024-03-03T08:20:44.467-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #'convertToJavascriptAstUsing:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'convertToJavascriptAstUsing: aPjAstConverter\r\r\t^ aPjAstConverter visitGlobalVariableNamed: self name',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '453' ],		#self : OmReference [ '454' ],		#time : DateAndTime [ '2024-03-03T08:20:44.467-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #'convertToJsUsing:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'convertToJsUsing: transpiler\r\ttranspiler convertClass: self.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '454' ],		#self : OmReference [ '455' ],		#time : DateAndTime [ '2024-03-03T08:20:44.468-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #hasJavascriptName,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'hasJavascriptName\r\t^self hasClassMethod: #javascriptName',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '455' ],		#self : OmReference [ '456' ],		#time : DateAndTime [ '2024-03-03T08:20:44.468-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #isFreeJavascriptValue,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isFreeJavascriptValue\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '456' ],		#self : OmReference [ '457' ],		#time : DateAndTime [ '2024-03-03T08:20:44.468-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #isJsClassPlaceholder,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isJsClassPlaceholder\r\r\tself hasJavascriptPlaceholder ifTrue: [ \r\t\t^ self javascriptPlaceholder isJsClassPlaceholder ].\r\t^self hasJavascriptName and: [self javascriptName ~= self name]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '457' ],		#self : OmReference [ '458' ],		#time : DateAndTime [ '2024-03-03T08:20:44.468-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #nameToUseForJsConversion,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'nameToUseForJsConversion\r\tself hasJavascriptPlaceholder ifTrue: [ ^self javascriptPlaceholder nameToUseForJsConversion].\r\tself hasJavascriptName ifFalse: [ ^self name].\r\t^self javascriptName',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '458' ],		#self : OmReference [ '459' ],		#time : DateAndTime [ '2024-03-03T08:20:44.469-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #needsClassDeclaration,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'needsClassDeclaration\r\r\t^self isJsClassPlaceholder not',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '459' ],		#self : OmReference [ '460' ],		#time : DateAndTime [ '2024-03-03T08:20:44.469-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #needsInitialization,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'needsInitialization\r\t^(self hasClassMethod: #initialize) or: [ self hasClassMethod: #javascriptInitialize ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '460' ],		#self : OmReference [ '461' ],		#time : DateAndTime [ '2024-03-03T08:20:44.469-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #'printJsOn:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'printJsOn: aStream\r\tself error: \'Class doesn\'\'t have a literal representation\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '461' ],		#self : OmReference [ '462' ],		#time : DateAndTime [ '2024-03-03T08:20:44.47-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Context,				#isMetaSide : false			},			#name : #'forScope:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'forScope: aScope \r\tself sourceNode scope == aScope ifTrue: [ ^self ].\r\t^self outerContext forScope: aScope',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '462' ],		#self : OmReference [ '463' ],		#time : DateAndTime [ '2024-03-03T08:20:44.47-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestPharoJsBaseTranspiler class',				#isMetaSide : true			},			#name : #ruleRBCollectionMessagesToExternalObjectRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBCollectionMessagesToExternalObjectRuleV1FalsePositive\r\t^ #(#(#(#RGMethodDefinition #(#PjTranspiler #poolReference:for: #false)) #\'2020-01-27T08:49:48.799166-05:00\') )',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '463' ],		#self : OmReference [ '464' ],		#time : DateAndTime [ '2024-03-03T08:20:44.47-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjJavascriptGlobals class',				#isMetaSide : true			},			#name : #'browserPolyfill:',			#protocol : #polyfill,			#sourceCode : 'browserPolyfill: aTranspiler\r\t<pharoJsSkip>',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '464' ],		#self : OmReference [ '465' ],		#time : DateAndTime [ '2024-03-03T08:20:44.47-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjJavascriptGlobals class',				#isMetaSide : true			},			#name : #'domPolyfill:',			#protocol : #polyfill,			#sourceCode : 'domPolyfill: aTranspiler\r\t<pharoJsSkip>',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '465' ],		#self : OmReference [ '466' ],		#time : DateAndTime [ '2024-03-03T08:20:44.47-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjJavascriptGlobals class',				#isMetaSide : true			},			#name : #isJavascriptGlobalsPool,			#protocol : #'pharojs support',			#sourceCode : 'isJavascriptGlobalsPool\r\t<pharoJsSkip>\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '466' ],		#self : OmReference [ '467' ],		#time : DateAndTime [ '2024-03-03T08:20:44.47-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjJavascriptGlobals class',				#isMetaSide : true			},			#name : #nodePackageName,			#protocol : #polyfill,			#sourceCode : 'nodePackageName\r\t<pharoJsSkip>\r" override this with the name of the package to be require\'d "\r\t^ nil',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '467' ],		#self : OmReference [ '468' ],		#time : DateAndTime [ '2024-03-03T08:20:44.47-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjJavascriptGlobals class',				#isMetaSide : true			},			#name : #'nodePolyfill:',			#protocol : #polyfill,			#sourceCode : 'nodePolyfill: aTranspiler\r\t<pharoJsSkip>\r\tself nodePackageName ifNil: [ ^ self ].\r\tself classVariables size = 1 ifFalse: [ PjJavascriptTranspilationError signal: \'node polyfills should only have 1 class variable\' ].\r\taTranspiler\r\t\tnextPutAll: \'var \';\r\t\tnextPutAll: self classVarNames first;\r\t\tnextPutAll: \'=Smalltalk.require("\';\r\t\tnextPutAll: self nodePackageName;\r\t\tnextPutAll: \'");\';cr',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '468' ],		#self : OmReference [ '469' ],		#time : DateAndTime [ '2024-03-03T08:20:44.471-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjJavascriptGlobals class',				#isMetaSide : true			},			#name : #requiredPolyfills,			#protocol : #polyfill,			#sourceCode : 'requiredPolyfills\r\t^ #()',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '469' ],		#self : OmReference [ '470' ],		#time : DateAndTime [ '2024-03-03T08:20:44.471-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjProcessPolyfill class',				#isMetaSide : true			},			#name : #'browserPolyfill:',			#protocol : #polyfill,			#sourceCode : 'browserPolyfill: aTranspiler\r\t<pharoJsSkip>\r\tsuper browserPolyfill: aTranspiler.\r\taTranspiler\r\t\tnextPutAll: \'var process=process||{exit:function(){window.close()}};\';cr',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '470' ],		#self : OmReference [ '471' ],		#time : DateAndTime [ '2024-03-03T08:20:44.471-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjWebSocketPolyfill class',				#isMetaSide : true			},			#name : #nodePackageName,			#protocol : #'pharojs globals',			#sourceCode : 'nodePackageName\r\t<pharoJsSkip>\r\t^ \'ws\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '471' ],		#self : OmReference [ '472' ],		#time : DateAndTime [ '2024-03-03T08:20:44.471-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'SharedPool class',				#isMetaSide : true			},			#name : #isJavascriptGlobalsPool,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isJavascriptGlobalsPool\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '472' ],		#self : OmReference [ '473' ],		#time : DateAndTime [ '2024-03-03T08:20:44.471-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LocalVariable,				#isMetaSide : false			},			#name : #'valueStartAtContext:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'valueStartAtContext: aContext\r\r\t| variableContext  |\r\t(aContext tempNames includes: self name) ifTrue: [ ^aContext tempNamed: self name].\r\tvariableContext := aContext forScope: self scope.\r\t^ self readFromContext: variableContext scope: self scope',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '473' ],		#self : OmReference [ '474' ],		#time : DateAndTime [ '2024-03-03T08:20:44.471-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FullBlockClosure,				#isMetaSide : false			},			#name : #closedBlockClass,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'closedBlockClass\r\r\t^ PjClosedFullBlockClosure',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '474' ],		#self : OmReference [ '475' ],		#time : DateAndTime [ '2024-03-03T08:20:44.472-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClosedFullBlockClosure,				#isMetaSide : false			},			#name : #'originalBlock:',			#protocol : #accessing,			#sourceCode : 'originalBlock: aBlock\r\treceiver := aBlock receiver.\r\tself basicOriginalBlock: aBlock.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '475' ],		#self : OmReference [ '476' ],		#time : DateAndTime [ '2024-03-03T08:20:44.472-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Dictionary,				#isMetaSide : false			},			#name : #isFreeJavascriptValue,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isFreeJavascriptValue\r\tself keysAndValuesDo: [ : key : value |\r\t\tkey isString ifFalse: [ ^ false ] .\r\t\tvalue isFreeJavascriptValue ifFalse: [ ^ false ] ].\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '476' ],		#self : OmReference [ '477' ],		#time : DateAndTime [ '2024-03-03T08:20:44.472-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Dictionary,				#isMetaSide : false			},			#name : #isLiteralJavascriptValue,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isLiteralJavascriptValue\r\tself keysAndValuesDo: [ : key : value |\r\t\tkey isString ifFalse: [ ^ false ] .\r\t\tvalue isLiteralJavascriptValue ifFalse: [ ^ false ] ].\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '477' ],		#self : OmReference [ '478' ],		#time : DateAndTime [ '2024-03-03T08:20:44.472-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Dictionary,				#isMetaSide : false			},			#name : #'printJsOn:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'printJsOn: aStream\r\t| first |\r\tfirst := true.\r\taStream nextPut: ${.\r\tself keysAndValuesDo:  [ : key : value |\r\t\t\tfirst ifFalse: [ aStream nextPut: $, ].\r\t\t\tkey printJsOn: aStream.\r\t\t\taStream nextPut: $:.\r\t\t\tvalue printJsOn: aStream.\r\t\t\tfirst := false\r\t].\r\taStream nextPut: $}',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '478' ],		#self : OmReference [ '479' ],		#time : DateAndTime [ '2024-03-03T08:20:44.472-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'SystemNavigation class',				#isMetaSide : true			},			#name : #'globalRefsForPharoJS:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'globalRefsForPharoJS: aClassOrLiteral\r\t^ (self default respondsTo: #allGlobalRefsOn:) ifTrue: [\r\t\t\tself default allGlobalRefsOn: aClassOrLiteral\r\t\t] ifFalse: [\r\t\t\tself default classRefsToClassName: aClassOrLiteral]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '479' ],		#self : OmReference [ '480' ],		#time : DateAndTime [ '2024-03-03T08:20:44.473-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Behavior,				#isMetaSide : false			},			#name : #'javascriptInheritsFrom:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'javascriptInheritsFrom: aClass \r\t"Answer whether the argument, aClass, is on the receiver\'s superclass \r\tchain."\r\r\t| aSuperclass jsClass |\r\tjsClass := aClass javascriptPlaceholderInheritance.\r\taSuperclass := self superclass.\r\t[aSuperclass == nil]\r\t\twhileFalse: \r\t\t\t[aSuperclass javascriptPlaceholderInheritance == jsClass ifTrue: [^true].\r\t\t\taSuperclass := aSuperclass superclass].\r\t^false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '480' ],		#self : OmReference [ '481' ],		#time : DateAndTime [ '2024-03-03T08:20:44.473-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SequenceableCollection,				#isMetaSide : false			},			#name : #'includes:before:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'includes: seq1 before: seq2\r\t| firstIndex |\r\tfirstIndex := self indexOfSubCollection: seq1 startingAt: 1 ifAbsent: [^ false].\r\tself indexOfSubCollection: seq2 startingAt: firstIndex ifAbsent: [ ^ false].\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '481' ],		#self : OmReference [ '482' ],		#time : DateAndTime [ '2024-03-03T08:20:44.473-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SequenceableCollection,				#isMetaSide : false			},			#name : #isFreeJavascriptValue,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isFreeJavascriptValue\r\t^ self allSatisfy: #isFreeJavascriptValue',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '482' ],		#self : OmReference [ '483' ],		#time : DateAndTime [ '2024-03-03T08:20:44.474-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SequenceableCollection,				#isMetaSide : false			},			#name : #isLiteralJavascriptValue,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isLiteralJavascriptValue\r\t^ self allSatisfy: #isLiteralJavascriptValue',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '483' ],		#self : OmReference [ '484' ],		#time : DateAndTime [ '2024-03-03T08:20:44.474-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SequenceableCollection,				#isMetaSide : false			},			#name : #'printJsOn:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'printJsOn: aStream\r\taStream nextPut: $[.\r\tself\r\t\tdo: [ : each |\r\t\t\teach printJsOn: aStream ]\r\t\tseparatedBy: [\r\t\t\taStream nextPut: $, ].\r\taStream nextPut: $].',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '484' ],		#self : OmReference [ '485' ],		#time : DateAndTime [ '2024-03-03T08:20:44.474-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ProtoObject class',				#isMetaSide : true			},			#name : #classToUseForJsConversion,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'classToUseForJsConversion\r\tself hasJavascriptPlaceholder ifFalse: [ ^self].\r\t^self javascriptPlaceholder',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '485' ],		#self : OmReference [ '486' ],		#time : DateAndTime [ '2024-03-03T08:20:44.474-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ProtoObject class',				#isMetaSide : true			},			#name : #'hasClassMethod:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'hasClassMethod: selector\r\t^self classSide includesSelector: selector',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '486' ],		#self : OmReference [ '487' ],		#time : DateAndTime [ '2024-03-03T08:20:44.474-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ProtoObject class',				#isMetaSide : true			},			#name : #'hasInstanceMethod:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'hasInstanceMethod: selector\r\t^self instanceSide includesSelector: selector',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '487' ],		#self : OmReference [ '488' ],		#time : DateAndTime [ '2024-03-03T08:20:44.475-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ProtoObject class',				#isMetaSide : true			},			#name : #hasJavascriptPlaceholder,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'hasJavascriptPlaceholder\r\t^self hasClassMethod: #javascriptPlaceholder',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '488' ],		#self : OmReference [ '489' ],		#time : DateAndTime [ '2024-03-03T08:20:44.475-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ProtoObject class',				#isMetaSide : true			},			#name : #javascriptPlaceholderInheritance,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'javascriptPlaceholderInheritance\r\tself hasJavascriptPlaceholder ifTrue: [ ^ self javascriptPlaceholder].\r\t^ self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '489' ],		#self : OmReference [ '490' ],		#time : DateAndTime [ '2024-03-03T08:20:44.475-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UndefinedObject,				#isMetaSide : false			},			#name : #asJSON,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'asJSON\r\t^ #null',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '490' ],		#self : OmReference [ '491' ],		#time : DateAndTime [ '2024-03-03T08:20:44.475-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UndefinedObject,				#isMetaSide : false			},			#name : #isLiteralJavascriptValue,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isLiteralJavascriptValue\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '491' ],		#self : OmReference [ '492' ],		#time : DateAndTime [ '2024-03-03T08:20:44.475-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UndefinedObject,				#isMetaSide : false			},			#name : #'printJsOn:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'printJsOn: aStream\r\taStream nextPutAll: self asJSON',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '492' ],		#self : OmReference [ '493' ],		#time : DateAndTime [ '2024-03-03T08:20:44.476-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Integer,				#isMetaSide : false			},			#name : #isLiteralJavascriptValue,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isLiteralJavascriptValue\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '493' ],		#self : OmReference [ '494' ],		#time : DateAndTime [ '2024-03-03T08:20:44.476-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Collection,				#isMetaSide : false			},			#name : #asJsAstBody,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'asJsAstBody\r\t^self asArray',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '494' ],		#self : OmReference [ '495' ],		#time : DateAndTime [ '2024-03-03T08:20:44.477-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Boolean,				#isMetaSide : false			},			#name : #isLiteralJavascriptValue,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isLiteralJavascriptValue\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '495' ],		#self : OmReference [ '496' ],		#time : DateAndTime [ '2024-03-03T08:20:44.477-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RBLiteralValueNode,				#isMetaSide : false			},			#name : #isLiteralNumberNode,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isLiteralNumberNode\r\t^self value isNumber',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '496' ],		#self : OmReference [ '497' ],		#time : DateAndTime [ '2024-03-03T08:20:44.477-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Float,				#isMetaSide : false			},			#name : #isLiteralJavascriptValue,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isLiteralJavascriptValue\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '497' ],		#self : OmReference [ '498' ],		#time : DateAndTime [ '2024-03-03T08:20:44.477-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Message class',				#isMetaSide : true			},			#name : #javascriptInitialize,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'javascriptInitialize\r\tPjCore messageClass: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '498' ],		#self : OmReference [ '499' ],		#time : DateAndTime [ '2024-03-03T08:20:44.477-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Character,				#isMetaSide : false			},			#name : #asJSON,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'asJSON\r\t^ self asString asJSON',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '499' ],		#self : OmReference [ '500' ],		#time : DateAndTime [ '2024-03-03T08:20:44.478-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Character,				#isMetaSide : false			},			#name : #isLiteralJavascriptValue,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isLiteralJavascriptValue\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '500' ],		#self : OmReference [ '501' ],		#time : DateAndTime [ '2024-03-03T08:20:44.478-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Character,				#isMetaSide : false			},			#name : #'printJsOn:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'printJsOn: jsStream\r\t^self asString printJsOn: jsStream',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '501' ],		#self : OmReference [ '502' ],		#time : DateAndTime [ '2024-03-03T08:20:44.478-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #asJSON,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'asJSON\r\t^ String streamContents: [:s | self printJsOn: s]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '502' ],		#self : OmReference [ '503' ],		#time : DateAndTime [ '2024-03-03T08:20:44.479-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #'asJsAstUsing:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'asJsAstUsing: astConverter\r\t^PjUnparsedStringNode string: self asJSON',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '503' ],		#self : OmReference [ '504' ],		#time : DateAndTime [ '2024-03-03T08:20:44.479-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #'convertToJavascriptAstUsing:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'convertToJavascriptAstUsing: aPjAstConverter\r\t^ PjLiteralValueNode value: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '504' ],		#self : OmReference [ '505' ],		#time : DateAndTime [ '2024-03-03T08:20:44.479-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #'convertToJsUsing:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'convertToJsUsing: aPjTranspiler\r\tself printJsOn: aPjTranspiler',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '505' ],		#self : OmReference [ '506' ],		#time : DateAndTime [ '2024-03-03T08:20:44.48-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #isFreeJavascriptValue,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isFreeJavascriptValue\r\t^ self isLiteralJavascriptValue',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '506' ],		#self : OmReference [ '507' ],		#time : DateAndTime [ '2024-03-03T08:20:44.48-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #isLiteralJavascriptValue,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isLiteralJavascriptValue\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '507' ],		#self : OmReference [ '508' ],		#time : DateAndTime [ '2024-03-03T08:20:44.48-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #isPjJavascriptAstNode,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isPjJavascriptAstNode\r\t^false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '508' ],		#self : OmReference [ '509' ],		#time : DateAndTime [ '2024-03-03T08:20:44.481-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #'isSimilarTo:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isSimilarTo: anObject\r\t^self = anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '509' ],		#self : OmReference [ '510' ],		#time : DateAndTime [ '2024-03-03T08:20:44.481-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #'printJsOn:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'printJsOn: aStream\r\tself printOn: aStream',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '510' ],		#self : OmReference [ '511' ],		#time : DateAndTime [ '2024-03-03T08:20:44.481-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAstConverter class',				#isMetaSide : true			},			#name : #jsCodeGeneratorPragmaKeyword,			#protocol : #accessing,			#sourceCode : 'jsCodeGeneratorPragmaKeyword\r\t"The argument of the pragma is a selector for class side message that generates javascript code that is used as the body of the method.\r\tThe smalltalk code if any is simply ignored."\r\t^#jsGenerator:',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '511' ],		#self : OmReference [ '512' ],		#time : DateAndTime [ '2024-03-03T08:20:44.481-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAstConverter class',				#isMetaSide : true			},			#name : #jsCodePragmaKeyword,			#protocol : #accessing,			#sourceCode : 'jsCodePragmaKeyword\r\t"The argument of the pragma provides javascript code that is used as the body of the method.\r\tThe smalltalk code if any is simply ignored."\r\t^#javascript:',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '512' ],		#self : OmReference [ '513' ],		#time : DateAndTime [ '2024-03-03T08:20:44.481-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAstConverter class',				#isMetaSide : true			},			#name : #jsLiteralGeneratorPragmaKeyword,			#protocol : #accessing,			#sourceCode : 'jsLiteralGeneratorPragmaKeyword\r\t"The argument of the pragma is a selector for class side message that generates javascript code that is used as the body of the method.\r\tThe smalltalk code if any is simply ignored."\r\t^#jsLiteralGenerator',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '513' ],		#self : OmReference [ '514' ],		#time : DateAndTime [ '2024-03-03T08:20:44.481-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'addAllConversions:',			#protocol : #conversions,			#sourceCode : 'addAllConversions: aCollection\r\tmessageConverter addAllConversions: aCollection',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '514' ],		#self : OmReference [ '515' ],		#time : DateAndTime [ '2024-03-03T08:20:44.481-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'addAllMessageConversions:',			#protocol : #initialize-release,			#sourceCode : 'addAllMessageConversions: conversions\r\tself messageConverter addAllConversions: conversions',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '515' ],		#self : OmReference [ '516' ],		#time : DateAndTime [ '2024-03-03T08:20:44.482-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #allowReturnsInBlocks,			#protocol : #accessing,			#sourceCode : 'allowReturnsInBlocks\r\tself isReturnLegalInBlocks: true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '516' ],		#self : OmReference [ '517' ],		#time : DateAndTime [ '2024-03-03T08:20:44.482-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'astForJsCode:',			#protocol : #visiting,			#sourceCode : 'astForJsCode: jsCode\r\t^ {(PjUnparsedStringNode\r\t\tstring:\r\t\t\t(String lf\r\t\t\t\tjoin:\r\t\t\t\t\t((jsCode\r\t\t\t\t\t\tregex:\r\t\t\t\t\t\t\t\'[^\r\t]*\'\r\t\t\t\t\t\tmatchesCollect: #yourself)\r\t\t\t\t\t\treject: [ :each | each isEmpty or: [ each beginsWith: \'//\' ] ])))}',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '517' ],		#self : OmReference [ '518' ],		#time : DateAndTime [ '2024-03-03T08:20:44.482-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'checkFree:',			#protocol : #visiting,			#sourceCode : 'checkFree: aRBVariableNode\r\t^ blockClosureAnalyser ifNotNil: [\r\t\tblockClosureAnalyser checkFree: aRBVariableNode]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '518' ],		#self : OmReference [ '519' ],		#time : DateAndTime [ '2024-03-03T08:20:44.482-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'checkSelfReturn:',			#protocol : #visiting,			#sourceCode : 'checkSelfReturn: result\r\tresult canPropogateReturns ifFalse: [\r\t\tblockNestingLevel = 0 ifTrue: [ needSelfReturn := true ]].\r\t^ result',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '519' ],		#self : OmReference [ '520' ],		#time : DateAndTime [ '2024-03-03T08:20:44.482-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #classForConversion,			#protocol : #accessing,			#sourceCode : 'classForConversion\r\t^ classForConversion',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '520' ],		#self : OmReference [ '521' ],		#time : DateAndTime [ '2024-03-03T08:20:44.482-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'classForConversion:',			#protocol : #accessing,			#sourceCode : 'classForConversion: anObject\r\tclassForConversion := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '521' ],		#self : OmReference [ '522' ],		#time : DateAndTime [ '2024-03-03T08:20:44.482-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'classForVariable:',			#protocol : #visiting,			#sourceCode : 'classForVariable: aRBVariableNode\r\r\t| methodNode |\r\tmethodNode := aRBVariableNode methodNode.\r\tmethodNode ifNotNil: [ ^ methodNode methodClass ].\r\t^ aRBVariableNode variable definingClass',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '522' ],		#self : OmReference [ '523' ],		#time : DateAndTime [ '2024-03-03T08:20:44.482-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'convertAst:withPrimitive:',			#protocol : #public,			#sourceCode : 'convertAst: ast withPrimitive: anInteger\r\tmethodPrimitive := anInteger.\r\t^self visit: ast',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '523' ],		#self : OmReference [ '524' ],		#time : DateAndTime [ '2024-03-03T08:20:44.482-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'convertBlock:',			#protocol : #public,			#sourceCode : 'convertBlock: aBlockClosure\r\tblockClosureAnalyser := PjBlockClosureAnalyser onBlock: aBlockClosure.\r\t[^ self visit: blockClosureAnalyser sourceNode\r\t] ensure: [blockClosureAnalyser := nil]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '524' ],		#self : OmReference [ '525' ],		#time : DateAndTime [ '2024-03-03T08:20:44.482-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'convertClosedBlock:',			#protocol : #public,			#sourceCode : 'convertClosedBlock: block\r\t| savedBlockClosureAnalyser |\r\tsavedBlockClosureAnalyser := blockClosureAnalyser.\r\tblockClosureAnalyser := PjBlockClosureAnalyser onBlock: block.\r\t[^ blockClosureAnalyser closeAst: (self visit: blockClosureAnalyser sourceNode) with: self\r\t] ensure: [blockClosureAnalyser := savedBlockClosureAnalyser]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '525' ],		#self : OmReference [ '526' ],		#time : DateAndTime [ '2024-03-03T08:20:44.483-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'convertFirstStatementOfBlock:',			#protocol : #public,			#sourceCode : 'convertFirstStatementOfBlock: stAst\r\tself reset.\r\t^ self visit: stAst',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '526' ],		#self : OmReference [ '527' ],		#time : DateAndTime [ '2024-03-03T08:20:44.483-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'convertValuedBlock:',			#protocol : #public,			#sourceCode : 'convertValuedBlock: block\r\t| closedBlockAst closedBlockAstArgs|\r\tclosedBlockAst := self convertClosedBlock: block.\r\tclosedBlockAstArgs := block arguments collect: [: each | each asJsAstUsing: self].\r\t^PjApplyNode func: closedBlockAst args: closedBlockAstArgs',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '527' ],		#self : OmReference [ '528' ],		#time : DateAndTime [ '2024-03-03T08:20:44.483-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'discoveredGlobalsPool:',			#protocol : #visiting,			#sourceCode : 'discoveredGlobalsPool: aClass\r\tself transpiler ifNotNil: [ \r\ttranspiler discoveredGlobalsPool: aClass]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '528' ],		#self : OmReference [ '529' ],		#time : DateAndTime [ '2024-03-03T08:20:44.483-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'discoveredMessage:',			#protocol : #visiting,			#sourceCode : 'discoveredMessage: selector\r\t\tself transpiler ifNil: [ ^ self ].\r\t\ttranspiler discoveredMessage: selector',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '529' ],		#self : OmReference [ '530' ],		#time : DateAndTime [ '2024-03-03T08:20:44.483-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'discoveredReferenceToClass:',			#protocol : #visiting,			#sourceCode : 'discoveredReferenceToClass: aClass\r\tself transpiler ifNil: [ ^self ].\r\tself transpiler discoveredReferenceToClass: aClass',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '530' ],		#self : OmReference [ '531' ],		#time : DateAndTime [ '2024-03-03T08:20:44.483-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'handleJsCodeGeneratorPragmaInMethodNode:',			#protocol : #visiting,			#sourceCode : 'handleJsCodeGeneratorPragmaInMethodNode: aRBMethodNode\r\t| jsGeneratorPragma generatorSelector jsCode |\r\tjsGeneratorPragma := aRBMethodNode\r\t\tpragmaNamed: self jsCodeGeneratorPragmaKeyword.\r\tgeneratorSelector := jsGeneratorPragma arguments first.\r\tjsCode := classForConversion instanceSide\r\t\tperform: generatorSelector value with: transpiler.\r\t^ self astForJsCode: jsCode',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '531' ],		#self : OmReference [ '532' ],		#time : DateAndTime [ '2024-03-03T08:20:44.483-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'handleJsCodePragmaInMethodNode:',			#protocol : #visiting,			#sourceCode : 'handleJsCodePragmaInMethodNode: aRBMethodNode\r\t| jsCodePragma jsCode |\r\tjsCodePragma := aRBMethodNode pragmaNamed: self jsCodePragmaKeyword.\r\tjsCode := jsCodePragma arguments first value.\r\t^self astForJsCode: jsCode',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '532' ],		#self : OmReference [ '533' ],		#time : DateAndTime [ '2024-03-03T08:20:44.483-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'handleJsLiteralGeneratorPragmaInMethodNode:',			#protocol : #visiting,			#sourceCode : 'handleJsLiteralGeneratorPragmaInMethodNode: aRBMethodNode \r\t| jsCode forClass selector result |\r\tforClass := aRBMethodNode scope outerScope.\r\tselector := aRBMethodNode selector.\r\tjsCode := String streamContents: [: s |\r\t\ts nextPutAll: \'return \'.\r\t\tresult := forClass isMeta ifTrue: [\r\t\t\t\tforClass instanceSide perform: selector\r\t\t\t] ifFalse: [\r\t\t\t\tforClass basicNew perform: selector\r\t\t\t].\r\t\tresult isLiteralJavascriptValue ifFalse: [ PjJavascriptTranspilationError signal: forClass asString,\'>>#\',selector,\' returns a value with no literal Javascript representation\'].\r\t\tresult printJsOn: s.\r\t].\r\t^ self astForJsCode: jsCode',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '533' ],		#self : OmReference [ '534' ],		#time : DateAndTime [ '2024-03-03T08:20:44.483-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'handlePragmaInMethodNode:',			#protocol : #visiting,			#sourceCode : 'handlePragmaInMethodNode: aRBMethodNode\r\t| body |\r\t(aRBMethodNode hasPragmaNamed: self jsCodePragmaKeyword)\r\t\tifTrue: [ ^self handleJsCodePragmaInMethodNode: aRBMethodNode ].\r\t(aRBMethodNode hasPragmaNamed: self jsCodeGeneratorPragmaKeyword)\r\t\tifTrue: [ ^self handleJsCodeGeneratorPragmaInMethodNode: aRBMethodNode ].\r\t(aRBMethodNode hasPragmaNamed: self jsLiteralGeneratorPragmaKeyword)\r\t\tifTrue: [ \r\t\t\t^self handleJsLiteralGeneratorPragmaInMethodNode: aRBMethodNode ].\r\tpushingReturnClass := nil.\t"PjReturnNode"\r\tneedSelfReturn := false.\r\t(methodPrimitive ~= 0\r\t\tand: [ methodPrimitive ~= 256 and: [ aRBMethodNode statements isEmpty ] ])\r\t\tifTrue: [ PjJavascriptTranspilationError\r\t\t\t\tsignal: \'primitive method with no fallback code: \', aRBMethodNode selector ].\r\tbody := self visitAllNodes: aRBMethodNode statements.\r\t(needSelfReturn\r\t\tand: [ body isEmpty or: [ body expressions last isReturnOrThrow not ] ])\r\t\tifTrue: [ body addLast: (PjReturnNode expression: PjSelfNode new) ].\r\tself hasNonLocalReturns\r\t\tifTrue: [ body := PjTryNode body: body ].\r\t^ body',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '534' ],		#self : OmReference [ '535' ],		#time : DateAndTime [ '2024-03-03T08:20:44.484-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'handleReturn:',			#protocol : #visiting,			#sourceCode : 'handleReturn: aBlock\r\t| savePushingReturnClass result |\r\tsavePushingReturnClass := pushingReturnClass.\r\tpushingReturnClass := nil.\r\t[\r\t\tresult := aBlock value\r\t] ensure: [\r\t\tpushingReturnClass := savePushingReturnClass.\r\t].\r\tself checkSelfReturn: PjSelfNode new. " flag to add a return, because the block didn\'t "\r\t^ result',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '535' ],		#self : OmReference [ '536' ],		#time : DateAndTime [ '2024-03-03T08:20:44.484-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #hasInBlockSelfReferences,			#protocol : #accessing,			#sourceCode : 'hasInBlockSelfReferences\r\t^hasInBlockSelfReferences',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '536' ],		#self : OmReference [ '537' ],		#time : DateAndTime [ '2024-03-03T08:20:44.484-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'hasInBlockSelfReferences:',			#protocol : #accessing,			#sourceCode : 'hasInBlockSelfReferences: aBoolean\r\thasInBlockSelfReferences := aBoolean',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '537' ],		#self : OmReference [ '538' ],		#time : DateAndTime [ '2024-03-03T08:20:44.484-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #hasNonLocalReturns,			#protocol : #accessing,			#sourceCode : 'hasNonLocalReturns\r\t^ hasNonLocalReturns',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '538' ],		#self : OmReference [ '539' ],		#time : DateAndTime [ '2024-03-03T08:20:44.484-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'hasNonLocalReturns:',			#protocol : #accessing,			#sourceCode : 'hasNonLocalReturns: anObject\r\thasNonLocalReturns := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '539' ],		#self : OmReference [ '540' ],		#time : DateAndTime [ '2024-03-03T08:20:44.484-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'inExpressionDo:',			#protocol : #accessing,			#sourceCode : 'inExpressionDo: aBlock\r\t| savePushing saveNeedSelfReturn |\r\t^ [\r\t\texpressionNestingLevel := expressionNestingLevel + 1.\r\t\tsavePushing := pushingReturnClass.\r\t\tsaveNeedSelfReturn := needSelfReturn.\r\t\tpushingReturnClass := nil.\r\t\taBlock value\r\t] ensure: [\r\t\tneedSelfReturn := saveNeedSelfReturn.\r\t\tpushingReturnClass := savePushing.\r\t\texpressionNestingLevel := expressionNestingLevel - 1\r\t]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '540' ],		#self : OmReference [ '541' ],		#time : DateAndTime [ '2024-03-03T08:20:44.484-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself messageConverter: self messageConverterClass new.\r\tblockNestingLevel := 0.\r\tloopNestingLevel := 0.\r\texpressionNestingLevel := 0.\r\tself resetExtraTempVariablesToDeclare.\r\tself allowReturnsInBlocks.\r\textraBindings := Dictionary new.\r\tself reset.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '541' ],		#self : OmReference [ '542' ],		#time : DateAndTime [ '2024-03-03T08:20:44.484-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #isInBlock,			#protocol : #testing,			#sourceCode : 'isInBlock\r\t^blockNestingLevel > 0',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '542' ],		#self : OmReference [ '543' ],		#time : DateAndTime [ '2024-03-03T08:20:44.484-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #isInExpression,			#protocol : #testing,			#sourceCode : 'isInExpression\r\t^ expressionNestingLevel > 0',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '543' ],		#self : OmReference [ '544' ],		#time : DateAndTime [ '2024-03-03T08:20:44.484-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #isReturnLegalInBlocks,			#protocol : #accessing,			#sourceCode : 'isReturnLegalInBlocks\r\t^isReturnLegalInBlocks',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '544' ],		#self : OmReference [ '545' ],		#time : DateAndTime [ '2024-03-03T08:20:44.485-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'isReturnLegalInBlocks:',			#protocol : #accessing,			#sourceCode : 'isReturnLegalInBlocks: aBoolean\r\tisReturnLegalInBlocks := aBoolean',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '545' ],		#self : OmReference [ '546' ],		#time : DateAndTime [ '2024-03-03T08:20:44.485-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #jsCodeGeneratorPragmaKeyword,			#protocol : #accessing,			#sourceCode : 'jsCodeGeneratorPragmaKeyword\r\t^self class jsCodeGeneratorPragmaKeyword',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '546' ],		#self : OmReference [ '547' ],		#time : DateAndTime [ '2024-03-03T08:20:44.485-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #jsCodePragmaKeyword,			#protocol : #accessing,			#sourceCode : 'jsCodePragmaKeyword\r\t^self class jsCodePragmaKeyword',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '547' ],		#self : OmReference [ '548' ],		#time : DateAndTime [ '2024-03-03T08:20:44.485-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #jsLiteralGeneratorPragmaKeyword,			#protocol : #visiting,			#sourceCode : 'jsLiteralGeneratorPragmaKeyword\r\t^ self class jsLiteralGeneratorPragmaKeyword',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '548' ],		#self : OmReference [ '549' ],		#time : DateAndTime [ '2024-03-03T08:20:44.485-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #messageConverter,			#protocol : #accessing,			#sourceCode : 'messageConverter\r\t^ messageConverter',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '549' ],		#self : OmReference [ '550' ],		#time : DateAndTime [ '2024-03-03T08:20:44.485-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'messageConverter:',			#protocol : #accessing,			#sourceCode : 'messageConverter: anObject\r\tmessageConverter := anObject.\r\tmessageConverter astConverter: self.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '550' ],		#self : OmReference [ '551' ],		#time : DateAndTime [ '2024-03-03T08:20:44.485-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #messageConverterClass,			#protocol : #initialize-release,			#sourceCode : 'messageConverterClass\r\t^PjMessageConverter',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '551' ],		#self : OmReference [ '552' ],		#time : DateAndTime [ '2024-03-03T08:20:44.485-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #needsAllPaths,			#protocol : #accessing,			#sourceCode : 'needsAllPaths\r\t^ self isInExpression or: [ pushingReturnClass notNil]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '552' ],		#self : OmReference [ '553' ],		#time : DateAndTime [ '2024-03-03T08:20:44.486-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #newTemp,			#protocol : #'temp vars',			#sourceCode : 'newTemp\r\t| tempName |\r\ttempName := self tempName.\r\textraTempVariablesToDeclare add: tempName.\r\t^tempName',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '553' ],		#self : OmReference [ '554' ],		#time : DateAndTime [ '2024-03-03T08:20:44.486-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'newTemp:',			#protocol : #'temp vars',			#sourceCode : 'newTemp: tempName\r\textraTempVariablesToDeclare add: tempName.\r\t^ tempName',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '554' ],		#self : OmReference [ '555' ],		#time : DateAndTime [ '2024-03-03T08:20:44.486-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #nonNilIdentifiers,			#protocol : #'non-nil handling',			#sourceCode : 'nonNilIdentifiers\r\t^ nonNilIdentifiers ifNil: [ nonNilIdentifiers := Stack new ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '555' ],		#self : OmReference [ '556' ],		#time : DateAndTime [ '2024-03-03T08:20:44.488-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #preventNonLocalReturns,			#protocol : #public,			#sourceCode : 'preventNonLocalReturns\r\tself isReturnLegalInBlocks: false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '556' ],		#self : OmReference [ '557' ],		#time : DateAndTime [ '2024-03-03T08:20:44.488-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'removeAllConversions:',			#protocol : #conversions,			#sourceCode : 'removeAllConversions: aCollection\r\tmessageConverter removeAllConversions: aCollection',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '557' ],		#self : OmReference [ '558' ],		#time : DateAndTime [ '2024-03-03T08:20:44.488-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'removeAllMessageConversions:',			#protocol : #initialize-release,			#sourceCode : 'removeAllMessageConversions: conversions\r\tself messageConverter removeAllConversions: conversions',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '558' ],		#self : OmReference [ '559' ],		#time : DateAndTime [ '2024-03-03T08:20:44.489-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #reset,			#protocol : #public,			#sourceCode : 'reset\r\tself hasInBlockSelfReferences: false.\r\tself hasNonLocalReturns: false.\r\tpushingReturnClass := nil.\r\ttempNumber := 0.\r\ttempMaxNumber := 0',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '559' ],		#self : OmReference [ '560' ],		#time : DateAndTime [ '2024-03-03T08:20:44.489-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #resetExtraTempVariablesToDeclare,			#protocol : #initialize-release,			#sourceCode : 'resetExtraTempVariablesToDeclare\r\textraTempVariablesToDeclare := Set new.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '560' ],		#self : OmReference [ '561' ],		#time : DateAndTime [ '2024-03-03T08:20:44.489-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'returnNodeWith:',			#protocol : #visiting,			#sourceCode : 'returnNodeWith: someNode\r\t| result |\r\tresult := someNode acceptVisitor: self.\r\tpushingReturnClass ifNil: [ ^ self checkSelfReturn: result ].\r\tresult canPropogateReturns ifTrue: [ ^ result ].\r\t^ pushingReturnClass expression: result',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '561' ],		#self : OmReference [ '562' ],		#time : DateAndTime [ '2024-03-03T08:20:44.489-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'setExtraBindings:',			#protocol : #public,			#sourceCode : 'setExtraBindings: aDictionary\r\textraBindings := aDictionary',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '562' ],		#self : OmReference [ '563' ],		#time : DateAndTime [ '2024-03-03T08:20:44.489-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'signal:ifClosedBlockReferences:',			#protocol : #visiting,			#sourceCode : 'signal: varType ifClosedBlockReferences: id\r\tblockClosureAnalyser\r\t\tifNotNil: [ PjJavascriptTranspilationError\r\t\t\t\tsignal: \'reference to \', varType, \' in block: \' , id ].',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '563' ],		#self : OmReference [ '564' ],		#time : DateAndTime [ '2024-03-03T08:20:44.489-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #tempMaxNumber,			#protocol : #accessing,			#sourceCode : 'tempMaxNumber\r\t^ tempMaxNumber',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '564' ],		#self : OmReference [ '565' ],		#time : DateAndTime [ '2024-03-03T08:20:44.489-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'tempMaxNumber:',			#protocol : #accessing,			#sourceCode : 'tempMaxNumber: anObject\r\ttempMaxNumber := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '565' ],		#self : OmReference [ '566' ],		#time : DateAndTime [ '2024-03-03T08:20:44.489-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #tempName,			#protocol : #'temp vars',			#sourceCode : 'tempName\r\ttempNumber := tempNumber + 1.\r\ttempNumber > self tempMaxNumber ifTrue: [ self tempMaxNumber: tempNumber ].\r\t^ PjStringGenerator tempNamePrefix, tempNumber asString',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '566' ],		#self : OmReference [ '567' ],		#time : DateAndTime [ '2024-03-03T08:20:44.489-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'tempNameFree:',			#protocol : #'temp vars',			#sourceCode : 'tempNameFree: temp\r\ttemp ifNil: [ ^ self ].\r\tPjStringGenerator tempNamePrefix, tempNumber asString = temp ifFalse: [^ self].\r\ttempNumber := tempNumber - 1',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '567' ],		#self : OmReference [ '568' ],		#time : DateAndTime [ '2024-03-03T08:20:44.489-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'transpilationError:',			#protocol : #'error handling',			#sourceCode : 'transpilationError: aString \r\t^ PjJavascriptTranspilationError signal: aString,(currentConvertingMethod ifNil: [\r\t\t\t\'\'\r\t\t] ifNotNil: [\r\t\t\t\' - found in \',currentConvertingMethod methodReference asString\r\t\t])',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '568' ],		#self : OmReference [ '569' ],		#time : DateAndTime [ '2024-03-03T08:20:44.49-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #transpiler,			#protocol : #accessing,			#sourceCode : 'transpiler\r\t^ transpiler',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '569' ],		#self : OmReference [ '570' ],		#time : DateAndTime [ '2024-03-03T08:20:44.49-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'transpiler:',			#protocol : #accessing,			#sourceCode : 'transpiler: aPjTranspiler\r\ttranspiler := aPjTranspiler',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '570' ],		#self : OmReference [ '571' ],		#time : DateAndTime [ '2024-03-03T08:20:44.49-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visit:',			#protocol : #visiting,			#sourceCode : 'visit: aRBAstNode \r\t^aRBAstNode acceptVisitor: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '571' ],		#self : OmReference [ '572' ],		#time : DateAndTime [ '2024-03-03T08:20:44.49-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitAllNodes:',			#protocol : #visiting,			#sourceCode : 'visitAllNodes: someRBNodes\r\t| expressions lastExpression savedPushing |\r\tsomeRBNodes ifEmpty: [ ^ self checkSelfReturn: (PjSequenceNode expressions: OrderedCollection new)].\r\texpressions := [\r\t\t\tsavedPushing := pushingReturnClass.\r\t\t\tpushingReturnClass := nil.\r\t\t\tsomeRBNodes allButLast collect: [ :each |\r\t\t\t\tself visit: each ]\r\t\t] ensure: [\r\t\t\tpushingReturnClass := savedPushing\r\t\t].\r\tlastExpression := self returnNodeWith: someRBNodes last.\r\texpressions addLast: lastExpression.\r\t^ PjSequenceNode expressions: expressions',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '572' ],		#self : OmReference [ '573' ],		#time : DateAndTime [ '2024-03-03T08:20:44.49-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitArgumentVariableNode:',			#protocol : #visiting,			#sourceCode : 'visitArgumentVariableNode: aRBVariableNode \r\t(self checkFree: aRBVariableNode) ifNotNil: [ : result | ^ result].\r\t^PjArgumentNode identifier: aRBVariableNode name',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '573' ],		#self : OmReference [ '574' ],		#time : DateAndTime [ '2024-03-03T08:20:44.49-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitArrayNode:',			#protocol : #visiting,			#sourceCode : 'visitArrayNode: aRBArrayNode\r\t^ self inExpressionDo: [PjArrayNode expressions: (aRBArrayNode statements collect: [: each | self visit: each ])]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '574' ],		#self : OmReference [ '575' ],		#time : DateAndTime [ '2024-03-03T08:20:44.49-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitAssignmentNode:',			#protocol : #visiting,			#sourceCode : 'visitAssignmentNode: aRBAssignmentNode \r\t^PjAssignNode \r\t\ttarget:  (aRBAssignmentNode variable acceptVisitor: self) \r\t\texpression: (self inExpressionDo: [aRBAssignmentNode value acceptVisitor: self]).',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '575' ],		#self : OmReference [ '576' ],		#time : DateAndTime [ '2024-03-03T08:20:44.49-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitBlockNode:',			#protocol : #visiting,			#sourceCode : 'visitBlockNode: aRBBlockNode\r\t| expressions savedExpressionNestingLevel savePushing savedExtraTempVariablesToDeclare extaTempVars |\r\t[\r\t\tsavedExtraTempVariablesToDeclare := extraTempVariablesToDeclare.\r\t\tself resetExtraTempVariablesToDeclare.\r\t\tblockNestingLevel := blockNestingLevel + 1.\r\t\tsavedExpressionNestingLevel := expressionNestingLevel.\r\t\texpressionNestingLevel := 0.\r\t\tsavePushing := pushingReturnClass.\r\t\tpushingReturnClass := PjReturnNode.\r\t\texpressions := self visitAllNodes: (aRBBlockNode statements ifEmpty: [ OrderedCollection with: RBLiteralValueNode new ])\r\t] ensure: [\r\t\textaTempVars := extraTempVariablesToDeclare.\r\t\textraTempVariablesToDeclare := savedExtraTempVariablesToDeclare.\r\t\tpushingReturnClass := savePushing.\r\t\texpressionNestingLevel := savedExpressionNestingLevel.\r\t\tblockNestingLevel := blockNestingLevel - 1\r\t].\r\t^ PjBlockNode\r\t\tparameters: aRBBlockNode argumentNames\r\t\tlocals: aRBBlockNode temporaryNames, extaTempVars asArray\r\t\tbody: expressions',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '576' ],		#self : OmReference [ '577' ],		#time : DateAndTime [ '2024-03-03T08:20:44.49-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitCascadeNode:',			#protocol : #visiting,			#sourceCode : 'visitCascadeNode: aRBCascadeNode\r\r\t| expressions receiver messageNode |\r\treceiver := aRBCascadeNode receiver.\r\t(receiver isSelfVariable or: [ receiver isSuperVariable ]) ifFalse: [ \r\t\treceiver := PjTemporaryNode named: self newTemp ].\r\texpressions := aRBCascadeNode messages collect: [ :each | \r\t\t               messageNode := RBMessageNode\r\t\t\t                              receiver: receiver\r\t\t\t                              selector: each selector\r\t\t\t                              arguments: each arguments.\r\t\t               messageNode parent: aRBCascadeNode parent.\r\t\t               self visitMessageNode: messageNode isNonNil: true ].\r\treceiver = aRBCascadeNode receiver ifFalse: [ \r\t\texpressions addFirst:\r\t\t\t(PjAssignNode\r\t\t\t\t target: (self visit: receiver)\r\t\t\t\t expression: (PjApplyNode\r\t\t\t\t\t\t  func: (PjFieldNode\r\t\t\t\t\t\t\t\t   target: (self visit: aRBCascadeNode receiver)\r\t\t\t\t\t\t\t\t   selectorNode: nil\r\t\t\t\t\t\t\t\t   isNonNil: false)\r\t\t\t\t\t\t  args: nil)) ].\r\t^ PjSequenceNode expressions: expressions',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '577' ],		#self : OmReference [ '578' ],		#time : DateAndTime [ '2024-03-03T08:20:44.491-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitClassOrPoolVariable:id:',			#protocol : #visiting,			#sourceCode : 'visitClassOrPoolVariable: aRBVariableNode id: id\r\t| variableClass |\r\tvariableClass := self classForVariable: aRBVariableNode.\r\t(variableClass instanceSide allClassVarNames includes: id)\r\t\tifTrue: [ self signal: \'class variable\' ifClosedBlockReferences: id.\r\t\t\t[ variableClass isNil\r\t\t\t\tor: [ variableClass classVarNames includes: id ] ]\r\t\t\t\twhileFalse: [ variableClass := variableClass superclass ].\r\t\t\t^ (PjClassVariableNode identifier: id)\r\t\t\t\t\t\tpoolReference: variableClass;\r\t\t\t\t\t\tmyClass: self classForConversion;\r\t\t\t\t\t\tyourself\r\t\t\t\t ].\r\t(variableClass instanceSide sharedPoolOfVarNamedRecursive: id)\r\t\tifNotNil: [ :pool | \r\t\t\tpool isJavascriptGlobalsPool\r\t\t\t\tifTrue: [ self discoveredGlobalsPool: pool.\r\t\t\t\t\t^ PjGlobalNode identifier: id ].\r\t\t\tself signal: \'pool\' ifClosedBlockReferences: id.\r\t\t\t^ (PjPoolVariableNode identifier: id)\r\t\t\t\t\tpoolReference: pool;\r\t\t\t\t\tmyClass: self classForConversion;\r\t\t\t\t\tyourself ].\r\tPjJavascriptTranspilationError signal: \'pool or class variable isn\'\'t: \' , id',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '578' ],		#self : OmReference [ '579' ],		#time : DateAndTime [ '2024-03-03T08:20:44.491-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitClassVariableNode:',			#protocol : #visiting,			#sourceCode : 'visitClassVariableNode: aRBVariableNode \r\t^self visitGlobalNode: aRBVariableNode',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '579' ],		#self : OmReference [ '580' ],		#time : DateAndTime [ '2024-03-03T08:20:44.491-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitGlobalNode:',			#protocol : #visiting,			#sourceCode : 'visitGlobalNode: aRBGlobalNode\r\t| global id |\r\tid := aRBGlobalNode name.\r\tglobal := Smalltalk\r\t\tat: id\r\t\tifAbsent: [ ^ self visitClassOrPoolVariable: aRBGlobalNode id: id ].\r\tglobal isClass\r\t\tifFalse: [ self signal: \'global\' ifClosedBlockReferences: id.\r\t\t\t^ PjGlobalNode identifier: id ].\r\tself discoveredReferenceToClass: global.\r\t^ PjClassNode identifier: global nameToUseForJsConversion',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '580' ],		#self : OmReference [ '581' ],		#time : DateAndTime [ '2024-03-03T08:20:44.491-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitGlobalVariableNamed:',			#protocol : #visiting,			#sourceCode : 'visitGlobalVariableNamed: name\r\r\t| globalVariable globalVariableNode |\r\tglobalVariable := GlobalVariable\r\t\t                  key: name\r\t\t                  value: nil.\r\tglobalVariableNode := RBVariableNode named: globalVariable key.\r\tglobalVariableNode variable: globalVariableNode.\r\t^ self visitGlobalNode: globalVariableNode',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '581' ],		#self : OmReference [ '582' ],		#time : DateAndTime [ '2024-03-03T08:20:44.491-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitGlobalVariableNode:',			#protocol : #visiting,			#sourceCode : 'visitGlobalVariableNode: aRBVariableNode \r\t^self visitGlobalNode: aRBVariableNode.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '582' ],		#self : OmReference [ '583' ],		#time : DateAndTime [ '2024-03-03T08:20:44.491-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitInlineBlock:',			#protocol : #visiting,			#sourceCode : 'visitInlineBlock: aRBProgramNode\r\t| statements  |\r\taRBProgramNode isBlock ifFalse: [\r\t\t^ self returnNodeWith: aRBProgramNode ].\r\tstatements := (aRBProgramNode statements ifEmpty: [RBLiteralValueNode new]\r\t\t\t) copy asOrderedCollection.\r\taRBProgramNode temporaries do: [ : variable |\r\t\textraTempVariablesToDeclare add: variable name.\r\t\tloopNestingLevel >0 ifTrue: [\r\t\t\tstatements addFirst: (RBAssignmentNode variable: variable value: RBLiteralValueNode new).\r\t]].\r\t^ (self visitAllNodes: statements) asSimpleNode.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '583' ],		#self : OmReference [ '584' ],		#time : DateAndTime [ '2024-03-03T08:20:44.491-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitInlineLoopBlock:',			#protocol : #visiting,			#sourceCode : 'visitInlineLoopBlock: aRBProgramNode\r\tloopNestingLevel := loopNestingLevel + 1.\r\t[\r\t\t^ self visitInlineBlock: aRBProgramNode\r\t] ensure: [ loopNestingLevel := loopNestingLevel - 1 ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '584' ],		#self : OmReference [ '585' ],		#time : DateAndTime [ '2024-03-03T08:20:44.491-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitInstanceVariableNode:',			#protocol : #visiting,			#sourceCode : 'visitInstanceVariableNode: aRBInstanceVariableNode\r\t(self checkFree: aRBInstanceVariableNode) ifNotNil: [ : result | ^ result].\r\t^PjFieldNode target: (self visitSelfNode: nil) selectorNode: (PjInstanceVariableNode identifier: aRBInstanceVariableNode name) isNonNil: true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '585' ],		#self : OmReference [ '586' ],		#time : DateAndTime [ '2024-03-03T08:20:44.491-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitLiteralArrayNode:',			#protocol : #visiting,			#sourceCode : 'visitLiteralArrayNode: aRBLiteralArrayNode \r\t^ PjArrayNode expressions: (aRBLiteralArrayNode contents collect: [: each | each acceptVisitor: self])',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '586' ],		#self : OmReference [ '587' ],		#time : DateAndTime [ '2024-03-03T08:20:44.492-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitLiteralNode:',			#protocol : #visiting,			#sourceCode : 'visitLiteralNode: aRBLiteralValueNode \r\t^ aRBLiteralValueNode value ifNil: [\r\t\t\tPjNilNode new\r\t\t] ifNotNil: [ : nonNil |\r\t\t\tPjLiteralValueNode value: nonNil\r\t\t]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '587' ],		#self : OmReference [ '588' ],		#time : DateAndTime [ '2024-03-03T08:20:44.492-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitLiteralValueNode:',			#protocol : #visiting,			#sourceCode : 'visitLiteralValueNode: aRBLiteralValueNode \r\t^ aRBLiteralValueNode value ifNil: [\r\t\t\tPjNilNode new\r\t\t] ifNotNil: [ : nonNil |\r\t\t\tPjLiteralValueNode value: nonNil\r\t\t]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '588' ],		#self : OmReference [ '589' ],		#time : DateAndTime [ '2024-03-03T08:20:44.492-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitMessageNode:',			#protocol : #visiting,			#sourceCode : 'visitMessageNode: aRBMessageNode \r\t^ self visitMessageNode: aRBMessageNode isNonNil: false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '589' ],		#self : OmReference [ '590' ],		#time : DateAndTime [ '2024-03-03T08:20:44.492-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitMessageNode:isNonNil:',			#protocol : #visiting,			#sourceCode : 'visitMessageNode: aRBMessageNode isNonNil: isNonNil\r\t| target savedPushingReturnClass |\r\t(self messageConverter\r\t\tconvert: aRBMessageNode selector\r\t\treceiver: aRBMessageNode receiver\r\t\targs: aRBMessageNode arguments) ifNotNil: [ : ast | ^ast ].\r\tself discoveredMessage: aRBMessageNode selector.\r\t[\r\t\tsavedPushingReturnClass := pushingReturnClass.\r\t\tpushingReturnClass := nil.\r\t\ttarget := self visit: aRBMessageNode receiver.\r\t\t^PjApplyNode\r\t\t\tfunc: (PjFieldNode\r\t\t\t\ttarget: target\r\t\t\t\tselectorNode: (PjMessageSelectorNode identifier: aRBMessageNode selector)\r\t\t\t\tisNonNil: (isNonNil or: [target isNonNilNode or: [aRBMessageNode selector beginsWith: PjTranspiler jsNativePrefix]]))\r\t\t\targs:  (aRBMessageNode arguments collect: [ : each | self inExpressionDo: [each acceptVisitor: self] ])\r\t] ensure: [\r\t\tpushingReturnClass := savedPushingReturnClass ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '590' ],		#self : OmReference [ '591' ],		#time : DateAndTime [ '2024-03-03T08:20:44.492-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitMethodNode:',			#protocol : #visiting,			#sourceCode : 'visitMethodNode: aRBMethodNode\r\t| body extraTempVars |\r\t[\r\t\tcurrentConvertingMethod := aRBMethodNode compiledMethod.\r\t\tself resetExtraTempVariablesToDeclare.\r\t\tself reset.\r\t\tbody := self handlePragmaInMethodNode: aRBMethodNode.\r\t] ensure:[\r\t\textraTempVars := extraTempVariablesToDeclare.\r\t\tself resetExtraTempVariablesToDeclare.\r\t\tcurrentConvertingMethod := nil.\r\t].\r\t^ (PjMethodNode\r\t\tparameters: aRBMethodNode argumentNames\r\t\tlocals: aRBMethodNode temporaryNames, extraTempVars asArray\r\t\tbody: body\r\t\tmethodName: aRBMethodNode selector\r\t\tneedsSelf: self hasInBlockSelfReferences\r\t\tisClassMethod:\r\t\t(classForConversion\r\t\t\t\tifNil: [ false ]\r\t\t\t\tifNotNil: [ classForConversion isClassSide ]))\r\t\tmyClass: classForConversion;\r\t\tyourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '591' ],		#self : OmReference [ '592' ],		#time : DateAndTime [ '2024-03-03T08:20:44.493-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitReturnNode:',			#protocol : #visiting,			#sourceCode : 'visitReturnNode: aRBReturnNode \r\t| savedPushing |\r\tsavedPushing := pushingReturnClass.\r\t(self isInBlock or: [self isInExpression]) ifTrue: [\r\t\tself isReturnLegalInBlocks ifFalse: [\r\t\t\tself error: \'Returns in closed blocks are illegal.\' ].\r\t\tpushingReturnClass := PjNonLocalReturnNode.\r\t\tself hasNonLocalReturns: true\r\t] ifFalse: [\r\t\tpushingReturnClass := PjReturnNode].\r\t[^self returnNodeWith: aRBReturnNode value\r\t] ensure: [\r\t\tpushingReturnClass := savedPushing]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '592' ],		#self : OmReference [ '593' ],		#time : DateAndTime [ '2024-03-03T08:20:44.493-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitSelfNode:',			#protocol : #visiting,			#sourceCode : 'visitSelfNode: aRBSelfNode \r\t| inBlock |\r\tblockClosureAnalyser ifNotNil: [\r\t\tPjJavascriptTranspilationError signal: \'reference to self in block\'\r\t].\r\tinBlock := self isInBlock.\r\tinBlock ifTrue: [ self hasInBlockSelfReferences: true ].\r\t^(PjSelfNode inBlock: inBlock) myClass: self classForConversion',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '593' ],		#self : OmReference [ '594' ],		#time : DateAndTime [ '2024-03-03T08:20:44.493-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitSuperNode:',			#protocol : #visiting,			#sourceCode : 'visitSuperNode: aRBSuperNode\r\t| inBlock |\r\tblockClosureAnalyser ifNotNil: [\r\t\tPjJavascriptTranspilationError signal: \'reference to super in block\'\r\t].\r\tinBlock := self isInBlock.\r\tinBlock ifTrue: [ self hasInBlockSelfReferences: true ].\r\t^(PjSuperNode inBlock: inBlock) myClass: self classForConversion',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '594' ],		#self : OmReference [ '595' ],		#time : DateAndTime [ '2024-03-03T08:20:44.493-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitTemporaryNode:',			#protocol : #visiting,			#sourceCode : 'visitTemporaryNode: aRBTemporaryNode\r\t^self visitTemporaryVariableNode: aRBTemporaryNode',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '595' ],		#self : OmReference [ '596' ],		#time : DateAndTime [ '2024-03-03T08:20:44.493-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitTemporaryVariableNode:',			#protocol : #visiting,			#sourceCode : 'visitTemporaryVariableNode: aRBTemporaryNode\r\t(self checkFree: aRBTemporaryNode) ifNotNil: [ : result | ^ result].\r\t^PjTempVariableNode identifier: aRBTemporaryNode name',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '596' ],		#self : OmReference [ '597' ],		#time : DateAndTime [ '2024-03-03T08:20:44.493-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitThisContextNode:',			#protocol : #visiting,			#sourceCode : 'visitThisContextNode: aRBThisContextNode\r\t^ self transpilationError: \'thisContext not supported\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '597' ],		#self : OmReference [ '598' ],		#time : DateAndTime [ '2024-03-03T08:20:44.493-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'visitVariableNode:',			#protocol : #visiting,			#sourceCode : 'visitVariableNode: aRBVariableNode\r\t| id |\r\tid := aRBVariableNode name.\r\textraBindings at: id ifPresent: [: value |\r\t\t(value isKindOf: PjProxy) ifTrue: [ ^ PjGlobalNode identifier: id ]].\r\tself transpilationError: \'undefined variable "\' , aRBVariableNode name , \'"\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '598' ],		#self : OmReference [ '599' ],		#time : DateAndTime [ '2024-03-03T08:20:44.493-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'withNonNil:do:',			#protocol : #'non-nil handling',			#sourceCode : 'withNonNil: aPjJavascriptAstNode do: aBlockClosure \r\t| result |\r\tself nonNilIdentifiers push: aPjJavascriptAstNode.\r\tresult := aBlockClosure value.\r\tself nonNilIdentifiers pop.\r\t^ result',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '599' ],		#self : OmReference [ '600' ],		#time : DateAndTime [ '2024-03-03T08:20:44.493-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBlockClosureAnalyser class',				#isMetaSide : true			},			#name : #'onBlock:',			#protocol : #'instance creation',			#sourceCode : 'onBlock: aBlockClosure\r\t^self new blockForAnalysis: aBlockClosure',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '600' ],		#self : OmReference [ '601' ],		#time : DateAndTime [ '2024-03-03T08:20:44.493-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockClosureAnalyser,				#isMetaSide : false			},			#name : #blockForAnalysis,			#protocol : #accessing,			#sourceCode : 'blockForAnalysis\r\t^ blockForAnalysis',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '601' ],		#self : OmReference [ '602' ],		#time : DateAndTime [ '2024-03-03T08:20:44.494-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockClosureAnalyser,				#isMetaSide : false			},			#name : #'blockForAnalysis:',			#protocol : #accessing,			#sourceCode : 'blockForAnalysis: anObject\r\tblockForAnalysis := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '602' ],		#self : OmReference [ '603' ],		#time : DateAndTime [ '2024-03-03T08:20:44.494-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockClosureAnalyser,				#isMetaSide : false			},			#name : #'checkFree:',			#protocol : #visiting,			#sourceCode : 'checkFree: aRBVariableNode\r\t| name |\r\tname := aRBVariableNode name.\r\tself externalVariablesDict at: name ifPresent: [ : value |\r\t\t(value isKindOf: Error) ifTrue: [ value signal ].\r\t\tvalue isFreeJavascriptValue ifFalse: [ PjJavascriptTranspilationError signal: \'reference to non-literal value in variable: \', name ].\r\t\tself register: name with: value.\r\t\t^ PjTempVariableNode identifier: name\r\t].\r\t^ nil',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '603' ],		#self : OmReference [ '604' ],		#time : DateAndTime [ '2024-03-03T08:20:44.494-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockClosureAnalyser,				#isMetaSide : false			},			#name : #'closeAst:with:',			#protocol : #visiting,			#sourceCode : 'closeAst: aPjJavascriptAstNode with: aPjAstConverter\r\tfreeVariables isEmpty\r\t\tifTrue: [ ^ aPjJavascriptAstNode ].\r\t^ PjApplyNode\r\t\tfunc:\r\t\t\t(PjFunctionNode\r\t\t\t\tparameters: freeVariables keys\r\t\t\t\tlocals: #()\r\t\t\t\tbody: {(PjReturnNode expression: aPjJavascriptAstNode)})\r\t\targs:\r\t\t\t(freeVariables values\r\t\t\t\tcollect:\r\t\t\t\t\t[ :each | each convertToJavascriptAstUsing: aPjAstConverter ])',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '604' ],		#self : OmReference [ '605' ],		#time : DateAndTime [ '2024-03-03T08:20:44.494-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockClosureAnalyser,				#isMetaSide : false			},			#name : #externalVariablesDict,			#protocol : #public,			#sourceCode : 'externalVariablesDict\r\t^ externalVariables ifNil: [ externalVariables := blockForAnalysis externalVariablesDict ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '605' ],		#self : OmReference [ '606' ],		#time : DateAndTime [ '2024-03-03T08:20:44.494-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockClosureAnalyser,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tfreeVariables := OrderedDictionary new',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '606' ],		#self : OmReference [ '607' ],		#time : DateAndTime [ '2024-03-03T08:20:44.494-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockClosureAnalyser,				#isMetaSide : false			},			#name : #isClosed,			#protocol : #accessing,			#sourceCode : 'isClosed\r\t^self blockForAnalysis isClosed',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '607' ],		#self : OmReference [ '608' ],		#time : DateAndTime [ '2024-03-03T08:20:44.494-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockClosureAnalyser,				#isMetaSide : false			},			#name : #'register:with:',			#protocol : #initialize-release,			#sourceCode : 'register: aString with: anObject\r\tfreeVariables at: aString put: anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '608' ],		#self : OmReference [ '609' ],		#time : DateAndTime [ '2024-03-03T08:20:44.494-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockClosureAnalyser,				#isMetaSide : false			},			#name : #sourceNode,			#protocol : #accessing,			#sourceCode : 'sourceNode\r\t^self blockForAnalysis sourceNode.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '609' ],		#self : OmReference [ '610' ],		#time : DateAndTime [ '2024-03-03T08:20:44.494-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #emptyJavascriptObject,			#protocol : #initalize,			#sourceCode : 'emptyJavascriptObject\r\t"Object.create(null) creates an even emptier JS object, but it isn\'t an Object (i.e. has no methods)."\r\t<javascript: \'\r\t\treturn {}\r\t\'>',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '610' ],		#self : OmReference [ '611' ],		#time : DateAndTime [ '2024-03-03T08:20:44.495-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'handleDNU:for:',			#protocol : #'doesNotUnderstand support',			#sourceCode : 'handleDNU: aMessage for: anObject\r\t" this could be a smalltalk object or a native JS object "\r\r\t| selector |\r\tselector := (aMessage selector js_split: \':\') js_at: 0.\r\t^ self\r\t\tinstallDnuArgs: aMessage arguments\r\t\tselector: selector\r\t\tjs: (self makePharoJsSelector: aMessage selector)\r\t\tfor: anObject\r\t\telse: [ self\r\t\t\t\terror:\r\t\t\t\t\t\'Message not understood: \' , anObject className , \'>>#\'\r\t\t\t\t\t\t, aMessage selector ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '611' ],		#self : OmReference [ '612' ],		#time : DateAndTime [ '2024-03-03T08:20:44.495-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #initInheritanceAndInstantiationLinks,			#protocol : #'reflection support',			#sourceCode : 'initInheritanceAndInstantiationLinks\r\r\tObject js_setPrototypeOf: Object to: (theClassClass js_at: #prototype).\r\tObject js_setPrototypeOf: theClassClass to: PjFunction',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '612' ],		#self : OmReference [ '613' ],		#time : DateAndTime [ '2024-03-03T08:20:44.495-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #initNilInJs,			#protocol : #'nil support',			#sourceCode : 'initNilInJs\r\t" specifically install in the global space, rather than in the Smalltalk global space "\r\tglobal js_at: self nilTestFunctionName put: (self nilIfUndefined)',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '613' ],		#self : OmReference [ '614' ],		#time : DateAndTime [ '2024-03-03T08:20:44.495-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #initThrowInJs,			#protocol : #'throw support',			#sourceCode : 'initThrowInJs\r\t" specifically install in the global space, rather than in the Smalltalk global space "\r\tglobal js_at: self throwFunctionName put: (self throwFunction)',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '614' ],		#self : OmReference [ '615' ],		#time : DateAndTime [ '2024-03-03T08:20:44.495-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #initializeCore,			#protocol : #initalize,			#sourceCode : 'initializeCore\r\tselectorCache := self emptyJavascriptObject.\r\tself initNilInJs.\r\tself initThrowInJs.\r\tself initInheritanceAndInstantiationLinks.\r\tself messageClass: self.\r\tself metaclassClass: self.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '615' ],		#self : OmReference [ '616' ],		#time : DateAndTime [ '2024-03-03T08:20:44.495-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'installDnuArgs:selector:js:for:else:',			#protocol : #'doesNotUnderstand support',			#sourceCode : 'installDnuArgs: args selector: selector js: jsSelector for: anObject else: aBlock\r\t" this could be a smalltalk object or a native JS object "\r\t| type func functionName |\r\t(type := anObject js_at: selector) ifNotNil: [\r\t\t(self isFunction: type) ifTrue: [\r\t\t\tfunctionName := type js_at: #name.\r\t\t\t\'\' = functionName ifTrue: [\r\t\t\t\ttype := 2\r\t\t\t] ifFalse: [\r\t\t\t\tfunctionName asCharacter = functionName asCharacter capitalized "We rely on the JS convention that constructors are capiltalized"\r\t\t\t\t\tifTrue: [type := 0 " this is a constructor "]\r\t\t\t\t\tifFalse: [ type := 2 ]\r\t\t\t]\r\t\t] ifFalse: [\r\t\t\ttype := args js_at: #length\r\t]].\r\t2 > type ifTrue: [\r\t\t0 = type ifTrue: [\r\t\t\tfunc := self makeGetter: selector\r\t\t] ifFalse: [\r\t\t\tfunc := self makeSetter: selector.\r\t\t].\r\t\t(Object js_defineProperty: (anObject js_at:\'__proto__\')\r\t\t\t\tfield: jsSelector\r\t\t\t\tproperties: (self propertySet: func)).\r\t\t^ func js_apply: anObject args: args \r\t] ifFalse: [\r\t\ttype := anObject.\r\t\t[ nil = type ] whileFalse: [\r\t\t\t((type js_hasOwnProperty: selector) and: [\r\t\t\t\t\'function\'  = (type js_at: selector) typeof ]) ifTrue: [\r\t\t\t\tfunc := type js_at: selector.\r\t\t\t\t(Object js_defineProperty: type\r\t\t\t\t\t\tfield: jsSelector\r\t\t\t\t\t\tproperties: (self propertySet: func)).\r\t\t\t\t^ func js_apply: anObject args: args \r\t\t\t].\r\t\t\ttype := type instVarNamed:\'__proto__\'\r\t]].\r\t^ aBlock value',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '616' ],		#self : OmReference [ '617' ],		#time : DateAndTime [ '2024-03-03T08:20:44.495-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #isBrowserPlatform,			#protocol : #'nil support',			#sourceCode : 'isBrowserPlatform\r\t^ (self at: #navigator) isNotNil',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '617' ],		#self : OmReference [ '618' ],		#time : DateAndTime [ '2024-03-03T08:20:44.495-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #isDomPlatform,			#protocol : #'nil support',			#sourceCode : 'isDomPlatform\r\t^ (self at: #document) isNotNil',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '618' ],		#self : OmReference [ '619' ],		#time : DateAndTime [ '2024-03-03T08:20:44.496-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'isFunction:',			#protocol : #'doesNotUnderstand support',			#sourceCode : 'isFunction: type\r\t<javascript: \'return "function" == typeof type\'>',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '619' ],		#self : OmReference [ '620' ],		#time : DateAndTime [ '2024-03-03T08:20:44.496-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #isNodePlatform,			#protocol : #'nil support',			#sourceCode : 'isNodePlatform\r\t^ (self at: #navigator) isNil',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '620' ],		#self : OmReference [ '621' ],		#time : DateAndTime [ '2024-03-03T08:20:44.496-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'isPharoJsSelector:',			#protocol : #accessing,			#sourceCode : 'isPharoJsSelector: aSelector\r\t"Answer true if the argument has been generated by PharoJS"\r\t| prefixSize |\r\tprefixSize := self pharoJsSelectorPrefix size.\r\taSelector size <= prefixSize ifTrue: [ ^false ].\r\t^ (aSelector js_substring: 0 to: prefixSize) = self pharoJsSelectorPrefix',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '621' ],		#self : OmReference [ '622' ],		#time : DateAndTime [ '2024-03-03T08:20:44.496-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #javascriptName,			#protocol : #accessing,			#sourceCode : 'javascriptName\r\t<pharoJsSkip>\r\t^ #Smalltalk',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '622' ],		#self : OmReference [ '623' ],		#time : DateAndTime [ '2024-03-03T08:20:44.496-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'keys:',			#protocol : #'reflection support',			#sourceCode : 'keys: anObject\r\t<jsGenerator: #keys_jsGenerator:>',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '623' ],		#self : OmReference [ '624' ],		#time : DateAndTime [ '2024-03-03T08:20:44.496-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'keys_jsGenerator:',			#protocol : #'reflection support',			#sourceCode : 'keys_jsGenerator: transpiler\r\t<pharoJsSkip>\r\t^\'\r\tvar result={};\r\tfor (var i in anObject) { if(typeof anObject[i]!="function" && anObject[i]!=null && anObject[i].\', transpiler pharoJsSelectorPrefix, \'proxyResponse) result[i]=anObject[i].\', transpiler pharoJsSelectorPrefix, \'proxyResponse()}\r\treturn {\', transpiler pharoJsSelectorPrefix, \'proxyResponse:function(){return {keys:result}}}\r\t\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '624' ],		#self : OmReference [ '625' ],		#time : DateAndTime [ '2024-03-03T08:20:44.496-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'log:',			#protocol : #logging,			#sourceCode : 'log: message\r\tconsole js_log: message',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '625' ],		#self : OmReference [ '626' ],		#time : DateAndTime [ '2024-03-03T08:20:44.496-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'makeDNU:',			#protocol : #'doesNotUnderstand support',			#sourceCode : 'makeDNU: aSelector\r\t<jsGenerator: #makeDNU_jsGenerator:>',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '626' ],		#self : OmReference [ '627' ],		#time : DateAndTime [ '2024-03-03T08:20:44.496-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'makeDNU_jsGenerator:',			#protocol : #'doesNotUnderstand support',			#sourceCode : 'makeDNU_jsGenerator: transpiler\r\t<pharoJsSkip>\r\t|prefix|\r\tprefix := transpiler pharoJsSelectorPrefix.\r\t^\'var pjCore=this,ss=this.\', prefix, \'makeSmalltalkSelector_(aSelector);\r\tswitch (ss.split(":").length) {\r\t\tcase 1: return function __DNU(){\r\t\t\treturn this.\', prefix, \'doesNotUnderstand_(pjCore.\', prefix, \'selector_arguments_(ss,[]))};\r\t\tcase 2: return function __DNU(arg1) {\r\t\t\treturn this.\', prefix, \'doesNotUnderstand_(pjCore.\', prefix, \'selector_arguments_(ss,[arg1]))};\r\t\tcase 3: return function __DNU(arg1,arg2) {\r\t\t\treturn this.\', prefix, \'doesNotUnderstand_(pjCore.\', prefix, \'selector_arguments_(ss,[arg1,arg2]))};\r\t\tdefault: return function __DNU() {\r\t\t\tvar args=new Array(arguments.length);\r\t\t\tfor(var i=0;i<arguments.length;++i) args[i]=arguments[i]\r\t\t\treturn this.\', prefix, \'doesNotUnderstand_(pjCore.\', prefix, \'selector_arguments_(ss,args))};\r\t}\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '627' ],		#self : OmReference [ '628' ],		#time : DateAndTime [ '2024-03-03T08:20:44.497-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'makeGetter:',			#protocol : #'doesNotUnderstand support',			#sourceCode : 'makeGetter: selector\r\t<javascript:\r\t\'return function Getter(){return this[selector]}\'>',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '628' ],		#self : OmReference [ '629' ],		#time : DateAndTime [ '2024-03-03T08:20:44.497-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'makePharoJsSelector:',			#protocol : #accessing,			#sourceCode : 'makePharoJsSelector: aSelector\r\t| result |\r\t(self isPharoJsSelector: aSelector)\r\t\tifTrue: [ ^ aSelector ].\r\t(selectorCache js_hasOwnProperty: aSelector)\r\t\tifTrue: [ ^ selectorCache js_at: aSelector ].\r\taSelector\r\t\tifNotNil: [ :sel | \r\t\t\t(sel isLetter or: [ (aSelector js_at: 0) = \'$\' ])\r\t\t\t\tifTrue: [ result := sel js_split: \':\' ]\r\t\t\t\tifFalse: [ result := #().\r\t\t\t\t\t1 to: sel size do:\r\t\t\t\t\t\t[ :idx | result js_push: (sel js_charCodeAt: idx - 1) js_toString ].\r\t\t\t\t\tresult js_push: nil ].\r\t\t\tresult := self pharoJsSelectorPrefix , (result js_join: \'_\') ].\r\t(selectorCache js_at: result)\r\t\tifNil: [ selectorCache js_at: result put: aSelector ].\r\t(selectorCache js_at: aSelector)\r\t\tifNil: [ selectorCache js_at: aSelector put: result ].\r\t^ result',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '629' ],		#self : OmReference [ '630' ],		#time : DateAndTime [ '2024-03-03T08:20:44.497-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'makeSetter:',			#protocol : #'doesNotUnderstand support',			#sourceCode : 'makeSetter: selector\r\t<javascript:\r\t\'return function Setter(value){return this[selector]=value}\'>',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '630' ],		#self : OmReference [ '631' ],		#time : DateAndTime [ '2024-03-03T08:20:44.497-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'makeSmalltalkSelector:',			#protocol : #accessing,			#sourceCode : 'makeSmalltalkSelector: aSelector\r\t| result |\r\t(self isPharoJsSelector: aSelector) ifFalse: [ ^ aSelector ].\r\t(selectorCache js_hasOwnProperty: aSelector) ifTrue: [\r\t\t^ selectorCache js_at: aSelector ].\r\tresult := aSelector js_split: \'_\'.\r\tresult js_shift.\r\t((result js_at: 0) js_at: 0) > \'9\' ifTrue: [ ^ result js_join: \':\' ].\r\tresult js_pop.\r\t0 to: (result js_at: #length)-1 do: [ :index |\r\t\tresult js_at: index put: (Character value: (result js_at: index)) ].\r\tresult := result js_join: \'\'.\r\t(selectorCache js_at: result) ifNil: [ selectorCache js_at: result put: aSelector ].\r\t(selectorCache js_at: aSelector) ifNil: [ selectorCache js_at: aSelector put: result ].\r\t^ result',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '631' ],		#self : OmReference [ '632' ],		#time : DateAndTime [ '2024-03-03T08:20:44.497-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'messageClass:',			#protocol : #'doesNotUnderstand support',			#sourceCode : 'messageClass: anObject\r\tmessageClass := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '632' ],		#self : OmReference [ '633' ],		#time : DateAndTime [ '2024-03-03T08:20:44.497-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'metaclassClass:',			#protocol : #'reflection support',			#sourceCode : 'metaclassClass: anObject\r\tmetaclassClass := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '633' ],		#self : OmReference [ '634' ],		#time : DateAndTime [ '2024-03-03T08:20:44.497-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'metaclassOf:',			#protocol : #'reflection support',			#sourceCode : 'metaclassOf: aClass\r\t<jsGenerator: #metaclassOf_jsGenerator:>',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '634' ],		#self : OmReference [ '635' ],		#time : DateAndTime [ '2024-03-03T08:20:44.497-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'metaclassOf_jsGenerator:',			#protocol : #'reflection support',			#sourceCode : 'metaclassOf_jsGenerator: transpiler\r\t<pharoJsSkip>\r\t^\'if(this.metaclassClass!==this) return this.metaclassClass.\', transpiler pharoJsSelectorPrefix, \'metaclassOf_(aClass);\r\tvar theMetaClass={ prototype: aClass.__proto__,__proto__:this.theClassClass.prototype,\r\t\t\', transpiler pharoJsSelectorPrefix, \'name: function(){return aClass.\', transpiler pharoJsSelectorPrefix, \'name()+" class"},\r\t\t\', transpiler pharoJsSelectorPrefix, \'theNonMetaClass: function(){return aClass},\r\t\t\', transpiler pharoJsSelectorPrefix, \'theMetaClass: function(){return theMetaClass},\r\t\t};\r\treturn theMetaClass\r\t\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '635' ],		#self : OmReference [ '636' ],		#time : DateAndTime [ '2024-03-03T08:20:44.497-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #nilIfUndefined,			#protocol : #'nil support',			#sourceCode : 'nilIfUndefined\r\t"In case PjUndefinedObject is not created yet, use a placeholder object, just for declaring."\r\t<javascript: \'global.PjUndefinedObject |= {};\r\treturn function(arg){if(arg == undefined){\r\t\treturn PjUndefinedObject.uniqueInstance;\r\t}\r\treturn arg}\'>\r\t',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '636' ],		#self : OmReference [ '637' ],		#time : DateAndTime [ '2024-03-03T08:20:44.498-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #nilTestFunctionName,			#protocol : #'nil support',			#sourceCode : 'nilTestFunctionName\r\t^ \'$asNil$\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '637' ],		#self : OmReference [ '638' ],		#time : DateAndTime [ '2024-03-03T08:20:44.498-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #pharoJsSelectorPrefix,			#protocol : #accessing,			#sourceCode : 'pharoJsSelectorPrefix\r\t<jsGenerator: #pharoJsSelectorPrefix_jsGenerator:>\r\t^ self error: \'Only for Javascript side\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '638' ],		#self : OmReference [ '639' ],		#time : DateAndTime [ '2024-03-03T08:20:44.498-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'pharoJsSelectorPrefix_jsGenerator:',			#protocol : #accessing,			#sourceCode : 'pharoJsSelectorPrefix_jsGenerator: transpiler\r\t<pharoJsSkip>\r\t^ \'return \',transpiler pharoJsSelectorPrefix asJSON',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '639' ],		#self : OmReference [ '640' ],		#time : DateAndTime [ '2024-03-03T08:20:44.498-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'propertySet:',			#protocol : #'doesNotUnderstand support',			#sourceCode : 'propertySet: func\r\r\t<javascript: \'return {\r\t\tenumerable: false,\r\t\tconfigurable: true,\r\t\twritable: true,\r\t\tvalue: func}\'>\r\t',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '640' ],		#self : OmReference [ '641' ],		#time : DateAndTime [ '2024-03-03T08:20:44.498-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'registerDnu:',			#protocol : #'doesNotUnderstand support',			#sourceCode : 'registerDnu: aSelector\r\t| selector props |\r\tselector := self makePharoJsSelector: aSelector.\r\t((Object js_at: #prototype) js_hasOwnProperty: selector) ifFalse: [\r\t\tprops := self makeDNU: aSelector.\r\t\tObject\r\t\t\tjs_defineProperty: (Object js_at:#prototype)\r\t\t\tfield: selector\r\t\t\tproperties: (self propertySet: props)\r\t].\r\t^ selector',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '641' ],		#self : OmReference [ '642' ],		#time : DateAndTime [ '2024-03-03T08:20:44.498-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'registerDnuForAll:',			#protocol : #'doesNotUnderstand support',			#sourceCode : 'registerDnuForAll: anArray\r\tanArray js_forEach: [ : each | self registerDnu: each ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '642' ],		#self : OmReference [ '643' ],		#time : DateAndTime [ '2024-03-03T08:20:44.498-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'require:',			#protocol : #importing,			#sourceCode : 'require: moduleName\r\r\t<jsAlias: #require>\r\t<javascript: \'return require(moduleName);\'>\r\t^ global require: moduleName',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '643' ],		#self : OmReference [ '644' ],		#time : DateAndTime [ '2024-03-03T08:20:44.498-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'selector:arguments:',			#protocol : #'doesNotUnderstand support',			#sourceCode : 'selector: selector arguments: args\r\t<jsGenerator: #selector_arguments_jsGenerator:>',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '644' ],		#self : OmReference [ '645' ],		#time : DateAndTime [ '2024-03-03T08:20:44.498-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #'selector_arguments_jsGenerator:',			#protocol : #'doesNotUnderstand support',			#sourceCode : 'selector_arguments_jsGenerator: transpiler\r\t<pharoJsSkip>\r\t^\'if(this.messageClass!==this)\r\t\treturn this.messageClass.\', transpiler pharoJsSelectorPrefix, \'selector_arguments_(selector,arguments);\r\treturn {\r\t\t\tselector: selector,\r\t\t\t\', transpiler pharoJsSelectorPrefix, \'selector: function(){return this.selector},\r\t\t\targuments: args,\r\t\t\t\', transpiler pharoJsSelectorPrefix, \'arguments: function(){return this.arguments}\r\t\t}\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '645' ],		#self : OmReference [ '646' ],		#time : DateAndTime [ '2024-03-03T08:20:44.499-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #throwFunction,			#protocol : #'throw support',			#sourceCode : 'throwFunction\r\t<javascript: \'return function(arg){throw arg}\'>',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '646' ],		#self : OmReference [ '647' ],		#time : DateAndTime [ '2024-03-03T08:20:44.499-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCore class',				#isMetaSide : true			},			#name : #throwFunctionName,			#protocol : #'throw support',			#sourceCode : 'throwFunctionName\r\t^ \'$throw$\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '647' ],		#self : OmReference [ '648' ],		#time : DateAndTime [ '2024-03-03T08:20:44.499-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplyNode class',				#isMetaSide : true			},			#name : #'func:args:',			#protocol : #creating,			#sourceCode : 'func: func args: args\r\t^ self new func: func; args: args; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '648' ],		#self : OmReference [ '649' ],		#time : DateAndTime [ '2024-03-03T08:20:44.499-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplyNode class',				#isMetaSide : true			},			#name : #'receiver:selector:args:',			#protocol : #creating,			#sourceCode : 'receiver: receiverNode selector: aSymbol args: args\r\t^self \r\t\tfunc: (PjFieldNode target: receiverNode selectorNode: (PjMessageSelectorNode identifier: aSymbol asSymbol) isNonNil: receiverNode isNonNilNode)\r\t\targs: args',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '649' ],		#self : OmReference [ '650' ],		#time : DateAndTime [ '2024-03-03T08:20:44.499-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjApplyNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitApplyNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '650' ],		#self : OmReference [ '651' ],		#time : DateAndTime [ '2024-03-03T08:20:44.499-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjApplyNode,				#isMetaSide : false			},			#name : #args,			#protocol : #accessing,			#sourceCode : 'args\r\t^ args',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '651' ],		#self : OmReference [ '652' ],		#time : DateAndTime [ '2024-03-03T08:20:44.499-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjApplyNode,				#isMetaSide : false			},			#name : #'args:',			#protocol : #accessing,			#sourceCode : 'args: anObject\r\targs := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '652' ],		#self : OmReference [ '653' ],		#time : DateAndTime [ '2024-03-03T08:20:44.499-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjApplyNode,				#isMetaSide : false			},			#name : #func,			#protocol : #accessing,			#sourceCode : 'func\r\t^ func',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '653' ],		#self : OmReference [ '654' ],		#time : DateAndTime [ '2024-03-03T08:20:44.5-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjApplyNode,				#isMetaSide : false			},			#name : #'func:',			#protocol : #accessing,			#sourceCode : 'func: anObject\r\tfunc := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '654' ],		#self : OmReference [ '655' ],		#time : DateAndTime [ '2024-03-03T08:20:44.5-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjApplyNode,				#isMetaSide : false			},			#name : #valuesToCompareForSimilarity,			#protocol : #comparing,			#sourceCode : 'valuesToCompareForSimilarity\r\t^{self func}, self args',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '655' ],		#self : OmReference [ '656' ],		#time : DateAndTime [ '2024-03-03T08:20:44.5-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjArrayNode class',				#isMetaSide : true			},			#name : #'expressions:',			#protocol : #creating,			#sourceCode : 'expressions: sequence\r\t^ self new expressions: sequence asArray; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '656' ],		#self : OmReference [ '657' ],		#time : DateAndTime [ '2024-03-03T08:20:44.5-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitArrayNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '657' ],		#self : OmReference [ '658' ],		#time : DateAndTime [ '2024-03-03T08:20:44.5-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayNode,				#isMetaSide : false			},			#name : #expressions,			#protocol : #accessing,			#sourceCode : 'expressions\r\t^ expressions',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '658' ],		#self : OmReference [ '659' ],		#time : DateAndTime [ '2024-03-03T08:20:44.5-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayNode,				#isMetaSide : false			},			#name : #'expressions:',			#protocol : #accessing,			#sourceCode : 'expressions: anObject\r\texpressions := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '659' ],		#self : OmReference [ '660' ],		#time : DateAndTime [ '2024-03-03T08:20:44.5-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayNode,				#isMetaSide : false			},			#name : #isNonNilNode,			#protocol : #testing,			#sourceCode : 'isNonNilNode\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '660' ],		#self : OmReference [ '661' ],		#time : DateAndTime [ '2024-03-03T08:20:44.501-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayNode,				#isMetaSide : false			},			#name : #valuesToCompareForSimilarity,			#protocol : #accessing,			#sourceCode : 'valuesToCompareForSimilarity\r\t^self expressions',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '661' ],		#self : OmReference [ '662' ],		#time : DateAndTime [ '2024-03-03T08:20:44.501-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAssignNode class',				#isMetaSide : true			},			#name : #'target:expression:',			#protocol : #creating,			#sourceCode : 'target: target expression: expression\r\t^ self new target: target; expression: expression; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '662' ],		#self : OmReference [ '663' ],		#time : DateAndTime [ '2024-03-03T08:20:44.501-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAssignNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitAssignNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '663' ],		#self : OmReference [ '664' ],		#time : DateAndTime [ '2024-03-03T08:20:44.501-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAssignNode,				#isMetaSide : false			},			#name : #expression,			#protocol : #accessing,			#sourceCode : 'expression\r\t^ expression',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '664' ],		#self : OmReference [ '665' ],		#time : DateAndTime [ '2024-03-03T08:20:44.501-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAssignNode,				#isMetaSide : false			},			#name : #'expression:',			#protocol : #accessing,			#sourceCode : 'expression: anObject\r\texpression := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '665' ],		#self : OmReference [ '666' ],		#time : DateAndTime [ '2024-03-03T08:20:44.501-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAssignNode,				#isMetaSide : false			},			#name : #target,			#protocol : #accessing,			#sourceCode : 'target\r\t^ target',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '666' ],		#self : OmReference [ '667' ],		#time : DateAndTime [ '2024-03-03T08:20:44.501-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAssignNode,				#isMetaSide : false			},			#name : #'target:',			#protocol : #accessing,			#sourceCode : 'target: anObject\r\ttarget := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '667' ],		#self : OmReference [ '668' ],		#time : DateAndTime [ '2024-03-03T08:20:44.502-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBinaryNode class',				#isMetaSide : true			},			#name : #'operator:left:right:',			#protocol : #creating,			#sourceCode : 'operator: operator left: left right: right\r\t^ self new operator: operator; left: left; right: right; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '668' ],		#self : OmReference [ '669' ],		#time : DateAndTime [ '2024-03-03T08:20:44.502-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBinaryNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitBinaryNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '669' ],		#self : OmReference [ '670' ],		#time : DateAndTime [ '2024-03-03T08:20:44.502-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBinaryNode,				#isMetaSide : false			},			#name : #'copyWith:',			#protocol : #rewriting,			#sourceCode : 'copyWith: newOperator\r\t^ self class operator: newOperator left: left right: right',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '670' ],		#self : OmReference [ '671' ],		#time : DateAndTime [ '2024-03-03T08:20:44.502-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBinaryNode,				#isMetaSide : false			},			#name : #isComparison,			#protocol : #testing,			#sourceCode : 'isComparison\r\t^ #(== != === !== <= >= < > ) includes: operator',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '671' ],		#self : OmReference [ '672' ],		#time : DateAndTime [ '2024-03-03T08:20:44.502-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBinaryNode,				#isMetaSide : false			},			#name : #left,			#protocol : #accessing,			#sourceCode : 'left\r\t^ left',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '672' ],		#self : OmReference [ '673' ],		#time : DateAndTime [ '2024-03-03T08:20:44.502-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBinaryNode,				#isMetaSide : false			},			#name : #'left:',			#protocol : #accessing,			#sourceCode : 'left: anObject\r\tleft := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '673' ],		#self : OmReference [ '674' ],		#time : DateAndTime [ '2024-03-03T08:20:44.503-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBinaryNode,				#isMetaSide : false			},			#name : #not,			#protocol : #rewriting,			#sourceCode : 'not\r\toperator = #== ifTrue: [  ^ self copyWith: #!= ].\r\toperator = #!= ifTrue: [  ^ self copyWith: #== ].\r\toperator = #=== ifTrue: [  ^ self copyWith: #!== ].\r\toperator = #!== ifTrue: [  ^ self copyWith: #=== ].\r\t(#( <= >= < > ) includes: operator) ifTrue: [ ^ self class operator: operator left: right right: left].\r\t^ super not',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '674' ],		#self : OmReference [ '675' ],		#time : DateAndTime [ '2024-03-03T08:20:44.503-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBinaryNode,				#isMetaSide : false			},			#name : #operator,			#protocol : #accessing,			#sourceCode : 'operator\r\t^ operator',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '675' ],		#self : OmReference [ '676' ],		#time : DateAndTime [ '2024-03-03T08:20:44.503-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBinaryNode,				#isMetaSide : false			},			#name : #'operator:',			#protocol : #accessing,			#sourceCode : 'operator: anObject\r\toperator := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '676' ],		#self : OmReference [ '677' ],		#time : DateAndTime [ '2024-03-03T08:20:44.503-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBinaryNode,				#isMetaSide : false			},			#name : #right,			#protocol : #accessing,			#sourceCode : 'right\r\t^ right',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '677' ],		#self : OmReference [ '678' ],		#time : DateAndTime [ '2024-03-03T08:20:44.503-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBinaryNode,				#isMetaSide : false			},			#name : #'right:',			#protocol : #accessing,			#sourceCode : 'right: anObject\r\tright := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '678' ],		#self : OmReference [ '679' ],		#time : DateAndTime [ '2024-03-03T08:20:44.503-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBinaryNode,				#isMetaSide : false			},			#name : #valuesToCompareForEquality,			#protocol : #comparing,			#sourceCode : 'valuesToCompareForEquality\r\t^{self operator. self left. self right}',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '679' ],		#self : OmReference [ '680' ],		#time : DateAndTime [ '2024-03-03T08:20:44.504-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjFieldNode class',				#isMetaSide : true			},			#name : #'target:selectorNode:isNonNil:',			#protocol : #creating,			#sourceCode : 'target: target selectorNode: selectorNode isNonNil: isNonNil\r\t^ self new target: target; selectorNode: selectorNode; isNonNil: isNonNil; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '680' ],		#self : OmReference [ '681' ],		#time : DateAndTime [ '2024-03-03T08:20:44.504-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFieldNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitFieldNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '681' ],		#self : OmReference [ '682' ],		#time : DateAndTime [ '2024-03-03T08:20:44.504-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFieldNode,				#isMetaSide : false			},			#name : #isNonNil,			#protocol : #accessing,			#sourceCode : 'isNonNil\r\t^ isNonNil',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '682' ],		#self : OmReference [ '683' ],		#time : DateAndTime [ '2024-03-03T08:20:44.504-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFieldNode,				#isMetaSide : false			},			#name : #'isNonNil:',			#protocol : #accessing,			#sourceCode : 'isNonNil: anObject\r\tisNonNil := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '683' ],		#self : OmReference [ '684' ],		#time : DateAndTime [ '2024-03-03T08:20:44.504-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFieldNode,				#isMetaSide : false			},			#name : #'isNonlocalClassOrPoolVariableReference:',			#protocol : #testing,			#sourceCode : 'isNonlocalClassOrPoolVariableReference: aClass\r\t^ selectorNode isNonlocalClassOrPoolVariableReference: aClass',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '684' ],		#self : OmReference [ '685' ],		#time : DateAndTime [ '2024-03-03T08:20:44.504-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFieldNode,				#isMetaSide : false			},			#name : #isSuperSend,			#protocol : #testing,			#sourceCode : 'isSuperSend\r\t^ target isSuperSend',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '685' ],		#self : OmReference [ '686' ],		#time : DateAndTime [ '2024-03-03T08:20:44.504-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFieldNode,				#isMetaSide : false			},			#name : #selectorNode,			#protocol : #accessing,			#sourceCode : 'selectorNode\r\t^ selectorNode',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '686' ],		#self : OmReference [ '687' ],		#time : DateAndTime [ '2024-03-03T08:20:44.505-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFieldNode,				#isMetaSide : false			},			#name : #'selectorNode:',			#protocol : #accessing,			#sourceCode : 'selectorNode: anObject\r\tselectorNode := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '687' ],		#self : OmReference [ '688' ],		#time : DateAndTime [ '2024-03-03T08:20:44.505-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFieldNode,				#isMetaSide : false			},			#name : #target,			#protocol : #accessing,			#sourceCode : 'target\r\t^ target',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '688' ],		#self : OmReference [ '689' ],		#time : DateAndTime [ '2024-03-03T08:20:44.505-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFieldNode,				#isMetaSide : false			},			#name : #'target:',			#protocol : #accessing,			#sourceCode : 'target: anObject\r\ttarget := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '689' ],		#self : OmReference [ '690' ],		#time : DateAndTime [ '2024-03-03T08:20:44.505-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitBlockNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '690' ],		#self : OmReference [ '691' ],		#time : DateAndTime [ '2024-03-03T08:20:44.505-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjFunctionNode class',				#isMetaSide : true			},			#name : #'parameters:locals:body:',			#protocol : #creating,			#sourceCode : 'parameters: parameters locals: locals body: body\r\t^ self new parameters: parameters asArray; locals: locals asArray; body: body asJsAstBody; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '691' ],		#self : OmReference [ '692' ],		#time : DateAndTime [ '2024-03-03T08:20:44.505-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunctionNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitFunctionNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '692' ],		#self : OmReference [ '693' ],		#time : DateAndTime [ '2024-03-03T08:20:44.505-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunctionNode,				#isMetaSide : false			},			#name : #'addLocal:',			#protocol : #accessing,			#sourceCode : 'addLocal: anObject\r\tlocals := locals asOrderedCollection.\r\t^ locals add: anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '693' ],		#self : OmReference [ '694' ],		#time : DateAndTime [ '2024-03-03T08:20:44.506-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunctionNode,				#isMetaSide : false			},			#name : #body,			#protocol : #accessing,			#sourceCode : 'body\r\t^ body',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '694' ],		#self : OmReference [ '695' ],		#time : DateAndTime [ '2024-03-03T08:20:44.506-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunctionNode,				#isMetaSide : false			},			#name : #'body:',			#protocol : #accessing,			#sourceCode : 'body: anObject\r\tbody := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '695' ],		#self : OmReference [ '696' ],		#time : DateAndTime [ '2024-03-03T08:20:44.506-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunctionNode,				#isMetaSide : false			},			#name : #isNonNilNode,			#protocol : #testing,			#sourceCode : 'isNonNilNode\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '696' ],		#self : OmReference [ '697' ],		#time : DateAndTime [ '2024-03-03T08:20:44.506-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunctionNode,				#isMetaSide : false			},			#name : #locals,			#protocol : #accessing,			#sourceCode : 'locals\r\t^ locals',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '697' ],		#self : OmReference [ '698' ],		#time : DateAndTime [ '2024-03-03T08:20:44.506-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunctionNode,				#isMetaSide : false			},			#name : #'locals:',			#protocol : #accessing,			#sourceCode : 'locals: anObject\r\tlocals := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '698' ],		#self : OmReference [ '699' ],		#time : DateAndTime [ '2024-03-03T08:20:44.506-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunctionNode,				#isMetaSide : false			},			#name : #needsSelf,			#protocol : #testing,			#sourceCode : 'needsSelf\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '699' ],		#self : OmReference [ '700' ],		#time : DateAndTime [ '2024-03-03T08:20:44.506-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunctionNode,				#isMetaSide : false			},			#name : #parameters,			#protocol : #accessing,			#sourceCode : 'parameters\r\t^ parameters',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '700' ],		#self : OmReference [ '701' ],		#time : DateAndTime [ '2024-03-03T08:20:44.507-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunctionNode,				#isMetaSide : false			},			#name : #'parameters:',			#protocol : #accessing,			#sourceCode : 'parameters: anObject\r\tparameters := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '701' ],		#self : OmReference [ '702' ],		#time : DateAndTime [ '2024-03-03T08:20:44.507-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjMethodNode class',				#isMetaSide : true			},			#name : #'methodName:body:',			#protocol : #creating,			#sourceCode : 'methodName: methodName body: body\r\t^ self parameters: #() locals: #() body: body methodName: methodName needsSelf: false isClassMethod: false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '702' ],		#self : OmReference [ '703' ],		#time : DateAndTime [ '2024-03-03T08:20:44.507-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjMethodNode class',				#isMetaSide : true			},			#name : #'parameters:locals:body:methodName:needsSelf:isClassMethod:',			#protocol : #creating,			#sourceCode : 'parameters: parameters locals: locals body: body methodName: methodName needsSelf: needsSelf isClassMethod: isClassMethod\r\t^ (self parameters: parameters locals: locals body: body) needsSelf: needsSelf; methodName: methodName; isClassMethod: isClassMethod; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '703' ],		#self : OmReference [ '704' ],		#time : DateAndTime [ '2024-03-03T08:20:44.507-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMethodNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitMethodNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '704' ],		#self : OmReference [ '705' ],		#time : DateAndTime [ '2024-03-03T08:20:44.507-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMethodNode,				#isMetaSide : false			},			#name : #isClassMethod,			#protocol : #accessing,			#sourceCode : 'isClassMethod\r\t^ isClassMethod',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '705' ],		#self : OmReference [ '706' ],		#time : DateAndTime [ '2024-03-03T08:20:44.508-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMethodNode,				#isMetaSide : false			},			#name : #'isClassMethod:',			#protocol : #accessing,			#sourceCode : 'isClassMethod: anObject\r\tisClassMethod := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '706' ],		#self : OmReference [ '707' ],		#time : DateAndTime [ '2024-03-03T08:20:44.508-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMethodNode,				#isMetaSide : false			},			#name : #methodName,			#protocol : #accessing,			#sourceCode : 'methodName\r\t^ methodName',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '707' ],		#self : OmReference [ '708' ],		#time : DateAndTime [ '2024-03-03T08:20:44.508-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMethodNode,				#isMetaSide : false			},			#name : #'methodName:',			#protocol : #accessing,			#sourceCode : 'methodName: anObject\r\tmethodName := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '708' ],		#self : OmReference [ '709' ],		#time : DateAndTime [ '2024-03-03T08:20:44.508-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMethodNode,				#isMetaSide : false			},			#name : #needsSelf,			#protocol : #accessing,			#sourceCode : 'needsSelf\r\t^ needsSelf',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '709' ],		#self : OmReference [ '710' ],		#time : DateAndTime [ '2024-03-03T08:20:44.508-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMethodNode,				#isMetaSide : false			},			#name : #'needsSelf:',			#protocol : #accessing,			#sourceCode : 'needsSelf: anObject\r\tneedsSelf := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '710' ],		#self : OmReference [ '711' ],		#time : DateAndTime [ '2024-03-03T08:20:44.508-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjJavascriptAstNode class',				#isMetaSide : true			},			#name : #'myClass:',			#protocol : #creating,			#sourceCode : 'myClass: anInteger\r\t^ self new myClass: anInteger;yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '711' ],		#self : OmReference [ '712' ],		#time : DateAndTime [ '2024-03-03T08:20:44.508-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '712' ],		#self : OmReference [ '713' ],		#time : DateAndTime [ '2024-03-03T08:20:44.509-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #asJsAstBody,			#protocol : #converting,			#sourceCode : 'asJsAstBody\r\t^{self}',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '713' ],		#self : OmReference [ '714' ],		#time : DateAndTime [ '2024-03-03T08:20:44.509-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #asSimpleNode,			#protocol : #accessing,			#sourceCode : 'asSimpleNode\r\t^ self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '714' ],		#self : OmReference [ '715' ],		#time : DateAndTime [ '2024-03-03T08:20:44.509-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #canPropogateReturns,			#protocol : #testing,			#sourceCode : 'canPropogateReturns\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '715' ],		#self : OmReference [ '716' ],		#time : DateAndTime [ '2024-03-03T08:20:44.509-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #expressions,			#protocol : #accessing,			#sourceCode : 'expressions\r\t^ { self }',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '716' ],		#self : OmReference [ '717' ],		#time : DateAndTime [ '2024-03-03T08:20:44.509-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #isComparison,			#protocol : #testing,			#sourceCode : 'isComparison\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '717' ],		#self : OmReference [ '718' ],		#time : DateAndTime [ '2024-03-03T08:20:44.509-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #isLiteralNode,			#protocol : #testing,			#sourceCode : 'isLiteralNode\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '718' ],		#self : OmReference [ '719' ],		#time : DateAndTime [ '2024-03-03T08:20:44.509-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #isLiteralSelector,			#protocol : #testing,			#sourceCode : 'isLiteralSelector\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '719' ],		#self : OmReference [ '720' ],		#time : DateAndTime [ '2024-03-03T08:20:44.509-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #isNonNil,			#protocol : #testing,			#sourceCode : 'isNonNil\r\t^ self isNonNilNode',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '720' ],		#self : OmReference [ '721' ],		#time : DateAndTime [ '2024-03-03T08:20:44.51-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #isNonNilNode,			#protocol : #testing,			#sourceCode : 'isNonNilNode\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '721' ],		#self : OmReference [ '722' ],		#time : DateAndTime [ '2024-03-03T08:20:44.51-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #'isNonlocalClassOrPoolVariableReference:',			#protocol : #testing,			#sourceCode : 'isNonlocalClassOrPoolVariableReference: aClass\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '722' ],		#self : OmReference [ '723' ],		#time : DateAndTime [ '2024-03-03T08:20:44.51-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #isNot,			#protocol : #testing,			#sourceCode : 'isNot\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '723' ],		#self : OmReference [ '724' ],		#time : DateAndTime [ '2024-03-03T08:20:44.51-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #isPjJavascriptAstNode,			#protocol : #testing,			#sourceCode : 'isPjJavascriptAstNode\r\t^true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '724' ],		#self : OmReference [ '725' ],		#time : DateAndTime [ '2024-03-03T08:20:44.51-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #isReturnOrThrow,			#protocol : #testing,			#sourceCode : 'isReturnOrThrow\r\t^false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '725' ],		#self : OmReference [ '726' ],		#time : DateAndTime [ '2024-03-03T08:20:44.51-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #isSelfNode,			#protocol : #testing,			#sourceCode : 'isSelfNode\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '726' ],		#self : OmReference [ '727' ],		#time : DateAndTime [ '2024-03-03T08:20:44.51-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #'isSimilarTo:',			#protocol : #comparing,			#sourceCode : 'isSimilarTo: anObject \r\t| myValues otherValues |\r\tself species = anObject species ifFalse: [^false].\r\tmyValues := self valuesToCompareForSimilarity.\r\totherValues := anObject valuesToCompareForSimilarity.\r\tmyValues size = otherValues size ifFalse: [ ^false ].\r\tmyValues\r\t\twith: otherValues\r\t\tdo: [ : myValue : otherValue | \r\t\t\t(myValue isSimilarTo: otherValue) ifFalse: [^false]].\r\t^true.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '727' ],		#self : OmReference [ '728' ],		#time : DateAndTime [ '2024-03-03T08:20:44.511-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #isSuperSend,			#protocol : #testing,			#sourceCode : 'isSuperSend\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '728' ],		#self : OmReference [ '729' ],		#time : DateAndTime [ '2024-03-03T08:20:44.511-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #myClass,			#protocol : #accessing,			#sourceCode : 'myClass\r\t^ myClass',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '729' ],		#self : OmReference [ '730' ],		#time : DateAndTime [ '2024-03-03T08:20:44.511-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #'myClass:',			#protocol : #accessing,			#sourceCode : 'myClass: anObject\r\tmyClass := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '730' ],		#self : OmReference [ '731' ],		#time : DateAndTime [ '2024-03-03T08:20:44.511-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #not,			#protocol : #converting,			#sourceCode : 'not\r\t^ PjUnaryNode operator: #! expression: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '731' ],		#self : OmReference [ '732' ],		#time : DateAndTime [ '2024-03-03T08:20:44.511-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\t| instVars needParens |\r\tinstVars := self class allInstVarNames copyWithoutAll: #(myClass inBlock).\r\tneedParens := instVars size > 0 and: [ aStream size >0 ].\r\taStream\r\t\tnextPutAll: (needParens ifTrue: [ \'(\' ] ifFalse: [ \'\' ]);\r\t\tnextPutAll: self className.\r\tinstVars ifEmpty: [ aStream nextPutAll: \' new\' ].\r\tinstVars do: [: name | | value |\r\t\taStream space;nextPutAll: name;nextPut: $:.\r\t\tvalue := self instVarNamed: name.\r\t\t(value isCollection and: [value isString not]) ifTrue: [\r\t\t\taStream nextPut: ${.\r\t\t\tvalue do: [: each |\r\t\t\t\t\taStream nextPutAll: each asString\r\t\t\t\t] separatedBy: [ aStream nextPut: $. ].\r\t\t\taStream nextPut: $}.\r\t\t] ifFalse: [\r\t\t\tvalue printOn: aStream]\r\t].\r\taStream\r\t\tnextPutAll: (needParens ifTrue: [ \')\' ] ifFalse: [ \'\' ])',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '732' ],		#self : OmReference [ '733' ],		#time : DateAndTime [ '2024-03-03T08:20:44.511-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #valuesToCompareForSimilarity,			#protocol : #comparing,			#sourceCode : 'valuesToCompareForSimilarity\r\t^ self valuesToCompareForEquality select: [ : each | each isPjJavascriptAstNode ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '733' ],		#self : OmReference [ '734' ],		#time : DateAndTime [ '2024-03-03T08:20:44.511-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLiteralNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitLiteralNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '734' ],		#self : OmReference [ '735' ],		#time : DateAndTime [ '2024-03-03T08:20:44.512-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLiteralNode,				#isMetaSide : false			},			#name : #isLiteralNode,			#protocol : #testing,			#sourceCode : 'isLiteralNode\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '735' ],		#self : OmReference [ '736' ],		#time : DateAndTime [ '2024-03-03T08:20:44.512-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLiteralNode,				#isMetaSide : false			},			#name : #isNonArray,			#protocol : #testing,			#sourceCode : 'isNonArray\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '736' ],		#self : OmReference [ '737' ],		#time : DateAndTime [ '2024-03-03T08:20:44.512-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLiteralNode,				#isMetaSide : false			},			#name : #isNonNilNode,			#protocol : #testing,			#sourceCode : 'isNonNilNode\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '737' ],		#self : OmReference [ '738' ],		#time : DateAndTime [ '2024-03-03T08:20:44.512-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjLiteralValueNode class',				#isMetaSide : true			},			#name : #'value:',			#protocol : #creating,			#sourceCode : 'value: value\r\t^ self new value: value; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '738' ],		#self : OmReference [ '739' ],		#time : DateAndTime [ '2024-03-03T08:20:44.512-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLiteralValueNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitLiteralValueNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '739' ],		#self : OmReference [ '740' ],		#time : DateAndTime [ '2024-03-03T08:20:44.512-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLiteralValueNode,				#isMetaSide : false			},			#name : #isNonArray,			#protocol : #testing,			#sourceCode : 'isNonArray\r\t(myClass inheritsFrom: String) ifTrue: [ ^ true ].\r\t^ (myClass inheritsFrom: Collection) not',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '740' ],		#self : OmReference [ '741' ],		#time : DateAndTime [ '2024-03-03T08:20:44.512-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLiteralValueNode,				#isMetaSide : false			},			#name : #value,			#protocol : #accessing,			#sourceCode : 'value\r\t^ value',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '741' ],		#self : OmReference [ '742' ],		#time : DateAndTime [ '2024-03-03T08:20:44.513-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLiteralValueNode,				#isMetaSide : false			},			#name : #'value:',			#protocol : #accessing,			#sourceCode : 'value: anObject\r\tvalue := anObject.\r\tmyClass := anObject class',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '742' ],		#self : OmReference [ '743' ],		#time : DateAndTime [ '2024-03-03T08:20:44.513-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNilNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitNilNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '743' ],		#self : OmReference [ '744' ],		#time : DateAndTime [ '2024-03-03T08:20:44.513-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNilNode,				#isMetaSide : false			},			#name : #isNonNilNode,			#protocol : #testing,			#sourceCode : 'isNonNilNode\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '744' ],		#self : OmReference [ '745' ],		#time : DateAndTime [ '2024-03-03T08:20:44.513-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjMessageSelectorNode class',				#isMetaSide : true			},			#name : #'identifier:',			#protocol : #creating,			#sourceCode : 'identifier: identifier\r\t^ self new identifier: identifier; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '745' ],		#self : OmReference [ '746' ],		#time : DateAndTime [ '2024-03-03T08:20:44.513-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageSelectorNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitMessageSelectorNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '746' ],		#self : OmReference [ '747' ],		#time : DateAndTime [ '2024-03-03T08:20:44.513-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageSelectorNode,				#isMetaSide : false			},			#name : #identifier,			#protocol : #accessing,			#sourceCode : 'identifier\r\t^ identifier',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '747' ],		#self : OmReference [ '748' ],		#time : DateAndTime [ '2024-03-03T08:20:44.513-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageSelectorNode,				#isMetaSide : false			},			#name : #'identifier:',			#protocol : #accessing,			#sourceCode : 'identifier: anObject\r\tidentifier := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '748' ],		#self : OmReference [ '749' ],		#time : DateAndTime [ '2024-03-03T08:20:44.514-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageSelectorNode,				#isMetaSide : false			},			#name : #isLiteralSelector,			#protocol : #testing,			#sourceCode : 'isLiteralSelector\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '749' ],		#self : OmReference [ '750' ],		#time : DateAndTime [ '2024-03-03T08:20:44.514-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageSelectorNode,				#isMetaSide : false			},			#name : #valuesToCompareForSimilarity,			#protocol : #testing,			#sourceCode : 'valuesToCompareForSimilarity\r\t^self identifier',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '750' ],		#self : OmReference [ '751' ],		#time : DateAndTime [ '2024-03-03T08:20:44.514-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjObjectNode class',				#isMetaSide : true			},			#name : #'dictionary:',			#protocol : #creating,			#sourceCode : 'dictionary: dictionary\r\t^ self new dictionary: dictionary; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '751' ],		#self : OmReference [ '752' ],		#time : DateAndTime [ '2024-03-03T08:20:44.514-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObjectNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitObjectNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '752' ],		#self : OmReference [ '753' ],		#time : DateAndTime [ '2024-03-03T08:20:44.514-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObjectNode,				#isMetaSide : false			},			#name : #dictionary,			#protocol : #accessing,			#sourceCode : 'dictionary\r\t^ dictionary',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '753' ],		#self : OmReference [ '754' ],		#time : DateAndTime [ '2024-03-03T08:20:44.514-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObjectNode,				#isMetaSide : false			},			#name : #'dictionary:',			#protocol : #accessing,			#sourceCode : 'dictionary: anObject\r\tdictionary := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '754' ],		#self : OmReference [ '755' ],		#time : DateAndTime [ '2024-03-03T08:20:44.515-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObjectNode,				#isMetaSide : false			},			#name : #isNonArray,			#protocol : #testing,			#sourceCode : 'isNonArray\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '755' ],		#self : OmReference [ '756' ],		#time : DateAndTime [ '2024-03-03T08:20:44.515-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObjectNode,				#isMetaSide : false			},			#name : #isNonNilNode,			#protocol : #testing,			#sourceCode : 'isNonNilNode\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '756' ],		#self : OmReference [ '757' ],		#time : DateAndTime [ '2024-03-03T08:20:44.515-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNonLocalReturnNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitNonLocalReturnNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '757' ],		#self : OmReference [ '758' ],		#time : DateAndTime [ '2024-03-03T08:20:44.515-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjReturnNode class',				#isMetaSide : true			},			#name : #'expression:',			#protocol : #creating,			#sourceCode : 'expression: expression\r\t^ self new expression: expression; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '758' ],		#self : OmReference [ '759' ],		#time : DateAndTime [ '2024-03-03T08:20:44.515-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReturnNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitReturnNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '759' ],		#self : OmReference [ '760' ],		#time : DateAndTime [ '2024-03-03T08:20:44.515-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReturnNode,				#isMetaSide : false			},			#name : #canPropogateReturns,			#protocol : #testing,			#sourceCode : 'canPropogateReturns\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '760' ],		#self : OmReference [ '761' ],		#time : DateAndTime [ '2024-03-03T08:20:44.515-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReturnNode,				#isMetaSide : false			},			#name : #expression,			#protocol : #accessing,			#sourceCode : 'expression\r\t^ expression',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '761' ],		#self : OmReference [ '762' ],		#time : DateAndTime [ '2024-03-03T08:20:44.516-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReturnNode,				#isMetaSide : false			},			#name : #'expression:',			#protocol : #accessing,			#sourceCode : 'expression: anObject\r\texpression := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '762' ],		#self : OmReference [ '763' ],		#time : DateAndTime [ '2024-03-03T08:20:44.516-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReturnNode,				#isMetaSide : false			},			#name : #isReturnOrThrow,			#protocol : #testing,			#sourceCode : 'isReturnOrThrow\r\t^true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '763' ],		#self : OmReference [ '764' ],		#time : DateAndTime [ '2024-03-03T08:20:44.516-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjSelfNode class',				#isMetaSide : true			},			#name : #'inBlock:',			#protocol : #creating,			#sourceCode : 'inBlock: inBlock\r\t^ self new inBlock: inBlock; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '764' ],		#self : OmReference [ '765' ],		#time : DateAndTime [ '2024-03-03T08:20:44.516-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSelfNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitSelfNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '765' ],		#self : OmReference [ '766' ],		#time : DateAndTime [ '2024-03-03T08:20:44.518-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSelfNode,				#isMetaSide : false			},			#name : #inBlock,			#protocol : #accessing,			#sourceCode : 'inBlock\r\t^ inBlock',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '766' ],		#self : OmReference [ '767' ],		#time : DateAndTime [ '2024-03-03T08:20:44.518-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSelfNode,				#isMetaSide : false			},			#name : #'inBlock:',			#protocol : #accessing,			#sourceCode : 'inBlock: anObject\r\tinBlock := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '767' ],		#self : OmReference [ '768' ],		#time : DateAndTime [ '2024-03-03T08:20:44.518-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSelfNode,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initializing,			#sourceCode : 'initialize\r\tinBlock := false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '768' ],		#self : OmReference [ '769' ],		#time : DateAndTime [ '2024-03-03T08:20:44.519-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSelfNode,				#isMetaSide : false			},			#name : #isNonArray,			#protocol : #testing,			#sourceCode : 'isNonArray\r\t(myClass inheritsFrom: String) ifTrue: [ ^ true ].\r\t^ (myClass inheritsFrom: Collection) not',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '769' ],		#self : OmReference [ '770' ],		#time : DateAndTime [ '2024-03-03T08:20:44.519-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSelfNode,				#isMetaSide : false			},			#name : #isNonNilNode,			#protocol : #testing,			#sourceCode : 'isNonNilNode\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '770' ],		#self : OmReference [ '771' ],		#time : DateAndTime [ '2024-03-03T08:20:44.519-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSelfNode,				#isMetaSide : false			},			#name : #isSelfNode,			#protocol : #testing,			#sourceCode : 'isSelfNode\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '771' ],		#self : OmReference [ '772' ],		#time : DateAndTime [ '2024-03-03T08:20:44.519-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSuperNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitSuperNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '772' ],		#self : OmReference [ '773' ],		#time : DateAndTime [ '2024-03-03T08:20:44.519-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSuperNode,				#isMetaSide : false			},			#name : #isSuperSend,			#protocol : #testing,			#sourceCode : 'isSuperSend\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '773' ],		#self : OmReference [ '774' ],		#time : DateAndTime [ '2024-03-03T08:20:44.519-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjSequenceNode class',				#isMetaSide : true			},			#name : #'expressions:',			#protocol : #creating,			#sourceCode : 'expressions: expressions\r\t^ self new expressions: expressions asArray; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '774' ],		#self : OmReference [ '775' ],		#time : DateAndTime [ '2024-03-03T08:20:44.52-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSequenceNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitSequenceNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '775' ],		#self : OmReference [ '776' ],		#time : DateAndTime [ '2024-03-03T08:20:44.52-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSequenceNode,				#isMetaSide : false			},			#name : #'addLast:',			#protocol : #adding,			#sourceCode : 'addLast: astNode\r\texpressions := expressions, {astNode}',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '776' ],		#self : OmReference [ '777' ],		#time : DateAndTime [ '2024-03-03T08:20:44.52-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSequenceNode,				#isMetaSide : false			},			#name : #asJsAstBody,			#protocol : #converting,			#sourceCode : 'asJsAstBody\r\t^ self expressions asArray',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '777' ],		#self : OmReference [ '778' ],		#time : DateAndTime [ '2024-03-03T08:20:44.52-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSequenceNode,				#isMetaSide : false			},			#name : #asSimpleNode,			#protocol : #accessing,			#sourceCode : 'asSimpleNode\r\texpressions size = 1 ifTrue: [ ^ expressions first asSimpleNode ].\r\t^ self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '778' ],		#self : OmReference [ '779' ],		#time : DateAndTime [ '2024-03-03T08:20:44.52-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSequenceNode,				#isMetaSide : false			},			#name : #canPropogateReturns,			#protocol : #testing,			#sourceCode : 'canPropogateReturns\r\t^ expressions notEmpty and: [ expressions last canPropogateReturns ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '779' ],		#self : OmReference [ '780' ],		#time : DateAndTime [ '2024-03-03T08:20:44.52-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSequenceNode,				#isMetaSide : false			},			#name : #expressions,			#protocol : #accessing,			#sourceCode : 'expressions\r\t^ expressions',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '780' ],		#self : OmReference [ '781' ],		#time : DateAndTime [ '2024-03-03T08:20:44.52-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSequenceNode,				#isMetaSide : false			},			#name : #'expressions:',			#protocol : #accessing,			#sourceCode : 'expressions: anObject\r\texpressions := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '781' ],		#self : OmReference [ '782' ],		#time : DateAndTime [ '2024-03-03T08:20:44.521-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSequenceNode,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #testing,			#sourceCode : 'isEmpty\r\t^ self expressions isEmptyOrNil',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '782' ],		#self : OmReference [ '783' ],		#time : DateAndTime [ '2024-03-03T08:20:44.521-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSequenceNode,				#isMetaSide : false			},			#name : #isNot,			#protocol : #testing,			#sourceCode : 'isNot\r\t^ expressions notEmpty and: [ expressions last isNot ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '783' ],		#self : OmReference [ '784' ],		#time : DateAndTime [ '2024-03-03T08:20:44.521-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSequenceNode,				#isMetaSide : false			},			#name : #not,			#protocol : #converting,			#sourceCode : 'not\r\t^ self class expressions: self expressions allButLast, {self expressions last not}',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '784' ],		#self : OmReference [ '785' ],		#time : DateAndTime [ '2024-03-03T08:20:44.521-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTryNode class',				#isMetaSide : true			},			#name : #'body:',			#protocol : #creating,			#sourceCode : 'body: body\r\t^ self new body: body; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '785' ],		#self : OmReference [ '786' ],		#time : DateAndTime [ '2024-03-03T08:20:44.521-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTryNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitTryNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '786' ],		#self : OmReference [ '787' ],		#time : DateAndTime [ '2024-03-03T08:20:44.521-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTryNode,				#isMetaSide : false			},			#name : #body,			#protocol : #accessing,			#sourceCode : 'body\r\t^ body',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '787' ],		#self : OmReference [ '788' ],		#time : DateAndTime [ '2024-03-03T08:20:44.521-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTryNode,				#isMetaSide : false			},			#name : #'body:',			#protocol : #accessing,			#sourceCode : 'body: anObject\r\tbody := anObject asJsAstBody',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '788' ],		#self : OmReference [ '789' ],		#time : DateAndTime [ '2024-03-03T08:20:44.521-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjUnaryNode class',				#isMetaSide : true			},			#name : #'operator:expression:',			#protocol : #creating,			#sourceCode : 'operator: operator expression: expression\r\t^ self new operator: operator; expression: expression; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '789' ],		#self : OmReference [ '790' ],		#time : DateAndTime [ '2024-03-03T08:20:44.522-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUnaryNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitUnaryNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '790' ],		#self : OmReference [ '791' ],		#time : DateAndTime [ '2024-03-03T08:20:44.522-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUnaryNode,				#isMetaSide : false			},			#name : #expression,			#protocol : #accessing,			#sourceCode : 'expression\r\t^ expression',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '791' ],		#self : OmReference [ '792' ],		#time : DateAndTime [ '2024-03-03T08:20:44.522-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUnaryNode,				#isMetaSide : false			},			#name : #'expression:',			#protocol : #accessing,			#sourceCode : 'expression: anObject\r\texpression := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '792' ],		#self : OmReference [ '793' ],		#time : DateAndTime [ '2024-03-03T08:20:44.522-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUnaryNode,				#isMetaSide : false			},			#name : #isNot,			#protocol : #testing,			#sourceCode : 'isNot\r\t^ operator = #!',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '793' ],		#self : OmReference [ '794' ],		#time : DateAndTime [ '2024-03-03T08:20:44.522-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUnaryNode,				#isMetaSide : false			},			#name : #not,			#protocol : #rewriting,			#sourceCode : 'not\r\toperator = #! ifTrue: [  ^ expression ].\r\t^ super not',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '794' ],		#self : OmReference [ '795' ],		#time : DateAndTime [ '2024-03-03T08:20:44.522-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUnaryNode,				#isMetaSide : false			},			#name : #operator,			#protocol : #accessing,			#sourceCode : 'operator\r\t^ operator',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '795' ],		#self : OmReference [ '796' ],		#time : DateAndTime [ '2024-03-03T08:20:44.522-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUnaryNode,				#isMetaSide : false			},			#name : #'operator:',			#protocol : #accessing,			#sourceCode : 'operator: anObject\r\toperator := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '796' ],		#self : OmReference [ '797' ],		#time : DateAndTime [ '2024-03-03T08:20:44.522-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjUnparsedStringNode class',				#isMetaSide : true			},			#name : #'string:',			#protocol : #creating,			#sourceCode : 'string: string\r\t^ self new string: string; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '797' ],		#self : OmReference [ '798' ],		#time : DateAndTime [ '2024-03-03T08:20:44.522-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUnparsedStringNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitUnparsedStringNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '798' ],		#self : OmReference [ '799' ],		#time : DateAndTime [ '2024-03-03T08:20:44.524-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUnparsedStringNode,				#isMetaSide : false			},			#name : #'asJsAstUsing:',			#protocol : #converting,			#sourceCode : 'asJsAstUsing: astConverter\r\t^ self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '799' ],		#self : OmReference [ '800' ],		#time : DateAndTime [ '2024-03-03T08:20:44.524-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUnparsedStringNode,				#isMetaSide : false			},			#name : #string,			#protocol : #accessing,			#sourceCode : 'string\r\t^ string',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '800' ],		#self : OmReference [ '801' ],		#time : DateAndTime [ '2024-03-03T08:20:44.524-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUnparsedStringNode,				#isMetaSide : false			},			#name : #'string:',			#protocol : #accessing,			#sourceCode : 'string: anObject\r\tstring := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '801' ],		#self : OmReference [ '802' ],		#time : DateAndTime [ '2024-03-03T08:20:44.524-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArgumentNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitArgumentNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '802' ],		#self : OmReference [ '803' ],		#time : DateAndTime [ '2024-03-03T08:20:44.524-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitClassNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '803' ],		#self : OmReference [ '804' ],		#time : DateAndTime [ '2024-03-03T08:20:44.524-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassNode,				#isMetaSide : false			},			#name : #isNonArray,			#protocol : #testing,			#sourceCode : 'isNonArray\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '804' ],		#self : OmReference [ '805' ],		#time : DateAndTime [ '2024-03-03T08:20:44.524-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassNode,				#isMetaSide : false			},			#name : #isNonNilNode,			#protocol : #testing,			#sourceCode : 'isNonNilNode\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '805' ],		#self : OmReference [ '806' ],		#time : DateAndTime [ '2024-03-03T08:20:44.525-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassVariableNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitClassVariableNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '806' ],		#self : OmReference [ '807' ],		#time : DateAndTime [ '2024-03-03T08:20:44.525-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassVariableNode,				#isMetaSide : false			},			#name : #isLiteralSelector,			#protocol : #testing,			#sourceCode : 'isLiteralSelector\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '807' ],		#self : OmReference [ '808' ],		#time : DateAndTime [ '2024-03-03T08:20:44.525-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassVariableNode,				#isMetaSide : false			},			#name : #'isNonlocalClassOrPoolVariableReference:',			#protocol : #testing,			#sourceCode : 'isNonlocalClassOrPoolVariableReference: aClass\r\tmyClass ifNil: [ ^ true ].\r\t^ aClass ~= myClass classSide',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '808' ],		#self : OmReference [ '809' ],		#time : DateAndTime [ '2024-03-03T08:20:44.525-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassVariableNode,				#isMetaSide : false			},			#name : #poolReference,			#protocol : #accessing,			#sourceCode : 'poolReference\r\t^ poolReference',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '809' ],		#self : OmReference [ '810' ],		#time : DateAndTime [ '2024-03-03T08:20:44.525-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassVariableNode,				#isMetaSide : false			},			#name : #'poolReference:',			#protocol : #accessing,			#sourceCode : 'poolReference: aClass \r\tpoolReference := aClass instanceSide',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '810' ],		#self : OmReference [ '811' ],		#time : DateAndTime [ '2024-03-03T08:20:44.526-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassVariableNode,				#isMetaSide : false			},			#name : #'poolReferenceWith:',			#protocol : #converting,			#sourceCode : 'poolReferenceWith: aPjTranspiler \r\t^ aPjTranspiler poolReference: poolReference for: myClass',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '811' ],		#self : OmReference [ '812' ],		#time : DateAndTime [ '2024-03-03T08:20:44.526-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPoolVariableNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitPoolVariableNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '812' ],		#self : OmReference [ '813' ],		#time : DateAndTime [ '2024-03-03T08:20:44.526-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPoolVariableNode,				#isMetaSide : false			},			#name : #'isNonlocalClassOrPoolVariableReference:',			#protocol : #testing,			#sourceCode : 'isNonlocalClassOrPoolVariableReference: aClass\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '813' ],		#self : OmReference [ '814' ],		#time : DateAndTime [ '2024-03-03T08:20:44.526-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjGlobalNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitGlobalNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '814' ],		#self : OmReference [ '815' ],		#time : DateAndTime [ '2024-03-03T08:20:44.526-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjInstanceVariableNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitInstanceVariableNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '815' ],		#self : OmReference [ '816' ],		#time : DateAndTime [ '2024-03-03T08:20:44.526-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjInstanceVariableNode,				#isMetaSide : false			},			#name : #isLiteralSelector,			#protocol : #testing,			#sourceCode : 'isLiteralSelector\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '816' ],		#self : OmReference [ '817' ],		#time : DateAndTime [ '2024-03-03T08:20:44.526-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTempVariableNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitTempVariableNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '817' ],		#self : OmReference [ '818' ],		#time : DateAndTime [ '2024-03-03T08:20:44.527-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjVariableNode class',				#isMetaSide : true			},			#name : #'identifier:',			#protocol : #creating,			#sourceCode : 'identifier: identifier\r\t^ self new identifier: identifier; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '818' ],		#self : OmReference [ '819' ],		#time : DateAndTime [ '2024-03-03T08:20:44.527-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjVariableNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitVariableNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '819' ],		#self : OmReference [ '820' ],		#time : DateAndTime [ '2024-03-03T08:20:44.527-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjVariableNode,				#isMetaSide : false			},			#name : #identifier,			#protocol : #accessing,			#sourceCode : 'identifier\r\t^ identifier',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '820' ],		#self : OmReference [ '821' ],		#time : DateAndTime [ '2024-03-03T08:20:44.527-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjVariableNode,				#isMetaSide : false			},			#name : #'identifier:',			#protocol : #accessing,			#sourceCode : 'identifier: anObject\r\tidentifier := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '821' ],		#self : OmReference [ '822' ],		#time : DateAndTime [ '2024-03-03T08:20:44.527-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjVariableNode,				#isMetaSide : false			},			#name : #valuesToCompareForSimilarity,			#protocol : #testing,			#sourceCode : 'valuesToCompareForSimilarity\r\t^self identifier',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '822' ],		#self : OmReference [ '823' ],		#time : DateAndTime [ '2024-03-03T08:20:44.527-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageConverter,				#isMetaSide : false			},			#name : #'addAllConversions:',			#protocol : #add/remove,			#sourceCode : 'addAllConversions: aCollection\r\taCollection do: [ : aPjOptimization |\r\t\tself addConversion: aPjOptimization\r\t]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '823' ],		#self : OmReference [ '824' ],		#time : DateAndTime [ '2024-03-03T08:20:44.527-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageConverter,				#isMetaSide : false			},			#name : #'addConversion:',			#protocol : #add/remove,			#sourceCode : 'addConversion: aConversion\r\taConversion isClass\r\t\tifTrue: [ ^ self addConversion: aConversion new ].\r\t(self conversionsAt: aConversion selector) add: aConversion.\r\taConversion messageConverter: self.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '824' ],		#self : OmReference [ '825' ],		#time : DateAndTime [ '2024-03-03T08:20:44.528-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageConverter,				#isMetaSide : false			},			#name : #astConverter,			#protocol : #accessing,			#sourceCode : 'astConverter\r\t^ astConverter',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '825' ],		#self : OmReference [ '826' ],		#time : DateAndTime [ '2024-03-03T08:20:44.528-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageConverter,				#isMetaSide : false			},			#name : #'astConverter:',			#protocol : #accessing,			#sourceCode : 'astConverter: anObject\r\tastConverter := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '826' ],		#self : OmReference [ '827' ],		#time : DateAndTime [ '2024-03-03T08:20:44.528-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageConverter,				#isMetaSide : false			},			#name : #'conversionsAt:',			#protocol : #add/remove,			#sourceCode : 'conversionsAt: selector\r\t^ conversions\r\t\tat: selector\r\t\tifAbsentPut: [ SortedCollection sortBlock: [ :l :r | l order <= r order ] ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '827' ],		#self : OmReference [ '828' ],		#time : DateAndTime [ '2024-03-03T08:20:44.528-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageConverter,				#isMetaSide : false			},			#name : #'convert:receiver:args:',			#protocol : #converting,			#sourceCode : 'convert: selector receiver: receiverAstNode args: args\r\r\treceiverAstNode isSuperVariable ifTrue: [ ^ nil ].\r\tconversions at: selector ifPresent: [ :collection | \r\t\tcollection do: [ :conversion | \r\t\t\t(conversion convertReceiver: receiverAstNode args: args) ifNotNil: [ \r\t\t\t\t:ast | ^ ast ] ] ].\r\t^ nil',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '828' ],		#self : OmReference [ '829' ],		#time : DateAndTime [ '2024-03-03T08:20:44.528-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageConverter,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tconversions := Dictionary new',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '829' ],		#self : OmReference [ '830' ],		#time : DateAndTime [ '2024-03-03T08:20:44.528-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageConverter,				#isMetaSide : false			},			#name : #'removeAllConversions:',			#protocol : #add/remove,			#sourceCode : 'removeAllConversions: aCollection\r\taCollection do: [ : aConversion |\r\t\tself removeConversion: aConversion\r\t]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '830' ],		#self : OmReference [ '831' ],		#time : DateAndTime [ '2024-03-03T08:20:44.528-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageConverter,				#isMetaSide : false			},			#name : #'removeConversion:',			#protocol : #add/remove,			#sourceCode : 'removeConversion: aConversion\r\taConversion isClass\r\t\tifTrue: [ ^ self removeConversion: aConversion new ].\r\t(conversions at: aConversion selector\r\t\tifAbsent: [^ self])\r\t\t\tremove: aConversion ifAbsent: []',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '831' ],		#self : OmReference [ '832' ],		#time : DateAndTime [ '2024-03-03T08:20:44.528-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJsAtConversion,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #converting,			#sourceCode : 'convertReceiver: receiver args: args\r\t^PjFieldNode target: (self visit: receiver) selectorNode: (self visit: args first) isNonNil: true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '832' ],		#self : OmReference [ '833' ],		#time : DateAndTime [ '2024-03-03T08:20:44.529-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJsAtConversion,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^ #js_at:',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '833' ],		#self : OmReference [ '834' ],		#time : DateAndTime [ '2024-03-03T08:20:44.529-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJsAtPutConversion,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #converting,			#sourceCode : 'convertReceiver: receiver args: args\r\t| reference |\r\treference :=  super convertReceiver: receiver args: args.\r\t^ PjAssignNode target: reference expression: (self visit: args second)',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '834' ],		#self : OmReference [ '835' ],		#time : DateAndTime [ '2024-03-03T08:20:44.529-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJsAtPutConversion,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^ #js_at:put:',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '835' ],		#self : OmReference [ '836' ],		#time : DateAndTime [ '2024-03-03T08:20:44.529-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJsThisConversion,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #converting,			#sourceCode : 'convertReceiver: receiver args: args\r\t^ PjGlobalNode identifier: #this',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '836' ],		#self : OmReference [ '837' ],		#time : DateAndTime [ '2024-03-03T08:20:44.529-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJsThisConversion,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#js_this',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '837' ],		#self : OmReference [ '838' ],		#time : DateAndTime [ '2024-03-03T08:20:44.529-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNotOptimization,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #converting,			#sourceCode : 'convertReceiver: receiver args: args\r\t^ (self visit: receiver) not',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '838' ],		#self : OmReference [ '839' ],		#time : DateAndTime [ '2024-03-03T08:20:44.529-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNotOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#not',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '839' ],		#self : OmReference [ '840' ],		#time : DateAndTime [ '2024-03-03T08:20:44.53-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #astConverter,			#protocol : #accessing,			#sourceCode : 'astConverter\r\t^self messageConverter astConverter',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '840' ],		#self : OmReference [ '841' ],		#time : DateAndTime [ '2024-03-03T08:20:44.53-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #converting,			#sourceCode : 'convertReceiver: receiver args: args\r\t" return a replacement AST or nil if there\'s no matching optimization "\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '841' ],		#self : OmReference [ '842' ],		#time : DateAndTime [ '2024-03-03T08:20:44.53-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #defaultOrder,			#protocol : #accessing,			#sourceCode : 'defaultOrder\r\t" provide a numereic order for multiple optimizations for a given selector - lowest first "\r\t^ 1',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '842' ],		#self : OmReference [ '843' ],		#time : DateAndTime [ '2024-03-03T08:20:44.53-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #'handleReturn:',			#protocol : #options,			#sourceCode : 'handleReturn: aBlock\r\t^ self astConverter handleReturn: aBlock',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '843' ],		#self : OmReference [ '844' ],		#time : DateAndTime [ '2024-03-03T08:20:44.53-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #'inExpressionDo:',			#protocol : #visiting,			#sourceCode : 'inExpressionDo: aBlock\r\t^ self astConverter inExpressionDo: aBlock',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '844' ],		#self : OmReference [ '845' ],		#time : DateAndTime [ '2024-03-03T08:20:44.53-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself order: self defaultOrder.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '845' ],		#self : OmReference [ '846' ],		#time : DateAndTime [ '2024-03-03T08:20:44.53-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #messageConverter,			#protocol : #accessing,			#sourceCode : 'messageConverter\r\t^ messageConverter',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '846' ],		#self : OmReference [ '847' ],		#time : DateAndTime [ '2024-03-03T08:20:44.531-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #'messageConverter:',			#protocol : #accessing,			#sourceCode : 'messageConverter: anObject\r\tmessageConverter := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '847' ],		#self : OmReference [ '848' ],		#time : DateAndTime [ '2024-03-03T08:20:44.531-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #needsAllPaths,			#protocol : #testing,			#sourceCode : 'needsAllPaths\r\t^self astConverter needsAllPaths',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '848' ],		#self : OmReference [ '849' ],		#time : DateAndTime [ '2024-03-03T08:20:44.531-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #newTemp,			#protocol : #accessing,			#sourceCode : 'newTemp\r\t^self astConverter newTemp',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '849' ],		#self : OmReference [ '850' ],		#time : DateAndTime [ '2024-03-03T08:20:44.531-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #order,			#protocol : #accessing,			#sourceCode : 'order\r\t^ order',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '850' ],		#self : OmReference [ '851' ],		#time : DateAndTime [ '2024-03-03T08:20:44.531-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #'order:',			#protocol : #accessing,			#sourceCode : 'order: aNumber\r\torder := aNumber',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '851' ],		#self : OmReference [ '852' ],		#time : DateAndTime [ '2024-03-03T08:20:44.531-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '852' ],		#self : OmReference [ '853' ],		#time : DateAndTime [ '2024-03-03T08:20:44.531-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #tempName,			#protocol : #options,			#sourceCode : 'tempName\r\t^ self astConverter newTemp',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '853' ],		#self : OmReference [ '854' ],		#time : DateAndTime [ '2024-03-03T08:20:44.532-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #'tempNameFree:',			#protocol : #options,			#sourceCode : 'tempNameFree: tempName\r\t^ self astConverter tempNameFree: tempName',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '854' ],		#self : OmReference [ '855' ],		#time : DateAndTime [ '2024-03-03T08:20:44.532-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #valuesToCompareForEquality,			#protocol : #comparing,			#sourceCode : 'valuesToCompareForEquality\r\t^{self order. self selector}',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '855' ],		#self : OmReference [ '856' ],		#time : DateAndTime [ '2024-03-03T08:20:44.532-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #'visit:',			#protocol : #visiting,			#sourceCode : 'visit: astNode \r\t^ astNode acceptVisitor: self astConverter',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '856' ],		#self : OmReference [ '857' ],		#time : DateAndTime [ '2024-03-03T08:20:44.532-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #'visitAllNodes:',			#protocol : #visiting,			#sourceCode : 'visitAllNodes: aRBBlockNode\r\t^ self astConverter visitAllNodes: aRBBlockNode',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '857' ],		#self : OmReference [ '858' ],		#time : DateAndTime [ '2024-03-03T08:20:44.532-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #'visitInlineBlock:',			#protocol : #visiting,			#sourceCode : 'visitInlineBlock: aRBBlockNode \r\t^ self astConverter visitInlineBlock: aRBBlockNode',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '858' ],		#self : OmReference [ '859' ],		#time : DateAndTime [ '2024-03-03T08:20:44.532-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #'visitInlineLoopBlock:',			#protocol : #visiting,			#sourceCode : 'visitInlineLoopBlock: aRBBlockNode\r\t^ self astConverter visitInlineLoopBlock: aRBBlockNode',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '859' ],		#self : OmReference [ '860' ],		#time : DateAndTime [ '2024-03-03T08:20:44.532-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #'withNonNil:do:',			#protocol : #'non-nil handling',			#sourceCode : 'withNonNil: aPjJavascriptAstNode do: aBlockClosure\r\t^ self astConverter withNonNil: aPjJavascriptAstNode do: aBlockClosure',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '860' ],		#self : OmReference [ '861' ],		#time : DateAndTime [ '2024-03-03T08:20:44.533-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessageConversion,				#isMetaSide : false			},			#name : #'withTemp:',			#protocol : #options,			#sourceCode : 'withTemp: aBlockClosure\r\t| tempName ast |\r\ttempName := self tempName.\r\tast := aBlockClosure value: tempName.\r\tself tempNameFree: tempName.\r\t^ ast',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '861' ],		#self : OmReference [ '862' ],		#time : DateAndTime [ '2024-03-03T08:20:44.533-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjStringGenerator class',				#isMetaSide : true			},			#name : #JsReservedWordsForInstanceVariables,			#protocol : #accessing,			#sourceCode : 'JsReservedWordsForInstanceVariables\r\t^ JsReservedWordsForInstanceVariables',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '862' ],		#self : OmReference [ '863' ],		#time : DateAndTime [ '2024-03-03T08:20:44.533-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjStringGenerator class',				#isMetaSide : true			},			#name : #classVariablesHolderName,			#protocol : #'Javascript names',			#sourceCode : 'classVariablesHolderName\r\t^ \'prototype\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '863' ],		#self : OmReference [ '864' ],		#time : DateAndTime [ '2024-03-03T08:20:44.533-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjStringGenerator class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'class initialization',			#sourceCode : 'initialize\r\tFunctionDefnPrecedence := 3.\r\tStatementPrecedence := -1.\r\tExpressionPrecedence := 0.\r\tAssignmentPrecedence := 3.\r\tConditionalPrecedence := 4.\r\tEqualityPrecedence := 10.\r\tFunctionCallPrecedence := 17.\r\tMemberAccessPrecedence := 18.\r\tGroupingPrecedence := 19.\r\tOperatorPrecedencesDict := {\r\t\t#! -> 15.\r\t\t#negate -> 15.\r\t\t#typeof -> 15.\r\t\t#* -> 14.\r\t\t#/ -> 14.\r\t\t#% -> 14.\r\t\t#- -> 13.\r\t\t#+ -> 13.\r\t\t#< -> 11.\r\t\t#<= -> 11.\r\t\t#>= -> 11.\r\t\t#> -> 11.\r\t\t#== -> EqualityPrecedence.\r\t\t#!= -> EqualityPrecedence.\r\t\t#=== -> EqualityPrecedence.\r\t\t#!== -> EqualityPrecedence.\r\t\t#& -> 9.\r\t\t#\'^\' -> 8.\r\t\t#| -> 7.\r\t\t#&& -> 6.\r\t\t#|| -> 5.\r\t\t#? -> ConditionalPrecedence.\r\t\t#= -> AssignmentPrecedence.\r\t} as: IdentityDictionary.\r\tJsReservedWordsForVariables := Set newFrom:\r\t\t#(abstract arguments boolean break byte case catch char class const continue debugger default delete do double else enum eval export extends false final finally float for function goto if implements import in instanceof int interface let long native new null package private protected public return short static super switch synchronized this throw throws transient true try typeof var void volatile while with yield).\r\tJsReservedWordsForInstanceVariables := Set newFrom: #(constructor prototype)',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '864' ],		#self : OmReference [ '865' ],		#time : DateAndTime [ '2024-03-03T08:20:44.533-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjStringGenerator class',				#isMetaSide : true			},			#name : #memberAccessPrecedence,			#protocol : #accessing,			#sourceCode : 'memberAccessPrecedence\r\t^MemberAccessPrecedence',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '865' ],		#self : OmReference [ '866' ],		#time : DateAndTime [ '2024-03-03T08:20:44.533-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjStringGenerator class',				#isMetaSide : true			},			#name : #nilInJavascript,			#protocol : #'Javascript names',			#sourceCode : 'nilInJavascript\r\t^ nil asJSON',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '866' ],		#self : OmReference [ '867' ],		#time : DateAndTime [ '2024-03-03T08:20:44.534-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjStringGenerator class',				#isMetaSide : true			},			#name : #nilTestFunctionName,			#protocol : #'Javascript names',			#sourceCode : 'nilTestFunctionName\r\t^ self transpilerClass coreClass nilTestFunctionName',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '867' ],		#self : OmReference [ '868' ],		#time : DateAndTime [ '2024-03-03T08:20:44.534-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjStringGenerator class',				#isMetaSide : true			},			#name : #nonLocalReturnVariableName,			#protocol : #'Javascript names',			#sourceCode : 'nonLocalReturnVariableName\r\t^ \'$_err_$\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '868' ],		#self : OmReference [ '869' ],		#time : DateAndTime [ '2024-03-03T08:20:44.534-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjStringGenerator class',				#isMetaSide : true			},			#name : #selfName,			#protocol : #'Javascript names',			#sourceCode : 'selfName\r\t^ \'$_self_$\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '869' ],		#self : OmReference [ '870' ],		#time : DateAndTime [ '2024-03-03T08:20:44.534-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjStringGenerator class',				#isMetaSide : true			},			#name : #tempNamePrefix,			#protocol : #'Javascript names',			#sourceCode : 'tempNamePrefix\r\t^ \'$\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '870' ],		#self : OmReference [ '871' ],		#time : DateAndTime [ '2024-03-03T08:20:44.534-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjStringGenerator class',				#isMetaSide : true			},			#name : #transpilerClass,			#protocol : #'Javascript names',			#sourceCode : 'transpilerClass\r\t^ PjTranspiler',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '871' ],		#self : OmReference [ '872' ],		#time : DateAndTime [ '2024-03-03T08:20:44.534-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'asString:',			#protocol : #public,			#sourceCode : 'asString: aPjAST\r\t\t^ String streamContents: [ :aStream | self asString: aPjAST on: aStream ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '872' ],		#self : OmReference [ '873' ],		#time : DateAndTime [ '2024-03-03T08:20:44.534-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'asString:on:',			#protocol : #public,			#sourceCode : 'asString: aPjAST on: aStream\r\tjsStream := aStream.\r\tcurrentPrecedenceLevel := -1.\r\tcurrentlyDoingAssignment := false.\r\taPjAST acceptVisitor: self.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '873' ],		#self : OmReference [ '874' ],		#time : DateAndTime [ '2024-03-03T08:20:44.534-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'atPrecedence:do:',			#protocol : #precedence,			#sourceCode : 'atPrecedence: precedence do: aBlock\r\t| savedPrecedence |\r\tcurrentPrecedenceLevel > precedence ifTrue: [ self writeNonBrace: $( ].\r\tsavedPrecedence := currentPrecedenceLevel.\r\tcurrentPrecedenceLevel := precedence.\r\t[\r\t\taBlock value\r\t] ensure: [\r\t\tcurrentPrecedenceLevel := savedPrecedence.\r\t\tcurrentPrecedenceLevel > precedence ifTrue: [ self writeNonBrace: $) ]\r\t]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '874' ],		#self : OmReference [ '875' ],		#time : DateAndTime [ '2024-03-03T08:20:44.535-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #currentClass,			#protocol : #accessing,			#sourceCode : 'currentClass\r\t^ currentClass',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '875' ],		#self : OmReference [ '876' ],		#time : DateAndTime [ '2024-03-03T08:20:44.535-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'currentClass:',			#protocol : #accessing,			#sourceCode : 'currentClass: anObject\r\tcurrentClass := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '876' ],		#self : OmReference [ '877' ],		#time : DateAndTime [ '2024-03-03T08:20:44.535-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #isAtStatementPrecedence,			#protocol : #precedence,			#sourceCode : 'isAtStatementPrecedence\r\t^ currentPrecedenceLevel = StatementPrecedence',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '877' ],		#self : OmReference [ '878' ],		#time : DateAndTime [ '2024-03-03T08:20:44.535-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #jsStream,			#protocol : #accessing,			#sourceCode : 'jsStream\r\t^jsStream',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '878' ],		#self : OmReference [ '879' ],		#time : DateAndTime [ '2024-03-03T08:20:44.535-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #maybeWriteSemicolon,			#protocol : #writing,			#sourceCode : 'maybeWriteSemicolon\r\twroteCloseBrace ifFalse: [ ^ self writeNonBrace: $; ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '879' ],		#self : OmReference [ '880' ],		#time : DateAndTime [ '2024-03-03T08:20:44.535-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #nilTestFunctionName,			#protocol : #accessing,			#sourceCode : 'nilTestFunctionName\r\t^self class nilTestFunctionName',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '880' ],		#self : OmReference [ '881' ],		#time : DateAndTime [ '2024-03-03T08:20:44.536-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #nonLocalReturnVariableName,			#protocol : #precedence,			#sourceCode : 'nonLocalReturnVariableName\r\t^ self class nonLocalReturnVariableName',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '881' ],		#self : OmReference [ '882' ],		#time : DateAndTime [ '2024-03-03T08:20:44.536-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #pharoJsSelectorPrefix,			#protocol : #accessing,			#sourceCode : 'pharoJsSelectorPrefix\r\t^ pharoJsSelectorPrefix ifNil: [pharoJsSelectorPrefix := transpiler pharoJsSelectorPrefix]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '882' ],		#self : OmReference [ '883' ],		#time : DateAndTime [ '2024-03-03T08:20:44.536-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #selectorsPrefix,			#protocol : #accessing,			#sourceCode : 'selectorsPrefix\r\t^ transpiler pharoJsSelectorPrefix',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '883' ],		#self : OmReference [ '884' ],		#time : DateAndTime [ '2024-03-03T08:20:44.536-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'transpiler:',			#protocol : #accessing,			#sourceCode : 'transpiler: aPjTranspiler \r\ttranspiler := aPjTranspiler',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '884' ],		#self : OmReference [ '885' ],		#time : DateAndTime [ '2024-03-03T08:20:44.536-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visit:',			#protocol : #visiting,			#sourceCode : 'visit: jsAstNode \r\t^jsAstNode acceptVisitor: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '885' ],		#self : OmReference [ '886' ],		#time : DateAndTime [ '2024-03-03T08:20:44.536-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitApplyNode:',			#protocol : #visiting,			#sourceCode : 'visitApplyNode: aPjApplyNode \r\t| args func |\r\targs := aPjApplyNode args.\r\tfunc := aPjApplyNode func.\r\tself atPrecedence: FunctionCallPrecedence do: [\r\t\tself visit: func.\r\t\targs ifNotNil: [\r\t\t\tself atPrecedence: ExpressionPrecedence  do: [\r\t\t\t\targs do: [: arg |\r\t\t\t\t\targ acceptVisitor: self\r\t\t\t\t] separatedBy: [ self nextPut: $,\r\t\t\t]].\r\t]]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '886' ],		#self : OmReference [ '887' ],		#time : DateAndTime [ '2024-03-03T08:20:44.537-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitArgumentNode:',			#protocol : #visiting,			#sourceCode : 'visitArgumentNode: aPjTempVariableNode \r\tself writeVariable: aPjTempVariableNode identifier escapingIfIn: JsReservedWordsForVariables',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '887' ],		#self : OmReference [ '888' ],		#time : DateAndTime [ '2024-03-03T08:20:44.537-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitArrayNode:',			#protocol : #visiting,			#sourceCode : 'visitArrayNode: aPjArrayNode \r\tself writeNonBrace: $[.\r\taPjArrayNode expressions do: [: expr |\r\t\texpr acceptVisitor: self\r\t] separatedBy: [\r\t\tself nextPut: $,\r\t].\r\tself writeNonBrace: $]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '888' ],		#self : OmReference [ '889' ],		#time : DateAndTime [ '2024-03-03T08:20:44.537-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitAssignNode:',			#protocol : #visiting,			#sourceCode : 'visitAssignNode: aPjAssignNode\r\t| saveDoingAssignment |\r"\t(aPjAssignNode target isNonlocalClassOrPoolVariableReference: self currentClass) ifTrue: [\r\t\t^ \tself atPrecedence: FunctionCallPrecedence do: [\r\t\t\t\tsaveDoingAssignment := currentlyDoingAssignment.\r\t\t\t\tcurrentlyDoingAssignment := true.\r\t\t\t\tself visit: aPjAssignNode target.\r\t\t\t\tcurrentlyDoingAssignment := saveDoingAssignment.\r\t\t\t\tself\r\t\t\t\t\tnextPut: $_;\r\t\t\t\t\tnextPut: $(;\r\t\t\t\t\tvisit: aPjAssignNode expression;\r\t\t\t\t\twriteNonBrace: $)\r\t\t]\r\t]."\r\tself atPrecedence: AssignmentPrecedence do: [\r\t\tself\r\t\t\tvisit: aPjAssignNode target;\r\t\t\tnextPut: $=;\r\t\t\tvisit: aPjAssignNode expression.\r\t\t\twroteCloseBrace := false\r\t]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '889' ],		#self : OmReference [ '890' ],		#time : DateAndTime [ '2024-03-03T08:20:44.537-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitBinaryNode:',			#protocol : #visiting,			#sourceCode : 'visitBinaryNode: aPjABinaryNode\r\tself atPrecedence: (OperatorPrecedencesDict at: aPjABinaryNode operator) do: [\r\t\tself\r\t\t\tvisit: aPjABinaryNode left;\r\t\t\tnextPutAll: aPjABinaryNode operator;\r\t\t\tvisit: aPjABinaryNode right\r\t]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '890' ],		#self : OmReference [ '891' ],		#time : DateAndTime [ '2024-03-03T08:20:44.537-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitBlockNode:',			#protocol : #visiting,			#sourceCode : 'visitBlockNode: aPjMethodNode\r\tcurrentPrecedenceLevel = StatementPrecedence ifFalse: [\r\t\tself visitFunctionNode: aPjMethodNode.\r\t\twroteCloseBrace := false.\r\t\t^ self].\r\tself atPrecedence: FunctionDefnPrecedence + 1 do: [ \r\t\tself visitFunctionNode: aPjMethodNode.\r\t\twroteCloseBrace := false]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '891' ],		#self : OmReference [ '892' ],		#time : DateAndTime [ '2024-03-03T08:20:44.537-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitClassNode:',			#protocol : #visiting,			#sourceCode : 'visitClassNode: aPjClassNode\r\tself nextPutAll: aPjClassNode identifier',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '892' ],		#self : OmReference [ '893' ],		#time : DateAndTime [ '2024-03-03T08:20:44.537-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitClassVariableNode:',			#protocol : #visiting,			#sourceCode : 'visitClassVariableNode: aPjClassVariableNode\r\tself\r\t\twriteNonBrace: (aPjClassVariableNode poolReferenceWith: transpiler);\r\t\tnextPut: $.;\r\t\twriteVariable: aPjClassVariableNode identifier escapingIfIn: JsReservedWordsForInstanceVariables.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '893' ],		#self : OmReference [ '894' ],		#time : DateAndTime [ '2024-03-03T08:20:44.538-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitFieldNode:',			#protocol : #visiting,			#sourceCode : 'visitFieldNode: aPjFieldNode\r\t| target isLiteral isNonNil |\r\ttarget := aPjFieldNode target.\r\tisLiteral := target isLiteralNode and: [ target value isInteger ].\r\tisNonNil := isLiteral or: [ aPjFieldNode isNonNil ].\r\tself\r\t\tatPrecedence: MemberAccessPrecedence do: [\r\t\t\tisNonNil ifTrue: [\r\t\t\t\tisLiteral ifTrue: [\r\t\t\t\t\tself\r\t\t\t\t\t\tnextPut: $(;\r\t\t\t\t\t\tvisit: aPjFieldNode target;\r\t\t\t\t\t\twriteNonBrace: $)\r\t\t\t\t] ifFalse: [\r\t\t\t\t\tself visit: aPjFieldNode target\r\t\t\t]] ifFalse: [\r\t\t\t\tself\r\t\t\t\t\tnextPutAll: self nilTestFunctionName;\r\t\t\t\t\tatPrecedence: FunctionCallPrecedence do: [\r\t\t\t\t\t\tself visit: aPjFieldNode target\r\t\t\t]].\r\t\t\taPjFieldNode selectorNode ifNotNil: [self visitFieldNodeWithId: aPjFieldNode selectorNode]\r\t\t]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '894' ],		#self : OmReference [ '895' ],		#time : DateAndTime [ '2024-03-03T08:20:44.538-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitFieldNodeWithId:',			#protocol : #visiting,			#sourceCode : 'visitFieldNodeWithId: fieldId\r\tfieldId isLiteralSelector ifTrue: [ ^ self visit: fieldId ].\r\t(fieldId isLiteralNode\r\t\tand: [ fieldId value isString\r\t\t\tand: [ fieldId value\r\t\t\t\tallSatisfy: [ :c | c isAlphaNumeric or: [ c = $$ | (c = $_) ] ] ] ])\r\t\tifTrue: [\r\t\t\t^ self\r\t\t\t\twriteNonBrace: $.;\r\t\t\t\tnextPutAll: fieldId value].\r\tself\r\t\tnextPut: $[;\r\t\tvisit: fieldId;\r\t\twriteNonBrace: $]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '895' ],		#self : OmReference [ '896' ],		#time : DateAndTime [ '2024-03-03T08:20:44.538-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitFunctionNode:',			#protocol : #visiting,			#sourceCode : 'visitFunctionNode: aPjFunctionNode\r\r\tself atPrecedence: FunctionDefnPrecedence do: [ \r\t\tself writeFunctionHeader: aPjFunctionNode.\r\t\tself writeFunctionBody: aPjFunctionNode ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '896' ],		#self : OmReference [ '897' ],		#time : DateAndTime [ '2024-03-03T08:20:44.538-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitGlobalNode:',			#protocol : #visiting,			#sourceCode : 'visitGlobalNode: aPjGlobalNode\r\tself nextPutAll: aPjGlobalNode identifier',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '897' ],		#self : OmReference [ '898' ],		#time : DateAndTime [ '2024-03-03T08:20:44.539-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitInstanceVariableNode:',			#protocol : #visiting,			#sourceCode : 'visitInstanceVariableNode: aPjTempVariableNode\r\tself\r\t\twriteNonBrace: $.;\r\t\twriteVariable: aPjTempVariableNode identifier escapingIfIn: JsReservedWordsForInstanceVariables',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '898' ],		#self : OmReference [ '899' ],		#time : DateAndTime [ '2024-03-03T08:20:44.539-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitLiteralValueNode:',			#protocol : #visiting,			#sourceCode : 'visitLiteralValueNode: aPjALiteral\r\tself print: aPjALiteral value',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '899' ],		#self : OmReference [ '900' ],		#time : DateAndTime [ '2024-03-03T08:20:44.539-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitMessageSelectorNode:',			#protocol : #visiting,			#sourceCode : 'visitMessageSelectorNode: aPjMessageSelectorNode\r\tself writeNonBrace: $..\r\tself writeJsSelector: aPjMessageSelectorNode identifier onStream: self jsStream',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '900' ],		#self : OmReference [ '901' ],		#time : DateAndTime [ '2024-03-03T08:20:44.539-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitMethodNode:',			#protocol : #visiting,			#sourceCode : 'visitMethodNode: aPjMethodNode\r\r\t| savedClass |\r\tsavedClass := currentClass.\r\t[ \r\tcurrentClass := aPjMethodNode myClass.\r\tself writeJsSelector: aPjMethodNode methodName.\r\tself\r\t\tnextPut: $(;\r\t\twriteSafeNames: aPjMethodNode parameters;\r\t\tnextPut: $).\r\tself writeFunctionBody: aPjMethodNode ] ensure: [ \r\t\tcurrentClass := savedClass ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '901' ],		#self : OmReference [ '902' ],		#time : DateAndTime [ '2024-03-03T08:20:44.539-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitNilNode:',			#protocol : #visiting,			#sourceCode : 'visitNilNode: aPjIfNilIfNotNilNode \r\tself nextPutAll: self class nilInJavascript',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '902' ],		#self : OmReference [ '903' ],		#time : DateAndTime [ '2024-03-03T08:20:44.539-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitNonLocalReturnNode:',			#protocol : #visiting,			#sourceCode : 'visitNonLocalReturnNode: aPjNonLocalReturnNode\r\tself isAtStatementPrecedence ifTrue: [\r\t\tself nextPutAll: \'throw \'\r\t] ifFalse: [\r\t\tself nextPutAll: PjCore throwFunctionName; nextPut: $( ].\r\tself\r\t\tnextPutAll: self class nonLocalReturnVariableName;\r\t\twriteNonBrace: $=;\r\t\tvisit: aPjNonLocalReturnNode expression.\r\tself isAtStatementPrecedence ifFalse: [ self nextPut: $)]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '903' ],		#self : OmReference [ '904' ],		#time : DateAndTime [ '2024-03-03T08:20:44.539-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitObjectNode:',			#protocol : #visiting,			#sourceCode : 'visitObjectNode: aPjObjectNode\r\t| dictionary |\r\tdictionary := aPjObjectNode dictionary.\r\tself nextPut: ${.\r\tdictionary keys asSortedCollection do: [: key |\r\t\t(key allSatisfy: [: each | each isAlphaNumeric]) ifTrue: [\r\t\t\tself nextPutAll: key\r\t\t] ifFalse: [\r\t\t\tself nextPut: $";nextPutAll: key;nextPut: $"\r\t\t].\r\t\tself nextPut: $:.\r\t\t(dictionary at: key) acceptVisitor: self\r\t] separatedBy: [\r\t\tself nextPut: $,\r\t].\r\tself writeNonBrace: $} " even though this is a brace, it isn\'t an end-of-statement brace "',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '904' ],		#self : OmReference [ '905' ],		#time : DateAndTime [ '2024-03-03T08:20:44.539-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitPoolVariableNode:',			#protocol : #visiting,			#sourceCode : 'visitPoolVariableNode: aPjClassVariableNode\r\tself visitClassVariableNode: aPjClassVariableNode',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '905' ],		#self : OmReference [ '906' ],		#time : DateAndTime [ '2024-03-03T08:20:44.54-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitReturnNode:',			#protocol : #visiting,			#sourceCode : 'visitReturnNode: aPjAReturn\r\tself isAtStatementPrecedence ifFalse: [\r\t\tself error: \'PjAReturn not at statement level\'\r\t].\r\tself\r\t\tnextPutAll: \'return \';\r\t\tatPrecedence: ExpressionPrecedence  do: [self visit: aPjAReturn expression].\r\twroteCloseBrace := false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '906' ],		#self : OmReference [ '907' ],		#time : DateAndTime [ '2024-03-03T08:20:44.54-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitSelfNode:',			#protocol : #visiting,			#sourceCode : 'visitSelfNode: aPjASelf\r\taPjASelf inBlock ifTrue: [ ^ self nextPutAll: self class selfName ].\r\tself nextPutAll: \'this\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '907' ],		#self : OmReference [ '908' ],		#time : DateAndTime [ '2024-03-03T08:20:44.54-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitSequenceNode:',			#protocol : #visiting,			#sourceCode : 'visitSequenceNode: aPjSequenceNode\r\tself isAtStatementPrecedence ifFalse: [self writeNonBrace:  $(].\r\taPjSequenceNode expressions do: [: expr |\r\t\twroteCloseBrace := false.\r\t\texpr acceptVisitor: self\r\t] separatedBy: [\r\t\tself isAtStatementPrecedence ifTrue: [\r\t\t\tself maybeWriteSemicolon\r\t\t] ifFalse: [\r\t\t\tself nextPut: $,\r\t]].\r\tself isAtStatementPrecedence\r\t\tifFalse: [ self writeNonBrace: $)]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '908' ],		#self : OmReference [ '909' ],		#time : DateAndTime [ '2024-03-03T08:20:44.54-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitSuperNode:',			#protocol : #visiting,			#sourceCode : 'visitSuperNode: aPjSuperNode\r\tself nextPutAll: \'super\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '909' ],		#self : OmReference [ '910' ],		#time : DateAndTime [ '2024-03-03T08:20:44.54-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitTempVariableNode:',			#protocol : #visiting,			#sourceCode : 'visitTempVariableNode: aPjTempVariableNode \r\tself writeVariable: aPjTempVariableNode identifier escapingIfIn: JsReservedWordsForVariables',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '910' ],		#self : OmReference [ '911' ],		#time : DateAndTime [ '2024-03-03T08:20:44.54-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitTryNode:',			#protocol : #visiting,			#sourceCode : 'visitTryNode: aPjATry \r\tself atPrecedence: StatementPrecedence do:  [\r\t\tself nextPutAll: \'var \';\r\t\t\tnextPutAll: self nonLocalReturnVariableName;\r\t\t\tnextPutAll: \'={};try{\'.\r\t\tself\r\t\t\twriteBodyStatements: aPjATry;\r\t\t\tnextPutAll: \'}catch(e){if(e===\';\r\t\t\tnextPutAll: self nonLocalReturnVariableName;\r\t\t\tnextPutAll: \')return e;throw e\';\r\t\t\twriteCloseBrace\r\t]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '911' ],		#self : OmReference [ '912' ],		#time : DateAndTime [ '2024-03-03T08:20:44.54-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitUnaryNode:',			#protocol : #visiting,			#sourceCode : 'visitUnaryNode: aPjUnaryNode \r\tself atPrecedence: (OperatorPrecedencesDict at: aPjUnaryNode operator) do: [\r\t\tself\r\t\t\tnextPutAll: aPjUnaryNode operator;\r\t\t\tvisit: aPjUnaryNode expression\r\t]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '912' ],		#self : OmReference [ '913' ],		#time : DateAndTime [ '2024-03-03T08:20:44.541-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitUnparsedStringNode:',			#protocol : #visiting,			#sourceCode : 'visitUnparsedStringNode: aPjUnparsedStringNode\r\tself nextPutAll: aPjUnparsedStringNode string',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '913' ],		#self : OmReference [ '914' ],		#time : DateAndTime [ '2024-03-03T08:20:44.541-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitVariableNode:',			#protocol : #visiting,			#sourceCode : 'visitVariableNode: aPjVariableNode\r\tself nextPutAll: aPjVariableNode identifier',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '914' ],		#self : OmReference [ '915' ],		#time : DateAndTime [ '2024-03-03T08:20:44.541-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'writeBodyStatements:',			#protocol : #writing,			#sourceCode : 'writeBodyStatements: aBodyContainingNode\r\tcurrentPrecedenceLevel := StatementPrecedence.\r\twroteCloseBrace := false.\r\taBodyContainingNode body\r\t\tdo: [ :each | self visit: each ]\r\t\tseparatedBy: [ self maybeWriteSemicolon ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '915' ],		#self : OmReference [ '916' ],		#time : DateAndTime [ '2024-03-03T08:20:44.541-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #writeCloseBrace,			#protocol : #writing,			#sourceCode : 'writeCloseBrace\r\tself nextPut: $}.\r\twroteCloseBrace := true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '916' ],		#self : OmReference [ '917' ],		#time : DateAndTime [ '2024-03-03T08:20:44.541-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'writeFunctionBody:',			#protocol : #writing,			#sourceCode : 'writeFunctionBody: aPjFunctionNode\r\tself\r\t\tnextPut: ${;\r\t\twriteFunctionLocals: aPjFunctionNode;\r\t\twriteBodyStatements: aPjFunctionNode;\r\t\twriteCloseBrace',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '917' ],		#self : OmReference [ '918' ],		#time : DateAndTime [ '2024-03-03T08:20:44.541-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'writeFunctionHeader:',			#protocol : #writing,			#sourceCode : 'writeFunctionHeader: aPjFunctionNode\r\r\tself\r\t\tnextPut: $(;\r\t\twriteSafeNames: aPjFunctionNode parameters;\r\t\tnextPut: $); nextPutAll: \'=>\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '918' ],		#self : OmReference [ '919' ],		#time : DateAndTime [ '2024-03-03T08:20:44.541-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'writeFunctionLocals:',			#protocol : #writing,			#sourceCode : 'writeFunctionLocals: aPjFunctionNode\r\t\taPjFunctionNode locals isEmpty ifTrue: [\r\t\t\taPjFunctionNode needsSelf ifFalse: [^self]].\r\t\tself\r\t\t\tnextPutAll: \'var \';\r\t\t\twriteSafeNames: \taPjFunctionNode locals.\r\t\taPjFunctionNode needsSelf ifTrue: [\t\r\t\t\taPjFunctionNode locals isEmpty ifFalse: [ self nextPut: $, ].\r\t\t\tself\r\t\t\t\tnextPutAll: self class selfName;\r\t\t\t\tnextPutAll: \'=this\'\r\t\t].\r\t\tself nextPut: $;',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '919' ],		#self : OmReference [ '920' ],		#time : DateAndTime [ '2024-03-03T08:20:44.541-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'writeNonBrace:',			#protocol : #writing,			#sourceCode : 'writeNonBrace: aCharacterOrString\r\taCharacterOrString isString ifTrue: [\r\t\tself nextPutAll: aCharacterOrString\r\t] ifFalse:  [\r\t\tself nextPut: aCharacterOrString\r\t].\r\twroteCloseBrace := false.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '920' ],		#self : OmReference [ '921' ],		#time : DateAndTime [ '2024-03-03T08:20:44.542-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'writeSafeNames:',			#protocol : #writing,			#sourceCode : 'writeSafeNames: aCollection\r\taCollection do: [ : each | \r\t\tself writeVariable: each escapingIfIn: JsReservedWordsForVariables ]\r\tseparatedBy: [ self nextPut: $, ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '921' ],		#self : OmReference [ '922' ],		#time : DateAndTime [ '2024-03-03T08:20:44.542-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTranspiler class',				#isMetaSide : true			},			#name : #classVariablesHolderName,			#protocol : #accessing,			#sourceCode : 'classVariablesHolderName\r\t^ PjStringGenerator classVariablesHolderName',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '922' ],		#self : OmReference [ '923' ],		#time : DateAndTime [ '2024-03-03T08:20:44.542-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTranspiler class',				#isMetaSide : true			},			#name : #classVarsPoolName,			#protocol : #transpiling,			#sourceCode : 'classVarsPoolName\r\t^\'cp$\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '923' ],		#self : OmReference [ '924' ],		#time : DateAndTime [ '2024-03-03T08:20:44.542-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTranspiler class',				#isMetaSide : true			},			#name : #'convertToJs:',			#protocol : #transpiling,			#sourceCode : 'convertToJs: anObject\r\t^self new convertToJs: anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '924' ],		#self : OmReference [ '925' ],		#time : DateAndTime [ '2024-03-03T08:20:44.542-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTranspiler class',				#isMetaSide : true			},			#name : #coreClass,			#protocol : #accessing,			#sourceCode : 'coreClass\r\t^ PjCore',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '925' ],		#self : OmReference [ '926' ],		#time : DateAndTime [ '2024-03-03T08:20:44.542-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTranspiler class',				#isMetaSide : true			},			#name : #installAllAliasesSelector,			#protocol : #transpiling,			#sourceCode : 'installAllAliasesSelector\r\r\t^ #installAllAliases',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '926' ],		#self : OmReference [ '927' ],		#time : DateAndTime [ '2024-03-03T08:20:44.542-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTranspiler class',				#isMetaSide : true			},			#name : #installClassSelector,			#protocol : #'transpiling classes',			#sourceCode : 'installClassSelector\r\t^#installClass',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '927' ],		#self : OmReference [ '928' ],		#time : DateAndTime [ '2024-03-03T08:20:44.542-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTranspiler class',				#isMetaSide : true			},			#name : #installJsClassPlaceholderSelector,			#protocol : #'transpiling classes',			#sourceCode : 'installJsClassPlaceholderSelector\r\r\t^ #installJsClassPlaceholder',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '928' ],		#self : OmReference [ '929' ],		#time : DateAndTime [ '2024-03-03T08:20:44.543-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTranspiler class',				#isMetaSide : true			},			#name : #lineEnding,			#protocol : #accessing,			#sourceCode : 'lineEnding\r\t^Character cr',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '929' ],		#self : OmReference [ '930' ],		#time : DateAndTime [ '2024-03-03T08:20:44.543-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTranspiler class',				#isMetaSide : true			},			#name : #skipMethodPragmaKeyword,			#protocol : #accessing,			#sourceCode : 'skipMethodPragmaKeyword\r\t"Methods with this pragma are skipped upon conversion to javascript."\r\t^#pharoJsSkip',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '930' ],		#self : OmReference [ '931' ],		#time : DateAndTime [ '2024-03-03T08:20:44.543-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'addAliasesForClassMethod:',			#protocol : #'transpiling aliases',			#sourceCode : 'addAliasesForClassMethod: aRBMethodNode\r\r\tself\r\t\taliasesDict: classMethodsAliasesDict\r\t\taddForMethod: aRBMethodNode',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '931' ],		#self : OmReference [ '932' ],		#time : DateAndTime [ '2024-03-03T08:20:44.543-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'addAliasesForInstanceMethod:',			#protocol : #'transpiling aliases',			#sourceCode : 'addAliasesForInstanceMethod: aRBMethodNode\r\r\tself\r\t\taliasesDict: instanceMethodsAliasesDict\r\t\taddForMethod: aRBMethodNode',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '932' ],		#self : OmReference [ '933' ],		#time : DateAndTime [ '2024-03-03T08:20:44.543-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'addAllConversions:',			#protocol : #conversions,			#sourceCode : 'addAllConversions: aCollection \r\tconverter addAllConversions: aCollection',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '933' ],		#self : OmReference [ '934' ],		#time : DateAndTime [ '2024-03-03T08:20:44.543-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #addAllOptionalConversions,			#protocol : #conversions,			#sourceCode : 'addAllOptionalConversions\r\t| aCollection |\r\taCollection := PjOptionalMessageConversion allSubclasses select: [: class | class includesSelector: #selector ].\r\tself addAllConversions: aCollection',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '934' ],		#self : OmReference [ '935' ],		#time : DateAndTime [ '2024-03-03T08:20:44.543-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'addAllOptionalConversionsExcept:to:',			#protocol : #conversions,			#sourceCode : 'addAllOptionalConversionsExcept: low to: high\r\t| aCollection discard |\r\taCollection := PjOptionalMessageConversion allSubclasses select: [: class | class includesSelector: #selector ].\r\taCollection := aCollection sorted: [: l : r | l name < r name].\r\tdiscard := aCollection copyFrom: (low*aCollection size) asInteger+1 to: (high*aCollection size) asInteger.\r\tself addAllConversions: (aCollection reject: [: each | discard includes: each ]).\r\tdiscard inspect.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '935' ],		#self : OmReference [ '936' ],		#time : DateAndTime [ '2024-03-03T08:20:44.543-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'aliasesDict:addForMethod:',			#protocol : #'transpiling aliases',			#sourceCode : 'aliasesDict: aDict addForMethod: aRBMethodNode\r\taRBMethodNode pragmas\r\t\tselect: [ :pragma | pragma selector beginsWith: #jsAlias: ]\r\t\tthenDo: [ :pragma | \r\t\tself aliasesDict: aDict at: aRBMethodNode selector addAll: pragma arguments ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '936' ],		#self : OmReference [ '937' ],		#time : DateAndTime [ '2024-03-03T08:20:44.544-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'aliasesDict:at:addAll:',			#protocol : #'transpiling aliases',			#sourceCode : 'aliasesDict: aliasesDict at: methodSelector addAll: newAliases\r\r\t| aliases |\r\taliases := aliasesDict\r\t\t           at: methodSelector\r\t\t           ifAbsentPut: [ Set new ].\r\taliases addAll: newAliases',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '937' ],		#self : OmReference [ '938' ],		#time : DateAndTime [ '2024-03-03T08:20:44.544-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'beforeCodeOutputHook:',			#protocol : #accessing,			#sourceCode : 'beforeCodeOutputHook: aBlockClosure \r\tbeforeCodeOutputHook := aBlockClosure',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '938' ],		#self : OmReference [ '939' ],		#time : DateAndTime [ '2024-03-03T08:20:44.544-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #classVariablesHolderName,			#protocol : #accessing,			#sourceCode : 'classVariablesHolderName\r\t^ self class classVariablesHolderName',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '939' ],		#self : OmReference [ '940' ],		#time : DateAndTime [ '2024-03-03T08:20:44.544-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #classVarsPoolName,			#protocol : #transpiling,			#sourceCode : 'classVarsPoolName\r\t^self class classVarsPoolName',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '940' ],		#self : OmReference [ '941' ],		#time : DateAndTime [ '2024-03-03T08:20:44.544-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'convertAllClasses:',			#protocol : #'transpiling classes',			#sourceCode : 'convertAllClasses: classes\r\r\t| actualClassesToConvert classesInWriteOrder |\r\tbeforeCodeOutputHook ifNotNil: [ beforeCodeOutputHook value ].\r\tactualClassesToConvert := classes asIdentitySet collect:\r\t\t                          #classToUseForJsConversion.\r\tclassesInWriteOrder := self orderForWriting: actualClassesToConvert.\r\tclassesInWriteOrder do: [ :aClass | \r\t\tself writeClassDefinitionOf: aClass. ].\r\tself writeDnuList.\r\tself writeClassInitializeOfAll: classesInWriteOrder',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '941' ],		#self : OmReference [ '942' ],		#time : DateAndTime [ '2024-03-03T08:20:44.544-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'convertAllClasses:writeDnu:',			#protocol : #'transpiling classes',			#sourceCode : 'convertAllClasses: classes writeDnu: aBoolean\r\tself \r\t\tenableWriteDnu: aBoolean\r\t\tduring: [self convertAllClasses: classes].',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '942' ],		#self : OmReference [ '943' ],		#time : DateAndTime [ '2024-03-03T08:20:44.544-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'convertAndWriteClosedBlock:',			#protocol : #transpiling,			#sourceCode : 'convertAndWriteClosedBlock: valuedBlock \r\tself convertAndWriteClosedBlock: valuedBlock with: [ ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '943' ],		#self : OmReference [ '944' ],		#time : DateAndTime [ '2024-03-03T08:20:44.545-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'convertAndWriteClosedBlock:with:',			#protocol : #transpiling,			#sourceCode : 'convertAndWriteClosedBlock: valuedBlock with: aBlock\r\t| jsAst |\r\tjsAst := converter convertValuedBlock: valuedBlock.\r\taBlock value.\r\tgenerator asString: jsAst on: self jsStream.\r\tjsStream\r\t\tnextPut: $;;\r\t\tcr',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '944' ],		#self : OmReference [ '945' ],		#time : DateAndTime [ '2024-03-03T08:20:44.545-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'convertBlock:',			#protocol : #transpiling,			#sourceCode : 'convertBlock: aBlock \r\t| jsAst |\r\tjsAst := converter convertBlock: aBlock.\r\t^self generateCodeStringFrom: jsAst.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '945' ],		#self : OmReference [ '946' ],		#time : DateAndTime [ '2024-03-03T08:20:44.545-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'convertClass:',			#protocol : #'transpiling classes',			#sourceCode : 'convertClass: aClass\r\r\t| actualClassToConvert |\r\tactualClassToConvert := aClass classToUseForJsConversion.\r\tself writeClassDefinitionOf: actualClassToConvert.\r\tself writeClassInitializeOf: actualClassToConvert',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '946' ],		#self : OmReference [ '947' ],		#time : DateAndTime [ '2024-03-03T08:20:44.545-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'convertClosedBlock:',			#protocol : #transpiling,			#sourceCode : 'convertClosedBlock: closedBlock \r\t| jsAst |\r\tjsAst := converter convertClosedBlock: closedBlock.\r\t^self generateCodeStringFrom: jsAst.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '947' ],		#self : OmReference [ '948' ],		#time : DateAndTime [ '2024-03-03T08:20:44.545-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'convertSmalltalkString:',			#protocol : #transpiling,			#sourceCode : 'convertSmalltalkString: aString\r\tself transpileMethod: (nil class compiler source: (ReadStream on: \'transpile ^\',aString); receiver: nil class ; compile)',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '948' ],		#self : OmReference [ '949' ],		#time : DateAndTime [ '2024-03-03T08:20:44.545-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'convertToJs:',			#protocol : #transpiling,			#sourceCode : 'convertToJs: anObject\r\t^ self onTempStreamDo: [anObject convertToJsUsing: self]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '949' ],		#self : OmReference [ '950' ],		#time : DateAndTime [ '2024-03-03T08:20:44.545-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'convertValuedBlock:',			#protocol : #transpiling,			#sourceCode : 'convertValuedBlock: valuedBlock \r\t| jsAst |\r\tjsAst := converter convertValuedBlock: valuedBlock.\r\t^self generateCodeStringFrom: jsAst.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '950' ],		#self : OmReference [ '951' ],		#time : DateAndTime [ '2024-03-03T08:20:44.546-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #coreClass,			#protocol : #accessing,			#sourceCode : 'coreClass\r\t^ self class coreClass',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '951' ],		#self : OmReference [ '952' ],		#time : DateAndTime [ '2024-03-03T08:20:44.546-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #defaultConverterClass,			#protocol : #initialization,			#sourceCode : 'defaultConverterClass\r\t^PjAstConverter',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '952' ],		#self : OmReference [ '953' ],		#time : DateAndTime [ '2024-03-03T08:20:44.546-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #defaultGeneratorClass,			#protocol : #initialization,			#sourceCode : 'defaultGeneratorClass\r\t^PjStringGenerator',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '953' ],		#self : OmReference [ '954' ],		#time : DateAndTime [ '2024-03-03T08:20:44.546-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #defaultMessageConversions,			#protocol : #initialization,			#sourceCode : 'defaultMessageConversions\r\t^ { PjJsThisConversion. PjJsAtConversion. PjJsAtPutConversion }',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '954' ],		#self : OmReference [ '955' ],		#time : DateAndTime [ '2024-03-03T08:20:44.546-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'disableWriteDnuDuring:',			#protocol : #transpiling,			#sourceCode : 'disableWriteDnuDuring: aBlockClosure \r\t^self enableWriteDnu: false during: aBlockClosure',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '955' ],		#self : OmReference [ '956' ],		#time : DateAndTime [ '2024-03-03T08:20:44.546-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'discoveredGlobalsPool:',			#protocol : #loading,			#sourceCode : 'discoveredGlobalsPool: aClass\r\t"To be used for loading polyfills"\r\t^self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '956' ],		#self : OmReference [ '957' ],		#time : DateAndTime [ '2024-03-03T08:20:44.546-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'discoveredMessage:',			#protocol : #loading,			#sourceCode : 'discoveredMessage: aSymbol\r\tneededDNUs add: aSymbol',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '957' ],		#self : OmReference [ '958' ],		#time : DateAndTime [ '2024-03-03T08:20:44.546-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'discoveredReferenceToClass:',			#protocol : #loading,			#sourceCode : 'discoveredReferenceToClass: aClass\r\t"To be used for dynamic class and method loading"\r\t^self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '958' ],		#self : OmReference [ '959' ],		#time : DateAndTime [ '2024-03-03T08:20:44.547-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #dnuJsString,			#protocol : #transpiling,			#sourceCode : 'dnuJsString\r\t^ self enableWriteDnuDuring: [self onTempStreamDo: [self writeDnuList]]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '959' ],		#self : OmReference [ '960' ],		#time : DateAndTime [ '2024-03-03T08:20:44.547-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'does:reference:',			#protocol : #ordering,			#sourceCode : 'does: last reference: first\r\t| classesReferencingFirst |\r\tclassesReferencingFirst := classesReferencingCache\r\t\tat: first\r\t\tifAbsentPut: [ | methodsReferencingFirst |\r\t\t\tmethodsReferencingFirst := SystemNavigation\r\t\t\t\tglobalRefsForPharoJS: first classToUseForJsConversion name.\r\t\t\tmethodsReferencingFirst asSet\r\t\t\t\tcollect: [ :each | each methodClass instanceSide ] ].\r\t(classesReferencingFirst includes: last)\r\t\tifTrue: [ ^ true ].\r\tclassesReferencingFirst\r\t\tdetect: [ :each | last inheritsFrom: each ]\r\t\tifFound: [ ^ true ].\r\t(last sharedPools includes: first)\r\t\tifTrue: [ ^ true ].\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '960' ],		#self : OmReference [ '961' ],		#time : DateAndTime [ '2024-03-03T08:20:44.547-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'enableWriteDnu:during:',			#protocol : #transpiling,			#sourceCode : 'enableWriteDnu: aBoolean during: aBlockClosure \r\t| initialShouldWriteDnu |\r\tinitialShouldWriteDnu := self shouldWriteDnu.\r\tself shouldWriteDnu: aBoolean.\r\t^aBlockClosure ensure: [ self shouldWriteDnu: initialShouldWriteDnu ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '961' ],		#self : OmReference [ '962' ],		#time : DateAndTime [ '2024-03-03T08:20:44.547-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'enableWriteDnuDuring:',			#protocol : #transpiling,			#sourceCode : 'enableWriteDnuDuring: aBlockClosure \r\t^self enableWriteDnu: true during: aBlockClosure',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '962' ],		#self : OmReference [ '963' ],		#time : DateAndTime [ '2024-03-03T08:20:44.547-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'findClassesFor:',			#protocol : #loading,			#sourceCode : 'findClassesFor: aClass\r\t^ { aClass }, aClass allSuperclasses',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '963' ],		#self : OmReference [ '964' ],		#time : DateAndTime [ '2024-03-03T08:20:44.547-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'generateCodeStringFrom:',			#protocol : #transpiling,			#sourceCode : 'generateCodeStringFrom: jsAst\r\tgenerator asString: jsAst on: self jsStream',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '964' ],		#self : OmReference [ '965' ],		#time : DateAndTime [ '2024-03-03T08:20:44.547-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsuper initialize.\r\tgeneratedMethods := Dictionary new.\r\tconverter := self defaultConverterClass new.\r\tconverter transpiler: self.\r\tconverter addAllMessageConversions: self defaultMessageConversions.\r\tgenerator := self defaultGeneratorClass new transpiler: self.\r\tself shouldWriteDnu: true.\r\tneededDNUs := Set new.\r\twrittenDNUs := Set new.\r\tpoolsUsed := IdentityDictionary new.\r\tclassesReferencingCache := IdentityDictionary new.\r\tself pharoJsSelectorPrefix: \'_\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '965' ],		#self : OmReference [ '966' ],		#time : DateAndTime [ '2024-03-03T08:20:44.548-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #installAllAliasesSelector,			#protocol : #'transpiling aliases',			#sourceCode : 'installAllAliasesSelector\r\t^self class installAllAliasesSelector',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '966' ],		#self : OmReference [ '967' ],		#time : DateAndTime [ '2024-03-03T08:20:44.548-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #installClassSelector,			#protocol : #'transpiling classes',			#sourceCode : 'installClassSelector\r\r\t^ self class installClassSelector',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '967' ],		#self : OmReference [ '968' ],		#time : DateAndTime [ '2024-03-03T08:20:44.548-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #installJsClassPlaceholderSelector,			#protocol : #'transpiling classes',			#sourceCode : 'installJsClassPlaceholderSelector\r\r\t^ self class installJsClassPlaceholderSelector',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '968' ],		#self : OmReference [ '969' ],		#time : DateAndTime [ '2024-03-03T08:20:44.548-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'installSelectorFor:',			#protocol : #'transpiling classes',			#sourceCode : 'installSelectorFor: aClass\r\r\t^ aClass isJsClassPlaceholder\r\t\t  ifTrue: [ self installJsClassPlaceholderSelector ]\r\t\t  ifFalse: [ self installClassSelector ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '969' ],		#self : OmReference [ '970' ],		#time : DateAndTime [ '2024-03-03T08:20:44.548-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #jsCode,			#protocol : #accessing,			#sourceCode : 'jsCode\r\t^ self jsStream contents trim',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '970' ],		#self : OmReference [ '971' ],		#time : DateAndTime [ '2024-03-03T08:20:44.548-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #jsStream,			#protocol : #accessing,			#sourceCode : 'jsStream\r\t^jsStream ifNil: [ jsStream := \'\' writeStream ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '971' ],		#self : OmReference [ '972' ],		#time : DateAndTime [ '2024-03-03T08:20:44.548-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #lineEnding,			#protocol : #accessing,			#sourceCode : 'lineEnding\r\t^self class lineEnding',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '972' ],		#self : OmReference [ '973' ],		#time : DateAndTime [ '2024-03-03T08:20:44.548-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'moveHighestPriorityClassesIn:to:with:',			#protocol : #ordering,			#sourceCode : 'moveHighestPriorityClassesIn: initialClasses to: orderedClasses with: doesReferenceBlock\r\t| nextClasses |\r\tnextClasses  := initialClasses select: [: aClass | \r\t\t\tinitialClasses noneSatisfy: [: bClass | \r\t\t\t\tself should: bClass occurBefore: aClass with: doesReferenceBlock]].\r\tnextClasses isEmpty ifTrue: [ ^ converter transpilationError: \'circular class dependency\' ].\r\t(nextClasses includes: PjObject) ifTrue: [ nextClasses size > 1 ifTrue: [self halt] ].\r\tinitialClasses removeAll: nextClasses.\r\torderedClasses addAll: nextClasses.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '973' ],		#self : OmReference [ '974' ],		#time : DateAndTime [ '2024-03-03T08:20:44.549-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'needMetaclassFixFor:',			#protocol : #'transpiling classes',			#sourceCode : 'needMetaclassFixFor: aClass\r\r\t^ aClass isJsClassPlaceholder',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '974' ],		#self : OmReference [ '975' ],		#time : DateAndTime [ '2024-03-03T08:20:44.549-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'newlyGeneratedAstsDo:',			#protocol : #outputing,			#sourceCode : 'newlyGeneratedAstsDo: aBlock\r\tgeneratedMethods keysAndValuesDo: [ : method : ast |\r\t\tast = #done ifFalse: [\r\t\t\taBlock cull: method cull: ast.\r\t\t\tgeneratedMethods at: method put: #done\r\t]]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '975' ],		#self : OmReference [ '976' ],		#time : DateAndTime [ '2024-03-03T08:20:44.549-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #numberOfClasses,			#protocol : #statistics,			#sourceCode : 'numberOfClasses\r\t^ nil',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '976' ],		#self : OmReference [ '977' ],		#time : DateAndTime [ '2024-03-03T08:20:44.551-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #numberOfMethods,			#protocol : #statistics,			#sourceCode : 'numberOfMethods\r\t^ nil',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '977' ],		#self : OmReference [ '978' ],		#time : DateAndTime [ '2024-03-03T08:20:44.551-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'onStream:',			#protocol : #transpiling,			#sourceCode : 'onStream: aStream\r\tjsStream := aStream',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '978' ],		#self : OmReference [ '979' ],		#time : DateAndTime [ '2024-03-03T08:20:44.551-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'onTempStreamDo:',			#protocol : #'writing low-level',			#sourceCode : 'onTempStreamDo: aBlock\r\t| saveStream |\r\tsaveStream := jsStream.\r\tjsStream := \'\' writeStream.\r\t^ [\r\t\taBlock value.\r\t\tjsStream contents\r\t] ensure: [ jsStream := saveStream ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '979' ],		#self : OmReference [ '980' ],		#time : DateAndTime [ '2024-03-03T08:20:44.551-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'order:with:',			#protocol : #ordering,			#sourceCode : 'order: classes with: doesReferenceBlock\r\t"Arrange the classes in the collection, classes, in initialization order.\r\tBased on Class class>>#superclassOrder:"\r\r\t| orderedClasses initialClasses cache |\r\tinitialClasses := classes copy asOrderedCollection.\r\tcache := Dictionary new.\r\torderedClasses := OrderedCollection new: initialClasses size.\r\t[initialClasses size > 0] whileTrue: [\r\t\tself\r\t\t\tmoveHighestPriorityClassesIn: initialClasses\r\t\t\tto: orderedClasses\r\t\t\twith: doesReferenceBlock ].\r\t^ orderedClasses',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '980' ],		#self : OmReference [ '981' ],		#time : DateAndTime [ '2024-03-03T08:20:44.552-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'orderForInitialization:',			#protocol : #ordering,			#sourceCode : 'orderForInitialization: classes\r\t^ self order: classes with: [ : first : last |\r\t\tself does: last reference: first ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '981' ],		#self : OmReference [ '982' ],		#time : DateAndTime [ '2024-03-03T08:20:44.552-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'orderForWriting:',			#protocol : #ordering,			#sourceCode : 'orderForWriting: classes \r\t^ self order: classes with: [ : first : last |\r\t\tlast allSharedPoolsRecursive includes: first]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '982' ],		#self : OmReference [ '983' ],		#time : DateAndTime [ '2024-03-03T08:20:44.552-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #pharoJsSelectorPrefix,			#protocol : #transpiling,			#sourceCode : 'pharoJsSelectorPrefix\r\t^ pharoJsSelectorPrefix',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '983' ],		#self : OmReference [ '984' ],		#time : DateAndTime [ '2024-03-03T08:20:44.552-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'pharoJsSelectorPrefix:',			#protocol : #transpiling,			#sourceCode : 'pharoJsSelectorPrefix: newSelectorsPrefix\r\tpharoJsSelectorPrefix := newSelectorsPrefix.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '984' ],		#self : OmReference [ '985' ],		#time : DateAndTime [ '2024-03-03T08:20:44.552-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'poolFor:',			#protocol : #transpiling,			#sourceCode : 'poolFor: myClass\r\t^ poolsUsed at: myClass instanceSide ifAbsentPut: [OrderedCollection with: myClass instanceSide ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '985' ],		#self : OmReference [ '986' ],		#time : DateAndTime [ '2024-03-03T08:20:44.552-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'poolReference:for:',			#protocol : #transpiling,			#sourceCode : 'poolReference: aClass for: myClass\r\r\t^ aClass nameToUseForJsConversion, \'.\',  self classVarsPoolName',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '986' ],		#self : OmReference [ '987' ],		#time : DateAndTime [ '2024-03-03T08:20:44.552-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'removeAllConversions:',			#protocol : #conversions,			#sourceCode : 'removeAllConversions: aCollection \r\tconverter removeAllConversions: aCollection',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '987' ],		#self : OmReference [ '988' ],		#time : DateAndTime [ '2024-03-03T08:20:44.553-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #resetMethodAliasesDictionaries,			#protocol : #'transpiling aliases',			#sourceCode : 'resetMethodAliasesDictionaries\r\tinstanceMethodsAliasesDict := Dictionary new.\r\tclassMethodsAliasesDict := Dictionary new.\r',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '988' ],		#self : OmReference [ '989' ],		#time : DateAndTime [ '2024-03-03T08:20:44.553-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #selectorsPrefix,			#protocol : #accessing,			#sourceCode : 'selectorsPrefix\r\t^ self pharoJsSelectorPrefix',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '989' ],		#self : OmReference [ '990' ],		#time : DateAndTime [ '2024-03-03T08:20:44.553-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'setExtraBindings:',			#protocol : #conversions,			#sourceCode : 'setExtraBindings: aDictionary \r\tconverter setExtraBindings: aDictionary',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '990' ],		#self : OmReference [ '991' ],		#time : DateAndTime [ '2024-03-03T08:20:44.553-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'should:occurBefore:with:',			#protocol : #ordering,			#sourceCode : 'should: first occurBefore: last with: doesReferenceBlock\r\tfirst=last ifTrue: [ ^false ].\r\t(last javascriptInheritsFrom: first) ifTrue: [ ^true ].\r\t(first javascriptInheritsFrom: last) ifTrue: [ ^false ].\r\t^ doesReferenceBlock value: first value: last',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '991' ],		#self : OmReference [ '992' ],		#time : DateAndTime [ '2024-03-03T08:20:44.553-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'shouldSkipMethodNode:',			#protocol : #'transpiling methods',			#sourceCode : 'shouldSkipMethodNode: aRBMethodNode\r\t^aRBMethodNode hasPragmaNamed: self skipMethodPragmaKeyword',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '992' ],		#self : OmReference [ '993' ],		#time : DateAndTime [ '2024-03-03T08:20:44.553-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #shouldWriteDnu,			#protocol : #accessing,			#sourceCode : 'shouldWriteDnu\r\t^ shouldWriteDnu',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '993' ],		#self : OmReference [ '994' ],		#time : DateAndTime [ '2024-03-03T08:20:44.554-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'shouldWriteDnu:',			#protocol : #accessing,			#sourceCode : 'shouldWriteDnu: anObject\r\tshouldWriteDnu := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '994' ],		#self : OmReference [ '995' ],		#time : DateAndTime [ '2024-03-03T08:20:44.554-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #skipMethodPragmaKeyword,			#protocol : #accessing,			#sourceCode : 'skipMethodPragmaKeyword\r\t^self class skipMethodPragmaKeyword',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '995' ],		#self : OmReference [ '996' ],		#time : DateAndTime [ '2024-03-03T08:20:44.554-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'transpileMethod:',			#protocol : #'transpiling methods',			#sourceCode : 'transpileMethod: aMethod\r\t| jsAst |\r\tjsAst := converter\r\t\tconvertAst: aMethod ast\r\t\twithPrimitive: aMethod primitive.\r\tgenerator asString: jsAst on: self jsStream',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '996' ],		#self : OmReference [ '997' ],		#time : DateAndTime [ '2024-03-03T08:20:44.554-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'transpileMethodToString:',			#protocol : #'transpiling methods',			#sourceCode : 'transpileMethodToString: aMethod\r\t^ self onTempStreamDo: [ self transpileMethod: aMethod ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '997' ],		#self : OmReference [ '998' ],		#time : DateAndTime [ '2024-03-03T08:20:44.554-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'withMethodsNoSkipOf:do:',			#protocol : #'transpiling methods',			#sourceCode : 'withMethodsNoSkipOf: aClass do: aBlock\r\tself withMethodsOf: aClass do: [ :method | \r\t\t(self shouldSkipMethodNode: method) ifFalse: [aBlock value: method] ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '998' ],		#self : OmReference [ '999' ],		#time : DateAndTime [ '2024-03-03T08:20:44.554-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'withMethodsOf:do:',			#protocol : #'transpiling methods',			#sourceCode : 'withMethodsOf: aClass do: aBlock\r\taClass selectorsWithExplicitOrigin do: [ : selector |\r\t\t aBlock value: (aClass compiledMethodAt: selector) ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '999' ],		#self : OmReference [ '1000' ],		#time : DateAndTime [ '2024-03-03T08:20:44.555-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'writeAssociationKey:values:',			#protocol : #'transpiling aliases',			#sourceCode : 'writeAssociationKey: selector values: aliases\r\rself\r\t\t\t\t<< $";\r\t\t\t\twriteJsSelector: selector;\r\t\t\t\t<< \'":[\'.\r\t\t\taliases\r\t\t\t\tdo: [ :each | self print: each ]\r\t\t\t\tseparatedBy: [ self << $, ].\r\t\t\tself << $] \r',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1000' ],		#self : OmReference [ '1001' ],		#time : DateAndTime [ '2024-03-03T08:20:44.555-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'writeClassDeclarationOf:',			#protocol : #'transpiling classes',			#sourceCode : 'writeClassDeclarationOf: aClass\r\raClass isJsClassPlaceholder ifTrue: [ ^self writeClassExtensionDeclarationOf: aClass ].\r\tself << \'class\';\r\t\t\tspace;\r\t\t\twriteNameForClass: aClass; \r\t\tspace;\r\t\t<< \'extends\';\r\t\tspace; \r\t\twriteNameForClass: aClass superclass ',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1001' ],		#self : OmReference [ '1002' ],		#time : DateAndTime [ '2024-03-03T08:20:44.555-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'writeClassDefinitionOf:',			#protocol : #'transpiling classes',			#sourceCode : 'writeClassDefinitionOf: aClass\r\r\tself resetMethodAliasesDictionaries.\r\tself\r\t\twriteNameForClass: PjCore;\r\t\t<< \'.\';\r\t\t<< (self installSelectorFor: aClass);\r\t\t<< $(;\r\t\twriteClassDeclarationOf: aClass;\r\t\t<< ${;\r\t\tcr;\r\t\twriteMethodsOf: aClass;\r\t\twriteClassVariableDeclarationsOf: aClass;\r\t\t<< \'},\'.\r\taClass isJsClassPlaceholder ifTrue: [ \r\t\tself\r\t\t\twriteNameForClass: aClass;\r\t\t\t<< $, ].\r\tself\r\t\twriteInstanceMethodsAliasesDict;\r\t\t<< $,;\r\t\twriteClassMethodsAliasesDict;\r\t\t<< \');\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1002' ],		#self : OmReference [ '1003' ],		#time : DateAndTime [ '2024-03-03T08:20:44.555-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'writeClassExtensionDeclarationOf:',			#protocol : #'transpiling classes',			#sourceCode : 'writeClassExtensionDeclarationOf: aClass\r\r\tself\r\t\t<< \'class\';\r\t\tspace;\r\t\t<< \'extends\';\r\t\tspace;\r\t\t<< \'(\';\r\t\twriteNameForClass: aClass;\r\t\t<< \'.__proto__.prototype == null  ? Object :\';\r\t\twriteNameForClass: aClass;\r\t\t<< \'.__proto__)\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1003' ],		#self : OmReference [ '1004' ],		#time : DateAndTime [ '2024-03-03T08:20:44.555-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'writeClassInitializeOf:',			#protocol : #transpiling,			#sourceCode : 'writeClassInitializeOf: aClass\r\taClass needsInitialization ifFalse: [^self].  \r\tself \r\t\twriteNameForClass: aClass;\r\t\tnextPutAll: \'.\', self pharoJsSelectorPrefix, aClass classInitializeSelector, \'();\';\r\t\tcr',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1004' ],		#self : OmReference [ '1005' ],		#time : DateAndTime [ '2024-03-03T08:20:44.556-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'writeClassInitializeOfAll:',			#protocol : #transpiling,			#sourceCode : 'writeClassInitializeOfAll: classesInWriteOrder\r\t| sortedClassesToInit classesToInit |\r\tclassesToInit := classesInWriteOrder select: #needsInitialization.\r\tsortedClassesToInit := self orderForInitialization: classesToInit.\r\t^ sortedClassesToInit\r\t\tdo: [ :aClass | self writeClassInitializeOf: aClass ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1005' ],		#self : OmReference [ '1006' ],		#time : DateAndTime [ '2024-03-03T08:20:44.556-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #writeClassMethodsAliasesDict,			#protocol : #'transpiling aliases',			#sourceCode : 'writeClassMethodsAliasesDict\r\r\tself writeMethodAliasesDict: classMethodsAliasesDict',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1006' ],		#self : OmReference [ '1007' ],		#time : DateAndTime [ '2024-03-03T08:20:44.556-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'writeClassMethodsOf:',			#protocol : #'transpiling methods',			#sourceCode : 'writeClassMethodsOf: aClass\r\r\tself withMethodsNoSkipOf: aClass class do: [ :aRBMethodNode | \r\t\tself\r\t\t\t<< \'static \';\r\t\t\ttranspileMethod: aRBMethodNode;\r\t\t\taddAliasesForClassMethod:aRBMethodNode ;\r\t\t\tcr ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1007' ],		#self : OmReference [ '1008' ],		#time : DateAndTime [ '2024-03-03T08:20:44.556-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'writeClassVarNamesOf:',			#protocol : #transpiling,			#sourceCode : 'writeClassVarNamesOf: aClass\r\r\taClass classPool keys\r\t\tdo: [ :classVarName | \r\t\t\tself\r\t\t\t\tnextPut: $";\r\t\t\t\tnextPutAll: classVarName;\r\t\t\t\tnextPut: $";\r\t\t\t\tnextPutAll: \':null\' ]\r\t\tseparatedBy: [ self nextPut: $, ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1008' ],		#self : OmReference [ '1009' ],		#time : DateAndTime [ '2024-03-03T08:20:44.556-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'writeClassVariableDeclarationsOf:',			#protocol : #transpiling,			#sourceCode : 'writeClassVariableDeclarationsOf: aClass\r\r\tself\r\t\tnextPutAll: \'static\';\r\t\tspace;\r\t\twriteClassVarsPoolName;\r\t\tnextPutAll: \'={\';\r\t\twriteClassVarNamesOf: aClass;\r\t\tnextPut: $}. \r',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1009' ],		#self : OmReference [ '1010' ],		#time : DateAndTime [ '2024-03-03T08:20:44.556-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #writeClassVarsPoolName,			#protocol : #transpiling,			#sourceCode : 'writeClassVarsPoolName\r\r\tself nextPutAll: self classVarsPoolName',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1010' ],		#self : OmReference [ '1011' ],		#time : DateAndTime [ '2024-03-03T08:20:44.556-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #writeDnuList,			#protocol : #transpiling,			#sourceCode : 'writeDnuList\r\t| selectors |\r\tself shouldWriteDnu ifFalse: [^self].\r\tselectors := neededDNUs asSortedCollection reject: [ : selector | writtenDNUs includes: selector ].\r\tselectors ifEmpty: [ ^ self ].\r\tself \r\t\twriteNameForClass: self coreClass;\r\t\tnextPut: $.;\r\t\tnextPutAll: self pharoJsSelectorPrefix;\r\t\tnextPutAll: \'registerDnuForAll_([\'.\r\tselectors do: [\r\t\t: selector |\r\t\t\twrittenDNUs add: selector.\r\t\t\tselector printJsOn: self\r\t] separatedBy: [ self nextPut: $, ].\r\tself \r\t\tnextPutAll: \']);\';\r\t\tcr.\r\tneededDNUs := Set new.',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1011' ],		#self : OmReference [ '1012' ],		#time : DateAndTime [ '2024-03-03T08:20:44.557-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'writeInstallMethodAliasesOf:',			#protocol : #'transpiling aliases',			#sourceCode : 'writeInstallMethodAliasesOf: aClass\r\r\t(instanceMethodsAliasesDict isEmpty and: [ \r\t\t classMethodsAliasesDict isEmpty ]) ifTrue: [ ^ self ].\r\tself\r\t\twriteNameForClass: PjCore;\r\t\t<< $.;\r\t\t<< self installAllAliasesSelector;\r\t\t<< $(;\r\t\twriteInstanceMethodsAliasesDict;\r\t\t<< $,;\r\t\twriteClassMethodsAliasesDict;\r\t\t<< $,;\r\t\twriteNameForClass: aClass;\r\t\t<< $,;\r\t\twriteNameForClass: aClass;\r\t\t<< \');\';\r\t\tcr',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1012' ],		#self : OmReference [ '1013' ],		#time : DateAndTime [ '2024-03-03T08:20:44.557-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #writeInstanceMethodsAliasesDict,			#protocol : #'transpiling aliases',			#sourceCode : 'writeInstanceMethodsAliasesDict\r\tself writeMethodAliasesDict: instanceMethodsAliasesDict ',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1013' ],		#self : OmReference [ '1014' ],		#time : DateAndTime [ '2024-03-03T08:20:44.557-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'writeInstanceMethodsOf:',			#protocol : #'transpiling methods',			#sourceCode : 'writeInstanceMethodsOf: aClass\r\r\tself withMethodsNoSkipOf: aClass do: [ :aRBMethodNode | \r\t\tself\r\t\t\ttranspileMethod: aRBMethodNode;\r\t\t\taddAliasesForInstanceMethod: aRBMethodNode;\r\t\t\tcr ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1014' ],		#self : OmReference [ '1015' ],		#time : DateAndTime [ '2024-03-03T08:20:44.557-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'writeInstanceVariable:',			#protocol : #transpiling,			#sourceCode : 'writeInstanceVariable: cvName\r\tself writeVariable: cvName escapingIfIn: PjStringGenerator JsReservedWordsForInstanceVariables',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1015' ],		#self : OmReference [ '1016' ],		#time : DateAndTime [ '2024-03-03T08:20:44.557-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'writeList:withPrefix:',			#protocol : #writing,			#sourceCode : 'writeList: aCollection withPrefix: aString \r\taCollection do: [: each |\r\t\tself jsStream nextPutAll: aString;nextPutAll: each\r\t]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1016' ],		#self : OmReference [ '1017' ],		#time : DateAndTime [ '2024-03-03T08:20:44.557-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'writeMethodAliasesDict:',			#protocol : #'transpiling aliases',			#sourceCode : 'writeMethodAliasesDict: aliasesDict\r\r\tself << ${.\r\taliasesDict keys\r\t\tdo: [ :selector | \r\t\t\tself\r\t\t\t\twriteAssociationKey: selector\r\t\t\t\tvalues: (aliasesDict at: selector) ]\r\t\tseparatedBy: [ self << $, ].\r\tself << $}',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1017' ],		#self : OmReference [ '1018' ],		#time : DateAndTime [ '2024-03-03T08:20:44.557-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'writeMethodsOf:',			#protocol : #'transpiling methods',			#sourceCode : 'writeMethodsOf: aClass\r\r\tconverter classForConversion: aClass.\r\tself\r\t\twriteInstanceMethodsOf: aClass;\r\t\twriteClassMethodsOf: aClass',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1018' ],		#self : OmReference [ '1019' ],		#time : DateAndTime [ '2024-03-03T08:20:44.558-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'writeNameForClass:',			#protocol : #'transpiling classes',			#sourceCode : 'writeNameForClass: aClass\r\tself nextPutAll: aClass instanceSide nameToUseForJsConversion',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1019' ],		#self : OmReference [ '1020' ],		#time : DateAndTime [ '2024-03-03T08:20:44.558-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Metaclass,				#isMetaSide : false			},			#name : #classToUseForJsConversion,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'classToUseForJsConversion\r\t^ self instanceSide classToUseForJsConversion classSide',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1020' ],		#self : OmReference [ '1021' ],		#time : DateAndTime [ '2024-03-03T08:20:44.558-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'BlockClosure class',				#isMetaSide : true			},			#name : #'outerContext:startpc:numArgs:copiedValues:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'outerContext: aContext startpc: startPcOrOuterCode numArgs: anInteger copiedValues: copiedValues \r\t| newBlock |\r\tnewBlock := self new: copiedValues size.\r\tnewBlock\r\t\touterContext: aContext;\r\t\tcompiledBlock: startPcOrOuterCode;\r\t\tnumArgs: anInteger.\r\t1 to: newBlock numCopiedValues do:\r\t\t[:i|\r\t\tnewBlock at: i put: (copiedValues at: i)].\r\t^newBlock \r\t\r\t\t',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1021' ],		#self : OmReference [ '1022' ],		#time : DateAndTime [ '2024-03-03T08:20:44.558-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #arguments,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'arguments\r\t^#()',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1022' ],		#self : OmReference [ '1023' ],		#time : DateAndTime [ '2024-03-03T08:20:44.558-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #asClosedBlock,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'asClosedBlock\r\r\t^ self closedBlockClass\r\t\t  startpc: self basicStartpc\r\t\t  numArgs: self numArgs\r\t\t  originalBlock: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1023' ],		#self : OmReference [ '1024' ],		#time : DateAndTime [ '2024-03-03T08:20:44.559-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'asJsAstUsing:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'asJsAstUsing: aConverter\r\t^aConverter convertBlock: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1024' ],		#self : OmReference [ '1025' ],		#time : DateAndTime [ '2024-03-03T08:20:44.559-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #asValuedBlock,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'asValuedBlock\r\t^PjValuedClosedBlockClosure newFrom: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1025' ],		#self : OmReference [ '1026' ],		#time : DateAndTime [ '2024-03-03T08:20:44.559-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'asValuedBlockWithArgs:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'asValuedBlockWithArgs: args\r\t^PjValuedClosedBlockClosure newFrom: self withArgs: args',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1026' ],		#self : OmReference [ '1027' ],		#time : DateAndTime [ '2024-03-03T08:20:44.559-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #basicStartpc,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'basicStartpc\r\t^startpc',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1027' ],		#self : OmReference [ '1028' ],		#time : DateAndTime [ '2024-03-03T08:20:44.56-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #closedBlockClass,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'closedBlockClass\r\t^PjClosedBlockClosure',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1028' ],		#self : OmReference [ '1029' ],		#time : DateAndTime [ '2024-03-03T08:20:44.56-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'convertToJavascriptAstUsing:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'convertToJavascriptAstUsing: aPjAstConverter\r\t^ aPjAstConverter visit: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1029' ],		#self : OmReference [ '1030' ],		#time : DateAndTime [ '2024-03-03T08:20:44.56-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'convertToJsUsing:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'convertToJsUsing: aPjTranspiler \r\taPjTranspiler convertBlock: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1030' ],		#self : OmReference [ '1031' ],		#time : DateAndTime [ '2024-03-03T08:20:44.56-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #copiedValues,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'copiedValues\r\t^(1 to: self numCopiedValues) collect: [: index | \r\t\tself copiedValueAt: index].',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1031' ],		#self : OmReference [ '1032' ],		#time : DateAndTime [ '2024-03-03T08:20:44.56-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #copiedValuesForClosedBlock,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'copiedValuesForClosedBlock\r\t^self copiedValues collect: [ : each | each copy ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1032' ],		#self : OmReference [ '1033' ],		#time : DateAndTime [ '2024-03-03T08:20:44.561-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'externalVariable:formContext:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'externalVariable: variable formContext: context\r\t^ PjJavascriptTranspilationError new messageText: \'free temp variable: \', variable name',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1033' ],		#self : OmReference [ '1034' ],		#time : DateAndTime [ '2024-03-03T08:20:44.561-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'externalVariable:fromContext:andScope:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'externalVariable: name fromContext: context andScope: scope\r\t^ PjJavascriptTranspilationError new messageText: \'free temp variable: \',name',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1034' ],		#self : OmReference [ '1035' ],		#time : DateAndTime [ '2024-03-03T08:20:44.561-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'externalVariable:fromMethod:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'externalVariable: name fromMethod: method\r\t^ PjJavascriptTranspilationError new messageText: \'free instance variable: \',name',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1035' ],		#self : OmReference [ '1036' ],		#time : DateAndTime [ '2024-03-03T08:20:44.561-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #externalVariablesDict,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'externalVariablesDict\r\t^ self externalVariablesDictOf: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1036' ],		#self : OmReference [ '1037' ],		#time : DateAndTime [ '2024-03-03T08:20:44.561-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'externalVariablesDictOf:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'externalVariablesDictOf: aBlock\r\r\t| context method variablesDict tempValue scope |\r\tvariablesDict := Dictionary new.\r\tcontext := aBlock asContext.\r\tscope := aBlock outerContext sourceNode scope.\r\tscope allTemps do: [ :variable | \t\t\r\t\ttempValue := self externalVariable: variable formContext: context.\r\t\tvariablesDict at: variable name put: tempValue ].\r\tmethod := aBlock home receiver.\r\tmethod class allInstVarNames do: [ :name | \r\t\tvariablesDict\r\t\t\tat: name\r\t\t\tput: (self externalVariable: name fromMethod: method) ].\r\t^ variablesDict',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1037' ],		#self : OmReference [ '1038' ],		#time : DateAndTime [ '2024-03-03T08:20:44.562-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #firstAstNode,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'firstAstNode\r\t^self sourceNode statements first',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1038' ],		#self : OmReference [ '1039' ],		#time : DateAndTime [ '2024-03-03T08:20:44.562-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #isClosed,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isClosed\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1039' ],		#self : OmReference [ '1040' ],		#time : DateAndTime [ '2024-03-03T08:20:44.562-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #isFreeJavascriptValue,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isFreeJavascriptValue\r\t^ self isClosed',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1040' ],		#self : OmReference [ '1041' ],		#time : DateAndTime [ '2024-03-03T08:20:44.562-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #originalBlock,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'originalBlock\r\t^ self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1041' ],		#self : OmReference [ '1042' ],		#time : DateAndTime [ '2024-03-03T08:20:44.562-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjValuedClosedBlockClosure class',				#isMetaSide : true			},			#name : #'newFrom:',			#protocol : #'instance creation',			#sourceCode : 'newFrom: aBlock\r\t^self newFrom: aBlock withArgs: #()',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1042' ],		#self : OmReference [ '1043' ],		#time : DateAndTime [ '2024-03-03T08:20:44.563-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjValuedClosedBlockClosure class',				#isMetaSide : true			},			#name : #'newFrom:withArgs:',			#protocol : #'instance creation',			#sourceCode : 'newFrom: aBlock withArgs: args\r\r\t| newInstance |\r\taBlock isClosed ifTrue: [ \r\t\tPjJavascriptTranspilationError signal:\r\t\t\t\'Cannot build a valued block from a closed one\' ].\r\tnewInstance := self\r\t\t               startpc: aBlock startpc\r\t\t               numArgs: aBlock numArgs\r\t\t               originalBlock: aBlock.\r\t^ newInstance\r\t\t  arguments: args;\r\t\t  yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1043' ],		#self : OmReference [ '1044' ],		#time : DateAndTime [ '2024-03-03T08:20:44.563-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjValuedClosedBlockClosure,				#isMetaSide : false			},			#name : #arguments,			#protocol : #accessing,			#sourceCode : 'arguments\r\t^ arguments',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1044' ],		#self : OmReference [ '1045' ],		#time : DateAndTime [ '2024-03-03T08:20:44.563-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjValuedClosedBlockClosure,				#isMetaSide : false			},			#name : #'arguments:',			#protocol : #accessing,			#sourceCode : 'arguments: anObject\r\targuments := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1045' ],		#self : OmReference [ '1046' ],		#time : DateAndTime [ '2024-03-03T08:20:44.563-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjValuedClosedBlockClosure,				#isMetaSide : false			},			#name : #'convertToJsUsing:',			#protocol : #converting,			#sourceCode : 'convertToJsUsing: aPjTranspiler \r\taPjTranspiler convertValuedBlock: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1046' ],		#self : OmReference [ '1047' ],		#time : DateAndTime [ '2024-03-03T08:20:44.563-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #String,				#isMetaSide : false			},			#name : #isLiteralJavascriptValue,			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'isLiteralJavascriptValue\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1047' ],		#self : OmReference [ '1048' ],		#time : DateAndTime [ '2024-03-03T08:20:44.564-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #String,				#isMetaSide : false			},			#name : #'printJsOn:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'printJsOn: aStream\r\taStream nextPut: $".\r\tself do: [ : each |\r\t\tself printOneJsCharacter: each asInteger onStream: aStream ].\r\taStream nextPut: $".',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1048' ],		#self : OmReference [ '1049' ],		#time : DateAndTime [ '2024-03-03T08:20:44.564-05:00' ],		#trigger : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #String,				#isMetaSide : false			},			#name : #'printOneJsCharacter:onStream:',			#protocol : #'*PharoJs-Base-Transpiler',			#sourceCode : 'printOneJsCharacter: each onStream: aStream\r\teach < 32 ifTrue: [\r\t\taStream nextPut: $\\.\r\t\teach = 10\r\t\t\tifTrue: [ aStream nextPut: $n ]\r\t\t\tifFalse: [ each = 13\r\t\t\t\t\tifTrue: [ aStream nextPut: $r ]\r\t\t\t\t\tifFalse: [\r\t\t\t\t\t\taStream nextPut: $x.\r\t\t\t\t\t\taStream nextPutAll: (each printStringBase: 16 nDigits: 2) ] ] \r\t] ifFalse: [\r\t\teach < 128 ifTrue: [\r\t\t\teach = 34 ifTrue: [ aStream nextPut: $\\ ].\r\t\t\teach = 92 ifTrue: [ aStream nextPut: $\\ ].\r\t\t\taStream nextPut: (Character value: each).\r\t\t] ifFalse: [\r\t\t\taStream nextPut: $\\.\r\t\t\taStream nextPut: $u.\r\t\t\taStream nextPutAll: (each printStringBase: 16 nDigits: 4).\r\t]]',			#stamp : '',			#package : #PharoJs-Base-Transpiler		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:44.945-05:00' ],		#prior : OmReference [ '1049' ],		#self : OmReference [ '1050' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-Base-Transpiler-Tests-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1050' ],		#self : OmReference [ '1051' ],		#time : DateAndTime [ '2024-03-03T08:20:44.993-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Transpiler-Tests-Tests,		#affectedPackageName : #PharoJs-Base-Transpiler-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1051' ],		#self : OmReference [ '1052' ],		#time : DateAndTime [ '2024-03-03T08:20:44.996-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTJavascriptCodeAnalyser\r\tuses: PjTStreamWriter\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : #Trait,				#traitCompositionSource : 'PjTStreamWriter'			},			#name : #PjTJavascriptCodeAnalyser,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTJavascriptCodeAnalyser classTrait\r\tuses: PjTStreamWriter classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTStreamWriter classTrait'				},				#name : #'PjTJavascriptCodeAnalyser classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTJavascriptCodeAnalyser,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1052' ],		#self : OmReference [ '1053' ],		#time : DateAndTime [ '2024-03-03T08:20:45.003-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTJavascriptCodeAnalyser\r\tuses: PjTStreamWriter\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : #Trait,				#traitCompositionSource : 'PjTStreamWriter'			},			#name : #PjTJavascriptCodeAnalyser,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTJavascriptCodeAnalyser classTrait\r\tuses: PjTStreamWriter classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTStreamWriter classTrait'				},				#name : #'PjTJavascriptCodeAnalyser classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTJavascriptCodeAnalyser,					#isMetaSide : false				},				#parent : @8,				#content : 'I have code to support various tests that need to extract values from generated Javascript code.',				#stamp : ''			},			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests		},		#oldComment : '',		#newComment : 'I have code to support various tests that need to extract values from generated Javascript code.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1053' ],		#self : OmReference [ '1054' ],		#time : DateAndTime [ '2024-03-03T08:20:45.011-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjAbstractAstTest\r\tinstanceVariableNames: \'iv1ForTest iv2ForTest one two three returnOne throwOne returnTwo throwTwo returnThree throwThree foo nilNode returnNil throwNil returnSelf selfNode throwSelf pi helloString selfNodeInBlock minusOne minusTwo trueNode falseNode returnTrue returnFalse\'\r\tclassVariableNames: \'ClassVarForTest\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PjAbstractAstTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #iv1ForTest,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #iv2ForTest,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #one,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #two,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #three,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #returnOne,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #throwOne,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #returnTwo,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #throwTwo,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #returnThree,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #throwThree,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #foo,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #nilNode,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #returnNil,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #throwNil,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #returnSelf,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #selfNode,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #throwSelf,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #pi,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #helloString,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #selfNodeInBlock,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #minusOne,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #minusTwo,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #trueNode,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #falseNode,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #returnTrue,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #returnFalse,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAbstractAstTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAbstractAstTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAbstractAstTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #ClassVarForTest,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1054' ],		#self : OmReference [ '1055' ],		#time : DateAndTime [ '2024-03-03T08:20:45.013-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjAbstractAstTest\r\tinstanceVariableNames: \'iv1ForTest iv2ForTest one two three returnOne throwOne returnTwo throwTwo returnThree throwThree foo nilNode returnNil throwNil returnSelf selfNode throwSelf pi helloString selfNodeInBlock minusOne minusTwo trueNode falseNode returnTrue returnFalse\'\r\tclassVariableNames: \'ClassVarForTest\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PjAbstractAstTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #iv1ForTest,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #iv2ForTest,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #one,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #two,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #three,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #returnOne,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #throwOne,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #returnTwo,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #throwTwo,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #returnThree,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #throwThree,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #foo,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #nilNode,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #returnNil,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #throwNil,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #returnSelf,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #selfNode,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #throwSelf,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #pi,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #helloString,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #selfNodeInBlock,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #minusOne,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #minusTwo,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #trueNode,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #falseNode,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #returnTrue,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #returnFalse,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAbstractAstTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAbstractAstTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAbstractAstTest,					#isMetaSide : false				},				#parent : @8,				#content : 'I define a set of instance variables used in a variety of tests',				#stamp : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAbstractAstTest,						#isMetaSide : false					},					#name : #ClassVarForTest,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I define a set of instance variables used in a variety of tests',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1055' ],		#self : OmReference [ '1056' ],		#time : DateAndTime [ '2024-03-03T08:20:45.015-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjAbstractAstTest subclass: #PjAstConverterTest\r\tinstanceVariableNames: \'converter\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjAbstractAstTest',				#traitCompositionSource : '{}'			},			#name : #PjAstConverterTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverterTest,						#isMetaSide : false					},					#name : #converter,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAstConverterTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAstConverterTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAstConverterTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1056' ],		#self : OmReference [ '1057' ],		#time : DateAndTime [ '2024-03-03T08:20:45.016-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjAbstractAstTest subclass: #PjAstConverterTest\r\tinstanceVariableNames: \'converter\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjAbstractAstTest',				#traitCompositionSource : '{}'			},			#name : #PjAstConverterTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAstConverterTest,						#isMetaSide : false					},					#name : #converter,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAstConverterTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAstConverterTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAstConverterTest,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m an abstract test class',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m an abstract test class',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1057' ],		#self : OmReference [ '1058' ],		#time : DateAndTime [ '2024-03-03T08:20:45.017-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjAstConverterTest subclass: #PjBasicConverterTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjAstConverterTest',				#traitCompositionSource : '{}'			},			#name : #PjBasicConverterTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBasicConverterTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBasicConverterTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBasicConverterTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1058' ],		#self : OmReference [ '1059' ],		#time : DateAndTime [ '2024-03-03T08:20:45.019-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjAstConverterTest subclass: #PjBasicConverterTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjAstConverterTest',				#traitCompositionSource : '{}'			},			#name : #PjBasicConverterTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBasicConverterTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBasicConverterTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBasicConverterTest,					#isMetaSide : false				},				#parent : @8,				#content : 'I have tests for basic ast conversions',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I have tests for basic ast conversions',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1059' ],		#self : OmReference [ '1060' ],		#time : DateAndTime [ '2024-03-03T08:20:45.02-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjAstConverterTest subclass: #PjSpecialMessagesConversionTest\r\tinstanceVariableNames: \'messageConverter\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjAstConverterTest',				#traitCompositionSource : '{}'			},			#name : #PjSpecialMessagesConversionTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSpecialMessagesConversionTest,						#isMetaSide : false					},					#name : #messageConverter,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSpecialMessagesConversionTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSpecialMessagesConversionTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSpecialMessagesConversionTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1060' ],		#self : OmReference [ '1061' ],		#time : DateAndTime [ '2024-03-03T08:20:45.021-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjAstConverterTest subclass: #PjSpecialMessagesConversionTest\r\tinstanceVariableNames: \'messageConverter\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjAstConverterTest',				#traitCompositionSource : '{}'			},			#name : #PjSpecialMessagesConversionTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSpecialMessagesConversionTest,						#isMetaSide : false					},					#name : #messageConverter,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSpecialMessagesConversionTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSpecialMessagesConversionTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSpecialMessagesConversionTest,					#isMetaSide : false				},				#parent : @8,				#content : 'I have tests for ast conversions that use the optimizer.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I have tests for ast conversions that use the optimizer.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1061' ],		#self : OmReference [ '1062' ],		#time : DateAndTime [ '2024-03-03T08:20:45.023-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjAbstractAstTest subclass: #PjAstTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjAbstractAstTest',				#traitCompositionSource : '{}'			},			#name : #PjAstTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAstTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAstTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAstTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1062' ],		#self : OmReference [ '1063' ],		#time : DateAndTime [ '2024-03-03T08:20:45.025-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjAbstractAstTest subclass: #PjStringGenerationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjAbstractAstTest',				#traitCompositionSource : '{}'			},			#name : #PjStringGenerationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjStringGenerationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjStringGenerationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjStringGenerationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1063' ],		#self : OmReference [ '1064' ],		#time : DateAndTime [ '2024-03-03T08:20:45.041-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjBlockTranspilationSupportTest\r\tinstanceVariableNames: \'instVar\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PjBlockTranspilationSupportTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBlockTranspilationSupportTest,						#isMetaSide : false					},					#name : #instVar,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBlockTranspilationSupportTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBlockTranspilationSupportTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBlockTranspilationSupportTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1064' ],		#self : OmReference [ '1065' ],		#time : DateAndTime [ '2024-03-03T08:20:45.043-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjClassNamingTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PjClassNamingTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassNamingTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassNamingTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassNamingTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1065' ],		#self : OmReference [ '1066' ],		#time : DateAndTime [ '2024-03-03T08:20:45.045-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjClassSortingTest\r\tinstanceVariableNames: \'cache transpiler\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PjClassSortingTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassSortingTest,						#isMetaSide : false					},					#name : #cache,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassSortingTest,						#isMetaSide : false					},					#name : #transpiler,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassSortingTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassSortingTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassSortingTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1066' ],		#self : OmReference [ '1067' ],		#time : DateAndTime [ '2024-03-03T08:20:45.046-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjClosedBlockClosureTest\r\tinstanceVariableNames: \'instVar\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PjClosedBlockClosureTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClosedBlockClosureTest,						#isMetaSide : false					},					#name : #instVar,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClosedBlockClosureTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClosedBlockClosureTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClosedBlockClosureTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1067' ],		#self : OmReference [ '1068' ],		#time : DateAndTime [ '2024-03-03T08:20:45.047-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjMessageConversionTest\r\tinstanceVariableNames: \'converter\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PjMessageConversionTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageConversionTest,						#isMetaSide : false					},					#name : #converter,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageConversionTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageConversionTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageConversionTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1068' ],		#self : OmReference [ '1069' ],		#time : DateAndTime [ '2024-03-03T08:20:45.06-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjTranspilationTest\r\tuses: PjTJavascriptCodeAnalyser\r\tinstanceVariableNames: \'transpiler classToTranspile\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : 'PjTJavascriptCodeAnalyser'			},			#name : #PjTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspilationTest,						#isMetaSide : false					},					#name : #transpiler,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspilationTest,						#isMetaSide : false					},					#name : #classToTranspile,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTranspilationTest class\r\tuses: PjTJavascriptCodeAnalyser classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTJavascriptCodeAnalyser classTrait'				},				#name : #'PjTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1069' ],		#self : OmReference [ '1070' ],		#time : DateAndTime [ '2024-03-03T08:20:45.062-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjTranspilationTest\r\tuses: PjTJavascriptCodeAnalyser\r\tinstanceVariableNames: \'transpiler classToTranspile\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : 'PjTJavascriptCodeAnalyser'			},			#name : #PjTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspilationTest,						#isMetaSide : false					},					#name : #transpiler,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspilationTest,						#isMetaSide : false					},					#name : #classToTranspile,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTranspilationTest class\r\tuses: PjTJavascriptCodeAnalyser classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTJavascriptCodeAnalyser classTrait'				},				#name : #'PjTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : 'I contain utility methods for transpilation tests',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I contain utility methods for transpilation tests',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1070' ],		#self : OmReference [ '1071' ],		#time : DateAndTime [ '2024-03-03T08:20:45.064-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjTranspilationTest subclass: #PjGeneratedClassTranspilationTest\r\tinstanceVariableNames: \'class\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjGeneratedClassTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjGeneratedClassTranspilationTest,						#isMetaSide : false					},					#name : #class,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjGeneratedClassTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjGeneratedClassTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjGeneratedClassTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1071' ],		#self : OmReference [ '1072' ],		#time : DateAndTime [ '2024-03-03T08:20:45.065-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjTranspilationTest subclass: #PjGeneratedClassTranspilationTest\r\tinstanceVariableNames: \'class\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjGeneratedClassTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjGeneratedClassTranspilationTest,						#isMetaSide : false					},					#name : #class,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjGeneratedClassTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjGeneratedClassTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjGeneratedClassTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : 'Provides a class factory and a default class to use in tests.\rBoth are provided by a resource to avoid creating the default class upon each test run, which is too slow in Pharo 5 (was faster in Pharo 4).',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Provides a class factory and a default class to use in tests.\rBoth are provided by a resource to avoid creating the default class upon each test run, which is too slow in Pharo 5 (was faster in Pharo 4).',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1072' ],		#self : OmReference [ '1073' ],		#time : DateAndTime [ '2024-03-03T08:20:45.066-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjGeneratedClassTranspilationTest subclass: #PjStringWithBlockTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjGeneratedClassTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjStringWithBlockTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjStringWithBlockTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjStringWithBlockTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjStringWithBlockTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1073' ],		#self : OmReference [ '1074' ],		#time : DateAndTime [ '2024-03-03T08:20:45.068-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjTranspilationTest subclass: #PjTranspilationClassCompilationTest\r\tinstanceVariableNames: \'jsCode\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjTranspilationClassCompilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspilationClassCompilationTest,						#isMetaSide : false					},					#name : #jsCode,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTranspilationClassCompilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTranspilationClassCompilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTranspilationClassCompilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1074' ],		#self : OmReference [ '1075' ],		#time : DateAndTime [ '2024-03-03T08:20:45.069-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjTranspilationTest subclass: #PjTranspilationClassCompilationTest\r\tinstanceVariableNames: \'jsCode\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjTranspilationClassCompilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspilationClassCompilationTest,						#isMetaSide : false					},					#name : #jsCode,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTranspilationClassCompilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTranspilationClassCompilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTranspilationClassCompilationTest,					#isMetaSide : false				},				#parent : @8,				#content : 'I have utility methods for testing transpiled code',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I have utility methods for testing transpiled code',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1075' ],		#self : OmReference [ '1076' ],		#time : DateAndTime [ '2024-03-03T08:20:45.07-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjTranspilationClassCompilationTest subclass: #PjPackageTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjTranspilationClassCompilationTest',				#traitCompositionSource : '{}'			},			#name : #PjPackageTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjPackageTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjPackageTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjPackageTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1076' ],		#self : OmReference [ '1077' ],		#time : DateAndTime [ '2024-03-03T08:20:45.072-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjTranspilationClassCompilationTest subclass: #PjPrimitiveTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjTranspilationClassCompilationTest',				#traitCompositionSource : '{}'			},			#name : #PjPrimitiveTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjPrimitiveTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjPrimitiveTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjPrimitiveTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1077' ],		#self : OmReference [ '1078' ],		#time : DateAndTime [ '2024-03-03T08:20:45.073-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjTranspilationClassCompilationTest subclass: #PjSingleClassTranspilationTest\r\tinstanceVariableNames: \'className\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjTranspilationClassCompilationTest',				#traitCompositionSource : '{}'			},			#name : #PjSingleClassTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSingleClassTranspilationTest,						#isMetaSide : false					},					#name : #className,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSingleClassTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSingleClassTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSingleClassTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1078' ],		#self : OmReference [ '1079' ],		#time : DateAndTime [ '2024-03-03T08:20:45.074-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSingleClassTranspilationTest subclass: #PjClassDefinitionTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjSingleClassTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjClassDefinitionTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassDefinitionTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassDefinitionTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassDefinitionTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1079' ],		#self : OmReference [ '1080' ],		#time : DateAndTime [ '2024-03-03T08:20:45.076-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSingleClassTranspilationTest subclass: #PjClassExtensionTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjSingleClassTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjClassExtensionTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassExtensionTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassExtensionTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassExtensionTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1080' ],		#self : OmReference [ '1081' ],		#time : DateAndTime [ '2024-03-03T08:20:45.077-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSingleClassTranspilationTest subclass: #PjCoreTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjSingleClassTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjCoreTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjCoreTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjCoreTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjCoreTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1081' ],		#self : OmReference [ '1082' ],		#time : DateAndTime [ '2024-03-03T08:20:45.079-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSingleClassTranspilationTest subclass: #PjLiteralGeneratorTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjSingleClassTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjLiteralGeneratorTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjLiteralGeneratorTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjLiteralGeneratorTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjLiteralGeneratorTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1082' ],		#self : OmReference [ '1083' ],		#time : DateAndTime [ '2024-03-03T08:20:45.08-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSingleClassTranspilationTest subclass: #PjPrefixForTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjSingleClassTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjPrefixForTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjPrefixForTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjPrefixForTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjPrefixForTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1083' ],		#self : OmReference [ '1084' ],		#time : DateAndTime [ '2024-03-03T08:20:45.081-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSingleClassTranspilationTest subclass: #PjReplacedClassTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjSingleClassTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjReplacedClassTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjReplacedClassTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjReplacedClassTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjReplacedClassTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1084' ],		#self : OmReference [ '1085' ],		#time : DateAndTime [ '2024-03-03T08:20:45.082-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSingleClassTranspilationTest subclass: #PjReplacedClassTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjSingleClassTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjReplacedClassTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjReplacedClassTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjReplacedClassTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjReplacedClassTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : 'I have tests relating to classes that have implementations of some methods in another class',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I have tests relating to classes that have implementations of some methods in another class',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1085' ],		#self : OmReference [ '1086' ],		#time : DateAndTime [ '2024-03-03T08:20:45.083-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSingleClassTranspilationTest subclass: #PjSharedPoolDefinitionTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjSingleClassTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjSharedPoolDefinitionTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSharedPoolDefinitionTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSharedPoolDefinitionTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSharedPoolDefinitionTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1086' ],		#self : OmReference [ '1087' ],		#time : DateAndTime [ '2024-03-03T08:20:45.086-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Transpiler-Tests-Support,		#affectedPackageName : #PharoJs-Base-Transpiler-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1087' ],		#self : OmReference [ '1088' ],		#time : DateAndTime [ '2024-03-03T08:20:45.087-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSpecialMessageConversion subclass: #PjNullMessageConversionForTest\r\tuses: TEquality\r\tinstanceVariableNames: \'selector\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'PjSpecialMessageConversion',				#traitCompositionSource : 'TEquality'			},			#name : #PjNullMessageConversionForTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNullMessageConversionForTest,						#isMetaSide : false					},					#name : #selector,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNullMessageConversionForTest class\r\tuses: TEquality classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'TEquality classTrait'				},				#name : #'PjNullMessageConversionForTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNullMessageConversionForTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1088' ],		#self : OmReference [ '1089' ],		#time : DateAndTime [ '2024-03-03T08:20:45.088-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSpecialMessageConversion subclass: #PjNullMessageConversionForTest\r\tuses: TEquality\r\tinstanceVariableNames: \'selector\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'PjSpecialMessageConversion',				#traitCompositionSource : 'TEquality'			},			#name : #PjNullMessageConversionForTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNullMessageConversionForTest,						#isMetaSide : false					},					#name : #selector,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNullMessageConversionForTest class\r\tuses: TEquality classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'TEquality classTrait'				},				#name : #'PjNullMessageConversionForTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNullMessageConversionForTest,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a dummy PjOptimization to test the manager',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a dummy PjOptimization to test the manager',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1089' ],		#self : OmReference [ '1090' ],		#time : DateAndTime [ '2024-03-03T08:20:45.092-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjTranspilationTest subclass: #PjBlockTranspilationTest\r\tinstanceVariableNames: \'instVar\'\r\tclassVariableNames: \'SomeClassVar\'\r\tpoolDictionaries: \'PjDomGlobals PjUniversalGlobals\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'PjTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjBlockTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBlockTranspilationTest,						#isMetaSide : false					},					#name : #instVar,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBlockTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBlockTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBlockTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBlockTranspilationTest,						#isMetaSide : false					},					#name : #SomeClassVar,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBlockTranspilationTest,						#isMetaSide : false					},					#name : #PjDomGlobals,					#parent : @8				},				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBlockTranspilationTest,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1090' ],		#self : OmReference [ '1091' ],		#time : DateAndTime [ '2024-03-03T08:20:45.093-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestResource subclass: #PjClassFactoryTestResource\r\tinstanceVariableNames: \'classFactory defaultClass authorInitialName\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'TestResource',				#traitCompositionSource : '{}'			},			#name : #PjClassFactoryTestResource,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassFactoryTestResource,						#isMetaSide : false					},					#name : #classFactory,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassFactoryTestResource,						#isMetaSide : false					},					#name : #defaultClass,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassFactoryTestResource,						#isMetaSide : false					},					#name : #authorInitialName,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassFactoryTestResource class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassFactoryTestResource class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassFactoryTestResource,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1091' ],		#self : OmReference [ '1092' ],		#time : DateAndTime [ '2024-03-03T08:20:45.094-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjClassAForCircularTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjClassAForCircularTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassAForCircularTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassAForCircularTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassAForCircularTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1092' ],		#self : OmReference [ '1093' ],		#time : DateAndTime [ '2024-03-03T08:20:45.095-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjClassAForCircularTranspilationTest subclass: #PjClassBForCircularTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'PjClassAForCircularTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjClassBForCircularTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassBForCircularTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassBForCircularTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassBForCircularTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1093' ],		#self : OmReference [ '1094' ],		#time : DateAndTime [ '2024-03-03T08:20:45.097-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjClassAForPackageTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'ClassVarA\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjClassAForPackageTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassAForPackageTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassAForPackageTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassAForPackageTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassAForPackageTranspilationTest,						#isMetaSide : false					},					#name : #ClassVarA,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1094' ],		#self : OmReference [ '1095' ],		#time : DateAndTime [ '2024-03-03T08:20:45.098-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjClassAForPackageTranspilationTest subclass: #PjClassBForPackageTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'ClassVarB\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'PjClassAForPackageTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjClassBForPackageTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassBForPackageTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassBForPackageTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassBForPackageTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassBForPackageTranspilationTest,						#isMetaSide : false					},					#name : #ClassVarB,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1095' ],		#self : OmReference [ '1096' ],		#time : DateAndTime [ '2024-03-03T08:20:45.099-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjClassAForReferenceTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjClassAForReferenceTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassAForReferenceTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassAForReferenceTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassAForReferenceTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1096' ],		#self : OmReference [ '1097' ],		#time : DateAndTime [ '2024-03-03T08:20:45.1-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjClassBForReferenceTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjClassBForReferenceTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassBForReferenceTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassBForReferenceTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassBForReferenceTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1097' ],		#self : OmReference [ '1098' ],		#time : DateAndTime [ '2024-03-03T08:20:45.101-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjClassCForPackageTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjClassCForPackageTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassCForPackageTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassCForPackageTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassCForPackageTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1098' ],		#self : OmReference [ '1099' ],		#time : DateAndTime [ '2024-03-03T08:20:45.107-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjClassDForPackageTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjClassDForPackageTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassDForPackageTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassDForPackageTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassDForPackageTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1099' ],		#self : OmReference [ '1100' ],		#time : DateAndTime [ '2024-03-03T08:20:45.11-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjClassDForPackageTranspilationTest subclass: #PjClassEForPackageTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'PjClassDForPackageTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjClassEForPackageTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassEForPackageTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassEForPackageTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassEForPackageTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1100' ],		#self : OmReference [ '1101' ],		#time : DateAndTime [ '2024-03-03T08:20:45.112-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjClassExtensionForTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjClassExtensionForTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassExtensionForTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassExtensionForTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassExtensionForTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1101' ],		#self : OmReference [ '1102' ],		#time : DateAndTime [ '2024-03-03T08:20:45.113-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjClassForAstConversionTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjClassForAstConversionTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassForAstConversionTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassForAstConversionTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassForAstConversionTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1102' ],		#self : OmReference [ '1103' ],		#time : DateAndTime [ '2024-03-03T08:20:45.115-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjClassForAstConversionTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjClassForAstConversionTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassForAstConversionTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassForAstConversionTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassForAstConversionTest,					#isMetaSide : false				},				#parent : @8,				#content : 'I contain methods to use as sources for various tests in PjTranspilationTests',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I contain methods to use as sources for various tests in PjTranspilationTests',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1103' ],		#self : OmReference [ '1104' ],		#time : DateAndTime [ '2024-03-03T08:20:45.116-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjClassForDefinitionTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjClassForDefinitionTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassForDefinitionTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassForDefinitionTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassForDefinitionTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1104' ],		#self : OmReference [ '1105' ],		#time : DateAndTime [ '2024-03-03T08:20:45.118-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjClassForPrimitiveFailingTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjClassForPrimitiveFailingTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassForPrimitiveFailingTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassForPrimitiveFailingTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassForPrimitiveFailingTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1105' ],		#self : OmReference [ '1106' ],		#time : DateAndTime [ '2024-03-03T08:20:45.119-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjClassForPrimitiveTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjClassForPrimitiveTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassForPrimitiveTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassForPrimitiveTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassForPrimitiveTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1106' ],		#self : OmReference [ '1107' ],		#time : DateAndTime [ '2024-03-03T08:20:45.122-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjClassForVarIterationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'A B C D\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjClassForVarIterationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassForVarIterationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassForVarIterationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassForVarIterationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassForVarIterationTest,						#isMetaSide : false					},					#name : #A,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassForVarIterationTest,						#isMetaSide : false					},					#name : #B,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassForVarIterationTest,						#isMetaSide : false					},					#name : #C,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassForVarIterationTest,						#isMetaSide : false					},					#name : #D,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1107' ],		#self : OmReference [ '1108' ],		#time : DateAndTime [ '2024-03-03T08:20:45.123-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjClientForInitializationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjClientForInitializationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClientForInitializationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClientForInitializationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClientForInitializationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1108' ],		#self : OmReference [ '1109' ],		#time : DateAndTime [ '2024-03-03T08:20:45.126-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjClientForJavascriptInitializationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjClientForJavascriptInitializationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClientForJavascriptInitializationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClientForJavascriptInitializationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClientForJavascriptInitializationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1109' ],		#self : OmReference [ '1110' ],		#time : DateAndTime [ '2024-03-03T08:20:45.127-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjExtensionClassForAliasTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjExtensionClassForAliasTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjExtensionClassForAliasTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjExtensionClassForAliasTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjExtensionClassForAliasTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1110' ],		#self : OmReference [ '1111' ],		#time : DateAndTime [ '2024-03-03T08:20:45.128-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjFooClassForTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjFooClassForTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjFooClassForTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjFooClassForTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjFooClassForTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1111' ],		#self : OmReference [ '1112' ],		#time : DateAndTime [ '2024-03-03T08:20:45.129-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjProviderForInitializationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjProviderForInitializationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjProviderForInitializationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjProviderForInitializationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjProviderForInitializationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1112' ],		#self : OmReference [ '1113' ],		#time : DateAndTime [ '2024-03-03T08:20:45.131-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjReplacedClassForTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjReplacedClassForTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjReplacedClassForTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjReplacedClassForTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjReplacedClassForTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1113' ],		#self : OmReference [ '1114' ],		#time : DateAndTime [ '2024-03-03T08:20:45.131-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjReplacedClassForTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjReplacedClassForTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjReplacedClassForTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjReplacedClassForTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjReplacedClassForTest,					#isMetaSide : false				},				#parent : @8,				#content : 'I contain methods to use as sources for various tests in PjTranspilationTests',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I contain methods to use as sources for various tests in PjTranspilationTests',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1114' ],		#self : OmReference [ '1115' ],		#time : DateAndTime [ '2024-03-03T08:20:45.133-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'SharedPool subclass: #PjSharedPoolForTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'A B C X\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'SharedPool',				#traitCompositionSource : '{}'			},			#name : #PjSharedPoolForTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSharedPoolForTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSharedPoolForTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSharedPoolForTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSharedPoolForTest,						#isMetaSide : false					},					#name : #A,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSharedPoolForTest,						#isMetaSide : false					},					#name : #B,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSharedPoolForTest,						#isMetaSide : false					},					#name : #C,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSharedPoolForTest,						#isMetaSide : false					},					#name : #X,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1115' ],		#self : OmReference [ '1116' ],		#time : DateAndTime [ '2024-03-03T08:20:45.136-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjSuperClassForTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'B S\'\r\tpoolDictionaries: \'PjSharedPoolForTest\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjSuperClassForTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSuperClassForTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSuperClassForTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSuperClassForTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSuperClassForTranspilationTest,						#isMetaSide : false					},					#name : #B,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSuperClassForTranspilationTest,						#isMetaSide : false					},					#name : #S,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSuperClassForTranspilationTest,						#isMetaSide : false					},					#name : #PjSharedPoolForTest,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1116' ],		#self : OmReference [ '1117' ],		#time : DateAndTime [ '2024-03-03T08:20:45.137-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjSuperClassForTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'B S\'\r\tpoolDictionaries: \'PjSharedPoolForTest\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjSuperClassForTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSuperClassForTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSuperClassForTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSuperClassForTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a superclass with a pool dictionary to be validated with PjTranspilerTest',				#stamp : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSuperClassForTranspilationTest,						#isMetaSide : false					},					#name : #B,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSuperClassForTranspilationTest,						#isMetaSide : false					},					#name : #S,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSuperClassForTranspilationTest,						#isMetaSide : false					},					#name : #PjSharedPoolForTest,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'I am a superclass with a pool dictionary to be validated with PjTranspilerTest',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1117' ],		#self : OmReference [ '1118' ],		#time : DateAndTime [ '2024-03-03T08:20:45.139-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSuperClassForTranspilationTest subclass: #PjClassForTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'A X Y prototype\'\r\tpoolDictionaries: \'PjDomGlobals\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'PjSuperClassForTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjClassForTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassForTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassForTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassForTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassForTranspilationTest,						#isMetaSide : false					},					#name : #A,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassForTranspilationTest,						#isMetaSide : false					},					#name : #X,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassForTranspilationTest,						#isMetaSide : false					},					#name : #Y,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassForTranspilationTest,						#isMetaSide : false					},					#name : #prototype,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassForTranspilationTest,						#isMetaSide : false					},					#name : #PjDomGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1118' ],		#self : OmReference [ '1119' ],		#time : DateAndTime [ '2024-03-03T08:20:45.14-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSuperClassForTranspilationTest subclass: #PjClassForTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'A X Y prototype\'\r\tpoolDictionaries: \'PjDomGlobals\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Support\'',				#superclassName : 'PjSuperClassForTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjClassForTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassForTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassForTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassForTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a class to be validated with PjTranspilerTest',				#stamp : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassForTranspilationTest,						#isMetaSide : false					},					#name : #A,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassForTranspilationTest,						#isMetaSide : false					},					#name : #X,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassForTranspilationTest,						#isMetaSide : false					},					#name : #Y,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassForTranspilationTest,						#isMetaSide : false					},					#name : #prototype,					#parent : @8				}			],			#category : #PharoJs-Base-Transpiler-Tests-Support,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClassForTranspilationTest,						#isMetaSide : false					},					#name : #PjDomGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'I am a class to be validated with PjTranspilerTest',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1119' ],		#self : OmReference [ '1120' ],		#time : DateAndTime [ '2024-03-03T08:20:45.247-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjTranspilationTest\r\tuses: PjTJavascriptCodeAnalyser\r\tinstanceVariableNames: \'transpiler classToTranspile\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : 'PjTJavascriptCodeAnalyser'			},			#name : #PjTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspilationTest,						#isMetaSide : false					},					#name : #transpiler,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspilationTest,						#isMetaSide : false					},					#name : #classToTranspile,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTranspilationTest class\r\tuses: PjTJavascriptCodeAnalyser classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTJavascriptCodeAnalyser classTrait'				},				#name : #'PjTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : 'I contain utility methods for transpilation tests',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		},		#protocol : #accessing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1120' ],		#self : OmReference [ '1121' ],		#time : DateAndTime [ '2024-03-03T08:20:45.248-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjTranspilationTest\r\tuses: PjTJavascriptCodeAnalyser\r\tinstanceVariableNames: \'transpiler classToTranspile\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : 'PjTJavascriptCodeAnalyser'			},			#name : #PjTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspilationTest,						#isMetaSide : false					},					#name : #transpiler,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTranspilationTest,						#isMetaSide : false					},					#name : #classToTranspile,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTranspilationTest class\r\tuses: PjTJavascriptCodeAnalyser classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTJavascriptCodeAnalyser classTrait'				},				#name : #'PjTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : 'I contain utility methods for transpilation tests',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Tests,			#sharedPools : OrderedCollection [ ]		},		#protocol : #writing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1121' ],		#self : OmReference [ '1122' ],		#time : DateAndTime [ '2024-03-03T08:20:46.077-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTJavascriptCodeAnalyser,				#isMetaSide : false			},			#name : #'assert:includes:',			#protocol : #asserting,			#sourceCode : 'assert: actualString includes: expectedSubString\r\tself assert: (self does: actualString includes: expectedSubString)',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1122' ],		#self : OmReference [ '1123' ],		#time : DateAndTime [ '2024-03-03T08:20:46.078-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTJavascriptCodeAnalyser,				#isMetaSide : false			},			#name : #'assert:precedes:',			#protocol : #asserting,			#sourceCode : 'assert: firstString precedes: secondString\r\t| first second |\r\tfirst := self jsCode findString: firstString.\r\tsecond := self jsCode findString: secondString.\r\tself assert: first<second',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1123' ],		#self : OmReference [ '1124' ],		#time : DateAndTime [ '2024-03-03T08:20:46.078-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTJavascriptCodeAnalyser,				#isMetaSide : false			},			#name : #'assertClassMethod:equals:',			#protocol : #asserting,			#sourceCode : 'assertClassMethod: method equals: aString\r\tself assert: (self classMethod: method) equals: aString',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1124' ],		#self : OmReference [ '1125' ],		#time : DateAndTime [ '2024-03-03T08:20:46.078-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTJavascriptCodeAnalyser,				#isMetaSide : false			},			#name : #'assertHasClassMethod:',			#protocol : #asserting,			#sourceCode : 'assertHasClassMethod: selector\r\tself deny: (self classMethod: selector ) isNil',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1125' ],		#self : OmReference [ '1126' ],		#time : DateAndTime [ '2024-03-03T08:20:46.078-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTJavascriptCodeAnalyser,				#isMetaSide : false			},			#name : #'assertHasInstanceMethod:',			#protocol : #asserting,			#sourceCode : 'assertHasInstanceMethod: selector\r\tself deny: (self instanceMethod: selector ) isNil',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1126' ],		#self : OmReference [ '1127' ],		#time : DateAndTime [ '2024-03-03T08:20:46.078-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTJavascriptCodeAnalyser,				#isMetaSide : false			},			#name : #'assertInstanceMethod:equals:',			#protocol : #asserting,			#sourceCode : 'assertInstanceMethod: method equals: aString\r\tself assert: (self instanceMethod: method) equals: aString',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1127' ],		#self : OmReference [ '1128' ],		#time : DateAndTime [ '2024-03-03T08:20:46.079-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTJavascriptCodeAnalyser,				#isMetaSide : false			},			#name : #'classMethod:',			#protocol : #'test support',			#sourceCode : 'classMethod: aSymbol\r\r\t^ self method: aSymbol prefix: \'static \'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1128' ],		#self : OmReference [ '1129' ],		#time : DateAndTime [ '2024-03-03T08:20:46.079-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTJavascriptCodeAnalyser,				#isMetaSide : false			},			#name : #classToTranspile,			#protocol : #accessing,			#sourceCode : 'classToTranspile\r\tself explicitRequirement',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1129' ],		#self : OmReference [ '1130' ],		#time : DateAndTime [ '2024-03-03T08:20:46.079-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTJavascriptCodeAnalyser,				#isMetaSide : false			},			#name : #'deny:includes:',			#protocol : #asserting,			#sourceCode : 'deny: actualString includes: expectedSubString\r\tself deny: (self does: actualString includes: expectedSubString)',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1130' ],		#self : OmReference [ '1131' ],		#time : DateAndTime [ '2024-03-03T08:20:46.079-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTJavascriptCodeAnalyser,				#isMetaSide : false			},			#name : #'does:includes:',			#protocol : #asserting,			#sourceCode : 'does: actualString includes: expectedSubString\r\t^actualString withSeparatorsCompacted trim includesSubstring: expectedSubString withSeparatorsCompacted trim',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1131' ],		#self : OmReference [ '1132' ],		#time : DateAndTime [ '2024-03-03T08:20:46.079-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTJavascriptCodeAnalyser,				#isMetaSide : false			},			#name : #'instanceMethod:',			#protocol : #'test support',			#sourceCode : 'instanceMethod: aSymbol\r\r\t^ self method: aSymbol prefix: \'\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1132' ],		#self : OmReference [ '1133' ],		#time : DateAndTime [ '2024-03-03T08:20:46.079-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTJavascriptCodeAnalyser,				#isMetaSide : false			},			#name : #jsCode,			#protocol : #accessing,			#sourceCode : 'jsCode\r\tself explicitRequirement',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1133' ],		#self : OmReference [ '1134' ],		#time : DateAndTime [ '2024-03-03T08:20:46.08-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTJavascriptCodeAnalyser,				#isMetaSide : false			},			#name : #'method:prefix:',			#protocol : #'test support',			#sourceCode : 'method: aSymbol prefix: prefixString\r\r\t| start aString end |\r\taString := String streamContents: [ :aStream | \r\t\t           aStream\r\t\t\t           << self lineEnding;\r\t\t\t           << prefixString.\r\t\t           self writeJsSelector: aSymbol onStream: aStream.\r\t\t           aStream << $( ].\r\tstart := self jsCode findString: aString.\r\tstart = 0 ifTrue: [ ^ nil ].\r\tend := self jsCode\r\t\t       findString: (String with: self lineEnding)\r\t\t       startingAt: start + 1.\r\tend = 0 ifTrue: [ end := self jsCode size + 1 ].\r\t^ self jsCode copyFrom: start + aString size -1 to: end - 1',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1134' ],		#self : OmReference [ '1135' ],		#time : DateAndTime [ '2024-03-03T08:20:46.08-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAbstractAstTest class',				#isMetaSide : true			},			#name : #isAbstract,			#protocol : #testing,			#sourceCode : 'isAbstract \r\r\t^ self = PjAbstractAstTest',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1135' ],		#self : OmReference [ '1136' ],		#time : DateAndTime [ '2024-03-03T08:20:46.08-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAbstractAstTest,				#isMetaSide : false			},			#name : #'apply:selector:',			#protocol : #checking,			#sourceCode : 'apply: aPjJavascriptAstNode selector: aSelector\r\t^ self apply: aPjJavascriptAstNode selector: aSelector nonNil: aPjJavascriptAstNode isNonNil',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1136' ],		#self : OmReference [ '1137' ],		#time : DateAndTime [ '2024-03-03T08:20:46.08-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAbstractAstTest,				#isMetaSide : false			},			#name : #'apply:selector:nonNil:',			#protocol : #checking,			#sourceCode : 'apply: aPjJavascriptAstNode selector: aSelector nonNil: nonNil\r\t^ PjApplyNode func: (PjFieldNode target: aPjJavascriptAstNode selectorNode: (PjMessageSelectorNode identifier: aSelector asSymbol) isNonNil: nonNil)\r\t\targs: #()',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1137' ],		#self : OmReference [ '1138' ],		#time : DateAndTime [ '2024-03-03T08:20:46.08-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAbstractAstTest,				#isMetaSide : false			},			#name : #pharoJsSelectorPrefix,			#protocol : #accessing,			#sourceCode : 'pharoJsSelectorPrefix\r\t^ \'_\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1138' ],		#self : OmReference [ '1139' ],		#time : DateAndTime [ '2024-03-03T08:20:46.08-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAbstractAstTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\tminusTwo := PjLiteralValueNode value: -2.\r\tminusOne := PjLiteralValueNode value: -1.\r\tone := PjLiteralValueNode value: 1.\r\ttwo := PjLiteralValueNode value: 2.\r\tthree := PjLiteralValueNode value: 3.\r\tpi := PjLiteralValueNode value: 3.1415926.\r\thelloString := PjLiteralValueNode value: \'hello\'.\r\tnilNode := PjNilNode new.\r\ttrueNode := PjLiteralValueNode value: true.\r\tfalseNode := PjLiteralValueNode value: false.\r\tselfNode := PjSelfNode new.\r\tselfNodeInBlock := PjSelfNode new inBlock: true;yourself.\r\r\treturnOne := PjReturnNode expression: one.\r\treturnTwo := PjReturnNode expression: two.\r\treturnThree := PjReturnNode expression: three.\r\treturnNil := PjReturnNode expression: nilNode.\r\treturnTrue := PjReturnNode expression: trueNode.\r\treturnFalse := PjReturnNode expression: falseNode.\r\treturnSelf := PjReturnNode expression: selfNode.\r\r\tthrowOne := PjNonLocalReturnNode expression: one.\r\tthrowTwo := PjNonLocalReturnNode expression: two.\r\tthrowThree := PjNonLocalReturnNode expression: three.\r\tthrowNil := PjNonLocalReturnNode expression: nilNode.\r\tthrowSelf := PjNonLocalReturnNode expression: selfNode.\r\r\tfoo := PjLiteralValueNode value: \'foo\'.\r\tClassVarForTest := PjClassVariableNode identifier: \'ClassVarForTest\'.\r\tiv1ForTest := PjInstanceVariableNode identifier: #iv1ForTest.\r\tiv2ForTest := PjInstanceVariableNode identifier: #iv2ForTest.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1139' ],		#self : OmReference [ '1140' ],		#time : DateAndTime [ '2024-03-03T08:20:46.08-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAbstractAstTest,				#isMetaSide : false			},			#name : #'simpleBlock:locals:',			#protocol : #checking,			#sourceCode : 'simpleBlock: objectOrCollection locals: anArray\r\t^ PjBlockNode \r\t\tparameters: #()\r\t\tlocals: anArray\r\t\tbody: objectOrCollection',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1140' ],		#self : OmReference [ '1141' ],		#time : DateAndTime [ '2024-03-03T08:20:46.081-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAstConverterTest class',				#isMetaSide : true			},			#name : #isAbstract,			#protocol : #testing,			#sourceCode : 'isAbstract \r\r\t^ self = PjAstConverterTest',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1141' ],		#self : OmReference [ '1142' ],		#time : DateAndTime [ '2024-03-03T08:20:46.081-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverterTest,				#isMetaSide : false			},			#name : #'assertContentsOf:convertsTo:',			#protocol : #checking,			#sourceCode : 'assertContentsOf: aBlock convertsTo: expectedJsAst\r\t| actualJsAst |\r\tactualJsAst := self convertFirstStatementOfBlock: aBlock.\r\tself assert: actualJsAst equals: expectedJsAst.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1142' ],		#self : OmReference [ '1143' ],		#time : DateAndTime [ '2024-03-03T08:20:46.081-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverterTest,				#isMetaSide : false			},			#name : #'assertMethod:convertsTo:',			#protocol : #checking,			#sourceCode : 'assertMethod: methodSymbol convertsTo: expectedJsAst\r\t| actualJsAst |\r\tactualJsAst := converter convertFirstStatementOfBlock: (PjClassForAstConversionTest>>methodSymbol) ast.\r\tself assert: actualJsAst equals: expectedJsAst.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1143' ],		#self : OmReference [ '1144' ],		#time : DateAndTime [ '2024-03-03T08:20:46.081-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverterTest,				#isMetaSide : false			},			#name : #'convertFirstStatementOfBlock:',			#protocol : #checking,			#sourceCode : 'convertFirstStatementOfBlock: aBlock\r\t^ converter convertFirstStatementOfBlock: aBlock firstAstNode',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1144' ],		#self : OmReference [ '1145' ],		#time : DateAndTime [ '2024-03-03T08:20:46.081-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverterTest,				#isMetaSide : false			},			#name : #'discoveredMessage:',			#protocol : #'test mock',			#sourceCode : 'discoveredMessage: aString\r\t" just here so tests don\'t fail "',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1145' ],		#self : OmReference [ '1146' ],		#time : DateAndTime [ '2024-03-03T08:20:46.081-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverterTest,				#isMetaSide : false			},			#name : #'discoveredReferenceToClass:',			#protocol : #accessing,			#sourceCode : 'discoveredReferenceToClass: aClass',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1146' ],		#self : OmReference [ '1147' ],		#time : DateAndTime [ '2024-03-03T08:20:46.081-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverterTest,				#isMetaSide : false			},			#name : #'failConverting:',			#protocol : #checking,			#sourceCode : 'failConverting: aBlock\r\tself should: [ self convertFirstStatementOfBlock: aBlock ] raise: Exception',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1147' ],		#self : OmReference [ '1148' ],		#time : DateAndTime [ '2024-03-03T08:20:46.081-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverterTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\tconverter := PjAstConverter new transpiler: self;yourself.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1148' ],		#self : OmReference [ '1149' ],		#time : DateAndTime [ '2024-03-03T08:20:46.081-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #'addPoolReference:',			#protocol : #'test mock',			#sourceCode : 'addPoolReference: aClass \r\t^ \'mock$\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1149' ],		#self : OmReference [ '1150' ],		#time : DateAndTime [ '2024-03-03T08:20:46.082-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #testArray,			#protocol : #tests,			#sourceCode : 'testArray\r\t| x |\r\tx := PjTempVariableNode identifier: #x.\r\tself assertContentsOf: [ {1. 2. x foo} ] convertsTo: (PjArrayNode expressions: { one. two. self apply: x selector: #foo }).\r\tself assertContentsOf: [ #(1 2 x) ] convertsTo: (PjArrayNode expressions: { one. two. PjLiteralValueNode value: #x })',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1150' ],		#self : OmReference [ '1151' ],		#time : DateAndTime [ '2024-03-03T08:20:46.082-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #testBlockBasics,			#protocol : #tests,			#sourceCode : 'testBlockBasics\r\t| expectedAst xVariable assignment returnAssignment blockReturningOne |\r\tself assertContentsOf: [ nil ] convertsTo: nilNode.\r\texpectedAst := self simpleBlock: returnNil locals: #().\r\tself assertContentsOf: [ [  ] ] convertsTo: expectedAst.\r\texpectedAst := PjBlockNode\r\t\tparameters: #(a1 a2)\r\t\tlocals: #(t1 t2 t3)\r\t\tbody: {returnNil}.\r\tself\r\t\tassertContentsOf: [ [ :a1 :a2 | \r\t\t\t| t1 t2 t3 |\r\t\t\t ] ]\r\t\tconvertsTo: expectedAst.\r\texpectedAst := self simpleBlock: returnOne locals: #().\r\tself assertContentsOf: [ [ 1 ] ] convertsTo: expectedAst.\r\txVariable := PjTempVariableNode identifier: #x.\r\tassignment := PjAssignNode target: xVariable expression: two.\r\treturnAssignment := PjReturnNode expression: assignment.\r\texpectedAst := PjBlockNode\r\t\tparameters: #()\r\t\tlocals: #(x)\r\t\tbody: {returnAssignment}.\r\tself\r\t\tassertContentsOf: [ [ | x |\r\t\t\tx := 2 ] ]\r\t\tconvertsTo: expectedAst.\r\tblockReturningOne := PjBlockNode\r\t\tparameters: #()\r\t\tlocals: #()\r\t\tbody:\r\t\t\t{one.\r\t\t\treturnOne}.\r\texpectedAst := PjBlockNode\r\t\tparameters: #()\r\t\tlocals: #()\r\t\tbody:\r\t\t\t{blockReturningOne.\r\t\t\treturnOne}.\r\tself\r\t\tassertContentsOf: [ [ [ 1.\r\t\t\t1 ].\r\t\t\t1 ] ]\r\t\tconvertsTo: expectedAst',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1151' ],		#self : OmReference [ '1152' ],		#time : DateAndTime [ '2024-03-03T08:20:46.082-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #testBlockNonLocalReturns,			#protocol : #tests,			#sourceCode : 'testBlockNonLocalReturns\r\t| expectedAst innerBlockAst |\r\texpectedAst := self simpleBlock: {throwOne} locals: #().\r\tself assertContentsOf: [ [ ^ 1 ] ] convertsTo: expectedAst.\r\tinnerBlockAst := self simpleBlock: {throwTwo} locals: #().\r\texpectedAst := self\r\t\tsimpleBlock:\r\t\t\t{innerBlockAst.\r\t\t\tthrowOne}\r\t\tlocals: #().\r\tself\r\t\tassertContentsOf: [ [ [ ^ 2 ].\r\t\t\t^ 1 ] ]\r\t\tconvertsTo: expectedAst.\r\tconverter preventNonLocalReturns.\r\tself failConverting: [ [ ^ 1 ] ].\r\tself failConverting: [ [ [ ^ 2 ] ] ].\r\tself\r\t\tfailConverting: [ [ [  ].\r\t\t\t[ ^ 2 ] ] ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1152' ],		#self : OmReference [ '1153' ],		#time : DateAndTime [ '2024-03-03T08:20:46.082-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #testBlockRelatedFlags,			#protocol : #tests,			#sourceCode : 'testBlockRelatedFlags\r\tself deny: converter isInBlock.\r\tself deny: converter hasInBlockSelfReferences.\r\tself deny: converter hasNonLocalReturns.\r\r\tself convertFirstStatementOfBlock: [ [self ] ].\r\tself assert: converter hasInBlockSelfReferences.\r\tself deny: converter isInBlock.\r\tself deny: converter hasNonLocalReturns.\r\t\r\tself convertFirstStatementOfBlock: [ [^1 ] ].\r\tself deny: converter hasInBlockSelfReferences.\r\tself deny: converter isInBlock.\r\tself assert: converter hasNonLocalReturns.\r\r\tself convertFirstStatementOfBlock: [ [1 ] ].\r\tself deny: converter hasInBlockSelfReferences.\r\tself deny: converter isInBlock.\r\tself deny: converter hasNonLocalReturns.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1153' ],		#self : OmReference [ '1154' ],		#time : DateAndTime [ '2024-03-03T08:20:46.082-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #testBlockReturns,			#protocol : #tests,			#sourceCode : 'testBlockReturns\r\t| expectedAst innerBlockAst |\r\texpectedAst := self\r\t\tsimpleBlock:\r\t\t\t{three.\r\t\t\ttwo.\r\t\t\treturnOne}\r\t\tlocals: #().\r\tself\r\t\tassertContentsOf: [ [ 3.\r\t\t\t2.\r\t\t\t1 ] ]\r\t\tconvertsTo: expectedAst.\r\tinnerBlockAst := self simpleBlock: {returnOne} locals: #().\r\texpectedAst := self\r\t\tsimpleBlock:\r\t\t\t{three.\r\t\t\ttwo.\r\t\t\t(PjReturnNode expression: innerBlockAst)}\r\t\tlocals: #().\r\tself\r\t\tassertContentsOf: [ [ 3.\r\t\t\t2.\r\t\t\t[ 1 ] ] ]\r\t\tconvertsTo: expectedAst.\r\tinnerBlockAst := self simpleBlock: throwOne locals: #().\r\texpectedAst := self\r\t\tsimpleBlock:\r\t\t\t{three.\r\t\t\ttwo.\r\t\t\t(PjReturnNode expression: innerBlockAst)}\r\t\tlocals: #().\r\tself\r\t\tassertContentsOf: [ [ 3.\r\t\t\t2.\r\t\t\t[ ^ 1 ] ] ]\r\t\tconvertsTo: expectedAst',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1154' ],		#self : OmReference [ '1155' ],		#time : DateAndTime [ '2024-03-03T08:20:46.082-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #testExpressionNonLocalReturns,			#protocol : #tests,			#sourceCode : 'testExpressionNonLocalReturns\r\t| expectedAst  |\r\texpectedAst := PjArrayNode expressions: {throwOne}.\r\tself assertContentsOf: [ { ^1 } ] convertsTo: expectedAst.\r\r\tconverter preventNonLocalReturns.\r\tself failConverting: [ { ^1 } ].',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1155' ],		#self : OmReference [ '1156' ],		#time : DateAndTime [ '2024-03-03T08:20:46.082-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #testInteger,			#protocol : #tests,			#sourceCode : 'testInteger\r\tself assertContentsOf: [ 1 ] convertsTo: one',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1156' ],		#self : OmReference [ '1157' ],		#time : DateAndTime [ '2024-03-03T08:20:46.082-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #testLiteralArrayOfIntegers,			#protocol : #tests,			#sourceCode : 'testLiteralArrayOfIntegers\r\t| literalNodes |\r\tliteralNodes := #(3 5 21) collect: [ : each | PjLiteralValueNode value: each ].\r\tself assertContentsOf: [ #(3 5 21) ] convertsTo: (PjArrayNode expressions: literalNodes)',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1157' ],		#self : OmReference [ '1158' ],		#time : DateAndTime [ '2024-03-03T08:20:46.082-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #testMessageWithoutOptimizationManager,			#protocol : #tests,			#sourceCode : 'testMessageWithoutOptimizationManager\r\t| expectedAst |\r\texpectedAst := self apply: three selector: #foo.\r\tself assertContentsOf: [ 3 foo ] convertsTo: expectedAst.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1158' ],		#self : OmReference [ '1159' ],		#time : DateAndTime [ '2024-03-03T08:20:46.083-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #testMethodBasic1,			#protocol : #tests,			#sourceCode : 'testMethodBasic1\r\t| expectedAst |\r\texpectedAst := PjMethodNode\r\t\tmethodName: #basic1\r\t\tbody:\r\t\t\t{one.\r\t\t\treturnSelf}.\r\tself assertMethod: #basic1 convertsTo: expectedAst',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1159' ],		#self : OmReference [ '1160' ],		#time : DateAndTime [ '2024-03-03T08:20:46.083-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #testMethodBasic2,			#protocol : #tests,			#sourceCode : 'testMethodBasic2\r\t| expectedAst |\r\texpectedAst := PjMethodNode\r\t\tmethodName: #basic2\r\t\tbody: {returnOne}.\r\tself assertMethod: #basic2 convertsTo: expectedAst',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1160' ],		#self : OmReference [ '1161' ],		#time : DateAndTime [ '2024-03-03T08:20:46.083-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #testMethodBasic3,			#protocol : #tests,			#sourceCode : 'testMethodBasic3\r\t| expectedBody expectedAst |\r\texpectedBody := {(PjUnparsedStringNode string: \'return 3\')}.\r\texpectedAst := PjMethodNode\r\t\tmethodName: #basic3\r\t\tbody: expectedBody.\r\tself assertMethod: #basic3 convertsTo: expectedAst',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1161' ],		#self : OmReference [ '1162' ],		#time : DateAndTime [ '2024-03-03T08:20:46.083-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #testMethodBasic4,			#protocol : #tests,			#sourceCode : 'testMethodBasic4\r\t| expectedBody expectedAst |\r\texpectedBody := {three.\r\t(self\r\t\tsimpleBlock:\r\t\t\t{two.\r\t\t\treturnOne}\r\t\tlocals: #()).\r\treturnSelf}.\r\texpectedAst := PjMethodNode methodName: #basic4 body: expectedBody.\r\tself assertMethod: #basic4 convertsTo: expectedAst',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1162' ],		#self : OmReference [ '1163' ],		#time : DateAndTime [ '2024-03-03T08:20:46.083-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #testMethodBasic5,			#protocol : #tests,			#sourceCode : 'testMethodBasic5\r\t| expectedBody expectedAst |\r\texpectedBody := {three.\r\t(PjReturnNode\r\t\texpression:\r\t\t\t(self\r\t\t\t\tsimpleBlock:\r\t\t\t\t\t{two.\r\t\t\t\t\treturnOne}\r\t\t\t\tlocals: #()))}.\r\texpectedAst := PjMethodNode methodName: #basic5 body: expectedBody.\r\tself assertMethod: #basic5 convertsTo: expectedAst',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1163' ],		#self : OmReference [ '1164' ],		#time : DateAndTime [ '2024-03-03T08:20:46.083-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #testMethodBasic6,			#protocol : #tests,			#sourceCode : 'testMethodBasic6\r\t| expectedBody expectedAst |\r\texpectedBody := {(self\r\t\tsimpleBlock:\r\t\t\t{two.\r\t\t\treturnOne}\r\t\tlocals: #()).\r\tthree.\r\treturnSelf}.\r\texpectedAst := PjMethodNode methodName: #basic6 body: expectedBody.\r\tself assertMethod: #basic6 convertsTo: expectedAst',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1164' ],		#self : OmReference [ '1165' ],		#time : DateAndTime [ '2024-03-03T08:20:46.083-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #testReadWriteClassVariables,			#protocol : #tests,			#sourceCode : 'testReadWriteClassVariables\r\t| astAssignment classVar |\r\tconverter classForConversion: PjAbstractAstTest.\r\tclassVar := (PjClassVariableNode identifier: #ClassVarForTest) poolReference: PjAbstractAstTest;myClass: PjAbstractAstTest.\r\tself assertContentsOf: [ ClassVarForTest ] convertsTo: classVar.\r\tastAssignment := PjAssignNode \r\t\ttarget:  classVar\r\t\texpression: classVar.\r\tself assertContentsOf: [ ClassVarForTest := ClassVarForTest ] convertsTo: astAssignment.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1165' ],		#self : OmReference [ '1166' ],		#time : DateAndTime [ '2024-03-03T08:20:46.083-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #testReadWriteInstanceVariables,			#protocol : #tests,			#sourceCode : 'testReadWriteInstanceVariables\r\t| astAssignment |\r\tself assertContentsOf: [ iv1ForTest ] convertsTo: (PjFieldNode target: selfNode selectorNode: iv1ForTest isNonNil: true).\r\tastAssignment := PjAssignNode \r\t\ttarget:  (PjFieldNode target: selfNode selectorNode: iv1ForTest isNonNil: true) \r\t\texpression: (PjFieldNode target: selfNode selectorNode: iv2ForTest isNonNil: true).\r\tself assertContentsOf: [ iv1ForTest := iv2ForTest ] convertsTo: astAssignment.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1166' ],		#self : OmReference [ '1167' ],		#time : DateAndTime [ '2024-03-03T08:20:46.083-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #testReadWriteVariable,			#protocol : #tests,			#sourceCode : 'testReadWriteVariable\r\t| astAssignment |\r\tself assertContentsOf: [ |x| x ] convertsTo: (PjTempVariableNode identifier: #x).\r\tastAssignment := PjAssignNode \r\t\ttarget:  (PjTempVariableNode identifier: #x) \r\t\texpression: (PjTempVariableNode identifier: #y).\r\tself assertContentsOf: [ |x y| x := y ] convertsTo: astAssignment.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1167' ],		#self : OmReference [ '1168' ],		#time : DateAndTime [ '2024-03-03T08:20:46.083-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #testSelf,			#protocol : #tests,			#sourceCode : 'testSelf\r\tself assertContentsOf: [ self ] convertsTo: selfNode',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1168' ],		#self : OmReference [ '1169' ],		#time : DateAndTime [ '2024-03-03T08:20:46.084-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicConverterTest,				#isMetaSide : false			},			#name : #testSpecialVariables,			#protocol : #tests,			#sourceCode : 'testSpecialVariables\r\t| expectedAst |\r\texpectedAst := self apply: (PjClassNode identifier: #Number) selector: #one.\r\tself assertContentsOf: [ Number one ] convertsTo: expectedAst.\r\r\texpectedAst := self apply: PjSuperNode new selector: #value.\r\tself assertContentsOf: [ super value ] convertsTo: expectedAst.\r\r\tself failConverting: [ thisContext  ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1169' ],		#self : OmReference [ '1170' ],		#time : DateAndTime [ '2024-03-03T08:20:46.084-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessagesConversionTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\tmessageConverter := converter messageConverter.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1170' ],		#self : OmReference [ '1171' ],		#time : DateAndTime [ '2024-03-03T08:20:46.084-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessagesConversionTest,				#isMetaSide : false			},			#name : #testCascade,			#protocol : #tests,			#sourceCode : 'testCascade\r\t| temp assignment |\r\tmessageConverter addAllConversions: { PjJsAtConversion. PjJsAtPutConversion}.\r\ttemp := PjTempVariableNode identifier: \'$1\'.\r\tassignment := PjAssignNode\r\t\ttarget: temp\r\t\texpression: (PjApplyNode\r\t\t\t\tfunc: (PjFieldNode\r\t\t\t\t\t\ttarget: (PjApplyNode receiver: selfNode selector: #testCascade args: #())\r\t\t\t\t\t\tselectorNode: nil\r\t\t\t\t\t\tisNonNil: false)\r\t\t\t\targs: nil).\r\tself\r\t\tassertContentsOf: [ self testCascade js_at:  1; js_at:  3 put: 1; js_at:  2 ]\r\t\tconvertsTo: (PjSequenceNode expressions: {\r\t\t\t\tassignment.\r\t\t\t\tPjFieldNode target:  temp selectorNode: one isNonNil: true.\r\t\t\t\tPjAssignNode target: (PjFieldNode target:  temp selectorNode: three isNonNil: true) expression: one.\r\t\t\t\tPjFieldNode target:  temp selectorNode: two isNonNil: true.\r\t\t\t})',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1171' ],		#self : OmReference [ '1172' ],		#time : DateAndTime [ '2024-03-03T08:20:46.084-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessagesConversionTest,				#isMetaSide : false			},			#name : #testJsAt,			#protocol : #tests,			#sourceCode : 'testJsAt\r\tmessageConverter addConversion: PjJsAtConversion.\r\tself assertContentsOf: [ self js_at:  3 ] convertsTo: (PjFieldNode target: selfNode selectorNode: three isNonNil: true)',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1172' ],		#self : OmReference [ '1173' ],		#time : DateAndTime [ '2024-03-03T08:20:46.084-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessagesConversionTest,				#isMetaSide : false			},			#name : #testJsAtPut,			#protocol : #tests,			#sourceCode : 'testJsAtPut\r\tmessageConverter addConversion: PjJsAtPutConversion.\r\tself assertContentsOf: [ self js_at:  3 put: 2] convertsTo: (PjAssignNode target: (PjFieldNode target: selfNode selectorNode: three isNonNil: true) expression: two)',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1173' ],		#self : OmReference [ '1174' ],		#time : DateAndTime [ '2024-03-03T08:20:46.084-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessagesConversionTest,				#isMetaSide : false			},			#name : #testJsThis,			#protocol : #tests,			#sourceCode : 'testJsThis\r\tmessageConverter addConversion: PjJsThisConversion.\r\tself assertContentsOf: [ self js_this ] convertsTo: (PjGlobalNode identifier: #this)',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1174' ],		#self : OmReference [ '1175' ],		#time : DateAndTime [ '2024-03-03T08:20:46.084-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSpecialMessagesConversionTest,				#isMetaSide : false			},			#name : #testMessageConversionPerformed,			#protocol : #tests,			#sourceCode : 'testMessageConversionPerformed\r\tmessageConverter addAllConversions: (#(2 6 4) collect: [ : i | PjNullMessageConversionForTest new order: i selector: #foo]).\r\tself assertContentsOf: [ 3 foo ] convertsTo: 4.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1175' ],		#self : OmReference [ '1176' ],		#time : DateAndTime [ '2024-03-03T08:20:46.084-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstTest,				#isMetaSide : false			},			#name : #testAstArraySimilarility,			#protocol : #tests,			#sourceCode : 'testAstArraySimilarility\r\t| astArray1 astArray2 astArray3 astArray4 astArray5 |\r\tastArray1 := PjArrayNode expressions: { one. two. three }.\r\tastArray2 := PjArrayNode expressions: { three. two. one }.\r\tastArray3 := PjArrayNode expressions: { three. one }.\r\tastArray4 := PjArrayNode expressions: astArray1 expressions, { selfNode }.\r\tastArray5 := PjArrayNode expressions: { selfNode }, astArray2 expressions.\r\r\t{astArray1. astArray2. astArray3} do: [ : astArray |\r\t\tself assert: (astArray isSimilarTo: astArray)].\r\tself assert: (astArray1 isSimilarTo: astArray2).\r\tself deny: (astArray1 isSimilarTo: astArray3).\r\tself deny: (astArray2 isSimilarTo: astArray3).\r\tself deny:  (astArray4 isSimilarTo: astArray5).',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1176' ],		#self : OmReference [ '1177' ],		#time : DateAndTime [ '2024-03-03T08:20:46.085-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstTest,				#isMetaSide : false			},			#name : #testAstMessageSimilarility,			#protocol : #tests,			#sourceCode : 'testAstMessageSimilarility\r\t\r\t| astArray1 astArray2 astArray3 astCall1 astCall2 astCall3 astCall4 astCall5 |\r\tastArray1 := PjArrayNode expressions: { one. two. three }.\r\tastArray2 := PjArrayNode expressions: { three. two. one }.\r\tastArray3 := PjArrayNode expressions: { three. one }.\r\t\r\tastCall1 := PjApplyNode receiver: selfNode selector: #selector1: args: astArray1 expressions.\r\tastCall2 := PjApplyNode receiver: selfNode selector: #selector1: args: astArray2 expressions.\r\tastCall3 := PjApplyNode receiver: selfNode selector: #selector2: args: astArray1 expressions.\r\tastCall4 := PjApplyNode receiver: one selector: #selector1: args: astArray1 expressions.\r\tastCall5 := PjApplyNode receiver: selfNode selector: #selector1: args: astArray3 expressions.\r\r\t{astCall1. astCall2. astCall3. astCall4. astCall5} do: [ :  astCall |\r\t\tself assert: (astCall isSimilarTo: astCall)].\r\tself assert: (astCall1 isSimilarTo: astCall2).\r\tself deny: (astCall1 isSimilarTo: astCall3).\r\tself deny: (astCall2 isSimilarTo: astCall3).\r\tself deny:  (astCall1 isSimilarTo: astCall4).\r\tself deny:  (astCall1 isSimilarTo: astCall5).\r\tself deny:  (astCall3 isSimilarTo: astCall4).\r\tself deny:  (astCall3 isSimilarTo: astCall5).\r\tself deny:  (astCall4 isSimilarTo: astCall5).',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1177' ],		#self : OmReference [ '1178' ],		#time : DateAndTime [ '2024-03-03T08:20:46.085-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstTest,				#isMetaSide : false			},			#name : #testAstSelfSimilarility,			#protocol : #tests,			#sourceCode : 'testAstSelfSimilarility\r\tself assert: (selfNode isSimilarTo: PjSelfNode new). "keep the creation"\r\tself deny: (selfNode isSimilarTo: two).\r\tself deny: (two isSimilarTo: selfNode).',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1178' ],		#self : OmReference [ '1179' ],		#time : DateAndTime [ '2024-03-03T08:20:46.085-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjStringGenerationTest class',				#isMetaSide : true			},			#name : #classVariablesHolderName,			#protocol : #accessing,			#sourceCode : 'classVariablesHolderName\r\r\t^ PjStringGenerator classVariablesHolderName',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1179' ],		#self : OmReference [ '1180' ],		#time : DateAndTime [ '2024-03-03T08:20:46.085-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #'assert:asStringEquals:',			#protocol : #asserting,			#sourceCode : 'assert: aPjJavascriptAstNode asStringEquals: aString\r\tself\r\t\tassert: (self generator asString: aPjJavascriptAstNode)\r\t\tequals: aString',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1180' ],		#self : OmReference [ '1181' ],		#time : DateAndTime [ '2024-03-03T08:20:46.085-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #classVariablesHolderName,			#protocol : #accessing,			#sourceCode : 'classVariablesHolderName\r\t^ self class classVariablesHolderName',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1181' ],		#self : OmReference [ '1182' ],		#time : DateAndTime [ '2024-03-03T08:20:46.085-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #generator,			#protocol : #asserting,			#sourceCode : 'generator\r\t^ PjStringGenerator new transpiler: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1182' ],		#self : OmReference [ '1183' ],		#time : DateAndTime [ '2024-03-03T08:20:46.085-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #nilTestFunctionName,			#protocol : #accessing,			#sourceCode : 'nilTestFunctionName\r\t^PjStringGenerator nilTestFunctionName',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1183' ],		#self : OmReference [ '1184' ],		#time : DateAndTime [ '2024-03-03T08:20:46.086-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #'poolReference:for:',			#protocol : #'test mock',			#sourceCode : 'poolReference: anUndefinedObject for: anUndefinedObject2\r\r\t^ PjTranspiler classVarsPoolName',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1184' ],		#self : OmReference [ '1185' ],		#time : DateAndTime [ '2024-03-03T08:20:46.086-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #selectorsPrefix,			#protocol : #accessing,			#sourceCode : 'selectorsPrefix\r\t^ \'_\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1185' ],		#self : OmReference [ '1186' ],		#time : DateAndTime [ '2024-03-03T08:20:46.086-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #testArray,			#protocol : #tests,			#sourceCode : 'testArray\r\t| x |\r\tx := PjTempVariableNode identifier: #x.\r\tself\r\t\tassert: (PjArrayNode expressions: { one. two. self apply: x selector: #foo })\r\t\tasStringEquals: \'[1,2,$asNil$(x)._foo()]\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1186' ],		#self : OmReference [ '1187' ],		#time : DateAndTime [ '2024-03-03T08:20:46.086-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #testBlock,			#protocol : #tests,			#sourceCode : 'testBlock\r\tself\r\t\tassert: (PjBlockNode parameters: #(a for) locals: #(d in) body: {\r\t\t\t\tPjAssignNode\r\t\t\t\t\ttarget: (PjTempVariableNode identifier: #in)\r\t\t\t\t\texpression: (PjArgumentNode identifier: #for).\r\t\t\t\tPjReturnNode expression: (PjArgumentNode identifier: #a)\r\t\t\t})\r\t\tasStringEquals: \'((a,$for)=>{var d,$in;$in=$for;return a})\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1187' ],		#self : OmReference [ '1188' ],		#time : DateAndTime [ '2024-03-03T08:20:46.086-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #testClassCall,			#protocol : #tests,			#sourceCode : 'testClassCall\r\tself\r\t\tassert: (self apply: (PjClassNode identifier: #Number) selector: #one)\r\t\tasStringEquals: \'Number._one()\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1188' ],		#self : OmReference [ '1189' ],		#time : DateAndTime [ '2024-03-03T08:20:46.086-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #testClassVariables,			#protocol : #tests,			#sourceCode : 'testClassVariables\r\t| astAssignment classVar |\r\tclassVar := PjClassVariableNode identifier: #ClassVarForTest.\r\tastAssignment := PjAssignNode target: classVar expression: classVar.\r\tself\r\t\tassert: astAssignment\r\t\tasStringEquals: \'cp$.ClassVarForTest=cp$.ClassVarForTest\'.\r\tself\r\t\tassert:\r\t\t\t(self generator\r\t\t\t\tcurrentClass: self class;\r\t\t\t\tasString: astAssignment)\r\t\tequals: \'cp$.ClassVarForTest=cp$.ClassVarForTest\'.\r\tself\r\t\tassert:\r\t\t\t(self generator\r\t\t\t\tcurrentClass: self class class;\r\t\t\t\tasString: astAssignment)\r\t\tequals: \'cp$.ClassVarForTest=cp$.ClassVarForTest\'.\r\tclassVar myClass: self class class.\r\tself\r\t\tassert:\r\t\t\t(self generator\r\t\t\t\tcurrentClass: self class class;\r\t\t\t\tasString: astAssignment)\r\t\tequals: \'cp$.ClassVarForTest=cp$.ClassVarForTest\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1189' ],		#self : OmReference [ '1190' ],		#time : DateAndTime [ '2024-03-03T08:20:46.086-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #testField,			#protocol : #tests,			#sourceCode : 'testField\r\t| x bar |\r\tx := PjTempVariableNode identifier: #x.\r\tbar := PjMessageSelectorNode identifier: #bar.\r\tself\r\t\tassert: (PjFieldNode target: selfNode selectorNode: foo isNonNil: true)\r\t\tasStringEquals: \'this.foo\'.\r\tself\r\t\tassert: (PjApplyNode func: (PjFieldNode target: (PjFieldNode target: selfNode selectorNode: foo isNonNil: true)  selectorNode: bar isNonNil: false) args: #())\r\t\tasStringEquals: self nilTestFunctionName,\'(this.foo)._bar()\'.\r\tself\r\t\tassert: (PjFieldNode target: x selectorNode: foo isNonNil: false)\r\t\tasStringEquals: self nilTestFunctionName,\'(x).foo\'.\r\tself\r\t\tassert: (PjFieldNode target: pi selectorNode: foo isNonNil: true)\r\t\tasStringEquals: \'3.1415926.foo\'.\r\tself\r\t\tassert: (PjFieldNode target: three selectorNode: foo isNonNil: true)\r\t\tasStringEquals: \'(3).foo\'.\r\tself\r\t\tassert: (PjFieldNode target: foo selectorNode: bar isNonNil: true)\r\t\tasStringEquals: \'"foo"._bar\'.\r\tself\r\t\tassert: (PjFieldNode target: (PjVariableNode identifier: #x) selectorNode: foo isNonNil: false)\r\t\tasStringEquals: self nilTestFunctionName,\'(x).foo\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1190' ],		#self : OmReference [ '1191' ],		#time : DateAndTime [ '2024-03-03T08:20:46.086-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #testFieldForCall,			#protocol : #tests,			#sourceCode : 'testFieldForCall\r\t| x |\r\tx := PjTempVariableNode identifier: #x.\r\tself\r\t\tassert: (self apply: selfNode selector: #foo) \r\t\tasStringEquals: \'this._foo()\'.\r\tself\r\t\tassert: (self apply: three selector: #foo) \r\t\tasStringEquals: \'(3)._foo()\'.\r\tself\r\t\tassert: (self apply: pi selector: #foo) \r\t\tasStringEquals: \'3.1415926._foo()\'.\r\tself\r\t\tassert: (self apply: selfNode selector: PjStringGenerator jsNativePrefix,#foo:)\r\t\tasStringEquals: \'this.foo()\'.\r\tself\r\t\tassert: (self apply: selfNode selector: #bar:)\r\t\tasStringEquals: \'this._bar_()\'.\r\tself\r\t\tassert: (self apply: selfNode selector: #<=)\r\t\tasStringEquals: \'this._60_61_()\'.\r\tself\r\t\tassert: (PjApplyNode func: (PjFieldNode target: selfNode selectorNode: nil isNonNil: true) args: nil)\r\t\tasStringEquals: \'this\'.\r\tself\r\t\tassert: (PjApplyNode func: (PjFieldNode target: x selectorNode: nil isNonNil: false) args: nil)\r\t\tasStringEquals: self nilTestFunctionName,\'(x)\'.\r\tself\r\t\tassert: (PjApplyNode func: (PjFieldNode target: (PjFieldNode target: selfNode selectorNode: iv1ForTest isNonNil: true) selectorNode: nil isNonNil: false) args: nil)\r\t\tasStringEquals: self nilTestFunctionName,\'(this.iv1ForTest)\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1191' ],		#self : OmReference [ '1192' ],		#time : DateAndTime [ '2024-03-03T08:20:46.087-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #testGlobalCall,			#protocol : #tests,			#sourceCode : 'testGlobalCall\r\tself\r\t\tassert: (self apply: (PjGlobalNode identifier: #Number) selector: #one)\r\t\tasStringEquals: self nilTestFunctionName,\'(Number)._one()\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1192' ],		#self : OmReference [ '1193' ],		#time : DateAndTime [ '2024-03-03T08:20:46.087-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #testLiteral,			#protocol : #tests,			#sourceCode : 'testLiteral\r\tself assert: (PjLiteralValueNode value: 42) asStringEquals: \'42\'.\r\tself assert: (PjLiteralValueNode value: \'42\') asStringEquals: \'"42"\'.\r\tself assert: (PjLiteralValueNode value: $x) asStringEquals: \'"x"\'.\r\tself assert: (PjLiteralValueNode value: nil) asStringEquals: \'null\'.\r\tself assert: (PjLiteralValueNode value: (String with: (Character value: 7)),\'a\\b"\rx\',(String with: Character null)) asStringEquals: \'"\\x07a\\\\b\\"\\rx\\x00"\'.\r\tself assert: (PjLiteralValueNode value: \'a\\b"\',(String with: (Character value:257)) ) asStringEquals: \'"a\\\\b\\"\\u0101"\'.\r\tself assert: (PjLiteralValueNode value: (String with: Character null),\'a\\b"\rxようこそy\',(String with: (Character value:257)) ) asStringEquals: \'"\\x00a\\\\b\\"\\rx\\u3088\\u3046\\u3053\\u305Dy\\u0101"\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1193' ],		#self : OmReference [ '1194' ],		#time : DateAndTime [ '2024-03-03T08:20:46.087-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #testMethod,			#protocol : #tests,			#sourceCode : 'testMethod\r\tself\r\t\tassert:\r\t\t\t(PjMethodNode\r\t\t\t\tparameters: #(#a #for)\r\t\t\t\tlocals: #(#d #in)\r\t\t\t\tbody:\r\t\t\t\t\t{(PjAssignNode\r\t\t\t\t\t\ttarget: (PjTempVariableNode identifier: #in)\r\t\t\t\t\t\texpression: (PjArgumentNode identifier: #for)).\r\t\t\t\t\t(PjReturnNode expression: (PjArgumentNode identifier: #a))}\r\t\t\t\tmethodName: #foo\r\t\t\t\tneedsSelf: false\r\t\t\t\tisClassMethod: false)\r\t\tasStringEquals: \'_foo(a,$for){var d,$in;$in=$for;return a}\'.\r\tself\r\t\tassert:\r\t\t\t(PjMethodNode\r\t\t\t\tparameters: #(#a)\r\t\t\t\tlocals: #(#d)\r\t\t\t\tbody:\r\t\t\t\t\t{(PjAssignNode\r\t\t\t\t\t\ttarget: (PjTempVariableNode identifier: #d)\r\t\t\t\t\t\texpression:\r\t\t\t\t\t\t\t(PjArrayNode\r\t\t\t\t\t\t\t\texpressions:\r\t\t\t\t\t\t\t\t\t{PjBlockNode\r\t\t\t\t\t\t\t\t\t\tparameters: #()\r\t\t\t\t\t\t\t\t\t\tlocals: #()\r\t\t\t\t\t\t\t\t\t\tbody:\r\t\t\t\t\t\t\t\t\t\t\t{one.\r\t\t\t\t\t\t\t\t\t\t\ttwo}})).\r\t\t\t\t\t(PjReturnNode expression: (PjArgumentNode identifier: #a))}\r\t\t\t\tmethodName: #foo\r\t\t\t\tneedsSelf: false\r\t\t\t\tisClassMethod: false)\r\t\tasStringEquals: \'_foo(a){var d;d=[()=>{1;2}];return a}\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1194' ],		#self : OmReference [ '1195' ],		#time : DateAndTime [ '2024-03-03T08:20:46.087-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #testObject,			#protocol : #tests,			#sourceCode : 'testObject\r\tself\r\t\tassert: (PjObjectNode dictionary: { #a -> selfNode. #* -> nilNode } asDictionary)\r\t\tasStringEquals: \'{"*":null,a:this}\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1195' ],		#self : OmReference [ '1196' ],		#time : DateAndTime [ '2024-03-03T08:20:46.087-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #testOperatorPrecedence,			#protocol : #tests,			#sourceCode : 'testOperatorPrecedence\r\tself assert: (PjBinaryNode operator: #+ left: (PjBinaryNode operator: #+ left: two right: three) right: one) asStringEquals: \'2+3+1\'.\r\tself assert: (PjBinaryNode operator: #+ left: (PjBinaryNode operator: #- left: two right: three) right: one) asStringEquals: \'2-3+1\'.\r\tself assert: (PjBinaryNode operator: #- left: (PjBinaryNode operator: #+ left: two right: three) right: one) asStringEquals: \'2+3-1\'.\r\tself assert: (PjBinaryNode operator: #- left: ((PjAssignNode target: (PjTempVariableNode identifier: #x) expression:  two)) right: one) asStringEquals: \'(x=2)-1\'.\r\tself assert: (PjBinaryNode operator: #* left: (PjBinaryNode operator: #* left: two right: three) right: one) asStringEquals: \'2*3*1\'.\r\tself assert: (PjBinaryNode operator: #+ left: (PjBinaryNode operator: #* left: two right: three) right: one) asStringEquals: \'2*3+1\'.\r\tself assert: (PjBinaryNode operator: #+ left: two right: (PjBinaryNode operator: #* left: three right: one)) asStringEquals: \'2+3*1\'.\r\tself assert: (PjBinaryNode operator: #* left: (PjBinaryNode operator: #+ left: two right: three) right: one) asStringEquals: \'(2+3)*1\'.\r\tself assert: (PjBinaryNode operator: #* left: two right: (PjBinaryNode operator: #/ left:  (PjBinaryNode operator: #+ left: three right: one) right: (PjBinaryNode operator: #- left: (PjLiteralValueNode value: 5) right: (PjLiteralValueNode value: 6)))) asStringEquals: \'2*(3+1)/(5-6)\'..\r\tself assert: (PjBinaryNode operator: #+ left: two right: (PjBinaryNode operator: #- left:  (PjBinaryNode operator: #* left: three right: one) right: (PjBinaryNode operator: #/ left: (PjLiteralValueNode value: 5) right: (PjLiteralValueNode value: 6)))) asStringEquals: \'2+3*1-5/6\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1196' ],		#self : OmReference [ '1197' ],		#time : DateAndTime [ '2024-03-03T08:20:46.087-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #testOptimizedJsX,			#protocol : #tests,			#sourceCode : 'testOptimizedJsX\r\tself\r\t\tassert: (PjGlobalNode identifier: #this)\r\t\tasStringEquals: \'this\'.\r\tself\r\t\tassert: ((PjAssignNode target: (PjFieldNode target: selfNode selectorNode: three isNonNil: true) expression: two))\r\t\tasStringEquals: \'this[3]=2\'.\r\tself\r\t\tassert: ((PjAssignNode target: (PjFieldNode target: selfNode selectorNode: foo isNonNil: true) expression: two))\r\t\tasStringEquals: \'this.foo=2\'.\r\tself\r\t\tassert: ((PjAssignNode target: (PjFieldNode target: selfNode selectorNode: (PjLiteralValueNode value: \'a$b_c\') isNonNil: true) expression: two))\r\t\tasStringEquals: \'this.a$b_c=2\'.\r\tself\r\t\tassert: ((PjAssignNode target: (PjFieldNode target: selfNode selectorNode: (PjLiteralValueNode value: \'a.b\') isNonNil: true) expression: two))\r\t\tasStringEquals: \'this["a.b"]=2\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1197' ],		#self : OmReference [ '1198' ],		#time : DateAndTime [ '2024-03-03T08:20:46.087-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #testPoolVariables,			#protocol : #tests,			#sourceCode : 'testPoolVariables\r\t| astAssignment poolVar |\r\tpoolVar := (PjPoolVariableNode identifier: #PoolVarForTest)\r\t\tpoolReference: PjBrowserGlobals.\r\tastAssignment := PjAssignNode target: poolVar expression: poolVar.\r\tself\r\t\tassert: astAssignment\r\t\tasStringEquals: \'cp$.PoolVarForTest=cp$.PoolVarForTest\'.\r\tself\r\t\tassert:\r\t\t\t(self generator\r\t\t\t\tcurrentClass: self class;\r\t\t\t\tasString: astAssignment)\r\t\tequals: \'cp$.PoolVarForTest=cp$.PoolVarForTest\'.\r\tself\r\t\tassert:\r\t\t\t(self generator\r\t\t\t\tcurrentClass: self class class;\r\t\t\t\tasString: astAssignment)\r\t\tequals: \'cp$.PoolVarForTest=cp$.PoolVarForTest\'.\r\tpoolVar myClass: self class class.\r\tself\r\t\tassert:\r\t\t\t(self generator\r\t\t\t\tcurrentClass: self class class;\r\t\t\t\tasString: astAssignment)\r\t\tequals: \'cp$.PoolVarForTest=cp$.PoolVarForTest\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1198' ],		#self : OmReference [ '1199' ],		#time : DateAndTime [ '2024-03-03T08:20:46.088-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #testReservedWords,			#protocol : #tests,			#sourceCode : 'testReservedWords\r\tself\r\t\tassert: (PjFieldNode target: selfNode selectorNode: (PjInstanceVariableNode identifier: #in ) isNonNil: true)\r\t\tasStringEquals: \'this.in\'.\r\tself\r\t\tassert: (PjTempVariableNode identifier: #prototype )\r\t\tasStringEquals: \'prototype\'.\r\tself\r\t\tassert: (PjTempVariableNode identifier: #for )\r\t\tasStringEquals: \'$for\'.\r\tself\r\t\tassert: (PjArgumentNode identifier: #prototype )\r\t\tasStringEquals: \'prototype\'.\r\tself\r\t\tassert: (PjArgumentNode identifier: #for )\r\t\tasStringEquals: \'$for\'.\r\tself\r\t\tassert: (PjGlobalNode identifier: #prototype )\r\t\tasStringEquals: \'prototype\'.\r\tself\r\t\tassert: (PjGlobalNode identifier: #for )\r\t\tasStringEquals: \'for\'.\r\tself\r\t\tassert: (PjClassNode identifier: #prototype )\r\t\tasStringEquals: \'prototype\'.\r\tself\r\t\tassert: (PjClassNode identifier: #for )\r\t\tasStringEquals: \'for\'.\r\tself\r\t\tassert: ((PjClassVariableNode identifier: #prototype) myClass: self class)\r\t\tasStringEquals: \'cp$.$prototype\'.\r\tself\r\t\tassert: (PjClassVariableNode identifier: #for )\r\t\tasStringEquals: \'cp$.for\'.\r\tself\r\t\tassert: (PjInstanceVariableNode identifier: #while )\r\t\tasStringEquals: \'.while\'.\r\tself\r\t\tassert: (PjInstanceVariableNode identifier: #constructor )\r\t\tasStringEquals: \'.$constructor\'.\r\tself\r\t\tassert: (PjInstanceVariableNode identifier: #prototype )\r\t\tasStringEquals: \'.$prototype\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1199' ],		#self : OmReference [ '1200' ],		#time : DateAndTime [ '2024-03-03T08:20:46.088-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #testReturn,			#protocol : #tests,			#sourceCode : 'testReturn\r\tself assert: returnThree  asStringEquals: \'return 3\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1200' ],		#self : OmReference [ '1201' ],		#time : DateAndTime [ '2024-03-03T08:20:46.088-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #testSelf,			#protocol : #tests,			#sourceCode : 'testSelf\r\tself assert: selfNode asStringEquals: \'this\'.\r\tself\r\t\tassert: (self apply: (PjSelfNode myClass: Integer) selector: #value)\r\t\tasStringEquals: \'this._value()\'.\r\tself\r\t\tassert: (self apply: (PjSelfNode inBlock: true) selector: #value)\r\t\tasStringEquals: PjStringGenerator selfName,\'._value()\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1201' ],		#self : OmReference [ '1202' ],		#time : DateAndTime [ '2024-03-03T08:20:46.088-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #testSuperCall,			#protocol : #tests,			#sourceCode : 'testSuperCall\r\tself\r\t\tassert: (self apply: (PjSuperNode myClass: Integer) selector: #value)\r\t\tasStringEquals: \'super._value()\'.\r\tself\r\t\tassert: (self apply: ((PjSuperNode myClass: Integer class) inBlock: true) selector: #value)\r\t\tasStringEquals: \'super._value()\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1202' ],		#self : OmReference [ '1203' ],		#time : DateAndTime [ '2024-03-03T08:20:46.088-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #testTry,			#protocol : #tests,			#sourceCode : 'testTry\r\tself\r\t\tassert: (PjTryNode body: throwThree)\r\t\tasStringEquals: \'var \', PjStringGenerator nonLocalReturnVariableName, \'={};try{throw $_err_$=3}catch(e){if(e===\', PjStringGenerator nonLocalReturnVariableName, \')return e;throw e}\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1203' ],		#self : OmReference [ '1204' ],		#time : DateAndTime [ '2024-03-03T08:20:46.088-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerationTest,				#isMetaSide : false			},			#name : #testUnparsedString,			#protocol : #tests,			#sourceCode : 'testUnparsedString\r\tself\r\t\tassert: (PjUnparsedStringNode string: \'a.b^c\')\r\t\tasStringEquals: \'a.b^c\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1204' ],		#self : OmReference [ '1205' ],		#time : DateAndTime [ '2024-03-03T08:20:46.089-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationSupportTest,				#isMetaSide : false			},			#name : #'assertBlock:externalVarValues:',			#protocol : #tests,			#sourceCode : 'assertBlock: block externalVarValues: valuesDict\r\r\t| context actualTempValue variable allVariables scope |\r\tcontext := block originalBlock asContext.\r\tscope := block originalBlock outerContext sourceNode scope.\r\tallVariables := scope allTemps.\r\tvaluesDict keysDo: [ :tempName | \r\t\tvariable := allVariables detect: [ : each | each name = tempName ].\r\t\tactualTempValue := variable valueStartAtContext: context.\r\t\tself\r\t\t\tassert: actualTempValue\r\t\t\tequals: (valuesDict at: tempName) ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1205' ],		#self : OmReference [ '1206' ],		#time : DateAndTime [ '2024-03-03T08:20:46.089-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationSupportTest,				#isMetaSide : false			},			#name : #'innerClosedBlock:',			#protocol : #tests,			#sourceCode : 'innerClosedBlock: x\r\t| y |\r\ty := 23.\r\t^  [: other | [:v| |w| {v.w.x.y.instVar.123. other}] asClosedBlock] value: 986',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1206' ],		#self : OmReference [ '1207' ],		#time : DateAndTime [ '2024-03-03T08:20:46.089-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationSupportTest,				#isMetaSide : false			},			#name : #'openBlock:',			#protocol : #tests,			#sourceCode : 'openBlock: x\r\t| y |\r\ty := 23.\r\t^  [:v| |w| {v.w.x.y.instVar.123}]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1207' ],		#self : OmReference [ '1208' ],		#time : DateAndTime [ '2024-03-03T08:20:46.089-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationSupportTest,				#isMetaSide : false			},			#name : #test0ArgBlock1ExtenalVarLevel1,			#protocol : #tests,			#sourceCode : 'test0ArgBlock1ExtenalVarLevel1\r\r\t| block x valuesDict  |\r\tvaluesDict := { #x -> 1337.} asDictionary.\r\tx := valuesDict at: #x.\r\tblock := [ x + 1 ].\r\tself assertBlock: block externalVarValues: valuesDict ',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1208' ],		#self : OmReference [ '1209' ],		#time : DateAndTime [ '2024-03-03T08:20:46.089-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationSupportTest,				#isMetaSide : false			},			#name : #test0ArgBlock2ExternalVarsLevel1,			#protocol : #tests,			#sourceCode : 'test0ArgBlock2ExternalVarsLevel1\r\r\t| block x a valuesDict |\r\tvaluesDict := { \r\t\t              (#x -> 1337).\r\t\t              (#a -> 42) } asDictionary.\r\tx := valuesDict at: #x.\r\tinstVar := 1066.\r\ta := valuesDict at: #a.\r\tblock := [ \r\t         | w |\r\t         { \r\t\t         a.\r\t\t         w.\r\t\t         x.\r\t\t         instVar.\r\t\t         123 } ].\r\tself assertBlock: block externalVarValues: valuesDict',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1209' ],		#self : OmReference [ '1210' ],		#time : DateAndTime [ '2024-03-03T08:20:46.089-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationSupportTest,				#isMetaSide : false			},			#name : #test1ArgBlock1ExternalVarLevel1,			#protocol : #tests,			#sourceCode : 'test1ArgBlock1ExternalVarLevel1\r\t\r\t| block x valuesDict  |\r\tvaluesDict := { #x -> 1337.} asDictionary.\r\tx := valuesDict at: #x.\r\tblock := [: a | x + 1 ].\r\tself assertBlock: block externalVarValues: valuesDict ',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1210' ],		#self : OmReference [ '1211' ],		#time : DateAndTime [ '2024-03-03T08:20:46.089-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationSupportTest,				#isMetaSide : false			},			#name : #test1ArgBlock2ExternalVarsLevel1,			#protocol : #tests,			#sourceCode : 'test1ArgBlock2ExternalVarsLevel1\r\r\t| block x a valuesDict |\r\tvaluesDict := { \r\t\t              (#x -> 1337).\r\t\t              (#a -> 42) } asDictionary.\r\tx := valuesDict at: #x.\r\tinstVar := 1066.\r\ta := valuesDict at: #a.\r\tblock := [ :v | \r\t         | w |\r\t         { \r\t\t         a.\r\t\t         v.\r\t\t         w.\r\t\t         x.\r\t\t         instVar.\r\t\t         123 } ].\r\tself assertBlock: block externalVarValues: valuesDict',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1211' ],		#self : OmReference [ '1212' ],		#time : DateAndTime [ '2024-03-03T08:20:46.089-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationSupportTest,				#isMetaSide : false			},			#name : #test1ArgBlock3ExternalVarsLevel2,			#protocol : #tests,			#sourceCode : 'test1ArgBlock3ExternalVarsLevel2\r\r\t| block x a valuesDict |\r\tvaluesDict := { \r\t\t              (#x -> 1337).\r\t\t              (#a -> 42).\r\t\t              (#y -> 91) } asDictionary.\r\tx := valuesDict at: #x.\r\tinstVar := 1066.\r\ta := valuesDict at: #a.\r\tblock := [ :y | \r\t         [ :v | \r\t         | w |\r\t         { \r\t\t         a.\r\t\t         v.\r\t\t         w.\r\t\t         x.\r\t\t         y.\r\t\t         instVar.\r\t\t         123 } ] ] value: (valuesDict at: #y).\r\tself assertBlock: block externalVarValues: valuesDict.\r\tself should: [(block externalVariablesDict at: #block) signal] raise: PjJavascriptTranspilationError ',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1212' ],		#self : OmReference [ '1213' ],		#time : DateAndTime [ '2024-03-03T08:20:46.089-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationSupportTest,				#isMetaSide : false			},			#name : #test1ArgClosedBlock3ExternalVarsLevel2,			#protocol : #tests,			#sourceCode : 'test1ArgClosedBlock3ExternalVarsLevel2\r\r\t| outerBlock x a valuesDict closedBlock |\r\tvaluesDict := { \r\t\t              (#x -> 1337).\r\t\t              (#a -> 42).\r\t\t              (#y -> 91) } asDictionary.\r\tx := valuesDict at: #x.\r\tinstVar := 1066.\r\ta := valuesDict at: #a.\r\touterBlock := [ :y | \r\t              [ :v | \r\t              | w |\r\t              { \r\t\t              a.\r\t\t              v.\r\t\t              w.\r\t\t              x.\r\t\t              y.\r\t\t              instVar.\r\t\t              123 } ] asClosedBlock ].\r\tclosedBlock := outerBlock value: (valuesDict at: #y).\r\tself assertBlock: closedBlock externalVarValues: valuesDict.\r\tself\r\t\tassert: (closedBlock externalVariablesDict at: #outerBlock)\r\t\tidenticalTo: outerBlock.\r\tself\r\t\tassert: (closedBlock externalVariablesDict at: #closedBlock) isNil',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1213' ],		#self : OmReference [ '1214' ],		#time : DateAndTime [ '2024-03-03T08:20:46.09-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationSupportTest,				#isMetaSide : false			},			#name : #test1ArgClosedBlockLevel1CreatedByAnotherMethod,			#protocol : #tests,			#sourceCode : 'test1ArgClosedBlockLevel1CreatedByAnotherMethod\r\t| closedBlock |\r\tclosedBlock := (self openBlock: 42) asClosedBlock.\r\tself assertBlock: closedBlock externalVarValues: { #x -> 42. #y ->23 } asDictionary ',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1214' ],		#self : OmReference [ '1215' ],		#time : DateAndTime [ '2024-03-03T08:20:46.09-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationSupportTest,				#isMetaSide : false			},			#name : #test1ArgClosedBlockLevel2CreatedByAnotherMethod,			#protocol : #tests,			#sourceCode : 'test1ArgClosedBlockLevel2CreatedByAnotherMethod\r\t| closedBlock |\r\tclosedBlock := self innerClosedBlock: 42.\r\tself assertBlock: closedBlock externalVarValues: { #x -> 42. #y ->23. #other -> 986 } asDictionary ',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1215' ],		#self : OmReference [ '1216' ],		#time : DateAndTime [ '2024-03-03T08:20:46.09-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassNamingTest,				#isMetaSide : false			},			#name : #testClassNeedsCreation,			#protocol : #tests,			#sourceCode : 'testClassNeedsCreation\r\tself deny: Object needsClassDeclaration.\r\tself deny: BlockClosure needsClassDeclaration.\r\tself assert: UndefinedObject needsClassDeclaration.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1216' ],		#self : OmReference [ '1217' ],		#time : DateAndTime [ '2024-03-03T08:20:46.09-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassSortingTest,				#isMetaSide : false			},			#name : #'assert:isBefore:',			#protocol : #tests,			#sourceCode : 'assert: aClass isBefore: bClass\r\tself assert: (self should: aClass initializeBefore: bClass).\r\tself deny: (self should: bClass initializeBefore: aClass)',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1217' ],		#self : OmReference [ '1218' ],		#time : DateAndTime [ '2024-03-03T08:20:46.09-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassSortingTest,				#isMetaSide : false			},			#name : #'assert:isUnrelatedTo:',			#protocol : #tests,			#sourceCode : 'assert: aClass isUnrelatedTo: bClass\r\tself deny: (self should: aClass initializeBefore: bClass).\r\tself deny: (self should: bClass initializeBefore: aClass)',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1218' ],		#self : OmReference [ '1219' ],		#time : DateAndTime [ '2024-03-03T08:20:46.09-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassSortingTest,				#isMetaSide : false			},			#name : #'checkInheritanceOrdered:',			#protocol : #tests,			#sourceCode : 'checkInheritanceOrdered: sorted\r\tsorted\r\t\twithIndexDo: [ :first :index | \r\t\t\tindex + 1 to: sorted size do: [ :secondIndex | \r\t\t\t\t| second |\r\t\t\t\tsecond := sorted at: secondIndex.\r\t\t\t\tself\r\t\t\t\t\tassert: ((second inheritsFrom: first) or: [ (first inheritsFrom: second) not ]) ] ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1219' ],		#self : OmReference [ '1220' ],		#time : DateAndTime [ '2024-03-03T08:20:46.09-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassSortingTest,				#isMetaSide : false			},			#name : #'checkInitializationOrdered:',			#protocol : #tests,			#sourceCode : 'checkInitializationOrdered: sorted\r\tsorted\r\t\twithIndexDo: [ :first :index | \r\t\t\tindex + 1 to: sorted size do: [ :secondIndex | \r\t\t\t\t| second |\r\t\t\t\tsecond := sorted at: secondIndex.\r\t\t\t\tself\r\t\t\t\t\tassert: ((self does: second reference: first) or: [ (self does: first reference: second) not ]) ] ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1220' ],		#self : OmReference [ '1221' ],		#time : DateAndTime [ '2024-03-03T08:20:46.09-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassSortingTest,				#isMetaSide : false			},			#name : #'does:reference:',			#protocol : #tests,			#sourceCode : 'does: classB reference: classA\r\r\t| classesReferencingA |\r\tclassesReferencingA := cache at: classA ifAbsentPut: [ \r\t\t                       | methodsReferencingA |\r\t\t                       methodsReferencingA := SystemNavigation \r\t\t\t                                              globalRefsForPharoJS:\r\t\t\t                                              classA\r\t\t\t\t                                              nameToUseForJsConversion.\r\t\t                       methodsReferencingA asSet collect: [ :each | \r\t\t\t                       each methodClass instanceSide ] ].\r\t^ (classesReferencingA includes: classB) or: [ \r\t\t  classB sharedPools includes: classA ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1221' ],		#self : OmReference [ '1222' ],		#time : DateAndTime [ '2024-03-03T08:20:46.09-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassSortingTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\tcache := IdentityDictionary new.\r\ttranspiler := PjTranspiler new.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1222' ],		#self : OmReference [ '1223' ],		#time : DateAndTime [ '2024-03-03T08:20:46.091-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassSortingTest,				#isMetaSide : false			},			#name : #'should:initializeBefore:',			#protocol : #tests,			#sourceCode : 'should: bClass initializeBefore: aClass\r\t^ transpiler should: bClass occurBefore: aClass with: [ : first : last |\r\t\ttranspiler does: last reference: first ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1223' ],		#self : OmReference [ '1224' ],		#time : DateAndTime [ '2024-03-03T08:20:46.091-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassSortingTest,				#isMetaSide : false			},			#name : #testClassInheritenceBasedOrdering,			#protocol : #tests,			#sourceCode : 'testClassInheritenceBasedOrdering\r\t| sorted classes |\r\tclasses := Object withAllSuperclasses asIdentitySet\r\t\t, (Object subclasses first: 10) , IdentitySet withAllSuperclasses\r\t\t, String withAllSuperclasses , SmallInteger withAllSuperclasses.\r\t" all the above have no inheritance (once we remove Object superclasses at the end) "\r\tObject withAllSuperclasses do: [ :each | classes remove: each ].\r\t" now we have a bunch of heirarchies that are mutually incomparable "\r\tsorted := Class superclassOrder: classes.\r\tself checkInheritanceOrdered: sorted.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1224' ],		#self : OmReference [ '1225' ],		#time : DateAndTime [ '2024-03-03T08:20:46.091-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassSortingTest,				#isMetaSide : false			},			#name : #testClassIntializationOrdering,			#protocol : #tests,			#sourceCode : 'testClassIntializationOrdering\r\t| sorted classes |\r\tclasses := {\r\t\tPjClassForTranspilationTest.\r\t\tPjSuperClassForTranspilationTest.\r\t\tPjSharedPoolForTest.\r\t\tPjClientForInitializationTest.\r\t\tPjClassDForPackageTranspilationTest.  \r\t\tPjClassEForPackageTranspilationTest. \r\t\tPjClientForJavascriptInitializationTest.\r\t\tPjClassCForPackageTranspilationTest.\r\t\tPjProviderForInitializationTest.\r\t\tPjClassBForPackageTranspilationTest.\r\t}.\r\tsorted := transpiler orderForInitialization: classes.\r\tself checkInitializationOrdered: sorted.\r\tself checkInheritanceOrdered: sorted.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1225' ],		#self : OmReference [ '1226' ],		#time : DateAndTime [ '2024-03-03T08:20:46.091-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassSortingTest,				#isMetaSide : false			},			#name : #testShouldInitializeBefore,			#protocol : #tests,			#sourceCode : 'testShouldInitializeBefore\r\t| relationships classes |\r\trelationships := {\r\t\tPjSharedPoolForTest -> PjSuperClassForTranspilationTest.\r\t\tPjSuperClassForTranspilationTest -> PjClassForTranspilationTest.\r\t\tPjProviderForInitializationTest -> PjClientForInitializationTest.\r\t\tPjProviderForInitializationTest -> PjClientForJavascriptInitializationTest.\r\t\tPjClassBForPackageTranspilationTest -> PjClassCForPackageTranspilationTest.\r\t\tPjClassBForPackageTranspilationTest -> PjClassDForPackageTranspilationTest.\r\t\tPjClassBForPackageTranspilationTest -> PjClassEForPackageTranspilationTest.\r\t\tPjClassDForPackageTranspilationTest -> PjClassEForPackageTranspilationTest.\r\t\tPjClientForJavascriptInitializationTest -> PjClassForTranspilationTest.\r\t} asSet.\r\tclasses := IdentitySet new.\r\trelationships do: [ : assoc |\r\t\tself assert: assoc key isBefore: assoc value.\r\t\tclasses add: assoc key;add: assoc value\r\t].\r\tclasses do: [ : first |\r\t\tclasses do: [ :second |\r\t\t\t(first = second or: [(relationships includes: first->second) or: [relationships includes: second->first]]) ifFalse: [\r\t\t\t\tself assert: first isUnrelatedTo: second\r\t]]]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1226' ],		#self : OmReference [ '1227' ],		#time : DateAndTime [ '2024-03-03T08:20:46.091-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClosedBlockClosureTest,				#isMetaSide : false			},			#name : #testBlockFreeVariables,			#protocol : #tests,			#sourceCode : 'testBlockFreeVariables\r\t|x block closedBlock |\r\tx := 1.\r\tinstVar := 42.\r\tblock := [x := 99].\r\tself assert: block externalVariablesDict keys asSet equals: #(x instVar block closedBlock testSelector expectedFails) asSet.\r\tclosedBlock := block asClosedBlock.\r\tx := 2.\r\tinstVar := 17.\r\tself assert: block asClosedBlock externalVariablesDict equals: {#x->x. #instVar->instVar. #block->block. #closedBlock-> closedBlock. #testSelector->testSelector. #expectedFails->expectedFails} asDictionary.\r\tself assert: closedBlock externalVariablesDict equals: {#x->1. #instVar->42. #block->block. #closedBlock-> nil. #testSelector->testSelector. #expectedFails->expectedFails} asDictionary.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1227' ],		#self : OmReference [ '1228' ],		#time : DateAndTime [ '2024-03-03T08:20:46.091-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClosedBlockClosureTest,				#isMetaSide : false			},			#name : #testBlockReferencingTempInMethod,			#protocol : #tests,			#sourceCode : 'testBlockReferencingTempInMethod\r\t|x closedBlock |\r\tx := 1.\r\tclosedBlock := [x := 2] asClosedBlock.\r\tclosedBlock value.\r\tself assert: x equals: 1.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1228' ],		#self : OmReference [ '1229' ],		#time : DateAndTime [ '2024-03-03T08:20:46.091-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClosedBlockClosureTest,				#isMetaSide : false			},			#name : #testClosingClosedBlock,			#protocol : #tests,			#sourceCode : 'testClosingClosedBlock\r\t| closedBlock |\r\tclosedBlock := [] asClosedBlock.\r\tself assert: closedBlock asClosedBlock == closedBlock.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1229' ],		#self : OmReference [ '1230' ],		#time : DateAndTime [ '2024-03-03T08:20:46.091-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClosedBlockClosureTest,				#isMetaSide : false			},			#name : #testNestedBlockReferencingTempInMethod,			#protocol : #tests,			#sourceCode : 'testNestedBlockReferencingTempInMethod\r\t|x closedBlock |\r\tx := 1.\r\t[closedBlock := [x := 2] asClosedBlock] value.\r\tclosedBlock value.\r\tself assert: x equals: 1.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1230' ],		#self : OmReference [ '1231' ],		#time : DateAndTime [ '2024-03-03T08:20:46.092-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClosedBlockClosureTest,				#isMetaSide : false			},			#name : #testNestedBlockReferencingTempInOuterBlock,			#protocol : #tests,			#sourceCode : 'testNestedBlockReferencingTempInOuterBlock\r\t| xBlock closedBlock |\r\txBlock := [|x|\r\t\tx := 1.\r\t\tclosedBlock := [x := 2] asClosedBlock.\r\t\t[x]] value.\r\tclosedBlock value.\r\tself assert: xBlock value equals: 1.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1231' ],		#self : OmReference [ '1232' ],		#time : DateAndTime [ '2024-03-03T08:20:46.092-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageConversionTest,				#isMetaSide : false			},			#name : #addSome,			#protocol : #tests,			#sourceCode : 'addSome\r\tconverter addAllConversions: (#(2 6 4) collect: [ : i | PjNullMessageConversionForTest new order: i selector: #foo]).\r\tconverter addAllConversions: (#(8 4) collect: [ : i | PjNullMessageConversionForTest new order: i selector: #bar])',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1232' ],		#self : OmReference [ '1233' ],		#time : DateAndTime [ '2024-03-03T08:20:46.092-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageConversionTest,				#isMetaSide : false			},			#name : #'convert:receiver:args:',			#protocol : #tests,			#sourceCode : 'convert: selector receiver: aLiteral args: args\r\t| receiverAstNode |\r\treceiverAstNode := RBLiteralNode value: aLiteral.\r\t^converter convert: selector receiver: receiverAstNode args: args',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1233' ],		#self : OmReference [ '1234' ],		#time : DateAndTime [ '2024-03-03T08:20:46.092-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageConversionTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #tests,			#sourceCode : 'setUp\r\tsuper setUp.\r\tconverter := PjMessageConverter new.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1234' ],		#self : OmReference [ '1235' ],		#time : DateAndTime [ '2024-03-03T08:20:46.092-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageConversionTest,				#isMetaSide : false			},			#name : #testAdd,			#protocol : #tests,			#sourceCode : 'testAdd\r\tself addSome.\r\tself assert: (self convert: #bar receiver: 5 args: #()) equals: 8.\r\tconverter addConversion: (PjNullMessageConversionForTest new order: 6 selector: #bar).\r\tself assert: (self convert: #bar receiver: 5 args: #()) equals: 6',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1235' ],		#self : OmReference [ '1236' ],		#time : DateAndTime [ '2024-03-03T08:20:46.092-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageConversionTest,				#isMetaSide : false			},			#name : #testEmpty,			#protocol : #tests,			#sourceCode : 'testEmpty\r\tself assert: (self convert: #foo receiver: nil args: #()) equals: nil',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1236' ],		#self : OmReference [ '1237' ],		#time : DateAndTime [ '2024-03-03T08:20:46.092-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageConversionTest,				#isMetaSide : false			},			#name : #testRemove,			#protocol : #tests,			#sourceCode : 'testRemove\r\tself addSome.\r\tself assert: (self convert: #foo receiver: 3 args: #()) equals: 4.\r\tconverter removeConversion: (PjNullMessageConversionForTest new order: 4 selector: #foo).\r\tself assert: (self convert: #foo receiver: 3 args: #()) equals: 6.\r\tself assert: (self convert: #foo receiver: 1 args: #()) equals: 2.\r\tconverter removeConversion: (PjNullMessageConversionForTest new order: 6 selector: #foo).\r\tself assert: (self convert: #foo receiver: 3 args: #()) equals: nil',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1237' ],		#self : OmReference [ '1238' ],		#time : DateAndTime [ '2024-03-03T08:20:46.092-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageConversionTest,				#isMetaSide : false			},			#name : #testSome,			#protocol : #tests,			#sourceCode : 'testSome\r\tself addSome.\r\tself assert: (self convert: #foo receiver: 3 args: #()) equals: 4.\r\tself assert: (self convert: #foo receiver: 5 args: #()) equals: 6.\r\tself assert: (self convert: #foo receiver: 1 args: #()) equals: 2.\r\tself assert: (self convert: #foo receiver: 6 args: #()) equals: nil.\r\tself assert: (self convert: #bar receiver: 3 args: #()) equals: 4.\r\tself assert: (self convert: #bar receiver: 5 args: #()) equals: 8.\r\tself assert: (self convert: #bar receiver: 1 args: #()) equals: 4.\r\tself assert: (self convert: #foo receiver: 9 args: #()) equals: nil',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1238' ],		#self : OmReference [ '1239' ],		#time : DateAndTime [ '2024-03-03T08:20:46.092-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjGeneratedClassTranspilationTest class',				#isMetaSide : true			},			#name : #resources,			#protocol : #accessing,			#sourceCode : 'resources\r\t^{PjClassFactoryTestResource}',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1239' ],		#self : OmReference [ '1240' ],		#time : DateAndTime [ '2024-03-03T08:20:46.093-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjGeneratedClassTranspilationTest,				#isMetaSide : false			},			#name : #'assertStCode:convertedIncludes:',			#protocol : #checking,			#sourceCode : 'assertStCode: methodBodyString convertedIncludes: expectedJsSubstring\r\tself assertStMethodCode:  \'m\\\' withCRs, methodBodyString convertedIncludes: expectedJsSubstring.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1240' ],		#self : OmReference [ '1241' ],		#time : DateAndTime [ '2024-03-03T08:20:46.093-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjGeneratedClassTranspilationTest,				#isMetaSide : false			},			#name : #'assertStMethodCode:convertedIncludes:',			#protocol : #checking,			#sourceCode : 'assertStMethodCode: methodString convertedIncludes: expectedJsSubstring\r\t| jsCode |\r\tclass compile: methodString.\r\tjsCode := self convertClass: class.\r\tself assert: jsCode includes: expectedJsSubstring.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1241' ],		#self : OmReference [ '1242' ],		#time : DateAndTime [ '2024-03-03T08:20:46.093-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjGeneratedClassTranspilationTest,				#isMetaSide : false			},			#name : #classFactory,			#protocol : #accessing,			#sourceCode : 'classFactory\r\t^PjClassFactoryTestResource current classFactory',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1242' ],		#self : OmReference [ '1243' ],		#time : DateAndTime [ '2024-03-03T08:20:46.093-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjGeneratedClassTranspilationTest,				#isMetaSide : false			},			#name : #defaultClass,			#protocol : #accessing,			#sourceCode : 'defaultClass\r\t^PjClassFactoryTestResource current defaultClass',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1243' ],		#self : OmReference [ '1244' ],		#time : DateAndTime [ '2024-03-03T08:20:46.093-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjGeneratedClassTranspilationTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\tclass := self defaultClass.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1244' ],		#self : OmReference [ '1245' ],		#time : DateAndTime [ '2024-03-03T08:20:46.093-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringWithBlockTranspilationTest,				#isMetaSide : false			},			#name : #testBlock0Arg,			#protocol : #tests,			#sourceCode : 'testBlock0Arg\r\tself \r\t\tassertStCode: \'[123]\' \r\t\tconvertedIncludes: \'()=>{return 123}\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1245' ],		#self : OmReference [ '1246' ],		#time : DateAndTime [ '2024-03-03T08:20:46.094-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringWithBlockTranspilationTest,				#isMetaSide : false			},			#name : #testBlock0ArgWithReturn,			#protocol : #tests,			#sourceCode : 'testBlock0ArgWithReturn\r\tself \r\t\tassertStCode: \'[^123]\' \r\t\tconvertedIncludes: \'()=>{throw $_err_$=123}\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1246' ],		#self : OmReference [ '1247' ],		#time : DateAndTime [ '2024-03-03T08:20:46.094-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringWithBlockTranspilationTest,				#isMetaSide : false			},			#name : #testBlock1Arg,			#protocol : #tests,			#sourceCode : 'testBlock1Arg\r\tself \r\t\tassertStCode: \'[ :x | 123]\' \r\t\tconvertedIncludes: \'(x)=>{return 123}\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1247' ],		#self : OmReference [ '1248' ],		#time : DateAndTime [ '2024-03-03T08:20:46.094-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringWithBlockTranspilationTest,				#isMetaSide : false			},			#name : #testBlockAsArgument,			#protocol : #tests,			#sourceCode : 'testBlockAsArgument\r\tself \r\t\tassertStCode: \'1 to: 10 by: 2 do: [: x | x ]\' \r\t\tconvertedIncludes: \'(1)._to_by_do_(10,2,(x)=>{return x})\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1248' ],		#self : OmReference [ '1249' ],		#time : DateAndTime [ '2024-03-03T08:20:46.094-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringWithBlockTranspilationTest,				#isMetaSide : false			},			#name : #testEmptyBlock,			#protocol : #tests,			#sourceCode : 'testEmptyBlock\r\tself \r\t\tassertStCode: \'[]\' \r\t\tconvertedIncludes: \'()=>{return \', self nilInJavascript, \'}\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1249' ],		#self : OmReference [ '1250' ],		#time : DateAndTime [ '2024-03-03T08:20:46.094-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPackageTranspilationTest,				#isMetaSide : false			},			#name : #'assert:classVariablesSetBefore:',			#protocol : #checking,			#sourceCode : 'assert: firstClass classVariablesSetBefore: lastClass\r\tself \r\t\tassert: firstClass \r\t\tinCodeWith: \'.$$def(\' \r\t\tbefore: lastClass',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1250' ],		#self : OmReference [ '1251' ],		#time : DateAndTime [ '2024-03-03T08:20:46.094-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPackageTranspilationTest,				#isMetaSide : false			},			#name : #'assert:inCodeWith:before:',			#protocol : #checking,			#sourceCode : 'assert: firstClass inCodeWith: codeString before: lastClass\r\t| firstIndex lastIndex |\r\tfirstIndex := self jsCode indexOfSubCollection: firstClass nameToUseForJsConversion, codeString.\r\tself deny: firstIndex = 0.\r\tlastIndex := self jsCode indexOfSubCollection: lastClass nameToUseForJsConversion, codeString.\r\tself assert: firstIndex < lastIndex.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1251' ],		#self : OmReference [ '1252' ],		#time : DateAndTime [ '2024-03-03T08:20:46.094-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPackageTranspilationTest,				#isMetaSide : false			},			#name : #'assert:inCodeWithPrefix:before:',			#protocol : #checking,			#sourceCode : 'assert: firstClass inCodeWithPrefix: codeString before: lastClass\r\t| firstIndex lastIndex |\r\tfirstIndex := self jsCode indexOfSubCollection: codeString, firstClass nameToUseForJsConversion.\r\tself deny: firstIndex = 0.\r\tlastIndex := self jsCode indexOfSubCollection: codeString, lastClass nameToUseForJsConversion.\r\tself assert: firstIndex < lastIndex.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1252' ],		#self : OmReference [ '1253' ],		#time : DateAndTime [ '2024-03-03T08:20:46.095-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPackageTranspilationTest,				#isMetaSide : false			},			#name : #'assert:initializedBefore:',			#protocol : #checking,			#sourceCode : 'assert: firstClass initializedBefore: lastClass\r\tself assert: firstClass inCodeWith: \'._initialize();\' before: lastClass.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1253' ],		#self : OmReference [ '1254' ],		#time : DateAndTime [ '2024-03-03T08:20:46.095-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPackageTranspilationTest,				#isMetaSide : false			},			#name : #'assertClass:installedBefore:',			#protocol : #checking,			#sourceCode : 'assertClass: firstClass installedBefore: lastClass\r\tself assert: firstClass inCodeWithPrefix: \'class \' before: lastClass.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1254' ],		#self : OmReference [ '1255' ],		#time : DateAndTime [ '2024-03-03T08:20:46.095-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPackageTranspilationTest,				#isMetaSide : false			},			#name : #'assertClassExtension:installedBefore:',			#protocol : #checking,			#sourceCode : 'assertClassExtension: firstClass installedBefore: lastClass\r\r\tself assert: firstClass inCodeWithPrefix: \'},\' before: lastClass',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1255' ],		#self : OmReference [ '1256' ],		#time : DateAndTime [ '2024-03-03T08:20:46.095-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPackageTranspilationTest,				#isMetaSide : false			},			#name : #testCircularClass,			#protocol : #testing,			#sourceCode : 'testCircularClass\r\tself generateJsCodeForClasses: {\r\tPjClassBForCircularTranspilationTest.\r\t}.\r\tself deny: self jsCode includes: \'.prototype.__proto__ = \'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1256' ],		#self : OmReference [ '1257' ],		#time : DateAndTime [ '2024-03-03T08:20:46.095-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPackageTranspilationTest,				#isMetaSide : false			},			#name : #testClientClassUsesJavascriptNameOfReferencedClass,			#protocol : #testing,			#sourceCode : 'testClientClassUsesJavascriptNameOfReferencedClass\r\tself generateJsCodeForClasses: {\r\tPjClassBForReferenceTranspilationTest.\r\tPjClassAForReferenceTranspilationTest.\r\t}.\r\tself assert: self jsCode includes: PjClassAForReferenceTranspilationTest javascriptName.\r\tself deny: self jsCode includes: PjClassAForReferenceTranspilationTest name.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1257' ],		#self : OmReference [ '1258' ],		#time : DateAndTime [ '2024-03-03T08:20:46.095-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPackageTranspilationTest,				#isMetaSide : false			},			#name : #testDnuSetup,			#protocol : #testing,			#sourceCode : 'testDnuSetup\r\tself generateJsCodeForClasses: {\r\tPjClassBForCircularTranspilationTest.\r\t}.\r\tself assert: self jsCode includes: \'._registerDnuForAll_(["isNil","javascriptName"]);\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1258' ],		#self : OmReference [ '1259' ],		#time : DateAndTime [ '2024-03-03T08:20:46.096-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPackageTranspilationTest,				#isMetaSide : false			},			#name : #testDuplicateClasses,			#protocol : #testing,			#sourceCode : 'testDuplicateClasses\r\t| classesToConvert classDefintionString className classInitializationString|\r\tclassesToConvert := OrderedCollection new.\r\t3 timesRepeat: [ classesToConvert add: PjClassAForPackageTranspilationTest].\r\tself generateJsCodeForClasses: classesToConvert.\r\tclassName := PjClassAForPackageTranspilationTest name.\r\tclassDefintionString := \'class \', className,\' extends\'.\r\tclassInitializationString := className, \'._initialize();\'.\r\t{classDefintionString. classInitializationString} do: [:each |\r\t\tself assert: (jsCode allRangesOfSubstring: each) size equals: 1] .',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1259' ],		#self : OmReference [ '1260' ],		#time : DateAndTime [ '2024-03-03T08:20:46.096-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPackageTranspilationTest,				#isMetaSide : false			},			#name : #testJavascriptInitializeOverridesClassInitialize,			#protocol : #testing,			#sourceCode : 'testJavascriptInitializeOverridesClassInitialize\r\tself generateJsCodeForClasses: {\r\tPjClientForJavascriptInitializationTest.\r\tPjProviderForInitializationTest\r\t}.\r\tself assert: self jsCode includes: PjClientForJavascriptInitializationTest name, \'._javascriptInitialize()\'.\r\tself deny: self jsCode includes: PjClientForJavascriptInitializationTest name, \'._initialize()\'.\r\tself \r\t\tassert: PjProviderForInitializationTest name, \'._initialize()\'\r\t\tappearsBefore: PjClientForJavascriptInitializationTest name, \'._javascriptInitialize()\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1260' ],		#self : OmReference [ '1261' ],		#time : DateAndTime [ '2024-03-03T08:20:46.096-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPackageTranspilationTest,				#isMetaSide : false			},			#name : #testProviderInitializedBeforeClient,			#protocol : #testing,			#sourceCode : 'testProviderInitializedBeforeClient\r\tself generateJsCodeForClasses: {\r\tPjClassCForPackageTranspilationTest.\r\tPjClassBForPackageTranspilationTest.\r\tPjClassAForPackageTranspilationTest.\r\t}.\r\tself assert: PjClassBForPackageTranspilationTest initializedBefore: PjClassCForPackageTranspilationTest.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1261' ],		#self : OmReference [ '1262' ],		#time : DateAndTime [ '2024-03-03T08:20:46.096-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPackageTranspilationTest,				#isMetaSide : false			},			#name : #testProviderInitializedBeforeClientSubclass,			#protocol : #testing,			#sourceCode : 'testProviderInitializedBeforeClientSubclass\r\tself generateJsCodeForClasses: {\r\tPjClassEForPackageTranspilationTest.\r\tPjClassDForPackageTranspilationTest.\r\tPjClassBForPackageTranspilationTest.\r\tPjClassAForPackageTranspilationTest.\r\t}.\r\tself assert: PjClassBForPackageTranspilationTest initializedBefore: PjClassEForPackageTranspilationTest.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1262' ],		#self : OmReference [ '1263' ],		#time : DateAndTime [ '2024-03-03T08:20:46.096-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPackageTranspilationTest,				#isMetaSide : false			},			#name : #testSuperclassInitializedBeforeSubclass,			#protocol : #testing,			#sourceCode : 'testSuperclassInitializedBeforeSubclass\r\tself generateJsCodeForClasses: {\r\tPjClassBForPackageTranspilationTest.\r\tPjClassAForPackageTranspilationTest.\r\t}.\r\tself assert: PjClassAForPackageTranspilationTest initializedBefore: PjClassBForPackageTranspilationTest.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1263' ],		#self : OmReference [ '1264' ],		#time : DateAndTime [ '2024-03-03T08:20:46.096-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPackageTranspilationTest,				#isMetaSide : false			},			#name : #testSuperclassProtoSetBeforeSubclass,			#protocol : #testing,			#sourceCode : 'testSuperclassProtoSetBeforeSubclass\r\tself generateJsCodeForClasses: {\r\tPjClassBForPackageTranspilationTest.\r\tPjClassAForPackageTranspilationTest.\r\t}.\r\tself assertClass: PjClassAForPackageTranspilationTest installedBefore: PjClassBForPackageTranspilationTest.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1264' ],		#self : OmReference [ '1265' ],		#time : DateAndTime [ '2024-03-03T08:20:46.096-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPrimitiveTranspilationTest,				#isMetaSide : false			},			#name : #testPrimitiveFailing,			#protocol : #testing,			#sourceCode : 'testPrimitiveFailing\r\tself should: [\r\t\tself generateJsCodeForClasses: {\r\t\t\tPjClassForPrimitiveFailingTest.\r\t\t}\r\t] raise: PjJavascriptTranspilationError description: \'fail for primitive\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1265' ],		#self : OmReference [ '1266' ],		#time : DateAndTime [ '2024-03-03T08:20:46.097-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPrimitiveTranspilationTest,				#isMetaSide : false			},			#name : #testPrimitiveWithFallback,			#protocol : #testing,			#sourceCode : 'testPrimitiveWithFallback\r\tself generateJsCodeForClasses: {\r\t\tPjClassForPrimitiveTest.\r\t}.\r\tself assertInstanceMethod: #+ equals: \'(aNumber){return $asNil$(aNumber)._adaptToFloat_andSend_(this,"+")}\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1266' ],		#self : OmReference [ '1267' ],		#time : DateAndTime [ '2024-03-03T08:20:46.097-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassDefinitionTranspilationTest,				#isMetaSide : false			},			#name : #classToTranspile,			#protocol : #accessing,			#sourceCode : 'classToTranspile\r\t^ PjClassForDefinitionTest',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1267' ],		#self : OmReference [ '1268' ],		#time : DateAndTime [ '2024-03-03T08:20:46.097-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassDefinitionTranspilationTest,				#isMetaSide : false			},			#name : #expectedClassName,			#protocol : #accessing,			#sourceCode : 'expectedClassName\r\t^self classToTranspile name',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1268' ],		#self : OmReference [ '1269' ],		#time : DateAndTime [ '2024-03-03T08:20:46.097-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassDefinitionTranspilationTest,				#isMetaSide : false			},			#name : #testClassDefinedAsConstructor,			#protocol : #tests,			#sourceCode : 'testClassDefinedAsConstructor\r\tself assert: self jsCode includes: \'class \', className, \' extends Object{\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1269' ],		#self : OmReference [ '1270' ],		#time : DateAndTime [ '2024-03-03T08:20:46.097-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassExtensionTranspilationTest,				#isMetaSide : false			},			#name : #classToTranspile,			#protocol : #accessing,			#sourceCode : 'classToTranspile\r\t^ PjClassExtensionForTest',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1270' ],		#self : OmReference [ '1271' ],		#time : DateAndTime [ '2024-03-03T08:20:46.097-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassExtensionTranspilationTest,				#isMetaSide : false			},			#name : #testClassExtension,			#protocol : #tests,			#sourceCode : 'testClassExtension\r\tself deny: self jsCode includes: self classToTranspile name.\r\tself deny: self jsCode includes: \'function \', self classToTranspile name, \'(){}\'.\r\tself deny: self jsCode includes: \'function \', PjClassForTranspilationTest name, \'(){}\'.\r\tself assert: self jsCode includes: \'instanceMethod\'.\r\tPjClassForTranspilationTest selectorsDo: [: selector |\r\t\tself deny: self jsCode includes: selector]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1271' ],		#self : OmReference [ '1272' ],		#time : DateAndTime [ '2024-03-03T08:20:46.098-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassExtensionTranspilationTest,				#isMetaSide : false			},			#name : #testJavascriptInitialize,			#protocol : #tests,			#sourceCode : 'testJavascriptInitialize\r\tself assertClassMethod: #javascriptInitialize equals: \'(){return this}\'.\r\tself assert: self jsCode includes: PjClassForTranspilationTest name, \'._javascriptInitialize()\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1272' ],		#self : OmReference [ '1273' ],		#time : DateAndTime [ '2024-03-03T08:20:46.098-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCoreTranspilationTest,				#isMetaSide : false			},			#name : #classToTranspile,			#protocol : #accessing,			#sourceCode : 'classToTranspile\r\t^ self transpilerClass coreClass',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1273' ],		#self : OmReference [ '1274' ],		#time : DateAndTime [ '2024-03-03T08:20:46.098-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCoreTranspilationTest,				#isMetaSide : false			},			#name : #testClassSideMethods,			#protocol : #tests,			#sourceCode : 'testClassSideMethods\r\r\tself\r\t\tassertClassMethod: #require:\r\t\tequals: \'(moduleName){return require(moduleName);}\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1274' ],		#self : OmReference [ '1275' ],		#time : DateAndTime [ '2024-03-03T08:20:46.098-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCoreTranspilationTest,				#isMetaSide : false			},			#name : #testInstanceSideMethods,			#protocol : #tests,			#sourceCode : 'testInstanceSideMethods\r\tself assert: self classToTranspile methodDict size equals: 0',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1275' ],		#self : OmReference [ '1276' ],		#time : DateAndTime [ '2024-03-03T08:20:46.098-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCoreTranspilationTest,				#isMetaSide : false			},			#name : #testOptimizedJsAt,			#protocol : #tests,			#sourceCode : 'testOptimizedJsAt\r\t| method asNil |\r\tasNil := PjStringGenerator nilTestFunctionName.\r\tmethod := self classMethod: #makePharoJsSelector:.\r\tself assert: (method indexOfSubCollection: asNil,\'(aSelector[0])._61_(\') > 0.\r\tself assert: (method indexOfSubCollection: asNil ,\'(this.selectorCache.hasOwnProperty(aSelector))._ifTrue_(\') > 0.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1276' ],		#self : OmReference [ '1277' ],		#time : DateAndTime [ '2024-03-03T08:20:46.098-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLiteralGeneratorTranspilationTest,				#isMetaSide : false			},			#name : #classToTranspile,			#protocol : #accessing,			#sourceCode : 'classToTranspile\r\t^ PjClassForDefinitionTest',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1277' ],		#self : OmReference [ '1278' ],		#time : DateAndTime [ '2024-03-03T08:20:46.099-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLiteralGeneratorTranspilationTest,				#isMetaSide : false			},			#name : #testLiteralGeneratrion,			#protocol : #tests,			#sourceCode : 'testLiteralGeneratrion\r\tself assert: self jsCode includes: \'_literal(){return 7}\'.\r\tself assert: self jsCode includes: \'static _literal(){return "abcdef"}\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1278' ],		#self : OmReference [ '1279' ],		#time : DateAndTime [ '2024-03-03T08:20:46.099-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPrefixForTranspilationTest,				#isMetaSide : false			},			#name : #classToTranspile,			#protocol : #accessing,			#sourceCode : 'classToTranspile\r\t^ PjClassForDefinitionTest',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1279' ],		#self : OmReference [ '1280' ],		#time : DateAndTime [ '2024-03-03T08:20:46.099-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPrefixForTranspilationTest,				#isMetaSide : false			},			#name : #selectorsPrefix,			#protocol : #accessing,			#sourceCode : 'selectorsPrefix\r\t^ \'altPrefix_\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1280' ],		#self : OmReference [ '1281' ],		#time : DateAndTime [ '2024-03-03T08:20:46.099-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPrefixForTranspilationTest,				#isMetaSide : false			},			#name : #testPrefix,			#protocol : #tests,			#sourceCode : 'testPrefix\r\t| pjPrefix |\r\tpjPrefix := self selectorsPrefix.\r\tself assert: self jsCode includes: pjPrefix,\'literal(){\'.\r\tself assert: self jsCode includes: \'static \',pjPrefix,\'literal(){\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1281' ],		#self : OmReference [ '1282' ],		#time : DateAndTime [ '2024-03-03T08:20:46.099-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReplacedClassTranspilationTest,				#isMetaSide : false			},			#name : #classToTranspile,			#protocol : #accessing,			#sourceCode : 'classToTranspile\r\t^ PjReplacedClassForTest',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1282' ],		#self : OmReference [ '1283' ],		#time : DateAndTime [ '2024-03-03T08:20:46.099-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReplacedClassTranspilationTest,				#isMetaSide : false			},			#name : #testClassReplacement,			#protocol : #tests,			#sourceCode : 'testClassReplacement\r\tself deny: self jsCode includes: \'function \', className, \'(){}\'.\r"We use defineProperty. See PjTranspiler>>#writeMethodsOf:named:with:"\r\tself assert: self jsCode includes: \'_add_and_(op1,op2){return op2}\'.\r\tself deny: self jsCode includes: \'notInPlaceholderClass\'.\r\tself assert: self jsCode includes: \'_64_(op)\'.\r\tself assert: self jsCode includes: \'_m_($in)\'.\r\tself assert: self jsCode includes: \'_m1()\'.\r\tself assert: self jsCode includes: \'_m2()\'.\r\tself assert: self jsCode includes: \'static _c1()\'.\r\tself assert: self jsCode includes: \'static _c2()\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1283' ],		#self : OmReference [ '1284' ],		#time : DateAndTime [ '2024-03-03T08:20:46.1-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSharedPoolDefinitionTranspilationTest,				#isMetaSide : false			},			#name : #classToTranspile,			#protocol : #accessing,			#sourceCode : 'classToTranspile\r\t^ PjSharedPoolForTest',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1284' ],		#self : OmReference [ '1285' ],		#time : DateAndTime [ '2024-03-03T08:20:46.1-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSharedPoolDefinitionTranspilationTest,				#isMetaSide : false			},			#name : #expectedClassName,			#protocol : #accessing,			#sourceCode : 'expectedClassName\r\t^ self classToTranspile name',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1285' ],		#self : OmReference [ '1286' ],		#time : DateAndTime [ '2024-03-03T08:20:46.1-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSharedPoolDefinitionTranspilationTest,				#isMetaSide : false			},			#name : #expectedFullClassDefinition,			#protocol : #tests,			#sourceCode : 'expectedFullClassDefinition\r\r\t| superclassName |\r\tsuperclassName := self classToTranspile superclass\r\t\t                  nameToUseForJsConversion.\r\t^ \'Smalltalk.installClass(class {1} extends {2}\\{\rstatic _initialize()\\{{1}.cp$.A="sharedA";{1}.cp$.B="sharedB";{1}.cp$.C="sharedC";return this\\}\rstatic cp$=\\{"C":null,"X":null,"A":null,"B":null\\}\\},\\{\\},\\{\\});{1}._initialize();\r\' format: { \r\t\t\t  className.\r\t\t\t  superclassName }',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1286' ],		#self : OmReference [ '1287' ],		#time : DateAndTime [ '2024-03-03T08:20:46.1-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSharedPoolDefinitionTranspilationTest,				#isMetaSide : false			},			#name : #testClassVariables,			#protocol : #tests,			#sourceCode : 'testClassVariables\r\r\t\r\tself\r\t\tassert: self jsCode\r\t\tincludes: self expectedFullClassDefinition ',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1287' ],		#self : OmReference [ '1288' ],		#time : DateAndTime [ '2024-03-03T08:20:46.1-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSingleClassTranspilationTest,				#isMetaSide : false			},			#name : #classToTranspile,			#protocol : #accessing,			#sourceCode : 'classToTranspile\r\t^ PjClassForTranspilationTest',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1288' ],		#self : OmReference [ '1289' ],		#time : DateAndTime [ '2024-03-03T08:20:46.1-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSingleClassTranspilationTest,				#isMetaSide : false			},			#name : #expectedClassName,			#protocol : #accessing,			#sourceCode : 'expectedClassName\r\t^classToTranspile nameToUseForJsConversion',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1289' ],		#self : OmReference [ '1290' ],		#time : DateAndTime [ '2024-03-03T08:20:46.1-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSingleClassTranspilationTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\ttranspiler poolFor: self classToTranspile.\r\ttranspiler pharoJsSelectorPrefix: self selectorsPrefix.\r\tself jsCode: (self convertClass: self classToTranspile).\r\tclassName := self expectedClassName',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1290' ],		#self : OmReference [ '1291' ],		#time : DateAndTime [ '2024-03-03T08:20:46.101-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSingleClassTranspilationTest,				#isMetaSide : false			},			#name : #testBlockReferencingSelf,			#protocol : #tests,			#sourceCode : 'testBlockReferencingSelf\r\tself assertInstanceMethod: #blocksReferencingSelf equals: \'(){var \',PjStringGenerator selfName,\'=this;(()=>{return \',PjStringGenerator selfName,\'});return this}\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1291' ],		#self : OmReference [ '1292' ],		#time : DateAndTime [ '2024-03-03T08:20:46.101-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSingleClassTranspilationTest,				#isMetaSide : false			},			#name : #testCascade,			#protocol : #tests,			#sourceCode : 'testCascade\r\tself assertInstanceMethod: #cascadeSelf equals: \'(){return (this._m1(),this._m_(4),this._yourself())}\'.\r\tself assertInstanceMethod: #cascadeSuper equals: \'(){return (super._isNil(),super._yourself())}\'.\r\tself assertInstanceMethod: #cascade: equals: \'(x){var $1;return ($1=$asNil$($asNil$(x)._foo()),$1._bar(),$1._yourself())}\'.\r\tself assertInstanceMethod: #cascadeNested equals: \'(){return (this._m1(),this._m_((this._m1(),this._m2())),this._yourself())}\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1292' ],		#self : OmReference [ '1293' ],		#time : DateAndTime [ '2024-03-03T08:20:46.101-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSingleClassTranspilationTest,				#isMetaSide : false			},			#name : #testClassAndPoolVariableDefinition,			#protocol : #tests,			#sourceCode : 'testClassAndPoolVariableDefinition\r\r\t| sharedPoolVarsHolder superVarsHolder classVarHolder |\r\tsharedPoolVarsHolder := PjSharedPoolForTest nameToUseForJsConversion\r\t                        , \'.cp$\'.\r\tsuperVarsHolder := PjSuperClassForTranspilationTest\r\t\t                   nameToUseForJsConversion , \'.cp$\'.\r\tclassVarHolder := self expectedClassName, \'.cp$\'. \r\tself assert: self jsCode includes: \'"A":null\'.\r\tself assert: self jsCode includes: classVarHolder , \'.A\'.\r\tself deny: self jsCode includes: sharedPoolVarsHolder , \'.A\'.\r\tself assert: self jsCode includes: \'"X":null\'.\r\tself assert: self jsCode includes: classVarHolder , \'.X\'.\r\tself deny: self jsCode includes: sharedPoolVarsHolder , \'.X\'.\r\tself deny: self jsCode includes: \'"B":null\'.\r\tself assert: self jsCode includes: superVarsHolder , \'.B\'.\r\tself deny: self jsCode includes: sharedPoolVarsHolder , \'.B\'.\r\tself deny: self jsCode includes: \'"C":null\'.\r\tself assert: self jsCode includes: sharedPoolVarsHolder , \'.C\'.\r',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1293' ],		#self : OmReference [ '1294' ],		#time : DateAndTime [ '2024-03-03T08:20:46.101-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSingleClassTranspilationTest,				#isMetaSide : false			},			#name : #testClassSideMethods,			#protocol : #tests,			#sourceCode : 'testClassSideMethods\r\t| superclassName sharedPoolName |\r\tsharedPoolName := transpiler poolReference: PjSharedPoolForTest for: self classToTranspile.\r\tsuperclassName := transpiler poolReference: PjSuperClassForTranspilationTest for: self classToTranspile.\r\tself assertClassMethod: #c1 equals: \'(){return this}\'.\r\tself assertClassMethod: #c2 equals: \'(){return this}\'.\r\tself assertClassMethod: #initialize equals: \'(){\', className, \'.cp$.A="testA";return this}\'.\r\tself assertClassMethod: #m1 equals: \'(){\',\r\t\tclassName, \'.cp$.X=\', className, \'.cp$.$prototype;\',\r\t\tsuperclassName,\'.S=\',superclassName,\'.S;\',\r\t\tsharedPoolName,\'.C=\',sharedPoolName,\'.C;\',\r\t\t\'return this}\'.\r\tself assert: (self jsCode endsWith: className, \'._initialize();\').\r\tself assertClassMethod: #javascriptName equals: nil.\r\tself assertClassMethod: #methodWithJsGenerator equals: \'(){\', (self classToTranspile classMethod_jsGenerator: transpiler),\'}\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1294' ],		#self : OmReference [ '1295' ],		#time : DateAndTime [ '2024-03-03T08:20:46.101-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSingleClassTranspilationTest,				#isMetaSide : false			},			#name : #testCompose,			#protocol : #tests,			#sourceCode : 'testCompose\r\tself assertInstanceMethod: #composedCalls equals: \'(){return $asNil$($asNil$(this._m1())._m_(4))._m2()}\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1295' ],		#self : OmReference [ '1296' ],		#time : DateAndTime [ '2024-03-03T08:20:46.102-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSingleClassTranspilationTest,				#isMetaSide : false			},			#name : #testInstanceSideMethods,			#protocol : #tests,			#sourceCode : 'testInstanceSideMethods\r\t| superclassName sharedPoolName |\r\tsharedPoolName := transpiler poolReference: PjSharedPoolForTest for: self classToTranspile.\r\tsuperclassName := transpiler poolReference: PjSuperClassForTranspilationTest for: self classToTranspile.\r\tself assertInstanceMethod: #m1 equals: \'(){\',\r\t\tclassName, \'.cp$.X=\', className, \'.cp$.$prototype;\',\r\t\tsuperclassName,\'.S=\',superclassName,\'.S;\',\r\t\tsharedPoolName,\'.C=\',sharedPoolName,\'.C;\',\r\t\t\'return this}\'.\r\tself assertInstanceMethod: #m2 equals: \'(){return this}\'.\r\tself assertInstanceMethod: #@ equals: \'(op){return this}\'.\r\tself assertInstanceMethod: #add:and: equals: \'(op1,op2){return op2}\'.\r\tself deny: self jsCode includes: \'methodToSkip\'.\r\tself deny: self jsCode includes: \'ThisShouldBeSkipped\'.\r\tself assertInstanceMethod: #m: equals: \'($in){console.log("abc")}\'.\r\tself assertInstanceMethod: #instanceMethodWithJsGenerator equals:  \'(){\', (self classToTranspile instanceMethod_jsGenerator: transpiler), \'}\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1296' ],		#self : OmReference [ '1297' ],		#time : DateAndTime [ '2024-03-03T08:20:46.102-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSingleClassTranspilationTest,				#isMetaSide : false			},			#name : #testMethodAlias,			#protocol : #tests,			#sourceCode : 'testMethodAlias\r\tself assert: self jsCode includes: \'"_alias":["myAlias"]\'.\r\tself assert: self jsCode includes: \'"_alias2":["andAlias2","myAlias2"]\'.\r',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1297' ],		#self : OmReference [ '1298' ],		#time : DateAndTime [ '2024-03-03T08:20:46.102-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSingleClassTranspilationTest,				#isMetaSide : false			},			#name : #testNative,			#protocol : #tests,			#sourceCode : 'testNative\r\t| method |\r\tmethod := self instanceMethod: #native.\r\tself assert: method includes: \'x=x[4]\'.\r\tself assert: method includes: \'x=x.foo\'.\r\tself assert: method includes: \'x=x["a.b"]\'.\r\tself assert: method includes: \'x[4]=42\'.\r\tself assert: method includes: \'x.m(17)\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1298' ],		#self : OmReference [ '1299' ],		#time : DateAndTime [ '2024-03-03T08:20:46.102-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSingleClassTranspilationTest,				#isMetaSide : false			},			#name : #testToDoExpr,			#protocol : #tests,			#sourceCode : 'testToDoExpr\r\tself assertInstanceMethod: #toDoWithObjectAsParameter equals: \'(){(1)._to_do_(10,Object);return this}\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1299' ],		#self : OmReference [ '1300' ],		#time : DateAndTime [ '2024-03-03T08:20:46.102-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspilationClassCompilationTest,				#isMetaSide : false			},			#name : #'assert:appearsBefore:',			#protocol : #checking,			#sourceCode : 'assert: codeString1 appearsBefore: codeString2\r\tself assert: (self jsCode includes: codeString1 before: codeString2 )',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1300' ],		#self : OmReference [ '1301' ],		#time : DateAndTime [ '2024-03-03T08:20:46.102-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspilationClassCompilationTest,				#isMetaSide : false			},			#name : #'assert:includes:then:',			#protocol : #checking,			#sourceCode : 'assert: aString includes: mName then: mString\r\t| pName pString pEnd |\r\tpName := aString findString: mName startingAt: 1.\r\tself assert: pName>0.\r\tpString := aString findString: mString startingAt: pName.\r\tself assert: pString > pName.\r\tpEnd := aString findString: \'}\' startingAt: pName.\r\tself assert: pString < pEnd.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1301' ],		#self : OmReference [ '1302' ],		#time : DateAndTime [ '2024-03-03T08:20:46.103-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspilationClassCompilationTest,				#isMetaSide : false			},			#name : #'convertAllClasses:',			#protocol : #checking,			#sourceCode : 'convertAllClasses: classes\r\t^transpiler convertAllClasses: classes;jsCode',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1302' ],		#self : OmReference [ '1303' ],		#time : DateAndTime [ '2024-03-03T08:20:46.103-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspilationClassCompilationTest,				#isMetaSide : false			},			#name : #'generateJsCodeForClasses:',			#protocol : #checking,			#sourceCode : 'generateJsCodeForClasses: classes\r\tself classToTranspile: classes last.\r\tself jsCode: (self convertAllClasses: classes)',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1303' ],		#self : OmReference [ '1304' ],		#time : DateAndTime [ '2024-03-03T08:20:46.103-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspilationClassCompilationTest,				#isMetaSide : false			},			#name : #jsCode,			#protocol : #accessing,			#sourceCode : 'jsCode\r\t^ jsCode',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1304' ],		#self : OmReference [ '1305' ],		#time : DateAndTime [ '2024-03-03T08:20:46.103-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspilationClassCompilationTest,				#isMetaSide : false			},			#name : #'jsCode:',			#protocol : #accessing,			#sourceCode : 'jsCode: anObject\r\tjsCode := anObject trim',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1305' ],		#self : OmReference [ '1306' ],		#time : DateAndTime [ '2024-03-03T08:20:46.103-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTranspilationTest class',				#isMetaSide : true			},			#name : #isAbstract,			#protocol : #testing,			#sourceCode : 'isAbstract\r\r\t^ self = PjTranspilationTest',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1306' ],		#self : OmReference [ '1307' ],		#time : DateAndTime [ '2024-03-03T08:20:46.103-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspilationTest,				#isMetaSide : false			},			#name : #'assertStBlock:convertsTo:',			#protocol : #testing,			#sourceCode : 'assertStBlock: aBlock convertsTo: expectedJsString\r\tself assert: (transpiler convertToJs: aBlock) equals: expectedJsString',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1307' ],		#self : OmReference [ '1308' ],		#time : DateAndTime [ '2024-03-03T08:20:46.104-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspilationTest,				#isMetaSide : false			},			#name : #classToTranspile,			#protocol : #accessing,			#sourceCode : 'classToTranspile\r\t^ classToTranspile',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1308' ],		#self : OmReference [ '1309' ],		#time : DateAndTime [ '2024-03-03T08:20:46.104-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspilationTest,				#isMetaSide : false			},			#name : #'classToTranspile:',			#protocol : #accessing,			#sourceCode : 'classToTranspile: aClass\r\tclassToTranspile := aClass',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1309' ],		#self : OmReference [ '1310' ],		#time : DateAndTime [ '2024-03-03T08:20:46.104-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspilationTest,				#isMetaSide : false			},			#name : #classVariablesHolderName,			#protocol : #accessing,			#sourceCode : 'classVariablesHolderName\r\t^ PjStringGenerator classVariablesHolderName',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1310' ],		#self : OmReference [ '1311' ],		#time : DateAndTime [ '2024-03-03T08:20:46.104-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspilationTest,				#isMetaSide : false			},			#name : #'convertClass:',			#protocol : #converting,			#sourceCode : 'convertClass: aClass\r\tself classToTranspile: aClass.\r\t^ transpiler convertToJs: aClass',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1311' ],		#self : OmReference [ '1312' ],		#time : DateAndTime [ '2024-03-03T08:20:46.107-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspilationTest,				#isMetaSide : false			},			#name : #lineEnding,			#protocol : #accessing,			#sourceCode : 'lineEnding\r\tself explicitRequirement',			#stamp : '',			#package : #PharoJs-Base-Transpiler		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspilationTest,				#isMetaSide : false			},			#name : #lineEnding,			#protocol : #accessing,			#sourceCode : 'lineEnding\r\t^self transpilerClass lineEnding',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1312' ],		#self : OmReference [ '1313' ],		#time : DateAndTime [ '2024-03-03T08:20:46.107-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspilationTest,				#isMetaSide : false			},			#name : #'method:',			#protocol : #accessing,			#sourceCode : 'method: aString \r\tself shouldBeImplemented.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1313' ],		#self : OmReference [ '1314' ],		#time : DateAndTime [ '2024-03-03T08:20:46.108-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspilationTest,				#isMetaSide : false			},			#name : #nilInJavascript,			#protocol : #accessing,			#sourceCode : 'nilInJavascript\r\t^PjStringGenerator nilInJavascript',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1314' ],		#self : OmReference [ '1315' ],		#time : DateAndTime [ '2024-03-03T08:20:46.108-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspilationTest,				#isMetaSide : false			},			#name : #nilTestFunctionName,			#protocol : #accessing,			#sourceCode : 'nilTestFunctionName\r\t^PjStringGenerator nilTestFunctionName',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1315' ],		#self : OmReference [ '1316' ],		#time : DateAndTime [ '2024-03-03T08:20:46.108-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspilationTest,				#isMetaSide : false			},			#name : #pharoJsSelectorPrefix,			#protocol : #accessing,			#sourceCode : 'pharoJsSelectorPrefix\r\r\t^ transpiler pharoJsSelectorPrefix',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1316' ],		#self : OmReference [ '1317' ],		#time : DateAndTime [ '2024-03-03T08:20:46.108-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspilationTest,				#isMetaSide : false			},			#name : #selectorsPrefix,			#protocol : #accessing,			#sourceCode : 'selectorsPrefix\r\t^  \'_\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1317' ],		#self : OmReference [ '1318' ],		#time : DateAndTime [ '2024-03-03T08:20:46.108-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspilationTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\ttranspiler := self transpilerClass new.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1318' ],		#self : OmReference [ '1319' ],		#time : DateAndTime [ '2024-03-03T08:20:46.108-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspilationTest,				#isMetaSide : false			},			#name : #transpilerClass,			#protocol : #accessing,			#sourceCode : 'transpilerClass\r\t^PjTranspiler',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1319' ],		#self : OmReference [ '1320' ],		#time : DateAndTime [ '2024-03-03T08:20:46.109-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNullMessageConversionForTest,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #optimization,			#sourceCode : 'convertReceiver: anObject args: aCollection\r\tanObject value < order ifTrue: [ ^ order ].\r\t^ nil',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1320' ],		#self : OmReference [ '1321' ],		#time : DateAndTime [ '2024-03-03T08:20:46.109-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNullMessageConversionForTest,				#isMetaSide : false			},			#name : #'order:selector:',			#protocol : #initialization,			#sourceCode : 'order: aNumber selector: aString \r\tself order: aNumber.\r\tselector := aString',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1321' ],		#self : OmReference [ '1322' ],		#time : DateAndTime [ '2024-03-03T08:20:46.109-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNullMessageConversionForTest,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^ selector',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1322' ],		#self : OmReference [ '1323' ],		#time : DateAndTime [ '2024-03-03T08:20:46.109-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNullMessageConversionForTest,				#isMetaSide : false			},			#name : #selectors,			#protocol : #accessing,			#sourceCode : 'selectors\r\t^ {selector}',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1323' ],		#self : OmReference [ '1324' ],		#time : DateAndTime [ '2024-03-03T08:20:46.109-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBlockTranspilationTest class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'class initialization',			#sourceCode : 'initialize\r\tSomeClassVar := \'SomeClassVariable\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1324' ],		#self : OmReference [ '1325' ],		#time : DateAndTime [ '2024-03-03T08:20:46.109-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationTest,				#isMetaSide : false			},			#name : #'closedBlock:',			#protocol : #private,			#sourceCode : 'closedBlock: x\r\t| y |\r\ty := 23.\r\t^  [:v| |w| {v.w.x.y.instVar.123}] asClosedBlock',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1325' ],		#self : OmReference [ '1326' ],		#time : DateAndTime [ '2024-03-03T08:20:46.11-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationTest,				#isMetaSide : false			},			#name : #'openBlock:',			#protocol : #private,			#sourceCode : 'openBlock: x\r\t| y |\r\ty := 23.\r\t^  [:v| |w| {v.w.x.y.instVar.123}]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1326' ],		#self : OmReference [ '1327' ],		#time : DateAndTime [ '2024-03-03T08:20:46.11-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationTest,				#isMetaSide : false			},			#name : #testBlock1Arg,			#protocol : #tests,			#sourceCode : 'testBlock1Arg\r\tself \r\t\tassertStBlock: [ :x | 123]\r\t\tconvertsTo: \'((x)=>{return 123})\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1327' ],		#self : OmReference [ '1328' ],		#time : DateAndTime [ '2024-03-03T08:20:46.11-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationTest,				#isMetaSide : false			},			#name : #testBlock1ArgWithReturn,			#protocol : #tests,			#sourceCode : 'testBlock1ArgWithReturn\r\r\tself\r\t\tassertStBlock: [ :x | ^ 123 ]\r\t\tconvertsTo: \'((x)=>{throw $_err_$=123})\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1328' ],		#self : OmReference [ '1329' ],		#time : DateAndTime [ '2024-03-03T08:20:46.11-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationTest,				#isMetaSide : false			},			#name : #testBlock2Args,			#protocol : #tests,			#sourceCode : 'testBlock2Args\r\r\tself\r\t\tassertStBlock: [ :x :y | \r\t\t\t{ \r\t\t\t\tx.\r\t\t\t\ty } ]\r\t\tconvertsTo: \'((x,y)=>{return [x,y]})\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1329' ],		#self : OmReference [ '1330' ],		#time : DateAndTime [ '2024-03-03T08:20:46.11-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationTest,				#isMetaSide : false			},			#name : #testBlock2ArgsWithReturn,			#protocol : #tests,			#sourceCode : 'testBlock2ArgsWithReturn\r\r\tself\r\t\tassertStBlock: [ :x :y | \r\t\t\t^ { \r\t\t\t\t  x.\r\t\t\t\t  y } ]\r\t\tconvertsTo: \'((x,y)=>{throw $_err_$=[x,y]})\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1330' ],		#self : OmReference [ '1331' ],		#time : DateAndTime [ '2024-03-03T08:20:46.11-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationTest,				#isMetaSide : false			},			#name : #testBlockEmpty,			#protocol : #tests,			#sourceCode : 'testBlockEmpty\r\tself \r\t\tassertStBlock: []\r\t\tconvertsTo: \'(()=>{return \', self nilInJavascript, \'})\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1331' ],		#self : OmReference [ '1332' ],		#time : DateAndTime [ '2024-03-03T08:20:46.111-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationTest,				#isMetaSide : false			},			#name : #testBlockWithExternalVariables,			#protocol : #tests,			#sourceCode : 'testBlockWithExternalVariables\r\r\t| x |\r\tself\r\t\tassertStBlock: [ :y | \r\t\t\t| z |\r\t\t\tz := y.\r\t\t\t{ \r\t\t\t\ty.\r\t\t\t\tz.\r\t\t\t\t123 } ]\r\t\tconvertsTo: \'((y)=>{var z;z=y;return [y,z,123]})\'.\r\tself\r\t\tassertStBlock: [ document ]\r\t\tconvertsTo: \'(()=>{return document})\'.\r\tx := nil.\r\tself\r\t\tassertStBlock: [ x ] asClosedBlock\r\t\tconvertsTo: \'((x)=>{return ()=>{return x}})(null)\'.\r\tx := \'string\'.\r\tself\r\t\tassertStBlock: [ x ] asClosedBlock\r\t\tconvertsTo: \'((x)=>{return ()=>{return x}})("string")\'.\r\tx := #( 1 #( 2 3 ) 4 ).\r\tself\r\t\tassertStBlock: [ x ] asClosedBlock\r\t\tconvertsTo:\r\t\t\'((x)=>{return ()=>{return x}})([1,[2,3],4])\'.\r\tx := { \r\t\t     (#x -> 1).\r\t\t     (#y -> 2) } asDictionary.\r\tself\r\t\tassertStBlock: [ x ] asClosedBlock\r\t\tconvertsTo:\r\t\t\'((x)=>{return ()=>{return x}})({"x":1,"y":2})\'.\r\tx := 1337.\r\tself\r\t\tassertStBlock: [ x ] asClosedBlock\r\t\tconvertsTo: \'((x)=>{return ()=>{return x}})(1337)\'.\r\tself\r\t\tassertStBlock: [ \r\t\t\t{ \r\t\t\t\tx.\r\t\t\t\tself js_this } ] asClosedBlock\r\t\tconvertsTo:\r\t\t\'((x)=>{return ()=>{return [x,this]}})(1337)\'.\r\tself\r\t\tshould: [ transpiler convertToJs: [ Smalltalk ] ]\r\t\traise: PjJavascriptTranspilationError.\r\tself\r\t\tshould: [ transpiler convertToJs: [ x ] ]\r\t\traise: PjJavascriptTranspilationError.\r\tself\r\t\tshould: [ transpiler convertToJs: [ testSelector ] ]\r\t\traise: PjJavascriptTranspilationError.\r\tself\r\t\tshould: [ transpiler convertToJs: [ SomeClassVar ] ]\r\t\traise: PjJavascriptTranspilationError.\r\tself\r\t\tshould: [ \r\t\ttranspiler convertToJs: [ self testBlockWithExternalVariables ] ]\r\t\traise: PjJavascriptTranspilationError.\r\tself\r\t\tshould: [ \r\t\ttranspiler convertToJs: [ super testBlockWithExternalVariables ] ]\r\t\traise: PjJavascriptTranspilationError.\r\t{ \r\t\tObject new.\r\t\t{ (1 -> 2) } asDictionary.\r\t\t{ (#x -> Object new) } asDictionary.\r\t\t{ Object new } } do: [ :y | \r\t\tself\r\t\t\tshould: [ transpiler convertToJs: [ y ] ]\r\t\t\traise: PjJavascriptTranspilationError ].\r\tself\r\t\tassertStBlock: ([ :x1 | [ x1 ] ] value: 42) asClosedBlock\r\t\tconvertsTo: \'((x1)=>{return ()=>{return x1}})(42)\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1332' ],		#self : OmReference [ '1333' ],		#time : DateAndTime [ '2024-03-03T08:20:46.111-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationTest,				#isMetaSide : false			},			#name : #testBlockWithNestedScopes,			#protocol : #tests,			#sourceCode : 'testBlockWithNestedScopes\r\r\t| openBlock closedBlock x a |\r\tx := 1337.\r\tinstVar := 1066.\r\ta := 42.\r\topenBlock := [ :y | \r\t             [ :v | \r\t             | w |\r\t             { \r\t\t             a.\r\t\t             v.\r\t\t             w.\r\t\t             x.\r\t\t             y.\r\t\t             instVar.\r\t\t             123 } ] ] value: 91.\r\tclosedBlock := [ :q | \r\t               [ :v | \r\t               | w |\r\t               { \r\t\t               a.\r\t\t               v.\r\t\t               w.\r\t\t               x.\r\t\t               q.\r\t\t               instVar.\r\t\t               321 } ] asClosedBlock ] value: 73.\r\ta := 107.\r\tinstVar := 1492.\r\tself\r\t\tassertStBlock: [ \r\t\t\t| z |\r\t\t\tz := self js_this.\r\t\t\t[ \r\t\t\t| w |\r\t\t\tw := z.\r\t\t\t{ \r\t\t\t\tz.\r\t\t\t\tw.\r\t\t\t\tself js_this.\r\t\t\t\t123 } ] ]\r\t\tconvertsTo:\r\t\t\'(()=>{var z;z=this;return ()=>{var w;w=z;return [z,w,this,123]}})\'.\r\tself\r\t\tassertStBlock: [ \r\t\t\t| z |\r\t\t\tz := self js_this.\r\t\t\t[ :v | \r\t\t\t| w |\r\t\t\t{ \r\t\t\t\tv.\r\t\t\t\tw.\r\t\t\t\tx.\r\t\t\t\tz.\r\t\t\t\tinstVar.\r\t\t\t\t123 } ] ] asClosedBlock\r\t\tconvertsTo:\r\t\t\'((x,instVar)=>{return ()=>{var z;z=this;return (v)=>{var w;return [v,w,x,z,instVar,123]}}})(1337,1492)\'.\r\tself\r\t\tassertStBlock: closedBlock\r\t\tconvertsTo:\r\t\t\'((a,x,q,instVar)=>{return (v)=>{var w;return [a,v,w,x,q,instVar,321]}})(42,1337,73,1066)\'.\r\tself\r\t\tassertStBlock: openBlock asClosedBlock\r\t\tconvertsTo:\r\t\t\'((a,x,y,instVar)=>{return (v)=>{var w;return [a,v,w,x,y,instVar,123]}})(107,1337,91,1492)\'.\r\tself\r\t\tassertStBlock: (self closedBlock: 17)\r\t\tconvertsTo:\r\t\t\'((x,y,instVar)=>{return (v)=>{var w;return [v,w,x,y,instVar,123]}})(17,23,1492)\'.\r\tself\r\t\tassertStBlock: (self openBlock: 42) asClosedBlock\r\t\tconvertsTo:\r\t\t\'((x,y,instVar)=>{return (v)=>{var w;return [v,w,x,y,instVar,123]}})(42,23,1492)\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1333' ],		#self : OmReference [ '1334' ],		#time : DateAndTime [ '2024-03-03T08:20:46.111-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationTest,				#isMetaSide : false			},			#name : #testBlockWithNestedScopesToFix,			#protocol : #tests,			#sourceCode : 'testBlockWithNestedScopesToFix\r\t<expectedFailure>\r\tself \r\t\tassertStBlock: ([ :y| [ |w| w:=17. [ { w.y.2} ] ] ] value: 4) value asClosedBlock\r\t\tconvertsTo: \'(function(w,y){return function(){return [w,y,2]}})(17,4)\'.\r\tself \r\t\tassertStBlock: ([ :y| [ |w| w:=17. [ { w.y.2} ] ] ] value: 4) value\r\t\tconvertsTo: \'(function(w,y){return function(){return [w,y,2]}})(17,4)\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1334' ],		#self : OmReference [ '1335' ],		#time : DateAndTime [ '2024-03-03T08:20:46.111-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationTest,				#isMetaSide : false			},			#name : #testBlockWithReferencedScopes,			#protocol : #tests,			#sourceCode : 'testBlockWithReferencedScopes\r\r\t| x y superClosed |\r\ty := 17.\r\tsuperClosed := [ y ] asClosedBlock.\r\tx := 1337.\r\tself\r\t\tassertStBlock: [ \r\t\t\t| w |\r\t\t\tw := superClosed value.\r\t\t\t{ \r\t\t\t\tw.\r\t\t\t\tx.\r\t\t\t\t123 } ] asClosedBlock\r\t\tconvertsTo:\r\t\t\'((superClosed,x)=>{return ()=>{var w;w=$asNil$(superClosed)._value();return [w,x,123]}})(((y)=>{return ()=>{return y}})(17),1337)\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1335' ],		#self : OmReference [ '1336' ],		#time : DateAndTime [ '2024-03-03T08:20:46.111-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBlockTranspilationTest,				#isMetaSide : false			},			#name : #testValuedBlock,			#protocol : #tests,			#sourceCode : 'testValuedBlock\r\r\tself\r\t\tassertStBlock: [ 23 ] asValuedBlock\r\t\tconvertsTo: \'(()=>{return 23})()\'.\r\tself\r\t\tassertStBlock: ([ :a :b |  ] asValuedBlockWithArgs: { \r\t\t\t\t\t 23.\r\t\t\t\t\t self class })\r\t\tconvertsTo:\r\t\t\'((a,b)=>{return null})(23,\' , self className , \')\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1336' ],		#self : OmReference [ '1337' ],		#time : DateAndTime [ '2024-03-03T08:20:46.111-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassFactoryTestResource,				#isMetaSide : false			},			#name : #classFactory,			#protocol : #running,			#sourceCode : 'classFactory\r\t^classFactory',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1337' ],		#self : OmReference [ '1338' ],		#time : DateAndTime [ '2024-03-03T08:20:46.111-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassFactoryTestResource,				#isMetaSide : false			},			#name : #defaultClass,			#protocol : #running,			#sourceCode : 'defaultClass\r\t^defaultClass',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1338' ],		#self : OmReference [ '1339' ],		#time : DateAndTime [ '2024-03-03T08:20:46.112-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassFactoryTestResource,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\tauthorInitialName := Author uniqueInstance fullNamePerSe.\r\tAuthor uniqueInstance fullName: \'PharoJS\'.\r\tclassFactory := ClassFactoryForTestCase new.\r\tdefaultClass := classFactory silentlyNewClassInCategory: classFactory packageName.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1339' ],		#self : OmReference [ '1340' ],		#time : DateAndTime [ '2024-03-03T08:20:46.112-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassFactoryTestResource,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #running,			#sourceCode : 'tearDown\r\tsuper tearDown.\r\tclassFactory cleanUp.\r\tAuthor uniqueInstance fullName: authorInitialName.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1340' ],		#self : OmReference [ '1341' ],		#time : DateAndTime [ '2024-03-03T08:20:46.112-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassAForCircularTranspilationTest class',				#isMetaSide : true			},			#name : #javascriptName,			#protocol : #'pharoJs support',			#sourceCode : 'javascriptName\r\t^#A',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1341' ],		#self : OmReference [ '1342' ],		#time : DateAndTime [ '2024-03-03T08:20:46.112-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassBForCircularTranspilationTest class',				#isMetaSide : true			},			#name : #javascriptName,			#protocol : #any,			#sourceCode : 'javascriptName\r\t^super javascriptName',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1342' ],		#self : OmReference [ '1343' ],		#time : DateAndTime [ '2024-03-03T08:20:46.112-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassBForCircularTranspilationTest class',				#isMetaSide : true			},			#name : #other,			#protocol : #any,			#sourceCode : 'other\r\t^ Object isNil',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1343' ],		#self : OmReference [ '1344' ],		#time : DateAndTime [ '2024-03-03T08:20:46.112-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassAForPackageTranspilationTest class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #any,			#sourceCode : 'initialize',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1344' ],		#self : OmReference [ '1345' ],		#time : DateAndTime [ '2024-03-03T08:20:46.112-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassBForPackageTranspilationTest class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #any,			#sourceCode : 'initialize',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1345' ],		#self : OmReference [ '1346' ],		#time : DateAndTime [ '2024-03-03T08:20:46.113-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassAForReferenceTranspilationTest class',				#isMetaSide : true			},			#name : #javascriptName,			#protocol : #any,			#sourceCode : 'javascriptName\r\t^#OtherName',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1346' ],		#self : OmReference [ '1347' ],		#time : DateAndTime [ '2024-03-03T08:20:46.113-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassBForReferenceTranspilationTest,				#isMetaSide : false			},			#name : #m,			#protocol : #any,			#sourceCode : 'm\r\t^PjClassAForReferenceTranspilationTest',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1347' ],		#self : OmReference [ '1348' ],		#time : DateAndTime [ '2024-03-03T08:20:46.113-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassCForPackageTranspilationTest class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #any,			#sourceCode : 'initialize\r\tPjClassBForPackageTranspilationTest.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1348' ],		#self : OmReference [ '1349' ],		#time : DateAndTime [ '2024-03-03T08:20:46.113-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassDForPackageTranspilationTest,				#isMetaSide : false			},			#name : #m,			#protocol : #any,			#sourceCode : 'm\r\tPjClassBForPackageTranspilationTest.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1349' ],		#self : OmReference [ '1350' ],		#time : DateAndTime [ '2024-03-03T08:20:46.113-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassEForPackageTranspilationTest class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #any,			#sourceCode : 'initialize',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1350' ],		#self : OmReference [ '1351' ],		#time : DateAndTime [ '2024-03-03T08:20:46.113-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassExtensionForTest class',				#isMetaSide : true			},			#name : #exampleForTest,			#protocol : #accessing,			#sourceCode : 'exampleForTest\r\t^self',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1351' ],		#self : OmReference [ '1352' ],		#time : DateAndTime [ '2024-03-03T08:20:46.113-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassExtensionForTest class',				#isMetaSide : true			},			#name : #javascriptInitialize,			#protocol : #accessing,			#sourceCode : 'javascriptInitialize\r\t^self',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1352' ],		#self : OmReference [ '1353' ],		#time : DateAndTime [ '2024-03-03T08:20:46.113-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassExtensionForTest class',				#isMetaSide : true			},			#name : #javascriptName,			#protocol : #accessing,			#sourceCode : 'javascriptName\r\t<pharoJsSkip>\r\t^PjClassForTranspilationTest name',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1353' ],		#self : OmReference [ '1354' ],		#time : DateAndTime [ '2024-03-03T08:20:46.114-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassExtensionForTest class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #importing,			#sourceCode : 'jsTranspilationImportMethods\r\r\t<pharoJsSkip>\r\t^ { \r\t\t  (Object -> #( yourself isArray )).\r\t\t\t(PjFooClassForTest -> #(foo)).\r\t\t  (Boolean -> #( eqv: )).\r\t\t  (UndefinedObject class -> #( allInstances allInstancesDo:\r\t\t      new )) } asDictionary',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1354' ],		#self : OmReference [ '1355' ],		#time : DateAndTime [ '2024-03-03T08:20:46.114-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassExtensionForTest,				#isMetaSide : false			},			#name : #foo,			#protocol : #any,			#sourceCode : 'foo\r\r\t^ 42',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1355' ],		#self : OmReference [ '1356' ],		#time : DateAndTime [ '2024-03-03T08:20:46.114-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassExtensionForTest,				#isMetaSide : false			},			#name : #instanceMethod,			#protocol : #any,			#sourceCode : 'instanceMethod',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1356' ],		#self : OmReference [ '1357' ],		#time : DateAndTime [ '2024-03-03T08:20:46.114-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForAstConversionTest,				#isMetaSide : false			},			#name : #basic1,			#protocol : #'test method',			#sourceCode : 'basic1\r\t1',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1357' ],		#self : OmReference [ '1358' ],		#time : DateAndTime [ '2024-03-03T08:20:46.114-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForAstConversionTest,				#isMetaSide : false			},			#name : #basic2,			#protocol : #'test method',			#sourceCode : 'basic2\r\t^ 1',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1358' ],		#self : OmReference [ '1359' ],		#time : DateAndTime [ '2024-03-03T08:20:46.114-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForAstConversionTest,				#isMetaSide : false			},			#name : #basic3,			#protocol : #'test method',			#sourceCode : 'basic3\r\t<javascript: \'return 3\'>\r\t^ (2 ifTrue: [^1] ifFalse: [3]) ifTrue: [ 2 ] ifFalse: [ 1 ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1359' ],		#self : OmReference [ '1360' ],		#time : DateAndTime [ '2024-03-03T08:20:46.114-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForAstConversionTest,				#isMetaSide : false			},			#name : #basic4,			#protocol : #'test method',			#sourceCode : 'basic4\r\t3.\r\t[ 2. 1 ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1360' ],		#self : OmReference [ '1361' ],		#time : DateAndTime [ '2024-03-03T08:20:46.114-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForAstConversionTest,				#isMetaSide : false			},			#name : #basic5,			#protocol : #'test method',			#sourceCode : 'basic5\r\t3.\r\t^ [ 2. 1 ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1361' ],		#self : OmReference [ '1362' ],		#time : DateAndTime [ '2024-03-03T08:20:46.114-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForAstConversionTest,				#isMetaSide : false			},			#name : #basic6,			#protocol : #'test method',			#sourceCode : 'basic6\r\t[ 2. 1 ].\r\t3',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1362' ],		#self : OmReference [ '1363' ],		#time : DateAndTime [ '2024-03-03T08:20:46.115-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForAstConversionTest,				#isMetaSide : false			},			#name : #return1,			#protocol : #'test method',			#sourceCode : 'return1\r\t3.\r\t2.\r\t1 ifTrue: [ ^ 2 ] ifFalse: [ 1 ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1363' ],		#self : OmReference [ '1364' ],		#time : DateAndTime [ '2024-03-03T08:20:46.115-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForAstConversionTest,				#isMetaSide : false			},			#name : #return2,			#protocol : #'test method',			#sourceCode : 'return2\r\t3.\r\t2.\r\t1 ifTrue: [ ^ 2 ] ifFalse: [ ^ 1 ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1364' ],		#self : OmReference [ '1365' ],		#time : DateAndTime [ '2024-03-03T08:20:46.115-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForAstConversionTest,				#isMetaSide : false			},			#name : #return3,			#protocol : #'test method',			#sourceCode : 'return3\r\t3.\r\t2.\r\t^ 1 ifTrue: [ 2 ] ifFalse: [ 1 ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1365' ],		#self : OmReference [ '1366' ],		#time : DateAndTime [ '2024-03-03T08:20:46.115-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForAstConversionTest,				#isMetaSide : false			},			#name : #return4,			#protocol : #'test method',			#sourceCode : 'return4\r\t3.\r\t2.\r\t^ (2 ifTrue: [^self] ifFalse: [3]) ifTrue: [ 2 ] ifFalse: [ 1 ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1366' ],		#self : OmReference [ '1367' ],		#time : DateAndTime [ '2024-03-03T08:20:46.115-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassForDefinitionTest class',				#isMetaSide : true			},			#name : #literal,			#protocol : #accessing,			#sourceCode : 'literal\r\t<jsLiteralGenerator>\r\t^ \'abc\',\'def\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1367' ],		#self : OmReference [ '1368' ],		#time : DateAndTime [ '2024-03-03T08:20:46.115-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForDefinitionTest,				#isMetaSide : false			},			#name : #literal,			#protocol : #accessing,			#sourceCode : 'literal\r\t<jsLiteralGenerator>\r\t^ 3 + 4',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1368' ],		#self : OmReference [ '1369' ],		#time : DateAndTime [ '2024-03-03T08:20:46.115-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForPrimitiveFailingTest,				#isMetaSide : false			},			#name : #'*',			#protocol : #any,			#sourceCode : '* aNumber \r\t"Primitive. Answer the sum of the receiver and aNumber. Essential.\r\tFail if the argument is not a Float. See Object documentation\r\twhatIsAPrimitive."\r\r\t<primitive: 49>',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1369' ],		#self : OmReference [ '1370' ],		#time : DateAndTime [ '2024-03-03T08:20:46.115-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForPrimitiveTest,				#isMetaSide : false			},			#name : #'+',			#protocol : #any,			#sourceCode : '+ aNumber \r\t"Primitive. Answer the sum of the receiver and aNumber. Essential.\r\tFail if the argument is not a Float. See Object documentation\r\twhatIsAPrimitive."\r\r\t<primitive: 41>\r\t^ aNumber adaptToFloat: self andSend: #+',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1370' ],		#self : OmReference [ '1371' ],		#time : DateAndTime [ '2024-03-03T08:20:46.115-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClientForInitializationTest class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #initializing,			#sourceCode : 'initialize',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1371' ],		#self : OmReference [ '1372' ],		#time : DateAndTime [ '2024-03-03T08:20:46.116-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClientForInitializationTest,				#isMetaSide : false			},			#name : #m,			#protocol : #any,			#sourceCode : 'm\r\tPjProviderForInitializationTest new',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1372' ],		#self : OmReference [ '1373' ],		#time : DateAndTime [ '2024-03-03T08:20:46.116-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClientForJavascriptInitializationTest class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #initializing,			#sourceCode : 'initialize',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1373' ],		#self : OmReference [ '1374' ],		#time : DateAndTime [ '2024-03-03T08:20:46.116-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClientForJavascriptInitializationTest class',				#isMetaSide : true			},			#name : #javascriptInitialize,			#protocol : #initializing,			#sourceCode : 'javascriptInitialize',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1374' ],		#self : OmReference [ '1375' ],		#time : DateAndTime [ '2024-03-03T08:20:46.116-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClientForJavascriptInitializationTest,				#isMetaSide : false			},			#name : #m,			#protocol : #any,			#sourceCode : 'm\r\tPjProviderForInitializationTest new',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1375' ],		#self : OmReference [ '1376' ],		#time : DateAndTime [ '2024-03-03T08:20:46.116-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExtensionClassForAliasTest class',				#isMetaSide : true			},			#name : #classM1,			#protocol : #aliasing,			#sourceCode : 'classM1\r\r\t<jsAlias: #classM1alias>\r\t^ #classM1',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1376' ],		#self : OmReference [ '1377' ],		#time : DateAndTime [ '2024-03-03T08:20:46.116-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExtensionClassForAliasTest class',				#isMetaSide : true			},			#name : #classM2,			#protocol : #aliasing,			#sourceCode : 'classM2\r\r\t<jsAlias: #classM2alias1 with: #classM2alias2>\r\t^ #classM2',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1377' ],		#self : OmReference [ '1378' ],		#time : DateAndTime [ '2024-03-03T08:20:46.116-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExtensionClassForAliasTest class',				#isMetaSide : true			},			#name : #isJsClassPlaceholder,			#protocol : #transpiling,			#sourceCode : 'isJsClassPlaceholder\r\r\t<pharoJsSkip>\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1378' ],		#self : OmReference [ '1379' ],		#time : DateAndTime [ '2024-03-03T08:20:46.116-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExtensionClassForAliasTest class',				#isMetaSide : true			},			#name : #javascriptName,			#protocol : #transpiling,			#sourceCode : 'javascriptName \r\r\t<pharoJsSkip>\r\t^ #Object',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1379' ],		#self : OmReference [ '1380' ],		#time : DateAndTime [ '2024-03-03T08:20:46.117-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExtensionClassForAliasTest,				#isMetaSide : false			},			#name : #m1,			#protocol : #aliasing,			#sourceCode : 'm1\r\r\t<jsAlias: #m1alias>\r\t^ #instanceM1',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1380' ],		#self : OmReference [ '1381' ],		#time : DateAndTime [ '2024-03-03T08:20:46.117-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExtensionClassForAliasTest,				#isMetaSide : false			},			#name : #m2,			#protocol : #aliasing,			#sourceCode : 'm2\r\r\t<jsAlias: #m2alias1 with: #m2alias2 with: #m2alias3>\r\t^ #instanceM2',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1381' ],		#self : OmReference [ '1382' ],		#time : DateAndTime [ '2024-03-03T08:20:46.117-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExtensionClassForAliasTest,				#isMetaSide : false			},			#name : #twoPragmaWithAliases,			#protocol : #aliasing,			#sourceCode : 'twoPragmaWithAliases\r\r\t<jsAlias: #firstAlias>\r\t<jsAlias: #secondAlias>\r\t^ 200',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1382' ],		#self : OmReference [ '1383' ],		#time : DateAndTime [ '2024-03-03T08:20:46.117-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFooClassForTest,				#isMetaSide : false			},			#name : #foo,			#protocol : #accessing,			#sourceCode : 'foo\r\t^#bar',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1383' ],		#self : OmReference [ '1384' ],		#time : DateAndTime [ '2024-03-03T08:20:46.117-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjProviderForInitializationTest class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #initializing,			#sourceCode : 'initialize',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1384' ],		#self : OmReference [ '1385' ],		#time : DateAndTime [ '2024-03-03T08:20:46.117-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjReplacedClassForTest class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'pharojs helper',			#sourceCode : 'javascriptPlaceholder\r\t^ PjClassForTranspilationTest',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1385' ],		#self : OmReference [ '1386' ],		#time : DateAndTime [ '2024-03-03T08:20:46.117-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReplacedClassForTest,				#isMetaSide : false			},			#name : #'add:and:',			#protocol : #any,			#sourceCode : 'add: op1 and: op2\r\t^op1 " note this is slightly different that the shadowed version "',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1386' ],		#self : OmReference [ '1387' ],		#time : DateAndTime [ '2024-03-03T08:20:46.117-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReplacedClassForTest,				#isMetaSide : false			},			#name : #notInPlaceholderClass,			#protocol : #any,			#sourceCode : 'notInPlaceholderClass',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1387' ],		#self : OmReference [ '1388' ],		#time : DateAndTime [ '2024-03-03T08:20:46.118-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjSharedPoolForTest class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #initialization-release,			#sourceCode : 'initialize\r\tA := #sharedA.\r\tB := #sharedB.\r\tC := #sharedC.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1388' ],		#self : OmReference [ '1389' ],		#time : DateAndTime [ '2024-03-03T08:20:46.118-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassForTranspilationTest class',				#isMetaSide : true			},			#name : #a,			#protocol : #'accessing structure variables',			#sourceCode : 'a\r\t^ A',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1389' ],		#self : OmReference [ '1390' ],		#time : DateAndTime [ '2024-03-03T08:20:46.118-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassForTranspilationTest class',				#isMetaSide : true			},			#name : #b,			#protocol : #'accessing structure variables',			#sourceCode : 'b\r\t^ B',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1390' ],		#self : OmReference [ '1391' ],		#time : DateAndTime [ '2024-03-03T08:20:46.118-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassForTranspilationTest class',				#isMetaSide : true			},			#name : #c1,			#protocol : #any,			#sourceCode : 'c1',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1391' ],		#self : OmReference [ '1392' ],		#time : DateAndTime [ '2024-03-03T08:20:46.118-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassForTranspilationTest class',				#isMetaSide : true			},			#name : #c2,			#protocol : #any,			#sourceCode : 'c2',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1392' ],		#self : OmReference [ '1393' ],		#time : DateAndTime [ '2024-03-03T08:20:46.118-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassForTranspilationTest class',				#isMetaSide : true			},			#name : #'classMethod_jsGenerator:',			#protocol : #'pharojs support',			#sourceCode : 'classMethod_jsGenerator: transpiler\r\t<pharoJsSkip>\r\t^self name asJSON',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1393' ],		#self : OmReference [ '1394' ],		#time : DateAndTime [ '2024-03-03T08:20:46.118-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassForTranspilationTest class',				#isMetaSide : true			},			#name : #'click:',			#protocol : #any,			#sourceCode : 'click: ev\r\t| m |\r\tm := self setupMessage ifNil: [^ self].\r\t^ m',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1394' ],		#self : OmReference [ '1395' ],		#time : DateAndTime [ '2024-03-03T08:20:46.118-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassForTranspilationTest class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #any,			#sourceCode : 'initialize\r\tA := #testA.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1395' ],		#self : OmReference [ '1396' ],		#time : DateAndTime [ '2024-03-03T08:20:46.118-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassForTranspilationTest class',				#isMetaSide : true			},			#name : #'instanceMethod_jsGenerator:',			#protocol : #'pharojs support',			#sourceCode : 'instanceMethod_jsGenerator: transpiler\r\t<pharoJsSkip>\r\t^\'return 1\', \' + \', \'2;\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1396' ],		#self : OmReference [ '1397' ],		#time : DateAndTime [ '2024-03-03T08:20:46.119-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassForTranspilationTest class',				#isMetaSide : true			},			#name : #isJsClassPlaceholder,			#protocol : #'pharojs support',			#sourceCode : 'isJsClassPlaceholder\r\r\t<pharoJsSkip>\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1397' ],		#self : OmReference [ '1398' ],		#time : DateAndTime [ '2024-03-03T08:20:46.119-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassForTranspilationTest class',				#isMetaSide : true			},			#name : #javascriptName,			#protocol : #'pharojs support',			#sourceCode : 'javascriptName\r\r\t<pharoJsSkip>\r\t^ #JsClass',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1398' ],		#self : OmReference [ '1399' ],		#time : DateAndTime [ '2024-03-03T08:20:46.119-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassForTranspilationTest class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharojs support',			#sourceCode : 'jsTranspilationImportMethods\r\t<pharoJsSkip>\r\t^ {\r\t\tPjNullMessageConversionForTest -> #(selectors).\r\t\tPjClientForJavascriptInitializationTest class -> #(javascriptInitialize).\r\t}',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1399' ],		#self : OmReference [ '1400' ],		#time : DateAndTime [ '2024-03-03T08:20:46.119-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassForTranspilationTest class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethodsNonstandard,			#protocol : #'pharojs support',			#sourceCode : 'jsTranspilationImportMethodsNonstandard\r\t<pharoJsSkip>\r\t^ {\r\t\tPjNullMessageConversionForTest -> #(selector order:selector:).\r\t\tPjClassExtensionForTest class -> #(javascriptName exampleForTest).\r\t}',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1400' ],		#self : OmReference [ '1401' ],		#time : DateAndTime [ '2024-03-03T08:20:46.119-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassForTranspilationTest class',				#isMetaSide : true			},			#name : #m1,			#protocol : #any,			#sourceCode : 'm1\r\tX := prototype.\r\tS := S.\r\tC := C.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1401' ],		#self : OmReference [ '1402' ],		#time : DateAndTime [ '2024-03-03T08:20:46.119-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassForTranspilationTest class',				#isMetaSide : true			},			#name : #methodWithJsGenerator,			#protocol : #any,			#sourceCode : 'methodWithJsGenerator\r\t<jsGenerator: #classMethod_jsGenerator:>',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1402' ],		#self : OmReference [ '1403' ],		#time : DateAndTime [ '2024-03-03T08:20:46.119-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClassForTranspilationTest class',				#isMetaSide : true			},			#name : #setupMessage,			#protocol : #any,			#sourceCode : 'setupMessage\r\t^ (self == PjClassForTranspilationTest ifTrue: [\r\t\t\t\t\'\'\r\t\t\t] ifFalse: [\r\t\t\t\t\'Sorry, \']) ,\r\t\t\'Click anywhere\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1403' ],		#self : OmReference [ '1404' ],		#time : DateAndTime [ '2024-03-03T08:20:46.119-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #'@',			#protocol : #any,			#sourceCode : '@ op',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1404' ],		#self : OmReference [ '1405' ],		#time : DateAndTime [ '2024-03-03T08:20:46.12-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #'add:and:',			#protocol : #any,			#sourceCode : 'add: op1 and: op2\r\t^op2',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1405' ],		#self : OmReference [ '1406' ],		#time : DateAndTime [ '2024-03-03T08:20:46.12-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #alias,			#protocol : #any,			#sourceCode : 'alias\r\t<jsAlias: #myAlias>\r\t^ 42',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1406' ],		#self : OmReference [ '1407' ],		#time : DateAndTime [ '2024-03-03T08:20:46.12-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #'alias1:',			#protocol : #any,			#sourceCode : 'alias1: arg\r\t<jsAlias: #myAlias1 >\r\t^ arg + 1',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1407' ],		#self : OmReference [ '1408' ],		#time : DateAndTime [ '2024-03-03T08:20:46.12-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #alias1Caller,			#protocol : #any,			#sourceCode : 'alias1Caller\r\t<javascript: \'return this.myAlias1(41)\'>',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1408' ],		#self : OmReference [ '1409' ],		#time : DateAndTime [ '2024-03-03T08:20:46.12-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #'alias1Caller:',			#protocol : #any,			#sourceCode : 'alias1Caller: arg \r\t<javascript: \'return this.myAlias1(arg)\'>',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1409' ],		#self : OmReference [ '1410' ],		#time : DateAndTime [ '2024-03-03T08:20:46.12-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #alias2,			#protocol : #any,			#sourceCode : 'alias2\r\t<jsAlias: #myAlias2 and: #andAlias2>\r\t^ 21',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1410' ],		#self : OmReference [ '1411' ],		#time : DateAndTime [ '2024-03-03T08:20:46.12-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #alias2Caller,			#protocol : #any,			#sourceCode : 'alias2Caller\r\t<javascript: \'return this.myAlias2() + this.andAlias2()\'>',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1411' ],		#self : OmReference [ '1412' ],		#time : DateAndTime [ '2024-03-03T08:20:46.12-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #aliasCaller,			#protocol : #any,			#sourceCode : 'aliasCaller\r\t<javascript: \'return this.myAlias()\'>',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1412' ],		#self : OmReference [ '1413' ],		#time : DateAndTime [ '2024-03-03T08:20:46.121-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #aliasSpecialName,			#protocol : #any,			#sourceCode : 'aliasSpecialName\r\t<jsAlias: #\'_$$_special\'>\r\t^ 42',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1413' ],		#self : OmReference [ '1414' ],		#time : DateAndTime [ '2024-03-03T08:20:46.121-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #aliasSpecialNameCaller,			#protocol : #any,			#sourceCode : 'aliasSpecialNameCaller\r\t<javascript: \'return this._$$_special()\'>',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1414' ],		#self : OmReference [ '1415' ],		#time : DateAndTime [ '2024-03-03T08:20:46.121-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #blockWithNamedParameter,			#protocol : #any,			#sourceCode : 'blockWithNamedParameter\r"\tself m2 ifNotNil: [ : foo | foo m2 ].\r"\t^ self m1 ifNotNil: [ : foo | foo m1 ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1415' ],		#self : OmReference [ '1416' ],		#time : DateAndTime [ '2024-03-03T08:20:46.121-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #blockWithUnnamedParameter,			#protocol : #any,			#sourceCode : 'blockWithUnnamedParameter\r\t^ self m1 ifNil: [ 42 ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1416' ],		#self : OmReference [ '1417' ],		#time : DateAndTime [ '2024-03-03T08:20:46.121-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #blockWithUnnamedParameterNonTail,			#protocol : #any,			#sourceCode : 'blockWithUnnamedParameterNonTail\r\t^ 3+(self m1 ifNil: [ 42 ])',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1417' ],		#self : OmReference [ '1418' ],		#time : DateAndTime [ '2024-03-03T08:20:46.121-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #blocksReferencingSelf,			#protocol : #any,			#sourceCode : 'blocksReferencingSelf\r\t[self].\r\t^self',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1418' ],		#self : OmReference [ '1419' ],		#time : DateAndTime [ '2024-03-03T08:20:46.121-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #'cascade:',			#protocol : #any,			#sourceCode : 'cascade: x\r\t^ x foo bar;yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1419' ],		#self : OmReference [ '1420' ],		#time : DateAndTime [ '2024-03-03T08:20:46.121-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #cascadeNested,			#protocol : #any,			#sourceCode : 'cascadeNested\r\t^ self m1;m:(self m1; m2);yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1420' ],		#self : OmReference [ '1421' ],		#time : DateAndTime [ '2024-03-03T08:20:46.121-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #cascadeSelf,			#protocol : #any,			#sourceCode : 'cascadeSelf\r\t^ self m1;m:4;yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1421' ],		#self : OmReference [ '1422' ],		#time : DateAndTime [ '2024-03-03T08:20:46.122-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #cascadeSuper,			#protocol : #any,			#sourceCode : 'cascadeSuper\r\t^ super isNil;yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1422' ],		#self : OmReference [ '1423' ],		#time : DateAndTime [ '2024-03-03T08:20:46.122-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #composedCalls,			#protocol : #any,			#sourceCode : 'composedCalls\r\t^ (self m1 m:4) m2',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1423' ],		#self : OmReference [ '1424' ],		#time : DateAndTime [ '2024-03-03T08:20:46.122-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #instanceMethodWithJsGenerator,			#protocol : #any,			#sourceCode : 'instanceMethodWithJsGenerator\r\t\t<jsGenerator: #instanceMethod_jsGenerator:>\r\t^self',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1424' ],		#self : OmReference [ '1425' ],		#time : DateAndTime [ '2024-03-03T08:20:46.122-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #m1,			#protocol : #any,			#sourceCode : 'm1\r\tX := prototype.\r\tS := S.\r\tC := C.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1425' ],		#self : OmReference [ '1426' ],		#time : DateAndTime [ '2024-03-03T08:20:46.122-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #m2,			#protocol : #any,			#sourceCode : 'm2',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1426' ],		#self : OmReference [ '1427' ],		#time : DateAndTime [ '2024-03-03T08:20:46.122-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #'m:',			#protocol : #any,			#sourceCode : 'm: in\r\t<javascript: \'console.log("abc")\'>\r\t^self',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1427' ],		#self : OmReference [ '1428' ],		#time : DateAndTime [ '2024-03-03T08:20:46.122-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #methodToSkip,			#protocol : #any,			#sourceCode : 'methodToSkip\r\t\t<pharoJsSkip>\r\t\t^#ThisShouldBeSkipped',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1428' ],		#self : OmReference [ '1429' ],		#time : DateAndTime [ '2024-03-03T08:20:46.122-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #methodWithPoolVars,			#protocol : #any,			#sourceCode : 'methodWithPoolVars\r\tA := A.\r\tB := B.\r\tC := C.\r\tS := S.\r\tX := X.\r\tY := Y.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1429' ],		#self : OmReference [ '1430' ],		#time : DateAndTime [ '2024-03-03T08:20:46.122-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #native,			#protocol : #any,			#sourceCode : 'native\r\t| x |\r\tx := x js_at: 4.\r\tx := x js_at: #foo.\r\tx := x js_at: \'a.b\'.\r\tx js_at: 4 put: 42.\r\tx js_m: 17',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1430' ],		#self : OmReference [ '1431' ],		#time : DateAndTime [ '2024-03-03T08:20:46.122-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #nestedBlocksReferencingSelf,			#protocol : #any,			#sourceCode : 'nestedBlocksReferencingSelf\r\t[[self]].\r\t^1',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1431' ],		#self : OmReference [ '1432' ],		#time : DateAndTime [ '2024-03-03T08:20:46.123-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #optimizeAtTest,			#protocol : #any,			#sourceCode : 'optimizeAtTest\r\t| selectorCache aSelector |\r\t(selectorCache js_at: aSelector) ifNotNil: [ self ].',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1432' ],		#self : OmReference [ '1433' ],		#time : DateAndTime [ '2024-03-03T08:20:46.123-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #toDoWithObjectAsParameter,			#protocol : #any,			#sourceCode : 'toDoWithObjectAsParameter\r\t1 to: 10 do: Object',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1433' ],		#self : OmReference [ '1434' ],		#time : DateAndTime [ '2024-03-03T08:20:46.123-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #twoPragmaWithAliases,			#protocol : #any,			#sourceCode : 'twoPragmaWithAliases\r\r\t<jsAlias: #firstAlias>\r\t<jsAlias: #secondAlias>\r\t^ 200',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1434' ],		#self : OmReference [ '1435' ],		#time : DateAndTime [ '2024-03-03T08:20:46.123-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #whileAtEnd,			#protocol : #any,			#sourceCode : 'whileAtEnd\r\tself m: [:x|\t[ x m1 ] whileTrue].\r\t[ self m2 ] whileTrue.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1435' ],		#self : OmReference [ '1436' ],		#time : DateAndTime [ '2024-03-03T08:20:46.123-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassForTranspilationTest,				#isMetaSide : false			},			#name : #whileNotAtEnd,			#protocol : #any,			#sourceCode : 'whileNotAtEnd\r\tself m: [:x|\t[ x m1 ] whileTrue].\r\t[ self m2 ] whileTrue.\r\t^ 42',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1436' ],		#self : OmReference [ '1437' ],		#time : DateAndTime [ '2024-03-03T08:20:46.123-05:00' ],		#trigger : OmReference [ '1050' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjSuperClassForTranspilationTest class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'class initialization',			#sourceCode : 'initialize\r\tB := #superB.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:46.382-05:00' ],		#prior : OmReference [ '1437' ],		#self : OmReference [ '1438' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-Base-Transpiler-Optimizations-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1438' ],		#self : OmReference [ '1439' ],		#time : DateAndTime [ '2024-03-03T08:20:46.416-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Transpiler-Optimizations-AST,		#affectedPackageName : #PharoJs-Base-Transpiler-Optimizations	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1439' ],		#self : OmReference [ '1440' ],		#time : DateAndTime [ '2024-03-03T08:20:46.42-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'RBVariableNode subclass: #PjTemporaryNode\r\tinstanceVariableNames: \'test body\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-AST\'',				#superclassName : 'RBVariableNode',				#traitCompositionSource : '{}'			},			#name : #PjTemporaryNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTemporaryNode,						#isMetaSide : false					},					#name : #test,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTemporaryNode,						#isMetaSide : false					},					#name : #body,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTemporaryNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTemporaryNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTemporaryNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-AST,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1440' ],		#self : OmReference [ '1441' ],		#time : DateAndTime [ '2024-03-03T08:20:46.431-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'RBVariableNode subclass: #PjTemporaryNode\r\tinstanceVariableNames: \'test body\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-AST\'',				#superclassName : 'RBVariableNode',				#traitCompositionSource : '{}'			},			#name : #PjTemporaryNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTemporaryNode,						#isMetaSide : false					},					#name : #test,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTemporaryNode,						#isMetaSide : false					},					#name : #body,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTemporaryNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTemporaryNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTemporaryNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a special version of RBTemporaryNode used in optimizations.\r\rNote: I\'m in the RB AST heirarchy, not the PjJavascript AST heirarchy',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-AST,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a special version of RBTemporaryNode used in optimizations.\r\rNote: I\'m in the RB AST heirarchy, not the PjJavascript AST heirarchy',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1441' ],		#self : OmReference [ '1442' ],		#time : DateAndTime [ '2024-03-03T08:20:46.434-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Transpiler-Optimizations-Manifest,		#affectedPackageName : #PharoJs-Base-Transpiler-Optimizations	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1442' ],		#self : OmReference [ '1443' ],		#time : DateAndTime [ '2024-03-03T08:20:46.435-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PackageManifest subclass: #ManifestPharoJsBaseTranspilerOptimizations\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Manifest\'',				#superclassName : 'PackageManifest',				#traitCompositionSource : '{}'			},			#name : #ManifestPharoJsBaseTranspilerOptimizations,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ManifestPharoJsBaseTranspilerOptimizations class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ManifestPharoJsBaseTranspilerOptimizations class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestPharoJsBaseTranspilerOptimizations,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Manifest,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1443' ],		#self : OmReference [ '1444' ],		#time : DateAndTime [ '2024-03-03T08:20:46.437-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PackageManifest subclass: #ManifestPharoJsBaseTranspilerOptimizations\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Manifest\'',				#superclassName : 'PackageManifest',				#traitCompositionSource : '{}'			},			#name : #ManifestPharoJsBaseTranspilerOptimizations,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ManifestPharoJsBaseTranspilerOptimizations class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ManifestPharoJsBaseTranspilerOptimizations class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestPharoJsBaseTranspilerOptimizations,					#isMetaSide : false				},				#parent : @8,				#content : 'I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Manifest,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1444' ],		#self : OmReference [ '1445' ],		#time : DateAndTime [ '2024-03-03T08:20:46.439-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjForLoopNode\r\tinstanceVariableNames: \'from to by body\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjForLoopNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjForLoopNode,						#isMetaSide : false					},					#name : #from,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjForLoopNode,						#isMetaSide : false					},					#name : #to,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjForLoopNode,						#isMetaSide : false					},					#name : #by,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjForLoopNode,						#isMetaSide : false					},					#name : #body,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjForLoopNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjForLoopNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjForLoopNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-AST,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1445' ],		#self : OmReference [ '1446' ],		#time : DateAndTime [ '2024-03-03T08:20:46.441-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjForLoopNode\r\tinstanceVariableNames: \'from to by body\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjForLoopNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjForLoopNode,						#isMetaSide : false					},					#name : #from,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjForLoopNode,						#isMetaSide : false					},					#name : #to,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjForLoopNode,						#isMetaSide : false					},					#name : #by,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjForLoopNode,						#isMetaSide : false					},					#name : #body,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjForLoopNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjForLoopNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjForLoopNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-AST,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1446' ],		#self : OmReference [ '1447' ],		#time : DateAndTime [ '2024-03-03T08:20:46.442-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjIfNode\r\tinstanceVariableNames: \'test\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjIfNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjIfNode,						#isMetaSide : false					},					#name : #test,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-AST,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1447' ],		#self : OmReference [ '1448' ],		#time : DateAndTime [ '2024-03-03T08:20:46.445-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjIfNode\r\tinstanceVariableNames: \'test\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjIfNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjIfNode,						#isMetaSide : false					},					#name : #test,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-AST,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1448' ],		#self : OmReference [ '1449' ],		#time : DateAndTime [ '2024-03-03T08:20:46.447-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjIfNode subclass: #PjIfNilNode\r\tinstanceVariableNames: \'whenNil\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-AST\'',				#superclassName : 'PjIfNode',				#traitCompositionSource : '{}'			},			#name : #PjIfNilNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjIfNilNode,						#isMetaSide : false					},					#name : #whenNil,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfNilNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfNilNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfNilNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-AST,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1449' ],		#self : OmReference [ '1450' ],		#time : DateAndTime [ '2024-03-03T08:20:46.448-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjIfNode subclass: #PjIfNilNode\r\tinstanceVariableNames: \'whenNil\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-AST\'',				#superclassName : 'PjIfNode',				#traitCompositionSource : '{}'			},			#name : #PjIfNilNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjIfNilNode,						#isMetaSide : false					},					#name : #whenNil,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfNilNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfNilNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfNilNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-AST,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1450' ],		#self : OmReference [ '1451' ],		#time : DateAndTime [ '2024-03-03T08:20:46.45-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjIfNode subclass: #PjIfNotNilNode\r\tinstanceVariableNames: \'whenNotNil\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-AST\'',				#superclassName : 'PjIfNode',				#traitCompositionSource : '{}'			},			#name : #PjIfNotNilNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjIfNotNilNode,						#isMetaSide : false					},					#name : #whenNotNil,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfNotNilNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfNotNilNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfNotNilNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-AST,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1451' ],		#self : OmReference [ '1452' ],		#time : DateAndTime [ '2024-03-03T08:20:46.451-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjIfNode subclass: #PjIfNotNilNode\r\tinstanceVariableNames: \'whenNotNil\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-AST\'',				#superclassName : 'PjIfNode',				#traitCompositionSource : '{}'			},			#name : #PjIfNotNilNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjIfNotNilNode,						#isMetaSide : false					},					#name : #whenNotNil,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfNotNilNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfNotNilNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfNotNilNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-AST,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1452' ],		#self : OmReference [ '1453' ],		#time : DateAndTime [ '2024-03-03T08:20:46.463-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjIfNotNilNode subclass: #PjIfNilIfNotNilNode\r\tinstanceVariableNames: \'whenNil\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-AST\'',				#superclassName : 'PjIfNotNilNode',				#traitCompositionSource : '{}'			},			#name : #PjIfNilIfNotNilNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjIfNilIfNotNilNode,						#isMetaSide : false					},					#name : #whenNil,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfNilIfNotNilNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfNilIfNotNilNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfNilIfNotNilNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-AST,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1453' ],		#self : OmReference [ '1454' ],		#time : DateAndTime [ '2024-03-03T08:20:46.465-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjIfNotNilNode subclass: #PjIfNilIfNotNilNode\r\tinstanceVariableNames: \'whenNil\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-AST\'',				#superclassName : 'PjIfNotNilNode',				#traitCompositionSource : '{}'			},			#name : #PjIfNilIfNotNilNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjIfNilIfNotNilNode,						#isMetaSide : false					},					#name : #whenNil,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfNilIfNotNilNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfNilIfNotNilNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfNilIfNotNilNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-AST,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1454' ],		#self : OmReference [ '1455' ],		#time : DateAndTime [ '2024-03-03T08:20:46.467-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjIfNode subclass: #PjIfTrueNode\r\tinstanceVariableNames: \'whenTrue\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-AST\'',				#superclassName : 'PjIfNode',				#traitCompositionSource : '{}'			},			#name : #PjIfTrueNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjIfTrueNode,						#isMetaSide : false					},					#name : #whenTrue,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfTrueNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfTrueNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfTrueNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-AST,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1455' ],		#self : OmReference [ '1456' ],		#time : DateAndTime [ '2024-03-03T08:20:46.469-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjIfNode subclass: #PjIfTrueNode\r\tinstanceVariableNames: \'whenTrue\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-AST\'',				#superclassName : 'PjIfNode',				#traitCompositionSource : '{}'			},			#name : #PjIfTrueNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjIfTrueNode,						#isMetaSide : false					},					#name : #whenTrue,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfTrueNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfTrueNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfTrueNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-AST,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1456' ],		#self : OmReference [ '1457' ],		#time : DateAndTime [ '2024-03-03T08:20:46.473-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjIfTrueNode subclass: #PjIfTrueIfFalseNode\r\tinstanceVariableNames: \'whenFalse\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-AST\'',				#superclassName : 'PjIfTrueNode',				#traitCompositionSource : '{}'			},			#name : #PjIfTrueIfFalseNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjIfTrueIfFalseNode,						#isMetaSide : false					},					#name : #whenFalse,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfTrueIfFalseNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfTrueIfFalseNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfTrueIfFalseNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-AST,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1457' ],		#self : OmReference [ '1458' ],		#time : DateAndTime [ '2024-03-03T08:20:46.474-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjIfTrueNode subclass: #PjIfTrueIfFalseNode\r\tinstanceVariableNames: \'whenFalse\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-AST\'',				#superclassName : 'PjIfTrueNode',				#traitCompositionSource : '{}'			},			#name : #PjIfTrueIfFalseNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjIfTrueIfFalseNode,						#isMetaSide : false					},					#name : #whenFalse,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfTrueIfFalseNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfTrueIfFalseNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfTrueIfFalseNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-AST,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting with a subclass of PjASTVisitor or PjASTEqual',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1458' ],		#self : OmReference [ '1459' ],		#time : DateAndTime [ '2024-03-03T08:20:46.476-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjWhileNode\r\tinstanceVariableNames: \'test body\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjWhileNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWhileNode,						#isMetaSide : false					},					#name : #test,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWhileNode,						#isMetaSide : false					},					#name : #body,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjWhileNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjWhileNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjWhileNode,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-AST,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1459' ],		#self : OmReference [ '1460' ],		#time : DateAndTime [ '2024-03-03T08:20:46.478-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptAstNode subclass: #PjWhileNode\r\tinstanceVariableNames: \'test body\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-AST\'',				#superclassName : 'PjJavascriptAstNode',				#traitCompositionSource : '{}'			},			#name : #PjWhileNode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWhileNode,						#isMetaSide : false					},					#name : #test,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWhileNode,						#isMetaSide : false					},					#name : #body,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjWhileNode class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjWhileNode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjWhileNode,					#isMetaSide : false				},				#parent : @8,				#content : 'I am part of the representation of a Javascript AST for visiting',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-AST,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am part of the representation of a Javascript AST for visiting',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1460' ],		#self : OmReference [ '1461' ],		#time : DateAndTime [ '2024-03-03T08:20:46.481-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Transpiler-Optimizations-Optimizations,		#affectedPackageName : #PharoJs-Base-Transpiler-Optimizations	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1461' ],		#self : OmReference [ '1462' ],		#time : DateAndTime [ '2024-03-03T08:20:46.482-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjOptionalMessageConversion subclass: #PjArithmeticOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjOptionalMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjArithmeticOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjArithmeticOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjArithmeticOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjArithmeticOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1462' ],		#self : OmReference [ '1463' ],		#time : DateAndTime [ '2024-03-03T08:20:46.483-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjOptionalMessageConversion subclass: #PjArithmeticOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjOptionalMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjArithmeticOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjArithmeticOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjArithmeticOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjArithmeticOptimization,					#isMetaSide : false				},				#parent : @8,				#content : 'My subclasses are optimizations for all of the arithmetic operators',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'My subclasses are optimizations for all of the arithmetic operators',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1463' ],		#self : OmReference [ '1464' ],		#time : DateAndTime [ '2024-03-03T08:20:46.485-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjArithmeticOptimization subclass: #PjMinusOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjArithmeticOptimization',				#traitCompositionSource : '{}'			},			#name : #PjMinusOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMinusOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMinusOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMinusOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1464' ],		#self : OmReference [ '1465' ],		#time : DateAndTime [ '2024-03-03T08:20:46.487-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjArithmeticOptimization subclass: #PjModOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjArithmeticOptimization',				#traitCompositionSource : '{}'			},			#name : #PjModOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjModOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjModOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjModOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1465' ],		#self : OmReference [ '1466' ],		#time : DateAndTime [ '2024-03-03T08:20:46.489-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjArithmeticOptimization subclass: #PjPlusOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjArithmeticOptimization',				#traitCompositionSource : '{}'			},			#name : #PjPlusOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjPlusOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjPlusOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjPlusOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1466' ],		#self : OmReference [ '1467' ],		#time : DateAndTime [ '2024-03-03T08:20:46.49-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjArithmeticOptimization subclass: #PjTimesOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjArithmeticOptimization',				#traitCompositionSource : '{}'			},			#name : #PjTimesOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTimesOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTimesOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTimesOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1467' ],		#self : OmReference [ '1468' ],		#time : DateAndTime [ '2024-03-03T08:20:46.491-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjOptionalMessageConversion subclass: #PjComparisonOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjOptionalMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjComparisonOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjComparisonOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjComparisonOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjComparisonOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1468' ],		#self : OmReference [ '1469' ],		#time : DateAndTime [ '2024-03-03T08:20:46.493-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjOptionalMessageConversion subclass: #PjComparisonOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjOptionalMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjComparisonOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjComparisonOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjComparisonOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjComparisonOptimization,					#isMetaSide : false				},				#parent : @8,				#content : 'My subclasses are optimizations for all of the comparison operators, most of which can be used directly in Javascript as they given legitimate results (if not always  meaningful if the types are different).',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'My subclasses are optimizations for all of the comparison operators, most of which can be used directly in Javascript as they given legitimate results (if not always  meaningful if the types are different).',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1469' ],		#self : OmReference [ '1470' ],		#time : DateAndTime [ '2024-03-03T08:20:46.494-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjComparisonOptimization subclass: #PjEqualsOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjComparisonOptimization',				#traitCompositionSource : '{}'			},			#name : #PjEqualsOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjEqualsOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjEqualsOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjEqualsOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1470' ],		#self : OmReference [ '1471' ],		#time : DateAndTime [ '2024-03-03T08:20:46.495-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjComparisonOptimization subclass: #PjEqualsOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjComparisonOptimization',				#traitCompositionSource : '{}'			},			#name : #PjEqualsOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjEqualsOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjEqualsOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjEqualsOptimization,					#isMetaSide : false				},				#parent : @8,				#content : 'Straight equality comparison doesn\'t work for arrays, so if we can\'t show that the left or right values are non-arrays, must fallback to method call.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Straight equality comparison doesn\'t work for arrays, so if we can\'t show that the left or right values are non-arrays, must fallback to method call.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1471' ],		#self : OmReference [ '1472' ],		#time : DateAndTime [ '2024-03-03T08:20:46.496-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjEqualsOptimization subclass: #PjNotEqualsOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjEqualsOptimization',				#traitCompositionSource : '{}'			},			#name : #PjNotEqualsOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNotEqualsOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNotEqualsOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNotEqualsOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1472' ],		#self : OmReference [ '1473' ],		#time : DateAndTime [ '2024-03-03T08:20:46.497-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjComparisonOptimization subclass: #PjGreaterEqualOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjComparisonOptimization',				#traitCompositionSource : '{}'			},			#name : #PjGreaterEqualOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjGreaterEqualOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjGreaterEqualOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjGreaterEqualOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1473' ],		#self : OmReference [ '1474' ],		#time : DateAndTime [ '2024-03-03T08:20:46.498-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjComparisonOptimization subclass: #PjGreaterThanOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjComparisonOptimization',				#traitCompositionSource : '{}'			},			#name : #PjGreaterThanOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjGreaterThanOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjGreaterThanOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjGreaterThanOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1474' ],		#self : OmReference [ '1475' ],		#time : DateAndTime [ '2024-03-03T08:20:46.5-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjComparisonOptimization subclass: #PjIdenticalOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjComparisonOptimization',				#traitCompositionSource : '{}'			},			#name : #PjIdenticalOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIdenticalOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIdenticalOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIdenticalOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1475' ],		#self : OmReference [ '1476' ],		#time : DateAndTime [ '2024-03-03T08:20:46.501-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjComparisonOptimization subclass: #PjLessEqualOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjComparisonOptimization',				#traitCompositionSource : '{}'			},			#name : #PjLessEqualOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjLessEqualOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjLessEqualOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjLessEqualOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1476' ],		#self : OmReference [ '1477' ],		#time : DateAndTime [ '2024-03-03T08:20:46.503-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjComparisonOptimization subclass: #PjLessThanOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjComparisonOptimization',				#traitCompositionSource : '{}'			},			#name : #PjLessThanOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjLessThanOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjLessThanOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjLessThanOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1477' ],		#self : OmReference [ '1478' ],		#time : DateAndTime [ '2024-03-03T08:20:46.504-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjComparisonOptimization subclass: #PjNotIdenticalOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjComparisonOptimization',				#traitCompositionSource : '{}'			},			#name : #PjNotIdenticalOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNotIdenticalOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNotIdenticalOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNotIdenticalOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1478' ],		#self : OmReference [ '1479' ],		#time : DateAndTime [ '2024-03-03T08:20:46.505-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjOptionalMessageConversion subclass: #PjDoOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjOptionalMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjDoOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDoOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDoOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDoOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1479' ],		#self : OmReference [ '1480' ],		#time : DateAndTime [ '2024-03-03T08:20:46.506-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjOptionalMessageConversion subclass: #PjIfNilIfNotNilOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjOptionalMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjIfNilIfNotNilOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfNilIfNotNilOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfNilIfNotNilOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfNilIfNotNilOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1480' ],		#self : OmReference [ '1481' ],		#time : DateAndTime [ '2024-03-03T08:20:46.51-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjOptionalMessageConversion subclass: #PjIfNilIfNotNilOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjOptionalMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjIfNilIfNotNilOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfNilIfNotNilOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfNilIfNotNilOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfNilIfNotNilOptimization,					#isMetaSide : false				},				#parent : @8,				#content : 'I handle optimizations of various flavors of ifNil:ifNotNil:',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I handle optimizations of various flavors of ifNil:ifNotNil:',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1481' ],		#self : OmReference [ '1482' ],		#time : DateAndTime [ '2024-03-03T08:20:46.511-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjIfNilIfNotNilOptimization subclass: #PjIfNilOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjIfNilIfNotNilOptimization',				#traitCompositionSource : '{}'			},			#name : #PjIfNilOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfNilOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfNilOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfNilOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1482' ],		#self : OmReference [ '1483' ],		#time : DateAndTime [ '2024-03-03T08:20:46.512-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjIfNilIfNotNilOptimization subclass: #PjIfNotNilIfNilOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjIfNilIfNotNilOptimization',				#traitCompositionSource : '{}'			},			#name : #PjIfNotNilIfNilOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfNotNilIfNilOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfNotNilIfNilOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfNotNilIfNilOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1483' ],		#self : OmReference [ '1484' ],		#time : DateAndTime [ '2024-03-03T08:20:46.513-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjIfNilIfNotNilOptimization subclass: #PjIfNotNilOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjIfNilIfNotNilOptimization',				#traitCompositionSource : '{}'			},			#name : #PjIfNotNilOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfNotNilOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfNotNilOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfNotNilOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1484' ],		#self : OmReference [ '1485' ],		#time : DateAndTime [ '2024-03-03T08:20:46.514-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjOptionalMessageConversion subclass: #PjIfTrueIfFalseOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjOptionalMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjIfTrueIfFalseOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfTrueIfFalseOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfTrueIfFalseOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfTrueIfFalseOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1485' ],		#self : OmReference [ '1486' ],		#time : DateAndTime [ '2024-03-03T08:20:46.516-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjOptionalMessageConversion subclass: #PjIfTrueIfFalseOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjOptionalMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjIfTrueIfFalseOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfTrueIfFalseOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfTrueIfFalseOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfTrueIfFalseOptimization,					#isMetaSide : false				},				#parent : @8,				#content : 'I handle optimizations of various flavors of ifTrue:ifFalse',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I handle optimizations of various flavors of ifTrue:ifFalse',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1486' ],		#self : OmReference [ '1487' ],		#time : DateAndTime [ '2024-03-03T08:20:46.517-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjIfTrueIfFalseOptimization subclass: #PjAndOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjIfTrueIfFalseOptimization',				#traitCompositionSource : '{}'			},			#name : #PjAndOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAndOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAndOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAndOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1487' ],		#self : OmReference [ '1488' ],		#time : DateAndTime [ '2024-03-03T08:20:46.518-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjIfTrueIfFalseOptimization subclass: #PjIfFalseIfTrueOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjIfTrueIfFalseOptimization',				#traitCompositionSource : '{}'			},			#name : #PjIfFalseIfTrueOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfFalseIfTrueOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfFalseIfTrueOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfFalseIfTrueOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1488' ],		#self : OmReference [ '1489' ],		#time : DateAndTime [ '2024-03-03T08:20:46.52-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjIfTrueIfFalseOptimization subclass: #PjIfFalseOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjIfTrueIfFalseOptimization',				#traitCompositionSource : '{}'			},			#name : #PjIfFalseOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfFalseOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfFalseOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfFalseOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1489' ],		#self : OmReference [ '1490' ],		#time : DateAndTime [ '2024-03-03T08:20:46.521-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjIfTrueIfFalseOptimization subclass: #PjIfTrueOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjIfTrueIfFalseOptimization',				#traitCompositionSource : '{}'			},			#name : #PjIfTrueOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIfTrueOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIfTrueOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIfTrueOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1490' ],		#self : OmReference [ '1491' ],		#time : DateAndTime [ '2024-03-03T08:20:46.522-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjIfTrueIfFalseOptimization subclass: #PjOrOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjIfTrueIfFalseOptimization',				#traitCompositionSource : '{}'			},			#name : #PjOrOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjOrOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjOrOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjOrOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1491' ],		#self : OmReference [ '1492' ],		#time : DateAndTime [ '2024-03-03T08:20:46.523-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjOptionalMessageConversion subclass: #PjStringAppendOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjOptionalMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjStringAppendOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjStringAppendOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjStringAppendOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjStringAppendOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1492' ],		#self : OmReference [ '1493' ],		#time : DateAndTime [ '2024-03-03T08:20:46.524-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjOptionalMessageConversion subclass: #PjTimesRepeatOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjOptionalMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjTimesRepeatOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTimesRepeatOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTimesRepeatOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTimesRepeatOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1493' ],		#self : OmReference [ '1494' ],		#time : DateAndTime [ '2024-03-03T08:20:46.532-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjOptionalMessageConversion subclass: #PjToDoOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjOptionalMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjToDoOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjToDoOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjToDoOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjToDoOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1494' ],		#self : OmReference [ '1495' ],		#time : DateAndTime [ '2024-03-03T08:20:46.534-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjToDoOptimization subclass: #PjToByDoOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjToDoOptimization',				#traitCompositionSource : '{}'			},			#name : #PjToByDoOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjToByDoOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjToByDoOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjToByDoOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1495' ],		#self : OmReference [ '1496' ],		#time : DateAndTime [ '2024-03-03T08:20:46.536-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjOptionalMessageConversion subclass: #PjWhileOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjOptionalMessageConversion',				#traitCompositionSource : '{}'			},			#name : #PjWhileOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjWhileOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjWhileOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjWhileOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1496' ],		#self : OmReference [ '1497' ],		#time : DateAndTime [ '2024-03-03T08:20:46.538-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWhileOptimization subclass: #PjWhileFalseDoOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjWhileOptimization',				#traitCompositionSource : '{}'			},			#name : #PjWhileFalseDoOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjWhileFalseDoOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjWhileFalseDoOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjWhileFalseDoOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1497' ],		#self : OmReference [ '1498' ],		#time : DateAndTime [ '2024-03-03T08:20:46.54-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWhileOptimization subclass: #PjWhileFalseOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjWhileOptimization',				#traitCompositionSource : '{}'			},			#name : #PjWhileFalseOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjWhileFalseOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjWhileFalseOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjWhileFalseOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1498' ],		#self : OmReference [ '1499' ],		#time : DateAndTime [ '2024-03-03T08:20:46.543-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWhileOptimization subclass: #PjWhileTrueDoOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjWhileOptimization',				#traitCompositionSource : '{}'			},			#name : #PjWhileTrueDoOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjWhileTrueDoOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjWhileTrueDoOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjWhileTrueDoOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1499' ],		#self : OmReference [ '1500' ],		#time : DateAndTime [ '2024-03-03T08:20:46.544-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWhileOptimization subclass: #PjWhileTrueOptimization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Optimizations\'',				#superclassName : 'PjWhileOptimization',				#traitCompositionSource : '{}'			},			#name : #PjWhileTrueOptimization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjWhileTrueOptimization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjWhileTrueOptimization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjWhileTrueOptimization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Optimizations,			#package : #PharoJs-Base-Transpiler-Optimizations,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1500' ],		#self : OmReference [ '1501' ],		#time : DateAndTime [ '2024-03-03T08:20:47.756-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RBProgramNode,				#isMetaSide : false			},			#name : #isOptimizableAsContionalBlock,			#protocol : #'*PharoJs-Base-Transpiler-Optimizations',			#sourceCode : 'isOptimizableAsContionalBlock\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1501' ],		#self : OmReference [ '1502' ],		#time : DateAndTime [ '2024-03-03T08:20:47.756-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTemporaryNode,				#isMetaSide : false			},			#name : #isOptimizableAsContionalBlock,			#protocol : #testing,			#sourceCode : 'isOptimizableAsContionalBlock\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1502' ],		#self : OmReference [ '1503' ],		#time : DateAndTime [ '2024-03-03T08:20:47.757-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTemporaryNode,				#isMetaSide : false			},			#name : #'named:start:',			#protocol : #initialization,			#sourceCode : 'named: aName start: aPosition\r\tsuper named: aName start: aPosition.\r\tvariable := TemporaryVariable named: aName.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1503' ],		#self : OmReference [ '1504' ],		#time : DateAndTime [ '2024-03-03T08:20:47.757-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLiteralValueNode,				#isMetaSide : false			},			#name : #constantOrZero,			#protocol : #'*PharoJs-Base-Transpiler-Optimizations',			#sourceCode : 'constantOrZero\r\tvalue isNumber ifFalse: [ ^ 0 ].\r\t^ value',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1504' ],		#self : OmReference [ '1505' ],		#time : DateAndTime [ '2024-03-03T08:20:47.758-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLiteralValueNode,				#isMetaSide : false			},			#name : #isLiteralFalse,			#protocol : #'*PharoJs-Base-Transpiler-Optimizations',			#sourceCode : 'isLiteralFalse\r\t^ value = false',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1505' ],		#self : OmReference [ '1506' ],		#time : DateAndTime [ '2024-03-03T08:20:47.758-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLiteralValueNode,				#isMetaSide : false			},			#name : #isLiteralTrue,			#protocol : #'*PharoJs-Base-Transpiler-Optimizations',			#sourceCode : 'isLiteralTrue\r\t^ value = true',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1506' ],		#self : OmReference [ '1507' ],		#time : DateAndTime [ '2024-03-03T08:20:47.758-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLiteralValueNode,				#isMetaSide : false			},			#name : #target,			#protocol : #'*PharoJs-Base-Transpiler-Optimizations',			#sourceCode : 'target\r\t^ self',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1507' ],		#self : OmReference [ '1508' ],		#time : DateAndTime [ '2024-03-03T08:20:47.758-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAssignNode,				#isMetaSide : false			},			#name : #constantOrZero,			#protocol : #'*PharoJs-Base-Transpiler-Optimizations',			#sourceCode : 'constantOrZero\r\t^ expression constantOrZero',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1508' ],		#self : OmReference [ '1509' ],		#time : DateAndTime [ '2024-03-03T08:20:47.758-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestPharoJsBaseTranspilerOptimizations class',				#isMetaSide : true			},			#name : #ruleRBLongMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBLongMethodsRuleV1FalsePositive\r\t^ #(#(#(#RGMethodDefinition #(#PjConversionOptimizationTest #testBlockReturns #false)) #\'2020-03-31T21:57:36.931316-04:00\') #(#(#RGMethodDefinition #(#PjConversionOptimizationTest #testBlockReturns1 #false)) #\'2020-03-31T22:18:03.661616-04:00\') )',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1509' ],		#self : OmReference [ '1510' ],		#time : DateAndTime [ '2024-03-03T08:20:47.759-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RBBlockNode,				#isMetaSide : false			},			#name : #isOptimizableAsContionalBlock,			#protocol : #'*PharoJs-Base-Transpiler-Optimizations',			#sourceCode : 'isOptimizableAsContionalBlock\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1510' ],		#self : OmReference [ '1511' ],		#time : DateAndTime [ '2024-03-03T08:20:47.759-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RBLiteralValueNode,				#isMetaSide : false			},			#name : #isOptimizableAsContionalBlock,			#protocol : #'*PharoJs-Base-Transpiler-Optimizations',			#sourceCode : 'isOptimizableAsContionalBlock\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1511' ],		#self : OmReference [ '1512' ],		#time : DateAndTime [ '2024-03-03T08:20:47.759-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjForLoopNode class',				#isMetaSide : true			},			#name : #'from:to:by:body:',			#protocol : #creation,			#sourceCode : 'from: from to: to by: by body: body\r\t^ self new from: from; to: to; by: by; body: body',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1512' ],		#self : OmReference [ '1513' ],		#time : DateAndTime [ '2024-03-03T08:20:47.759-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjForLoopNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjStringGenerator\r\t^ aPjStringGenerator visitToDoByNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1513' ],		#self : OmReference [ '1514' ],		#time : DateAndTime [ '2024-03-03T08:20:47.759-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjForLoopNode,				#isMetaSide : false			},			#name : #body,			#protocol : #accessing,			#sourceCode : 'body\r\t^ body',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1514' ],		#self : OmReference [ '1515' ],		#time : DateAndTime [ '2024-03-03T08:20:47.759-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjForLoopNode,				#isMetaSide : false			},			#name : #'body:',			#protocol : #accessing,			#sourceCode : 'body: aCollection\r\tbody := aCollection',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1515' ],		#self : OmReference [ '1516' ],		#time : DateAndTime [ '2024-03-03T08:20:47.759-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjForLoopNode,				#isMetaSide : false			},			#name : #by,			#protocol : #accessing,			#sourceCode : 'by\r\t^ by',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1516' ],		#self : OmReference [ '1517' ],		#time : DateAndTime [ '2024-03-03T08:20:47.76-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjForLoopNode,				#isMetaSide : false			},			#name : #'by:',			#protocol : #accessing,			#sourceCode : 'by: aPjAstNode\r\tby := aPjAstNode',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1517' ],		#self : OmReference [ '1518' ],		#time : DateAndTime [ '2024-03-03T08:20:47.76-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjForLoopNode,				#isMetaSide : false			},			#name : #canPropogateReturns,			#protocol : #testing,			#sourceCode : 'canPropogateReturns\r\t^ true " not really, but we don\'t want to add a \'return this\' at the end "',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1518' ],		#self : OmReference [ '1519' ],		#time : DateAndTime [ '2024-03-03T08:20:47.76-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjForLoopNode,				#isMetaSide : false			},			#name : #from,			#protocol : #accessing,			#sourceCode : 'from\r\t^ from',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1519' ],		#self : OmReference [ '1520' ],		#time : DateAndTime [ '2024-03-03T08:20:47.76-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjForLoopNode,				#isMetaSide : false			},			#name : #'from:',			#protocol : #accessing,			#sourceCode : 'from: aPjAstNode\r\tfrom := aPjAstNode',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1520' ],		#self : OmReference [ '1521' ],		#time : DateAndTime [ '2024-03-03T08:20:47.76-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjForLoopNode,				#isMetaSide : false			},			#name : #to,			#protocol : #accessing,			#sourceCode : 'to\r\t^ to',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1521' ],		#self : OmReference [ '1522' ],		#time : DateAndTime [ '2024-03-03T08:20:47.761-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjForLoopNode,				#isMetaSide : false			},			#name : #'to:',			#protocol : #accessing,			#sourceCode : 'to: aPjAstNode\r\tto := aPjAstNode',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1522' ],		#self : OmReference [ '1523' ],		#time : DateAndTime [ '2024-03-03T08:20:47.761-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjIfNilNode class',				#isMetaSide : true			},			#name : #'test:whenNil:',			#protocol : #creating,			#sourceCode : 'test: test whenNil: whenNil\r\t^ self new test: test; whenNil: whenNil; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1523' ],		#self : OmReference [ '1524' ],		#time : DateAndTime [ '2024-03-03T08:20:47.761-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNilNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitIfNilNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1524' ],		#self : OmReference [ '1525' ],		#time : DateAndTime [ '2024-03-03T08:20:47.761-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNilNode,				#isMetaSide : false			},			#name : #whenNil,			#protocol : #accessing,			#sourceCode : 'whenNil\r\t^ whenNil',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1525' ],		#self : OmReference [ '1526' ],		#time : DateAndTime [ '2024-03-03T08:20:47.761-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNilNode,				#isMetaSide : false			},			#name : #'whenNil:',			#protocol : #accessing,			#sourceCode : 'whenNil: anObject\r\twhenNil := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1526' ],		#self : OmReference [ '1527' ],		#time : DateAndTime [ '2024-03-03T08:20:47.762-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjIfNode class',				#isMetaSide : true			},			#name : #'test:',			#protocol : #creating,			#sourceCode : 'test: test\r\t^ self new test: test; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1527' ],		#self : OmReference [ '1528' ],		#time : DateAndTime [ '2024-03-03T08:20:47.762-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNode,				#isMetaSide : false			},			#name : #canPropogateReturns,			#protocol : #testing,			#sourceCode : 'canPropogateReturns\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1528' ],		#self : OmReference [ '1529' ],		#time : DateAndTime [ '2024-03-03T08:20:47.762-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNode,				#isMetaSide : false			},			#name : #test,			#protocol : #accessing,			#sourceCode : 'test\r\t^ test',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1529' ],		#self : OmReference [ '1530' ],		#time : DateAndTime [ '2024-03-03T08:20:47.762-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNode,				#isMetaSide : false			},			#name : #'test:',			#protocol : #accessing,			#sourceCode : 'test: anObject\r\ttest := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1530' ],		#self : OmReference [ '1531' ],		#time : DateAndTime [ '2024-03-03T08:20:47.762-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjIfNilIfNotNilNode class',				#isMetaSide : true			},			#name : #'test:whenNotNil:whenNil:',			#protocol : #creating,			#sourceCode : 'test: test whenNotNil: whenNotNil whenNil: whenNil\r\t^ self new test: test; whenNotNil: whenNotNil; whenNil: whenNil; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1531' ],		#self : OmReference [ '1532' ],		#time : DateAndTime [ '2024-03-03T08:20:47.763-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNilIfNotNilNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitIfNilIfNotNilNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1532' ],		#self : OmReference [ '1533' ],		#time : DateAndTime [ '2024-03-03T08:20:47.763-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNilIfNotNilNode,				#isMetaSide : false			},			#name : #whenNil,			#protocol : #accessing,			#sourceCode : 'whenNil\r\t^ whenNil',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1533' ],		#self : OmReference [ '1534' ],		#time : DateAndTime [ '2024-03-03T08:20:47.763-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNilIfNotNilNode,				#isMetaSide : false			},			#name : #'whenNil:',			#protocol : #accessing,			#sourceCode : 'whenNil: anObject\r\twhenNil := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1534' ],		#self : OmReference [ '1535' ],		#time : DateAndTime [ '2024-03-03T08:20:47.763-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjIfNotNilNode class',				#isMetaSide : true			},			#name : #'test:whenNotNil:',			#protocol : #creating,			#sourceCode : 'test: test whenNotNil: whenNotNil\r\t^ self new test: test; whenNotNil: whenNotNil; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1535' ],		#self : OmReference [ '1536' ],		#time : DateAndTime [ '2024-03-03T08:20:47.763-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNotNilNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitIfNotNilNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1536' ],		#self : OmReference [ '1537' ],		#time : DateAndTime [ '2024-03-03T08:20:47.763-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNotNilNode,				#isMetaSide : false			},			#name : #whenNotNil,			#protocol : #accessing,			#sourceCode : 'whenNotNil\r\t^ whenNotNil',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1537' ],		#self : OmReference [ '1538' ],		#time : DateAndTime [ '2024-03-03T08:20:47.763-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNotNilNode,				#isMetaSide : false			},			#name : #'whenNotNil:',			#protocol : #accessing,			#sourceCode : 'whenNotNil: anObject\r\twhenNotNil := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1538' ],		#self : OmReference [ '1539' ],		#time : DateAndTime [ '2024-03-03T08:20:47.764-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjIfTrueIfFalseNode class',				#isMetaSide : true			},			#name : #'test:whenTrue:whenFalse:',			#protocol : #creating,			#sourceCode : 'test: test whenTrue: whenTrue whenFalse: whenFalse\r\t^ self new test: test; whenTrue: whenTrue; whenFalse: whenFalse; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1539' ],		#self : OmReference [ '1540' ],		#time : DateAndTime [ '2024-03-03T08:20:47.764-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfTrueIfFalseNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitIfTrueIfFalseNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1540' ],		#self : OmReference [ '1541' ],		#time : DateAndTime [ '2024-03-03T08:20:47.764-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfTrueIfFalseNode,				#isMetaSide : false			},			#name : #whenFalse,			#protocol : #accessing,			#sourceCode : 'whenFalse\r\t^ whenFalse',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1541' ],		#self : OmReference [ '1542' ],		#time : DateAndTime [ '2024-03-03T08:20:47.764-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfTrueIfFalseNode,				#isMetaSide : false			},			#name : #'whenFalse:',			#protocol : #accessing,			#sourceCode : 'whenFalse: anObject\r\twhenFalse := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1542' ],		#self : OmReference [ '1543' ],		#time : DateAndTime [ '2024-03-03T08:20:47.764-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjIfTrueNode class',				#isMetaSide : true			},			#name : #'test:whenTrue:',			#protocol : #creating,			#sourceCode : 'test: test whenTrue: whenTrue\r\t^ self new test: test; whenTrue: whenTrue; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1543' ],		#self : OmReference [ '1544' ],		#time : DateAndTime [ '2024-03-03T08:20:47.764-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfTrueNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitIfTrueNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1544' ],		#self : OmReference [ '1545' ],		#time : DateAndTime [ '2024-03-03T08:20:47.764-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfTrueNode,				#isMetaSide : false			},			#name : #whenTrue,			#protocol : #accessing,			#sourceCode : 'whenTrue\r\t^ whenTrue',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1545' ],		#self : OmReference [ '1546' ],		#time : DateAndTime [ '2024-03-03T08:20:47.765-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfTrueNode,				#isMetaSide : false			},			#name : #'whenTrue:',			#protocol : #accessing,			#sourceCode : 'whenTrue: anObject\r\twhenTrue := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1546' ],		#self : OmReference [ '1547' ],		#time : DateAndTime [ '2024-03-03T08:20:47.765-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #constantOrZero,			#protocol : #'*PharoJs-Base-Transpiler-Optimizations',			#sourceCode : 'constantOrZero\r\t^ 0',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1547' ],		#self : OmReference [ '1548' ],		#time : DateAndTime [ '2024-03-03T08:20:47.765-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #isArray,			#protocol : #'*PharoJs-Base-Transpiler-Optimizations',			#sourceCode : 'isArray\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1548' ],		#self : OmReference [ '1549' ],		#time : DateAndTime [ '2024-03-03T08:20:47.765-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #isBlock,			#protocol : #'*PharoJs-Base-Transpiler-Optimizations',			#sourceCode : 'isBlock\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1549' ],		#self : OmReference [ '1550' ],		#time : DateAndTime [ '2024-03-03T08:20:47.766-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #'isClass:ifNot:',			#protocol : #'*PharoJs-Base-Transpiler-Optimizations',			#sourceCode : 'isClass: aClass ifNot: aBlockClosure\r\tmyClass == aClass ifFalse: [\r\t\tmyClass ifNil: [ aBlockClosure value ].\r\t\t(myClass inheritsFrom: aClass) ifFalse: [ aBlockClosure value ]]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1550' ],		#self : OmReference [ '1551' ],		#time : DateAndTime [ '2024-03-03T08:20:47.766-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #isLiteralFalse,			#protocol : #'*PharoJs-Base-Transpiler-Optimizations',			#sourceCode : 'isLiteralFalse\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1551' ],		#self : OmReference [ '1552' ],		#time : DateAndTime [ '2024-03-03T08:20:47.766-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #isLiteralTrue,			#protocol : #'*PharoJs-Base-Transpiler-Optimizations',			#sourceCode : 'isLiteralTrue\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1552' ],		#self : OmReference [ '1553' ],		#time : DateAndTime [ '2024-03-03T08:20:47.766-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptAstNode,				#isMetaSide : false			},			#name : #isNonArray,			#protocol : #'*PharoJs-Base-Transpiler-Optimizations',			#sourceCode : 'isNonArray\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1553' ],		#self : OmReference [ '1554' ],		#time : DateAndTime [ '2024-03-03T08:20:47.766-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjWhileNode class',				#isMetaSide : true			},			#name : #'test:body:',			#protocol : #creating,			#sourceCode : 'test: test body: body\r\t^ self new test: test; body: body asArray; yourself',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1554' ],		#self : OmReference [ '1555' ],		#time : DateAndTime [ '2024-03-03T08:20:47.766-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWhileNode,				#isMetaSide : false			},			#name : #'acceptVisitor:',			#protocol : #visiting,			#sourceCode : 'acceptVisitor: aPjASTVisitor\r\t^ aPjASTVisitor visitWhileNode: self',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1555' ],		#self : OmReference [ '1556' ],		#time : DateAndTime [ '2024-03-03T08:20:47.767-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWhileNode,				#isMetaSide : false			},			#name : #body,			#protocol : #accessing,			#sourceCode : 'body\r\t^ body',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1556' ],		#self : OmReference [ '1557' ],		#time : DateAndTime [ '2024-03-03T08:20:47.767-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWhileNode,				#isMetaSide : false			},			#name : #'body:',			#protocol : #accessing,			#sourceCode : 'body: anObject\r\tbody := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1557' ],		#self : OmReference [ '1558' ],		#time : DateAndTime [ '2024-03-03T08:20:47.767-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWhileNode,				#isMetaSide : false			},			#name : #canPropogateReturns,			#protocol : #testing,			#sourceCode : 'canPropogateReturns\r\t^ true " not really, but we don\'t want to add a \'return this\' at the end "',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1558' ],		#self : OmReference [ '1559' ],		#time : DateAndTime [ '2024-03-03T08:20:47.767-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWhileNode,				#isMetaSide : false			},			#name : #test,			#protocol : #accessing,			#sourceCode : 'test\r\t^ test',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1559' ],		#self : OmReference [ '1560' ],		#time : DateAndTime [ '2024-03-03T08:20:47.767-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWhileNode,				#isMetaSide : false			},			#name : #'test:',			#protocol : #accessing,			#sourceCode : 'test: anObject\r\ttest := anObject',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1560' ],		#self : OmReference [ '1561' ],		#time : DateAndTime [ '2024-03-03T08:20:47.767-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayNode,				#isMetaSide : false			},			#name : #isArray,			#protocol : #'*PharoJs-Base-Transpiler-Optimizations',			#sourceCode : 'isArray\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1561' ],		#self : OmReference [ '1562' ],		#time : DateAndTime [ '2024-03-03T08:20:47.768-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunctionNode,				#isMetaSide : false			},			#name : #isBlock,			#protocol : #'*PharoJs-Base-Transpiler-Optimizations',			#sourceCode : 'isBlock\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1562' ],		#self : OmReference [ '1563' ],		#time : DateAndTime [ '2024-03-03T08:20:47.768-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArithmeticOptimization,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #converting,			#sourceCode : 'convertReceiver: receiver args: args\r\t| left right |\r\tself inExpressionDo: [\r\t\tleft := self visit: receiver.\r\t\tright := self visit: args first].\r\t(self isOkWith: left and: right) ifFalse: [ ^ nil ].\r\t^ PjBinaryNode operator: self operator left: left right: right',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1563' ],		#self : OmReference [ '1564' ],		#time : DateAndTime [ '2024-03-03T08:20:47.768-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArithmeticOptimization,				#isMetaSide : false			},			#name : #'isOkWith:and:',			#protocol : #converting,			#sourceCode : 'isOkWith: receiver and: arg\r\t^ receiver isLiteralNode or: [ arg isLiteralNode ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1564' ],		#self : OmReference [ '1565' ],		#time : DateAndTime [ '2024-03-03T08:20:47.768-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArithmeticOptimization,				#isMetaSide : false			},			#name : #operator,			#protocol : #converting,			#sourceCode : 'operator\r\t^ self selector',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1565' ],		#self : OmReference [ '1566' ],		#time : DateAndTime [ '2024-03-03T08:20:47.768-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMinusOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#-',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1566' ],		#self : OmReference [ '1567' ],		#time : DateAndTime [ '2024-03-03T08:20:47.768-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjModOptimization,				#isMetaSide : false			},			#name : #operator,			#protocol : #converting,			#sourceCode : 'operator\r\t^ #%',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1567' ],		#self : OmReference [ '1568' ],		#time : DateAndTime [ '2024-03-03T08:20:47.769-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjModOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#\\\\',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1568' ],		#self : OmReference [ '1569' ],		#time : DateAndTime [ '2024-03-03T08:20:47.769-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlusOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#+',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1569' ],		#self : OmReference [ '1570' ],		#time : DateAndTime [ '2024-03-03T08:20:47.769-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimesOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#*',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1570' ],		#self : OmReference [ '1571' ],		#time : DateAndTime [ '2024-03-03T08:20:47.769-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjComparisonOptimization,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #converting,			#sourceCode : 'convertReceiver: receiver args: args\r\t| left right |\r\tself inExpressionDo: [\r\t\tleft := self visit: receiver.\r\t\tright := self visit: args first].\r\t(self isOkWith: left and: right) ifFalse: [ ^ nil ].\r\t^ PjBinaryNode operator: self operator left: left right: right',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1571' ],		#self : OmReference [ '1572' ],		#time : DateAndTime [ '2024-03-03T08:20:47.769-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjComparisonOptimization,				#isMetaSide : false			},			#name : #'isOkWith:and:',			#protocol : #converting,			#sourceCode : 'isOkWith: receiver and: arg\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1572' ],		#self : OmReference [ '1573' ],		#time : DateAndTime [ '2024-03-03T08:20:47.77-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjComparisonOptimization,				#isMetaSide : false			},			#name : #operator,			#protocol : #converting,			#sourceCode : 'operator\r\t^ self selector',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1573' ],		#self : OmReference [ '1574' ],		#time : DateAndTime [ '2024-03-03T08:20:47.77-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjEqualsOptimization,				#isMetaSide : false			},			#name : #'isOkWith:and:',			#protocol : #converting,			#sourceCode : 'isOkWith: receiver and: arg\r\treceiver isNonArray ifFalse: [ arg isNonArray ifFalse: [ ^ false ]].\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1574' ],		#self : OmReference [ '1575' ],		#time : DateAndTime [ '2024-03-03T08:20:47.77-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjEqualsOptimization,				#isMetaSide : false			},			#name : #operator,			#protocol : #converting,			#sourceCode : 'operator\r\t^ #==',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1575' ],		#self : OmReference [ '1576' ],		#time : DateAndTime [ '2024-03-03T08:20:47.77-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjEqualsOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#=',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1576' ],		#self : OmReference [ '1577' ],		#time : DateAndTime [ '2024-03-03T08:20:47.77-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNotEqualsOptimization,				#isMetaSide : false			},			#name : #operator,			#protocol : #converting,			#sourceCode : 'operator\r\t^ #!=',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1577' ],		#self : OmReference [ '1578' ],		#time : DateAndTime [ '2024-03-03T08:20:47.77-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNotEqualsOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#~=',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1578' ],		#self : OmReference [ '1579' ],		#time : DateAndTime [ '2024-03-03T08:20:47.771-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjGreaterEqualOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#>=',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1579' ],		#self : OmReference [ '1580' ],		#time : DateAndTime [ '2024-03-03T08:20:47.771-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjGreaterThanOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#>',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1580' ],		#self : OmReference [ '1581' ],		#time : DateAndTime [ '2024-03-03T08:20:47.771-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdenticalOptimization,				#isMetaSide : false			},			#name : #operator,			#protocol : #converting,			#sourceCode : 'operator\r\t^ #===',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1581' ],		#self : OmReference [ '1582' ],		#time : DateAndTime [ '2024-03-03T08:20:47.771-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdenticalOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#==',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1582' ],		#self : OmReference [ '1583' ],		#time : DateAndTime [ '2024-03-03T08:20:47.771-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLessEqualOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#<=',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1583' ],		#self : OmReference [ '1584' ],		#time : DateAndTime [ '2024-03-03T08:20:47.771-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLessThanOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#<',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1584' ],		#self : OmReference [ '1585' ],		#time : DateAndTime [ '2024-03-03T08:20:47.772-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNotIdenticalOptimization,				#isMetaSide : false			},			#name : #operator,			#protocol : #converting,			#sourceCode : 'operator\r\t^ #!==',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1585' ],		#self : OmReference [ '1586' ],		#time : DateAndTime [ '2024-03-03T08:20:47.772-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNotIdenticalOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#~~',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1586' ],		#self : OmReference [ '1587' ],		#time : DateAndTime [ '2024-03-03T08:20:47.772-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDoOptimization,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #converting,			#sourceCode : 'convertReceiver: aRBMessageNode args: aCollection\r\tself flag: #todo.\r\t^ nil',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1587' ],		#self : OmReference [ '1588' ],		#time : DateAndTime [ '2024-03-03T08:20:47.772-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDoOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #optimizing,			#sourceCode : 'selector\r\t^ #do:',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1588' ],		#self : OmReference [ '1589' ],		#time : DateAndTime [ '2024-03-03T08:20:47.772-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNilIfNotNilOptimization,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #converting,			#sourceCode : 'convertReceiver: receiverNode args: aCollection \r\t| notNilBlockNode |\r\taCollection first isOptimizableAsContionalBlock ifFalse: [ ^ nil ].\r\tnotNilBlockNode := aCollection second.\r\tnotNilBlockNode isOptimizableAsContionalBlock ifFalse: [ ^ nil ].\r\t(notNilBlockNode isBlock and: [ notNilBlockNode arguments notEmpty ]) ifTrue: [ | temp |\r\t\ttemp := notNilBlockNode arguments first name.\r\t\tself astConverter newTemp: temp.\r\t\t^ self\r\t\t\ttest: (self inExpressionDo: [PjAssignNode\r\t\t\t\t\t\ttarget: (PjArgumentNode identifier: temp)\r\t\t\t\t\t\texpression: (self visit: receiverNode)])\r\t\t\twhenNotNil: (self visitInlineBlock: notNilBlockNode)\r\t\t\twhenNil: (self visitInlineBlock: aCollection first)\r\t].\r\t^ self\r\t\ttest: (self inExpressionDo: [self visit: receiverNode])\r\t\twhenNotNil: (self visitInlineBlock: notNilBlockNode)\r\t\twhenNil: (self visitInlineBlock: aCollection first)',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1589' ],		#self : OmReference [ '1590' ],		#time : DateAndTime [ '2024-03-03T08:20:47.772-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNilIfNotNilOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#ifNil:ifNotNil:',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1590' ],		#self : OmReference [ '1591' ],		#time : DateAndTime [ '2024-03-03T08:20:47.773-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNilIfNotNilOptimization,				#isMetaSide : false			},			#name : #'test:whenNotNil:whenNil:',			#protocol : #optimizing,			#sourceCode : 'test: aTest whenNotNil: whenNotAst whenNil: whenAst\r\t(aTest class = PjUnaryNode and: [ aTest operator = #! ]) ifTrue: [\r\t\t^PjIfNilIfNotNilNode\r\t\t\ttest: aTest expression\r\t\t\twhenNotNil: whenAst\r\t\t\twhenNil: whenNotAst\r\t].\r\t^PjIfNilIfNotNilNode\r\t\ttest: aTest\r\t\twhenNotNil: whenNotAst\r\t\twhenNil: whenAst',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1591' ],		#self : OmReference [ '1592' ],		#time : DateAndTime [ '2024-03-03T08:20:47.773-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNilOptimization,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #optimizing,			#sourceCode : 'convertReceiver: receiverNode args: aCollection\r\taCollection first isOptimizableAsContionalBlock ifFalse: [ ^ nil ].\r\tself needsAllPaths ifTrue: [\r\t\t^ self withTemp: [: tempName | \r\t\t\t| tempNode |\r\t\t\ttempNode := PjTemporaryNode named: tempName.\r\t\t\t(super  convertReceiver: (RBAssignmentNode variable: tempNode value: receiverNode) args: aCollection,{tempNode})\r\t]].\r\t^PjIfNilNode \r\t\ttest: (self inExpressionDo: [self visit: receiverNode])\r\t\twhenNil: (self visitInlineBlock: aCollection first).',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1592' ],		#self : OmReference [ '1593' ],		#time : DateAndTime [ '2024-03-03T08:20:47.773-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNilOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#ifNil:',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1593' ],		#self : OmReference [ '1594' ],		#time : DateAndTime [ '2024-03-03T08:20:47.773-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNotNilIfNilOptimization,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #converting,			#sourceCode : 'convertReceiver: receiverNode args: aCollection \r\t^super convertReceiver: receiverNode args: aCollection reversed',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1594' ],		#self : OmReference [ '1595' ],		#time : DateAndTime [ '2024-03-03T08:20:47.773-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNotNilIfNilOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#ifNotNil:ifNil:',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1595' ],		#self : OmReference [ '1596' ],		#time : DateAndTime [ '2024-03-03T08:20:47.773-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNotNilOptimization,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #optimizing,			#sourceCode : 'convertReceiver: receiverNode args: aCollection\r\t| notNilBlockNode variableId |\r\taCollection first isOptimizableAsContionalBlock ifFalse: [ ^ nil ].\r\tself needsAllPaths ifTrue: [^super  convertReceiver: receiverNode args: {RBLiteralValueNode value: nil}, aCollection].\r\tnotNilBlockNode := aCollection first.\r\t(notNilBlockNode isBlock and: [ notNilBlockNode arguments notEmpty ]) ifFalse: [\r\t\t^PjIfNotNilNode\r\t\t\ttest: (self inExpressionDo: [self visit: receiverNode])\r\t\t\twhenNotNil: (self visitInlineBlock: notNilBlockNode)\r\t].\r\tvariableId := notNilBlockNode arguments first name.\r\tself astConverter newTemp: variableId.\r\t^ PjIfNotNilNode\r\t\t\ttest: (self inExpressionDo: [PjAssignNode\r\t\t\t\t\t\ttarget: (PjArgumentNode identifier: variableId)\r\t\t\t\t\t\texpression: (self visit: receiverNode)])\r\t\t\twhenNotNil: (self visitInlineBlock: notNilBlockNode)',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1596' ],		#self : OmReference [ '1597' ],		#time : DateAndTime [ '2024-03-03T08:20:47.774-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfNotNilOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#ifNotNil:',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1597' ],		#self : OmReference [ '1598' ],		#time : DateAndTime [ '2024-03-03T08:20:47.774-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAndOptimization,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #converting,			#sourceCode : 'convertReceiver: receiverNode args: aCollection \r\t| test |\r\taCollection first isOptimizableAsContionalBlock ifFalse: [ ^ nil ].\r\tself needsAllPaths ifTrue: [\r\t\t^super convertReceiver: receiverNode args: aCollection, { RBLiteralValueNode value: false}].\r\ttest := self inExpressionDo: [self visit: receiverNode].\r\t^PjIfTrueIfFalseNode \r\t\ttest: test\r\t\twhenTrue: (self visitInlineBlock: aCollection first)\r\t\twhenFalse: (PjLiteralValueNode value: false)',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1598' ],		#self : OmReference [ '1599' ],		#time : DateAndTime [ '2024-03-03T08:20:47.774-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAndOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#and:',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1599' ],		#self : OmReference [ '1600' ],		#time : DateAndTime [ '2024-03-03T08:20:47.774-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfFalseIfTrueOptimization,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #converting,			#sourceCode : 'convertReceiver: receiverNode args: aCollection \r\t^super convertReceiver: receiverNode args: aCollection reversed',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1600' ],		#self : OmReference [ '1601' ],		#time : DateAndTime [ '2024-03-03T08:20:47.774-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfFalseIfTrueOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#ifFalse:ifTrue:',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1601' ],		#self : OmReference [ '1602' ],		#time : DateAndTime [ '2024-03-03T08:20:47.774-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfFalseOptimization,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #converting,			#sourceCode : 'convertReceiver: receiverNode args: aCollection \r\t| test |\r\taCollection first isOptimizableAsContionalBlock ifFalse: [ ^ nil ].\r\tself needsAllPaths ifTrue: [\r\t\t^super convertReceiver: receiverNode args: { RBLiteralNode value: nil }, aCollection].\r\ttest := self inExpressionDo: [self visit: receiverNode].\r\t^PjIfTrueNode \r\t\ttest: test not\r\t\twhenTrue: (self visitInlineBlock: aCollection first)',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1602' ],		#self : OmReference [ '1603' ],		#time : DateAndTime [ '2024-03-03T08:20:47.775-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfFalseOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#ifFalse:',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1603' ],		#self : OmReference [ '1604' ],		#time : DateAndTime [ '2024-03-03T08:20:47.775-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfTrueIfFalseOptimization,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #converting,			#sourceCode : 'convertReceiver: receiverNode args: aCollection \r\t| test first second |\r\taCollection first isOptimizableAsContionalBlock ifFalse: [ ^ nil ].\r\taCollection second isOptimizableAsContionalBlock ifFalse: [ ^ nil ].\r\ttest := self inExpressionDo: [self visit: receiverNode].\r\tfirst := self visitInlineBlock: aCollection first.\r\tsecond := self visitInlineBlock: aCollection second.\r\t^PjIfTrueIfFalseNode \r\t\ttest: test\r\t\twhenTrue: first\r\t\twhenFalse: second',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1604' ],		#self : OmReference [ '1605' ],		#time : DateAndTime [ '2024-03-03T08:20:47.775-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfTrueIfFalseOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#ifTrue:ifFalse:',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1605' ],		#self : OmReference [ '1606' ],		#time : DateAndTime [ '2024-03-03T08:20:47.776-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfTrueOptimization,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #converting,			#sourceCode : 'convertReceiver: receiverNode args: aCollection \r\t| test |\r\taCollection first isOptimizableAsContionalBlock ifFalse: [ ^ nil ].\r\tself needsAllPaths ifTrue: [\r\t\t^super convertReceiver: receiverNode args: aCollection, { RBLiteralValueNode new}].\r\ttest := self inExpressionDo: [self visit: receiverNode].\r\t^PjIfTrueNode \r\t\ttest: test\r\t\twhenTrue: (self visitInlineBlock: aCollection first)',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1606' ],		#self : OmReference [ '1607' ],		#time : DateAndTime [ '2024-03-03T08:20:47.776-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIfTrueOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#ifTrue:',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1607' ],		#self : OmReference [ '1608' ],		#time : DateAndTime [ '2024-03-03T08:20:47.776-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjOrOptimization,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #converting,			#sourceCode : 'convertReceiver: receiverNode args: aCollection \r\t| test |\r\taCollection first isOptimizableAsContionalBlock ifFalse: [ ^ nil ].\r\tself needsAllPaths ifTrue: [\r\t\t^super convertReceiver: receiverNode args: { RBLiteralValueNode value: true}, aCollection].\r\ttest := self inExpressionDo: [self visit: receiverNode].\r\t^PjIfTrueIfFalseNode \r\t\ttest: test\r\t\twhenTrue: (PjLiteralValueNode value: true)\r\t\twhenFalse: (self visitInlineBlock: aCollection first)',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1608' ],		#self : OmReference [ '1609' ],		#time : DateAndTime [ '2024-03-03T08:20:47.776-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjOrOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#or:',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1609' ],		#self : OmReference [ '1610' ],		#time : DateAndTime [ '2024-03-03T08:20:47.776-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringAppendOptimization,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #converting,			#sourceCode : 'convertReceiver: receiver args: args\r\t| left |\r\tself inExpressionDo: [\r\t\tleft := self visit: receiver].\r\tleft isClass: String ifNot: [ ^ nil ].\r\t^ (PjBinaryNode\r\t\t\toperator: #+\r\t\t\tleft: left\r\t\t\tright: (self inExpressionDo: [self visit: args first])\r\t\t) myClass: String',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1610' ],		#self : OmReference [ '1611' ],		#time : DateAndTime [ '2024-03-03T08:20:47.777-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringAppendOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^#,',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1611' ],		#self : OmReference [ '1612' ],		#time : DateAndTime [ '2024-03-03T08:20:47.777-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimesRepeatOptimization,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #converting,			#sourceCode : 'convertReceiver: receiver args: args\r\t| from to body fromName toName |\r\tself astConverter isInExpression ifTrue: [ ^ nil ].\r\targs last isBlock ifFalse: [ ^ nil ].\r\tself inExpressionDo: [\r\t\tfromName := self tempName.\r\t\tfrom := PjAssignNode\r\t\t\ttarget: (PjTempVariableNode identifier: fromName)\r\t\t\texpression: (PjLiteralValueNode value: 1).\r\t\tto := self visit: receiver.\r\t\tto constantOrZero = 0 ifTrue: [\r\t\t\ttoName := self tempName.\r\t\t\tto := PjAssignNode\r\t\t\t\ttarget: (PjTempVariableNode identifier: toName)\r\t\t\t\texpression: to].\r\t].\r\t^ self handleReturn: [\r\t\tbody := (self visitInlineLoopBlock: args last) expressions.\r\t\ttoName ifNotNil: [self tempNameFree: toName].\r\t\tself tempNameFree: fromName.\r\t\tPjForLoopNode\r\t\t\tfrom: from\r\t\t\tto: to\r\t\t\tby: nil\r\t\t\tbody: body ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1612' ],		#self : OmReference [ '1613' ],		#time : DateAndTime [ '2024-03-03T08:20:47.777-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimesRepeatOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #converting,			#sourceCode : 'selector\r\t^ #timesRepeat:',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1613' ],		#self : OmReference [ '1614' ],		#time : DateAndTime [ '2024-03-03T08:20:47.777-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjToByDoOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #converting,			#sourceCode : 'selector\r\t^ #to:by:do:',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1614' ],		#self : OmReference [ '1615' ],		#time : DateAndTime [ '2024-03-03T08:20:47.777-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjToDoOptimization,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #converting,			#sourceCode : 'convertReceiver: receiver args: args\r\t| from to by body toName byName |\r\ttrue ifTrue: [ ^ nil ].\r\tself flag: #todo.\r\tself astConverter isInExpression ifTrue: [ ^ nil ].\r\targs last isBlock ifFalse: [ ^ nil ].\r\targs last arguments size = 1 ifFalse: [ ^ nil ].\r\tself inExpressionDo: [\r\t\tfrom := PjAssignNode\r\t\t\ttarget: (PjArgumentNode identifier: args last arguments first name)\r\t\t\texpression: (self visit: receiver).\r\t\tto := self visit: args first.\r\t\tto constantOrZero = 0 ifTrue: [\r\t\t\ttoName := self tempName.\r\t\t\tto := PjAssignNode\r\t\t\t\ttarget: (PjTempVariableNode identifier: toName)\r\t\t\t\texpression: to].\r\t\targs size = 3 ifTrue: [\r\t\t\tby := self visit: args second.\r\t\t\tby constantOrZero = 0 ifTrue: [\r\t\t\t\tbyName := self tempName.\r\t\t\t\tby := PjAssignNode\r\t\t\t\t\ttarget: (PjTempVariableNode identifier: byName)\r\t\t\t\t\texpression: by]\r\t]].\r\t^ self handleReturn: [\r\t\tbody := (self visitInlineLoopBlock: args last) expressions.\r\t\tbyName ifNotNil: [self tempNameFree: byName].\r\t\ttoName ifNotNil: [self tempNameFree: toName].\r\t\tPjForLoopNode\r\t\t\tfrom: from\r\t\t\tto: to\r\t\t\tby: by\r\t\t\tbody: body ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1615' ],		#self : OmReference [ '1616' ],		#time : DateAndTime [ '2024-03-03T08:20:47.777-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjToDoOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #converting,			#sourceCode : 'selector\r\t^ #to:do:',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1616' ],		#self : OmReference [ '1617' ],		#time : DateAndTime [ '2024-03-03T08:20:47.777-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWhileFalseDoOptimization,				#isMetaSide : false			},			#name : #continueValue,			#protocol : #converting,			#sourceCode : 'continueValue\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1617' ],		#self : OmReference [ '1618' ],		#time : DateAndTime [ '2024-03-03T08:20:47.778-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWhileFalseDoOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #converting,			#sourceCode : 'selector\r\t^ #whileFalse:',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1618' ],		#self : OmReference [ '1619' ],		#time : DateAndTime [ '2024-03-03T08:20:47.778-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWhileFalseOptimization,				#isMetaSide : false			},			#name : #continueValue,			#protocol : #converting,			#sourceCode : 'continueValue\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1619' ],		#self : OmReference [ '1620' ],		#time : DateAndTime [ '2024-03-03T08:20:47.778-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWhileFalseOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #converting,			#sourceCode : 'selector\r\t^ #whileFalse',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1620' ],		#self : OmReference [ '1621' ],		#time : DateAndTime [ '2024-03-03T08:20:47.778-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWhileOptimization,				#isMetaSide : false			},			#name : #continueValue,			#protocol : #converting,			#sourceCode : 'continueValue\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1621' ],		#self : OmReference [ '1622' ],		#time : DateAndTime [ '2024-03-03T08:20:47.778-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWhileOptimization,				#isMetaSide : false			},			#name : #'convertReceiver:args:',			#protocol : #converting,			#sourceCode : 'convertReceiver: receiver args: args\r\t| test body |\r\tself astConverter isInExpression ifTrue: [ ^ nil ].\r\treceiver isBlock ifFalse: [ ^ nil ].\r\targs isNotEmpty ifTrue: [args first isBlock ifFalse: [ ^ nil ]].\r\tself inExpressionDo: [\r\t\ttest := self visitInlineLoopBlock: receiver].\r\tself continueValue ifFalse: [ test := test not ].\r\t^ self handleReturn: [\r\t\tbody := args size isZero ifTrue: [\r\t\t\t\t#()\r\t\t\t] ifFalse: [\r\t\t\t\t(self visitInlineLoopBlock: args first) expressions\r\t\t\t].\r\t\tPjWhileNode test: test body: body]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1622' ],		#self : OmReference [ '1623' ],		#time : DateAndTime [ '2024-03-03T08:20:47.778-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWhileTrueDoOptimization,				#isMetaSide : false			},			#name : #continueValue,			#protocol : #converting,			#sourceCode : 'continueValue\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1623' ],		#self : OmReference [ '1624' ],		#time : DateAndTime [ '2024-03-03T08:20:47.779-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWhileTrueDoOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #converting,			#sourceCode : 'selector\r\t^ #whileTrue:',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1624' ],		#self : OmReference [ '1625' ],		#time : DateAndTime [ '2024-03-03T08:20:47.779-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWhileTrueOptimization,				#isMetaSide : false			},			#name : #continueValue,			#protocol : #converting,			#sourceCode : 'continueValue\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1625' ],		#self : OmReference [ '1626' ],		#time : DateAndTime [ '2024-03-03T08:20:47.779-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWhileTrueOptimization,				#isMetaSide : false			},			#name : #selector,			#protocol : #converting,			#sourceCode : 'selector\r\t^ #whileTrue',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1626' ],		#self : OmReference [ '1627' ],		#time : DateAndTime [ '2024-03-03T08:20:47.78-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'trueTest:',			#protocol : #'*PharoJs-Base-Transpiler-Optimizations-Optimizations',			#sourceCode : 'trueTest: test\r\t| comparator testExpression |\r\tcomparator := true.\r\ttestExpression := test.\r\t[ testExpression isNot ] whileTrue: [\r\t\tcomparator := comparator not.\r\t\ttestExpression := testExpression not ].\r\ttestExpression isComparison ifTrue: [\r\t\tcomparator ifFalse: [ testExpression := testExpression not ].\r\t\t^ self visit: testExpression ].\r\tself\r\t\tprint: comparator;\r\t\tnextPutAll: \'==\';\r\t\tatPrecedence: EqualityPrecedence+0.5 do: [self visit: testExpression]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1627' ],		#self : OmReference [ '1628' ],		#time : DateAndTime [ '2024-03-03T08:20:47.78-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitIfNilIfNotNilNode:',			#protocol : #'*PharoJs-Base-Transpiler-Optimizations-Optimizations',			#sourceCode : 'visitIfNilIfNotNilNode: aPjIfNilIfNotNilNode\r\t| then else |\r\tthen := aPjIfNilIfNotNilNode whenNil.\r\telse := aPjIfNilIfNotNilNode whenNotNil.\r\tself isAtStatementPrecedence ifFalse: [\r\t\t^ self writeIfNilExpression: aPjIfNilIfNotNilNode test then: then else: else\r\t].\r\tself\r\t\tnextPutAll: \'if(\';\r\t\tatPrecedence: EqualityPrecedence do: [ aPjIfNilIfNotNilNode test acceptVisitor: self ];\r\t\tnextPutAll: \'==\';\r\t\tnextPutAll: self class nilInJavascript;\r\t\twriteNonBrace: \'){\';\r\t\tvisit: then;\r\t\tmaybeWriteSemicolon;\r\t\tnextPutAll: \'}else{\';\r\t\tvisit: else;\r\t\twriteNonBrace: $}',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1628' ],		#self : OmReference [ '1629' ],		#time : DateAndTime [ '2024-03-03T08:20:47.781-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitIfNilNode:',			#protocol : #'*PharoJs-Base-Transpiler-Optimizations-Optimizations',			#sourceCode : 'visitIfNilNode: aPjIfNilNode \r\t| then |\r\tthen := aPjIfNilNode whenNil.\r\tself isAtStatementPrecedence ifFalse: [\r\t\t^ self writeIfNilExpression: aPjIfNilNode test then: then else: PjNilNode new\r\t].\r\tself\r\t\tnextPutAll: \'if(\';\r\t\tatPrecedence: EqualityPrecedence do: [ aPjIfNilNode test acceptVisitor: self ];\r\t\tnextPutAll: \'==\';\r\t\tnextPutAll: self class nilInJavascript;\r\t\twriteNonBrace: \'){\';\r\t\tvisit: then;\r\t\twriteNonBrace: $}',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1629' ],		#self : OmReference [ '1630' ],		#time : DateAndTime [ '2024-03-03T08:20:47.782-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitIfNotNilNode:',			#protocol : #'*PharoJs-Base-Transpiler-Optimizations-Optimizations',			#sourceCode : 'visitIfNotNilNode: aPjIfNotNilNode \r\t| body |\r\tbody := aPjIfNotNilNode whenNotNil.\r\tself isAtStatementPrecedence ifFalse: [\r\t\t^ self writeIfNilExpression: aPjIfNotNilNode test then: PjNilNode new else: body\r\t].\r\tself\r\t\tnextPutAll: \'if(\';\r\t\tatPrecedence: EqualityPrecedence do: [ aPjIfNotNilNode test acceptVisitor: self ];\r\t\tnextPutAll: \'!=\';\r\t\tnextPutAll: self class nilInJavascript;\r\t\twriteNonBrace: \'){\';\r\t\tvisit: body;\r\t\twriteNonBrace: $}',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1630' ],		#self : OmReference [ '1631' ],		#time : DateAndTime [ '2024-03-03T08:20:47.782-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitIfTrueIfFalseNode:',			#protocol : #'*PharoJs-Base-Transpiler-Optimizations-Optimizations',			#sourceCode : 'visitIfTrueIfFalseNode: aPjIfTrueIfFalseNode\r\tself isAtStatementPrecedence ifFalse: [\r\t\t^ self writeConditionalExpression: aPjIfTrueIfFalseNode test\r\t\t\tthen: aPjIfTrueIfFalseNode whenTrue\r\t\t\telse: aPjIfTrueIfFalseNode whenFalse\r\t].\r\tself\r\t\tnextPutAll: \'if(\';\r\t\ttrueTest: aPjIfTrueIfFalseNode test;\r\t\twriteNonBrace: \'){\';\r\t\tvisit: aPjIfTrueIfFalseNode whenTrue;\r\t\twriteNonBrace: \'}else{\';\r\t\tvisit: aPjIfTrueIfFalseNode whenFalse;\r\t\twriteNonBrace: $}',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1631' ],		#self : OmReference [ '1632' ],		#time : DateAndTime [ '2024-03-03T08:20:47.783-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitIfTrueNode:',			#protocol : #'*PharoJs-Base-Transpiler-Optimizations-Optimizations',			#sourceCode : 'visitIfTrueNode: aPjIfTrueNode\r\tself isAtStatementPrecedence ifFalse: [\r\t\t^ self writeConditionalExpression: aPjIfTrueNode test then: PjNilNode new else: aPjIfTrueNode whenTrue\r\t].\r\tself\r\t\tnextPutAll: \'if(\';\r\t\ttrueTest: aPjIfTrueNode test;\r\t\twriteNonBrace: \'){\';\r\t\tvisit: aPjIfTrueNode whenTrue;\r\t\twriteNonBrace: $}',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1632' ],		#self : OmReference [ '1633' ],		#time : DateAndTime [ '2024-03-03T08:20:47.784-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitToDoByNode:',			#protocol : #'*PharoJs-Base-Transpiler-Optimizations-Optimizations',			#sourceCode : 'visitToDoByNode: aPjToDoByNode \r\t| step limit |\r\tlimit := aPjToDoByNode to constantOrZero.\r\tself\r\t\tnextPutAll: \'for(var \';\r\t\tvisit: aPjToDoByNode from.\r\tlimit = 0 ifTrue: [\r\t\tself\r\t\t\tnextPut: $,;\r\t\t\tvisit: aPjToDoByNode to].\r\taPjToDoByNode by ifNil: [\r\t\tstep := 1\r\t] ifNotNil: [\r\t\tstep := aPjToDoByNode by constantOrZero.\r\t\tstep = 0 ifTrue: [\r\t\t\tself\r\t\t\t\tnextPut: $,;\r\t\t\t\tvisit: aPjToDoByNode by\t].\r\t].\r\tself nextPut: $;.\r\tstep = 0 ifTrue: [\r\t\tself\r\t\t\tvisit: aPjToDoByNode by target;\r\t\t\tnextPutAll: \'>=0?\'].\r\tstep >= 0 ifTrue: [\r\t\tself\r\t\t\tvisit: aPjToDoByNode from target;\r\t\t\tnextPutAll: \'<=\';\r\t\t\tvisit: aPjToDoByNode to target].\r\tstep = 0 ifTrue: [\tself nextPut: $:].\r\tstep <= 0 ifTrue: [\r\t\tself\r\t\t\tvisit: aPjToDoByNode from target;\r\t\t\tnextPutAll: \'>=\';\r\t\t\tvisit: aPjToDoByNode to target\r\t].\r\tself nextPut: $;.\r\tstep = 1 ifTrue: [ self nextPutAll: \'++\'].\r\tstep = -1 ifTrue: [ self nextPutAll: \'--\'].\r\tself visit: aPjToDoByNode from target.\r\tstep abs = 1 ifFalse: [\r\t\tself\r\t\t\tnextPutAll: \'+=\';\r\t\t\tvisit: aPjToDoByNode by target\r\t].\r\tself writeLoopBody: aPjToDoByNode body',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1633' ],		#self : OmReference [ '1634' ],		#time : DateAndTime [ '2024-03-03T08:20:47.784-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'visitWhileNode:',			#protocol : #'*PharoJs-Base-Transpiler-Optimizations-Optimizations',			#sourceCode : 'visitWhileNode: aPjWhileNode\r\tself isAtStatementPrecedence\r\t\tifFalse: [ self error: \'PjWhileNode not at statement level\' ].\r\tself\r\t\tnextPutAll: \'while(\';\r\t\ttrueTest: aPjWhileNode test.\r\tself writeLoopBody: aPjWhileNode body',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1634' ],		#self : OmReference [ '1635' ],		#time : DateAndTime [ '2024-03-03T08:20:47.785-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'writeConditionalExpression:then:else:',			#protocol : #'*PharoJs-Base-Transpiler-Optimizations-Optimizations',			#sourceCode : 'writeConditionalExpression: test then: thenAst else: elseAst\r\tself atPrecedence: ConditionalPrecedence do: [.\r\t\tself\r\t\t\ttrueTest: test.\r\t\tthenAst isLiteralTrue ifTrue: [\r\t\t\t^ self\r\t\t\t\tnextPutAll: \'||\';\r\t\t\t\tvisit: elseAst\r\t\t].\r\t\telseAst isLiteralFalse ifTrue: [\r\t\t\t^ self\r\t\t\t\tnextPutAll: \'&&\';\r\t\t\t\tvisit: thenAst\r\t\t].\r\t\tself\r\t\t\tnextPut: $?;\r\t\t\tvisit: thenAst;\r\t\t\tnextPut: $:;\r\t\t\tvisit: elseAst\r\t]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1635' ],		#self : OmReference [ '1636' ],		#time : DateAndTime [ '2024-03-03T08:20:47.786-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'writeIfNilExpression:then:else:',			#protocol : #'*PharoJs-Base-Transpiler-Optimizations-Optimizations',			#sourceCode : 'writeIfNilExpression: test then: thenAst else: elseAst\r\tself writeConditionalExpression: (PjBinaryNode operator: #== left: test  right: PjNilNode new)\r\t\tthen: thenAst \r\t\telse: elseAst',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1636' ],		#self : OmReference [ '1637' ],		#time : DateAndTime [ '2024-03-03T08:20:47.787-05:00' ],		#trigger : OmReference [ '1438' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringGenerator,				#isMetaSide : false			},			#name : #'writeLoopBody:',			#protocol : #'*PharoJs-Base-Transpiler-Optimizations-Optimizations',			#sourceCode : 'writeLoopBody: body\r\tself writeNonBrace: \'){\'.\r\tbody asOrderedCollection\r\t\tdo: [ :statement | statement acceptVisitor: self ]\r\t\tseparatedBy: [ self maybeWriteSemicolon ].\r\tself writeCloseBrace',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:47.999-05:00' ],		#prior : OmReference [ '1637' ],		#self : OmReference [ '1638' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-Base-JS-CoreLibraries-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1638' ],		#self : OmReference [ '1639' ],		#time : DateAndTime [ '2024-03-03T08:20:48.04-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-JS-CoreLibraries-Kernel,		#affectedPackageName : #PharoJs-Base-JS-CoreLibraries	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1639' ],		#self : OmReference [ '1640' ],		#time : DateAndTime [ '2024-03-03T08:20:48.042-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTCollection\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTCollection,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTCollection classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTCollection classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTCollection,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1640' ],		#self : OmReference [ '1641' ],		#time : DateAndTime [ '2024-03-03T08:20:48.045-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTCollection\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTCollection,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTCollection classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTCollection classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTCollection,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the Collection trait.\r\rBecause Collection cannot be inserted between Array and Object in the Javascript world, I have all the pieces that are needed by both PjCollection and PjArray.',				#stamp : ''			},			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries		},		#oldComment : '',		#newComment : 'I am the Collection trait.\r\rBecause Collection cannot be inserted between Array and Object in the Javascript world, I have all the pieces that are needed by both PjCollection and PjArray.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1641' ],		#self : OmReference [ '1642' ],		#time : DateAndTime [ '2024-03-03T08:20:48.053-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTArray\r\tuses: PjTCollection\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : 'PjTCollection'			},			#name : #PjTArray,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTArray classTrait\r\tuses: PjTCollection classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTCollection classTrait'				},				#name : #'PjTArray classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTArray,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1642' ],		#self : OmReference [ '1643' ],		#time : DateAndTime [ '2024-03-03T08:20:48.057-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTArray\r\tuses: PjTCollection\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : 'PjTCollection'			},			#name : #PjTArray,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTArray classTrait\r\tuses: PjTCollection classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTCollection classTrait'				},				#name : #'PjTArray classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTArray,					#isMetaSide : false				},				#parent : @8,				#content : 'I implement operations for array-like things in Javascript',				#stamp : ''			},			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries		},		#oldComment : '',		#newComment : 'I implement operations for array-like things in Javascript',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1643' ],		#self : OmReference [ '1644' ],		#time : DateAndTime [ '2024-03-03T08:20:48.065-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTArrayLike\r\tuses: PjTArray\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : 'PjTArray'			},			#name : #PjTArrayLike,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTArrayLike classTrait\r\tuses: PjTArray classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTArray classTrait'				},				#name : #'PjTArrayLike classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTArrayLike,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1644' ],		#self : OmReference [ '1645' ],		#time : DateAndTime [ '2024-03-03T08:20:48.068-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTArrayLike\r\tuses: PjTArray\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : 'PjTArray'			},			#name : #PjTArrayLike,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTArrayLike classTrait\r\tuses: PjTArray classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTArray classTrait'				},				#name : #'PjTArrayLike classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTArrayLike,					#isMetaSide : false				},				#parent : @8,				#content : 'I provide behavior shared between JS classes that should have array-like behavior but that does not fit Array. \r\rExamples are: HTMLCollection and NodeList. From the JS point of view, they are not constructors, so we can\'t instantiate them for creating subcollections (as with e.g. allButFirst). So, we redefine method species to answer Array.',				#stamp : ''			},			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries		},		#oldComment : '',		#newComment : 'I provide behavior shared between JS classes that should have array-like behavior but that does not fit Array. \r\rExamples are: HTMLCollection and NodeList. From the JS point of view, they are not constructors, so we can\'t instantiate them for creating subcollections (as with e.g. allButFirst). So, we redefine method species to answer Array.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1645' ],		#self : OmReference [ '1646' ],		#time : DateAndTime [ '2024-03-03T08:20:48.076-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-JS-CoreLibraries-Chronology,		#affectedPackageName : #PharoJs-Base-JS-CoreLibraries	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1646' ],		#self : OmReference [ '1647' ],		#time : DateAndTime [ '2024-03-03T08:20:48.077-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTDate\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Chronology\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTDate,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTDate classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTDate classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTDate,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-Base-JS-CoreLibraries-Chronology,			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1647' ],		#self : OmReference [ '1648' ],		#time : DateAndTime [ '2024-03-03T08:20:48.079-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTDate\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Chronology\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTDate,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTDate classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTDate classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTDate,					#isMetaSide : false				},				#parent : @8,				#content : 'I gather methods shared by extensions to JS Date (PjTime, PjDate, PjDateAndTime)',				#stamp : ''			},			#category : #PharoJs-Base-JS-CoreLibraries-Chronology,			#package : #PharoJs-Base-JS-CoreLibraries		},		#oldComment : '',		#newComment : 'I gather methods shared by extensions to JS Date (PjTime, PjDate, PjDateAndTime)',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1648' ],		#self : OmReference [ '1649' ],		#time : DateAndTime [ '2024-03-03T08:20:48.099-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTDateAndTime\r\tuses: PjTDate\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Chronology\'',				#superclassName : #Trait,				#traitCompositionSource : 'PjTDate'			},			#name : #PjTDateAndTime,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTDateAndTime classTrait\r\tuses: PjTDate classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTDate classTrait'				},				#name : #'PjTDateAndTime classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTDateAndTime,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-Base-JS-CoreLibraries-Chronology,			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1649' ],		#self : OmReference [ '1650' ],		#time : DateAndTime [ '2024-03-03T08:20:48.101-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTDateAndTime\r\tuses: PjTDate\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Chronology\'',				#superclassName : #Trait,				#traitCompositionSource : 'PjTDate'			},			#name : #PjTDateAndTime,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTDateAndTime classTrait\r\tuses: PjTDate classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTDate classTrait'				},				#name : #'PjTDateAndTime classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTDateAndTime,					#isMetaSide : false				},				#parent : @8,				#content : 'A DateAndTime trait',				#stamp : ''			},			#category : #PharoJs-Base-JS-CoreLibraries-Chronology,			#package : #PharoJs-Base-JS-CoreLibraries		},		#oldComment : '',		#newComment : 'A DateAndTime trait',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1650' ],		#self : OmReference [ '1651' ],		#time : DateAndTime [ '2024-03-03T08:20:48.109-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-JS-CoreLibraries-Controllers,		#affectedPackageName : #PharoJs-Base-JS-CoreLibraries	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1651' ],		#self : OmReference [ '1652' ],		#time : DateAndTime [ '2024-03-03T08:20:48.11-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTDomController\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Controllers\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTDomController,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTDomController classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTDomController classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTDomController,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-Base-JS-CoreLibraries-Controllers,			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1652' ],		#self : OmReference [ '1653' ],		#time : DateAndTime [ '2024-03-03T08:20:48.111-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTDomController\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Controllers\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTDomController,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTDomController classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTDomController classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTDomController,					#isMetaSide : false				},				#parent : @8,				#content : 'I provide behavior for a controller for DOM objects.\r I can subscribe to events (e.g. click, change, key stroke) to perform some action when they occur.\rThe API allows handling both DOM objects direclty or by providing their IDs.\r',				#stamp : ''			},			#category : #PharoJs-Base-JS-CoreLibraries-Controllers,			#package : #PharoJs-Base-JS-CoreLibraries		},		#oldComment : '',		#newComment : 'I provide behavior for a controller for DOM objects.\r I can subscribe to events (e.g. click, change, key stroke) to perform some action when they occur.\rThe API allows handling both DOM objects direclty or by providing their IDs.\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1653' ],		#self : OmReference [ '1654' ],		#time : DateAndTime [ '2024-03-03T08:20:48.118-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTKernelClass\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTKernelClass,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTKernelClass classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTKernelClass classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTKernelClass,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1654' ],		#self : OmReference [ '1655' ],		#time : DateAndTime [ '2024-03-03T08:20:48.119-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTKernelClass\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTKernelClass,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTKernelClass classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTKernelClass classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTKernelClass,					#isMetaSide : false				},				#parent : @8,				#content : 'An extension class is a class that provides methods to augment a javascript constructor, and thus provide primitive operations from the Pharo world.\r\rThe convention is to name extension classes after the javascript constructor, prefixed by \'Pj\'.',				#stamp : ''			},			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries		},		#oldComment : '',		#newComment : 'An extension class is a class that provides methods to augment a javascript constructor, and thus provide primitive operations from the Pharo world.\r\rThe convention is to name extension classes after the javascript constructor, prefixed by \'Pj\'.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1655' ],		#self : OmReference [ '1656' ],		#time : DateAndTime [ '2024-03-03T08:20:48.126-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTMagnitude\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTMagnitude,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTMagnitude classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTMagnitude classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTMagnitude,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1656' ],		#self : OmReference [ '1657' ],		#time : DateAndTime [ '2024-03-03T08:20:48.127-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTMagnitude\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTMagnitude,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTMagnitude classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTMagnitude classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTMagnitude,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the Magnitude trait.\r\rBecause Magnitude cannot be inserted between Number and Object in the Javascript world, I have all the pieces that are needed by both PjMagnitude and PjNumber.',				#stamp : ''			},			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries		},		#oldComment : '',		#newComment : 'I am the Magnitude trait.\r\rBecause Magnitude cannot be inserted between Number and Object in the Javascript world, I have all the pieces that are needed by both PjMagnitude and PjNumber.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1657' ],		#self : OmReference [ '1658' ],		#time : DateAndTime [ '2024-03-03T08:20:48.128-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjJsObjectBuilder\r\tinstanceVariableNames: \'convertedObjects\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjJsObjectBuilder,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjJsObjectBuilder,						#isMetaSide : false					},					#name : #convertedObjects,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjJsObjectBuilder class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjJsObjectBuilder class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjJsObjectBuilder,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1658' ],		#self : OmReference [ '1659' ],		#time : DateAndTime [ '2024-03-03T08:20:48.139-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjDomController\r\tuses: PjTDomController\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjBrowserGlobals\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Controllers\'',				#superclassName : 'Object',				#traitCompositionSource : 'PjTDomController'			},			#name : #PjDomController,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDomController class\r\tuses: PjTDomController classTrait + PjTDomController\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTDomController classTrait + PjTDomController'				},				#name : #'PjDomController class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDomController,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Controllers,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomController,						#isMetaSide : false					},					#name : #PjBrowserGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1659' ],		#self : OmReference [ '1660' ],		#time : DateAndTime [ '2024-03-03T08:20:48.141-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjDomController\r\tuses: PjTDomController\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjBrowserGlobals\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Controllers\'',				#superclassName : 'Object',				#traitCompositionSource : 'PjTDomController'			},			#name : #PjDomController,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDomController class\r\tuses: PjTDomController classTrait + PjTDomController\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTDomController classTrait + PjTDomController'				},				#name : #'PjDomController class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDomController,					#isMetaSide : false				},				#parent : @8,				#content : 'Generic controller for DOM objects in web browser',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Controllers,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomController,						#isMetaSide : false					},					#name : #PjBrowserGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'Generic controller for DOM objects in web browser',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1660' ],		#self : OmReference [ '1661' ],		#time : DateAndTime [ '2024-03-03T08:20:48.158-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjDate\r\tuses: PjTDate\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'ChronologyConstants\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Chronology\'',				#superclassName : 'Object',				#traitCompositionSource : 'PjTDate'			},			#name : #PjDate,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDate class\r\tuses: PjTDate classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTDate classTrait'				},				#name : #'PjDate class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDate,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Chronology,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDate,						#isMetaSide : false					},					#name : #ChronologyConstants,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1661' ],		#self : OmReference [ '1662' ],		#time : DateAndTime [ '2024-03-03T08:20:48.16-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjDate\r\tuses: PjTDate\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'ChronologyConstants\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Chronology\'',				#superclassName : 'Object',				#traitCompositionSource : 'PjTDate'			},			#name : #PjDate,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDate class\r\tuses: PjTDate classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTDate classTrait'				},				#name : #'PjDate class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDate,					#isMetaSide : false				},				#parent : @8,				#content : 'Date representation as JavaScript Date',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Chronology,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDate,						#isMetaSide : false					},					#name : #ChronologyConstants,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'Date representation as JavaScript Date',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1662' ],		#self : OmReference [ '1663' ],		#time : DateAndTime [ '2024-03-03T08:20:48.169-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjDateAndTime\r\tuses: PjTDateAndTime\r\tinstanceVariableNames: \'offset\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'ChronologyConstants\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Chronology\'',				#superclassName : 'Object',				#traitCompositionSource : 'PjTDateAndTime'			},			#name : #PjDateAndTime,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDateAndTime,						#isMetaSide : false					},					#name : #offset,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDateAndTime class\r\tuses: PjTDateAndTime classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTDateAndTime classTrait'				},				#name : #'PjDateAndTime class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDateAndTime,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Chronology,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDateAndTime,						#isMetaSide : false					},					#name : #ChronologyConstants,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1663' ],		#self : OmReference [ '1664' ],		#time : DateAndTime [ '2024-03-03T08:20:48.171-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjDateAndTime\r\tuses: PjTDateAndTime\r\tinstanceVariableNames: \'offset\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'ChronologyConstants\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Chronology\'',				#superclassName : 'Object',				#traitCompositionSource : 'PjTDateAndTime'			},			#name : #PjDateAndTime,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDateAndTime,						#isMetaSide : false					},					#name : #offset,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDateAndTime class\r\tuses: PjTDateAndTime classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTDateAndTime classTrait'				},				#name : #'PjDateAndTime class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDateAndTime,					#isMetaSide : false				},				#parent : @8,				#content : 'DateAndTime representation as JavaScript Date',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Chronology,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDateAndTime,						#isMetaSide : false					},					#name : #ChronologyConstants,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'DateAndTime representation as JavaScript Date',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1664' ],		#self : OmReference [ '1665' ],		#time : DateAndTime [ '2024-03-03T08:20:48.178-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjTime\r\tuses: PjTDateAndTime\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'ChronologyConstants\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Chronology\'',				#superclassName : 'Object',				#traitCompositionSource : 'PjTDateAndTime'			},			#name : #PjTime,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTime class\r\tuses: PjTDateAndTime classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTDateAndTime classTrait'				},				#name : #'PjTime class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTime,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Chronology,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTime,						#isMetaSide : false					},					#name : #ChronologyConstants,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1665' ],		#self : OmReference [ '1666' ],		#time : DateAndTime [ '2024-03-03T08:20:48.181-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjTime\r\tuses: PjTDateAndTime\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'ChronologyConstants\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Chronology\'',				#superclassName : 'Object',				#traitCompositionSource : 'PjTDateAndTime'			},			#name : #PjTime,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTime class\r\tuses: PjTDateAndTime classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTDateAndTime classTrait'				},				#name : #'PjTime class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTime,					#isMetaSide : false				},				#parent : @8,				#content : 'Time in the Javascript world',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Chronology,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTime,						#isMetaSide : false					},					#name : #ChronologyConstants,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'Time in the Javascript world',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1666' ],		#self : OmReference [ '1667' ],		#time : DateAndTime [ '2024-03-03T08:20:48.189-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjObject\r\tuses: PjTKernelClass\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjDomGlobals\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : 'PjTKernelClass'			},			#name : #PjObject,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjObject class\r\tuses: PjTKernelClass classTrait\r\tinstanceVariableNames: \'nextIdentityHash\'',					#traitCompositionSource : 'PjTKernelClass classTrait'				},				#name : #'PjObject class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjObject class'						},						#name : #nextIdentityHash,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjObject,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjObject,						#isMetaSide : false					},					#name : #PjDomGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1667' ],		#self : OmReference [ '1668' ],		#time : DateAndTime [ '2024-03-03T08:20:48.191-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjObject\r\tuses: PjTKernelClass\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjDomGlobals\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : 'PjTKernelClass'			},			#name : #PjObject,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjObject class\r\tuses: PjTKernelClass classTrait\r\tinstanceVariableNames: \'nextIdentityHash\'',					#traitCompositionSource : 'PjTKernelClass classTrait'				},				#name : #'PjObject class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjObject class'						},						#name : #nextIdentityHash,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjObject,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent the top-level Object constructor/class in Javascript\r\rAll my direct subclasses exist as constructors/types in Javascript.  The classes exist to replace Smalltalk primitives or inlining.\r\rMethods from these classes are added to the built-in constructor prototypes or directly in the constructors.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjObject,						#isMetaSide : false					},					#name : #PjDomGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'I represent the top-level Object constructor/class in Javascript\r\rAll my direct subclasses exist as constructors/types in Javascript.  The classes exist to replace Smalltalk primitives or inlining.\r\rMethods from these classes are added to the built-in constructor prototypes or directly in the constructors.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1668' ],		#self : OmReference [ '1669' ],		#time : DateAndTime [ '2024-03-03T08:20:48.193-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjArray\r\tuses: PjTArray + PjTKernelClass\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : 'PjTArray + PjTKernelClass'			},			#name : #PjArray,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjArray class\r\tuses: PjTArray classTrait + PjTKernelClass classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTArray classTrait + PjTKernelClass classTrait'				},				#name : #'PjArray class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjArray,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1669' ],		#self : OmReference [ '1670' ],		#time : DateAndTime [ '2024-03-03T08:20:48.194-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjArray\r\tuses: PjTArray + PjTKernelClass\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : 'PjTArray + PjTKernelClass'			},			#name : #PjArray,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjArray class\r\tuses: PjTArray classTrait + PjTKernelClass classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTArray classTrait + PjTKernelClass classTrait'				},				#name : #'PjArray class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjArray,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent the Javascript Array type.  I am the implementation for Arrays and OrderedCollections, since Javascript Arrays act pretty-much like Smalltalk OrderedCollections.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I represent the Javascript Array type.  I am the implementation for Arrays and OrderedCollections, since Javascript Arrays act pretty-much like Smalltalk OrderedCollections.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1670' ],		#self : OmReference [ '1671' ],		#time : DateAndTime [ '2024-03-03T08:20:48.198-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjArray subclass: #PjByteArray\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjArray',				#traitCompositionSource : '{}'			},			#name : #PjByteArray,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjByteArray class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjByteArray class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjByteArray,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1671' ],		#self : OmReference [ '1672' ],		#time : DateAndTime [ '2024-03-03T08:20:48.199-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjArray subclass: #PjByteArray\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjArray',				#traitCompositionSource : '{}'			},			#name : #PjByteArray,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjByteArray class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjByteArray class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjByteArray,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the Javascript embodiment of ByteArray.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the Javascript embodiment of ByteArray.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1672' ],		#self : OmReference [ '1673' ],		#time : DateAndTime [ '2024-03-03T08:20:48.2-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjArray subclass: #PjSet\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjArray',				#traitCompositionSource : '{}'			},			#name : #PjSet,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSet class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSet class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSet,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1673' ],		#self : OmReference [ '1674' ],		#time : DateAndTime [ '2024-03-03T08:20:48.201-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjArray subclass: #PjSet\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjArray',				#traitCompositionSource : '{}'			},			#name : #PjSet,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSet class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSet class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSet,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the Javascript embodiment of Set.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the Javascript embodiment of Set.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1674' ],		#self : OmReference [ '1675' ],		#time : DateAndTime [ '2024-03-03T08:20:48.202-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjArray subclass: #PjSortedCollection\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjArray',				#traitCompositionSource : '{}'			},			#name : #PjSortedCollection,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSortedCollection class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSortedCollection class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSortedCollection,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1675' ],		#self : OmReference [ '1676' ],		#time : DateAndTime [ '2024-03-03T08:20:48.204-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjArray subclass: #PjSortedCollection\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjArray',				#traitCompositionSource : '{}'			},			#name : #PjSortedCollection,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSortedCollection class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSortedCollection class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSortedCollection,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the Javascript embodiment of SortedCollection.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the Javascript embodiment of SortedCollection.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1676' ],		#self : OmReference [ '1677' ],		#time : DateAndTime [ '2024-03-03T08:20:48.205-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjArray variableSubclass: #PjStack\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjArray',				#traitCompositionSource : '{}'			},			#name : #PjStack,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjStack class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjStack class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjStack,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1677' ],		#self : OmReference [ '1678' ],		#time : DateAndTime [ '2024-03-03T08:20:48.206-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjArray variableSubclass: #PjStack\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjArray',				#traitCompositionSource : '{}'			},			#name : #PjStack,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjStack class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjStack class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjStack,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a minimal implementation of Stack',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a minimal implementation of Stack',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1678' ],		#self : OmReference [ '1679' ],		#time : DateAndTime [ '2024-03-03T08:20:48.207-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjBoolean\r\tuses: PjTKernelClass\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : 'PjTKernelClass'			},			#name : #PjBoolean,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBoolean class\r\tuses: PjTKernelClass classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTKernelClass classTrait'				},				#name : #'PjBoolean class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBoolean,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1679' ],		#self : OmReference [ '1680' ],		#time : DateAndTime [ '2024-03-03T08:20:48.208-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjBoolean\r\tuses: PjTKernelClass\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : 'PjTKernelClass'			},			#name : #PjBoolean,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBoolean class\r\tuses: PjTKernelClass classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTKernelClass classTrait'				},				#name : #'PjBoolean class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBoolean,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent the Javascript Boolean type.  Many of my operations may be optimized away, in which case these are fallbacks for perform: etc.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I represent the Javascript Boolean type.  Many of my operations may be optimized away, in which case these are fallbacks for perform: etc.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1680' ],		#self : OmReference [ '1681' ],		#time : DateAndTime [ '2024-03-03T08:20:48.209-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjCollection\r\tuses: PjTCollection\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : 'PjTCollection'			},			#name : #PjCollection,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjCollection class\r\tuses: PjTCollection classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTCollection classTrait'				},				#name : #'PjCollection class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjCollection,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1681' ],		#self : OmReference [ '1682' ],		#time : DateAndTime [ '2024-03-03T08:20:48.21-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjCollection\r\tuses: PjTCollection\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : 'PjTCollection'			},			#name : #PjCollection,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjCollection class\r\tuses: PjTCollection classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTCollection classTrait'				},				#name : #'PjCollection class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjCollection,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the Javascript embodiment of Collection.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the Javascript embodiment of Collection.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1682' ],		#self : OmReference [ '1683' ],		#time : DateAndTime [ '2024-03-03T08:20:48.218-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjCollection subclass: #PjDictionary\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjCollection',				#traitCompositionSource : '{}'			},			#name : #PjDictionary,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDictionary class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDictionary class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDictionary,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1683' ],		#self : OmReference [ '1684' ],		#time : DateAndTime [ '2024-03-03T08:20:48.219-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjCollection subclass: #PjDictionary\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjCollection',				#traitCompositionSource : '{}'			},			#name : #PjDictionary,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDictionary class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDictionary class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDictionary,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the Javascript embodiment of Dictionary.\r\rNote that the current implemenation uses objects, so only string keys are valid.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the Javascript embodiment of Dictionary.\r\rNote that the current implemenation uses objects, so only string keys are valid.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1684' ],		#self : OmReference [ '1685' ],		#time : DateAndTime [ '2024-03-03T08:20:48.222-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDictionary subclass: #PjIdentityDictionary\r\tinstanceVariableNames: \'map\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjDictionary',				#traitCompositionSource : '{}'			},			#name : #PjIdentityDictionary,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjIdentityDictionary,						#isMetaSide : false					},					#name : #map,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIdentityDictionary class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIdentityDictionary class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIdentityDictionary,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1685' ],		#self : OmReference [ '1686' ],		#time : DateAndTime [ '2024-03-03T08:20:48.224-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDictionary subclass: #PjIdentityDictionary\r\tinstanceVariableNames: \'map\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjDictionary',				#traitCompositionSource : '{}'			},			#name : #PjIdentityDictionary,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjIdentityDictionary,						#isMetaSide : false					},					#name : #map,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIdentityDictionary class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIdentityDictionary class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIdentityDictionary,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the Javascript embodiment of IdentityDictionary.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the Javascript embodiment of IdentityDictionary.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1686' ],		#self : OmReference [ '1687' ],		#time : DateAndTime [ '2024-03-03T08:20:48.225-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjError\r\tuses: PjTKernelClass\r\tinstanceVariableNames: \'message\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : 'PjTKernelClass'			},			#name : #PjError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjError,						#isMetaSide : false					},					#name : #message,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjError class\r\tuses: PjTKernelClass classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTKernelClass classTrait'				},				#name : #'PjError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjError,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1687' ],		#self : OmReference [ '1688' ],		#time : DateAndTime [ '2024-03-03T08:20:48.226-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjError\r\tuses: PjTKernelClass\r\tinstanceVariableNames: \'message\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : 'PjTKernelClass'			},			#name : #PjError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjError,						#isMetaSide : false					},					#name : #message,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjError class\r\tuses: PjTKernelClass classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTKernelClass classTrait'				},				#name : #'PjError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjError,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent the Javascript Error type.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I represent the Javascript Error type.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1688' ],		#self : OmReference [ '1689' ],		#time : DateAndTime [ '2024-03-03T08:20:48.228-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjFunction\r\tuses: PjTKernelClass\r\tinstanceVariableNames: \'subclasses\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjUniversalGlobals\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : 'PjTKernelClass'			},			#name : #PjFunction,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjFunction,						#isMetaSide : false					},					#name : #subclasses,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjFunction class\r\tuses: PjTKernelClass classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTKernelClass classTrait'				},				#name : #'PjFunction class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjFunction,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjFunction,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1689' ],		#self : OmReference [ '1690' ],		#time : DateAndTime [ '2024-03-03T08:20:48.228-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjFunction\r\tuses: PjTKernelClass\r\tinstanceVariableNames: \'subclasses\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjUniversalGlobals\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : 'PjTKernelClass'			},			#name : #PjFunction,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjFunction,						#isMetaSide : false					},					#name : #subclasses,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjFunction class\r\tuses: PjTKernelClass classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTKernelClass classTrait'				},				#name : #'PjFunction class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjFunction,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent the Javascript Function type.  I am the implementation for CompiledMethod and BlockClosure.\r\rAll the instance creation category *should* be in PjClass instead, but is here so new etc. work on ordinary Javascript "classes".',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjFunction,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'I represent the Javascript Function type.  I am the implementation for CompiledMethod and BlockClosure.\r\rAll the instance creation category *should* be in PjClass instead, but is here so new etc. work on ordinary Javascript "classes".',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1690' ],		#self : OmReference [ '1691' ],		#time : DateAndTime [ '2024-03-03T08:20:48.231-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFunction subclass: #PjClass\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjFunction',				#traitCompositionSource : '{}'			},			#name : #PjClass,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClass class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClass class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClass,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1691' ],		#self : OmReference [ '1692' ],		#time : DateAndTime [ '2024-03-03T08:20:48.232-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFunction subclass: #PjClass\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjFunction',				#traitCompositionSource : '{}'			},			#name : #PjClass,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClass class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClass class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClass,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the implementation for Class and Behavior.\r\rI am a subclass of Javascript Function with appropriate methods for Class and Behavior.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the implementation for Class and Behavior.\r\rI am a subclass of Javascript Function with appropriate methods for Class and Behavior.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1692' ],		#self : OmReference [ '1693' ],		#time : DateAndTime [ '2024-03-03T08:20:48.236-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjHTMLCollection\r\tuses: PjTArrayLike + PjTKernelClass\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : 'PjTArrayLike + PjTKernelClass'			},			#name : #PjHTMLCollection,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjHTMLCollection class\r\tuses: PjTArrayLike classTrait + PjTKernelClass classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTArrayLike classTrait + PjTKernelClass classTrait'				},				#name : #'PjHTMLCollection class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjHTMLCollection,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1693' ],		#self : OmReference [ '1694' ],		#time : DateAndTime [ '2024-03-03T08:20:48.237-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjHTMLCollection\r\tuses: PjTArrayLike + PjTKernelClass\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : 'PjTArrayLike + PjTKernelClass'			},			#name : #PjHTMLCollection,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjHTMLCollection class\r\tuses: PjTArrayLike classTrait + PjTKernelClass classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTArrayLike classTrait + PjTKernelClass classTrait'				},				#name : #'PjHTMLCollection class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjHTMLCollection,					#isMetaSide : false				},				#parent : @8,				#content : 'I provide Smalltalk method to the HTMLCollection "class" in web browsers. Should not be included in NodeJS code.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I provide Smalltalk method to the HTMLCollection "class" in web browsers. Should not be included in NodeJS code.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1694' ],		#self : OmReference [ '1695' ],		#time : DateAndTime [ '2024-03-03T08:20:48.24-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjMagnitude\r\tuses: PjTMagnitude\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : 'PjTMagnitude'			},			#name : #PjMagnitude,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMagnitude class\r\tuses: PjTMagnitude classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTMagnitude classTrait'				},				#name : #'PjMagnitude class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMagnitude,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1695' ],		#self : OmReference [ '1696' ],		#time : DateAndTime [ '2024-03-03T08:20:48.241-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjMagnitude\r\tuses: PjTMagnitude\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : 'PjTMagnitude'			},			#name : #PjMagnitude,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMagnitude class\r\tuses: PjTMagnitude classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTMagnitude classTrait'				},				#name : #'PjMagnitude class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMagnitude,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the Javascript embodiment of Magnitude.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the Javascript embodiment of Magnitude.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1696' ],		#self : OmReference [ '1697' ],		#time : DateAndTime [ '2024-03-03T08:20:48.243-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjMagnitude subclass: #PjDuration\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'ChronologyConstants\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Chronology\'',				#superclassName : 'PjMagnitude',				#traitCompositionSource : '{}'			},			#name : #PjDuration,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDuration class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDuration class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDuration,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Chronology,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDuration,						#isMetaSide : false					},					#name : #ChronologyConstants,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1697' ],		#self : OmReference [ '1698' ],		#time : DateAndTime [ '2024-03-03T08:20:48.245-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjMagnitude subclass: #PjDuration\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'ChronologyConstants\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Chronology\'',				#superclassName : 'PjMagnitude',				#traitCompositionSource : '{}'			},			#name : #PjDuration,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDuration class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDuration class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDuration,					#isMetaSide : false				},				#parent : @8,				#content : 'Duration representation',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Chronology,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDuration,						#isMetaSide : false					},					#name : #ChronologyConstants,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'Duration representation',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1698' ],		#self : OmReference [ '1699' ],		#time : DateAndTime [ '2024-03-03T08:20:48.246-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjMagnitude subclass: #PjLookupKey\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjMagnitude',				#traitCompositionSource : '{}'			},			#name : #PjLookupKey,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjLookupKey class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjLookupKey class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjLookupKey,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1699' ],		#self : OmReference [ '1700' ],		#time : DateAndTime [ '2024-03-03T08:20:48.247-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjMagnitude subclass: #PjLookupKey\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjMagnitude',				#traitCompositionSource : '{}'			},			#name : #PjLookupKey,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjLookupKey class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjLookupKey class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjLookupKey,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the Javascript embodiment of LookupKey.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the Javascript embodiment of LookupKey.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1700' ],		#self : OmReference [ '1701' ],		#time : DateAndTime [ '2024-03-03T08:20:48.248-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjLookupKey subclass: #PjAssociation\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjLookupKey',				#traitCompositionSource : '{}'			},			#name : #PjAssociation,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAssociation class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAssociation class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAssociation,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1701' ],		#self : OmReference [ '1702' ],		#time : DateAndTime [ '2024-03-03T08:20:48.249-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjLookupKey subclass: #PjAssociation\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjLookupKey',				#traitCompositionSource : '{}'			},			#name : #PjAssociation,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAssociation class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAssociation class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAssociation,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the Javascript embodiment of Association.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the Javascript embodiment of Association.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1702' ],		#self : OmReference [ '1703' ],		#time : DateAndTime [ '2024-03-03T08:20:48.25-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjMargin\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : '{}'			},			#name : #PjMargin,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMargin class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMargin class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMargin,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1703' ],		#self : OmReference [ '1704' ],		#time : DateAndTime [ '2024-03-03T08:20:48.251-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjMargin\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : '{}'			},			#name : #PjMargin,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMargin class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMargin class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMargin,					#isMetaSide : false				},				#parent : @8,				#content : 'I am an empty implementation of Margin because Point has an asMargin method we don\'t support.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am an empty implementation of Margin because Point has an asMargin method we don\'t support.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1704' ],		#self : OmReference [ '1705' ],		#time : DateAndTime [ '2024-03-03T08:20:48.253-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjNodeList\r\tuses: PjTArrayLike + PjTKernelClass\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : 'PjTArrayLike + PjTKernelClass'			},			#name : #PjNodeList,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNodeList class\r\tuses: PjTArrayLike classTrait + PjTKernelClass classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTArrayLike classTrait + PjTKernelClass classTrait'				},				#name : #'PjNodeList class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNodeList,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1705' ],		#self : OmReference [ '1706' ],		#time : DateAndTime [ '2024-03-03T08:20:48.255-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjNodeList\r\tuses: PjTArrayLike + PjTKernelClass\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : 'PjTArrayLike + PjTKernelClass'			},			#name : #PjNodeList,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNodeList class\r\tuses: PjTArrayLike classTrait + PjTKernelClass classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTArrayLike classTrait + PjTKernelClass classTrait'				},				#name : #'PjNodeList class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNodeList,					#isMetaSide : false				},				#parent : @8,				#content : 'I provide Smalltalk method to the NodeList "class" in web browsers. Should not be included in NodeJS code.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I provide Smalltalk method to the NodeList "class" in web browsers. Should not be included in NodeJS code.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1706' ],		#self : OmReference [ '1707' ],		#time : DateAndTime [ '2024-03-03T08:20:48.258-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjNumber\r\tuses: PjTKernelClass + PjTMagnitude\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'E Epsilon Halfpi Infinity Ln10 Ln2 MaxVal MaxValLn MinValLogBase2 NaN NegativeInfinity NegativeZero Pi RadiansPerDegree Sqrt2 ThreePi Twopi\'\r\tpoolDictionaries: \'PjUniversalGlobals\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : 'PjTKernelClass + PjTMagnitude'			},			#name : #PjNumber,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNumber class\r\tuses: PjTKernelClass classTrait + PjTMagnitude classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTKernelClass classTrait + PjTMagnitude classTrait'				},				#name : #'PjNumber class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNumber,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #E,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #Epsilon,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #Halfpi,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #Infinity,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #Ln10,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #Ln2,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #MaxVal,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #MaxValLn,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #MinValLogBase2,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #NaN,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #NegativeInfinity,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #NegativeZero,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #Pi,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #RadiansPerDegree,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #Sqrt2,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #ThreePi,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #Twopi,					#parent : @8				}			],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1707' ],		#self : OmReference [ '1708' ],		#time : DateAndTime [ '2024-03-03T08:20:48.259-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjNumber\r\tuses: PjTKernelClass + PjTMagnitude\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'E Epsilon Halfpi Infinity Ln10 Ln2 MaxVal MaxValLn MinValLogBase2 NaN NegativeInfinity NegativeZero Pi RadiansPerDegree Sqrt2 ThreePi Twopi\'\r\tpoolDictionaries: \'PjUniversalGlobals\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : 'PjTKernelClass + PjTMagnitude'			},			#name : #PjNumber,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNumber class\r\tuses: PjTKernelClass classTrait + PjTMagnitude classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTKernelClass classTrait + PjTMagnitude classTrait'				},				#name : #'PjNumber class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNumber,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent the Javascript Number type.  I am the implementation for Integer, Float, and Number, since Javascript Numbers are the only kind of numbers available.',				#stamp : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #E,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #Epsilon,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #Halfpi,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #Infinity,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #Ln10,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #Ln2,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #MaxVal,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #MaxValLn,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #MinValLogBase2,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #NaN,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #NegativeInfinity,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #NegativeZero,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #Pi,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #RadiansPerDegree,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #Sqrt2,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #ThreePi,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #Twopi,					#parent : @8				}			],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNumber,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'I represent the Javascript Number type.  I am the implementation for Integer, Float, and Number, since Javascript Numbers are the only kind of numbers available.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1708' ],		#self : OmReference [ '1709' ],		#time : DateAndTime [ '2024-03-03T08:20:48.261-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjReadWriteStream\r\tinstanceVariableNames: \'array position readLimit collection\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : '{}'			},			#name : #PjReadWriteStream,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjReadWriteStream,						#isMetaSide : false					},					#name : #array,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjReadWriteStream,						#isMetaSide : false					},					#name : #position,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjReadWriteStream,						#isMetaSide : false					},					#name : #readLimit,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjReadWriteStream,						#isMetaSide : false					},					#name : #collection,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjReadWriteStream class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjReadWriteStream class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjReadWriteStream,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1709' ],		#self : OmReference [ '1710' ],		#time : DateAndTime [ '2024-03-03T08:20:48.262-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjReadWriteStream\r\tinstanceVariableNames: \'array position readLimit collection\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : '{}'			},			#name : #PjReadWriteStream,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjReadWriteStream,						#isMetaSide : false					},					#name : #array,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjReadWriteStream,						#isMetaSide : false					},					#name : #position,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjReadWriteStream,						#isMetaSide : false					},					#name : #readLimit,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjReadWriteStream,						#isMetaSide : false					},					#name : #collection,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjReadWriteStream class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjReadWriteStream class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjReadWriteStream,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the common code for the simplistic ReadWriteStream.\r\rBecause strings and arrays are very different in Javascript,\rI have subclasses that implement those differences.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the common code for the simplistic ReadWriteStream.\r\rBecause strings and arrays are very different in Javascript,\rI have subclasses that implement those differences.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1710' ],		#self : OmReference [ '1711' ],		#time : DateAndTime [ '2024-03-03T08:20:48.264-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjReadWriteStream subclass: #PjArrayStream\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjReadWriteStream',				#traitCompositionSource : '{}'			},			#name : #PjArrayStream,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjArrayStream class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjArrayStream class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjArrayStream,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1711' ],		#self : OmReference [ '1712' ],		#time : DateAndTime [ '2024-03-03T08:20:48.266-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjReadWriteStream subclass: #PjArrayStream\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjReadWriteStream',				#traitCompositionSource : '{}'			},			#name : #PjArrayStream,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjArrayStream class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjArrayStream class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjArrayStream,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a simplistic implementation of an Array ReadWriteStream',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a simplistic implementation of an Array ReadWriteStream',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1712' ],		#self : OmReference [ '1713' ],		#time : DateAndTime [ '2024-03-03T08:20:48.267-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjReadWriteStream subclass: #PjStringStream\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjReadWriteStream',				#traitCompositionSource : '{}'			},			#name : #PjStringStream,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjStringStream class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjStringStream class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjStringStream,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1713' ],		#self : OmReference [ '1714' ],		#time : DateAndTime [ '2024-03-03T08:20:48.268-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjReadWriteStream subclass: #PjStringStream\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjReadWriteStream',				#traitCompositionSource : '{}'			},			#name : #PjStringStream,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjStringStream class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjStringStream class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjStringStream,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a simplistic implementation of a String ReadWriteStream',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a simplistic implementation of a String ReadWriteStream',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1714' ],		#self : OmReference [ '1715' ],		#time : DateAndTime [ '2024-03-03T08:20:48.269-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjRectangle\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : '{}'			},			#name : #PjRectangle,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjRectangle class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjRectangle class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjRectangle,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1715' ],		#self : OmReference [ '1716' ],		#time : DateAndTime [ '2024-03-03T08:20:48.27-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjRectangle\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : '{}'			},			#name : #PjRectangle,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjRectangle class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjRectangle class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjRectangle,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a minimal implementation of Rectangle, just so Point can create me.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a minimal implementation of Rectangle, just so Point can create me.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1716' ],		#self : OmReference [ '1717' ],		#time : DateAndTime [ '2024-03-03T08:20:48.272-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjRxParser\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : '{}'			},			#name : #PjRxParser,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjRxParser class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjRxParser class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjRxParser,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1717' ],		#self : OmReference [ '1718' ],		#time : DateAndTime [ '2024-03-03T08:20:48.273-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjRxParser\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : '{}'			},			#name : #PjRxParser,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjRxParser class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjRxParser class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjRxParser,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a minimal implementation of RxParser.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a minimal implementation of RxParser.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1718' ],		#self : OmReference [ '1719' ],		#time : DateAndTime [ '2024-03-03T08:20:48.274-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjSharedPool\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : '{}'			},			#name : #PjSharedPool,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSharedPool class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSharedPool class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSharedPool,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1719' ],		#self : OmReference [ '1720' ],		#time : DateAndTime [ '2024-03-03T08:20:48.275-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjSharedPool\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : '{}'			},			#name : #PjSharedPool,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSharedPool class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSharedPool class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSharedPool,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the Javascript embodiment of SharedPool.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the Javascript embodiment of SharedPool.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1720' ],		#self : OmReference [ '1721' ],		#time : DateAndTime [ '2024-03-03T08:20:48.278-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjString\r\tuses: PjTKernelClass + PjTArray\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjDomGlobals\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : 'PjTKernelClass + PjTArray'			},			#name : #PjString,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjString class\r\tuses: PjTKernelClass classTrait + PjTArray classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTKernelClass classTrait + PjTArray classTrait'				},				#name : #'PjString class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjString,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjString,						#isMetaSide : false					},					#name : #PjDomGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1721' ],		#self : OmReference [ '1722' ],		#time : DateAndTime [ '2024-03-03T08:20:48.279-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjString\r\tuses: PjTKernelClass + PjTArray\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjDomGlobals\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : 'PjTKernelClass + PjTArray'			},			#name : #PjString,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjString class\r\tuses: PjTKernelClass classTrait + PjTArray classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTKernelClass classTrait + PjTArray classTrait'				},				#name : #'PjString class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjString,					#isMetaSide : false				},				#parent : @8,				#content : 'strings in Javascript world',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjString,						#isMetaSide : false					},					#name : #PjDomGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'strings in Javascript world',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1722' ],		#self : OmReference [ '1723' ],		#time : DateAndTime [ '2024-03-03T08:20:48.285-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjUndefinedObject\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : '{}'			},			#name : #PjUndefinedObject,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjUndefinedObject class\r\tinstanceVariableNames: \'uniqueInstance\'',					#traitCompositionSource : '{}'				},				#name : #'PjUndefinedObject class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjUndefinedObject class'						},						#name : #uniqueInstance,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjUndefinedObject,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1723' ],		#self : OmReference [ '1724' ],		#time : DateAndTime [ '2024-03-03T08:20:48.288-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjUndefinedObject\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Kernel\'',				#superclassName : 'PjObject',				#traitCompositionSource : '{}'			},			#name : #PjUndefinedObject,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjUndefinedObject class\r\tinstanceVariableNames: \'uniqueInstance\'',					#traitCompositionSource : '{}'				},				#name : #'PjUndefinedObject class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjUndefinedObject class'						},						#name : #uniqueInstance,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjUndefinedObject,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the implementation for UndefinedObject. Any method calls translate the Javascript values "undefined" and "null" into my sole instance using the global function $isNil$, so that method dispatch will happen through me.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Kernel,			#package : #PharoJs-Base-JS-CoreLibraries,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the implementation for UndefinedObject. Any method calls translate the Javascript values "undefined" and "null" into my sole instance using the global function $isNil$, so that method dispatch will happen through me.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1724' ],		#self : OmReference [ '1725' ],		#time : DateAndTime [ '2024-03-03T08:20:50.01-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTArray classTrait',				#isMetaSide : true			},			#name : #'collect_jsGenerator:',			#protocol : #enumerating,			#sourceCode : 'collect_jsGenerator: transpiler\r\t<pharoJsSkip> \r\t^\'var result=[];for(var i=0,max=this.length;i<max;++i)result.push(typeof aBlock=="string"?$asNil$(this[i]).\', transpiler pharoJsSelectorPrefix, \'perform_(aBlock):aBlock(this[i]));return result\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1725' ],		#self : OmReference [ '1726' ],		#time : DateAndTime [ '2024-03-03T08:20:50.012-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTArray classTrait',				#isMetaSide : true			},			#name : #'includes_jsGenerator:',			#protocol : #testing,			#sourceCode : 'includes_jsGenerator: transpiler\r\t<pharoJsSkip>\r\t^\'if (x.\', transpiler pharoJsSelectorPrefix, \'isJSPrimitiveType()) {\r\t\tif (this.includes(x)) return true;\r\t\tfor(var i=this.length-1;i>=0;--i) if (x==this[i]) return true;\r\t\treturn false}\t\t\r\tfor(var i=this.length-1;i>=0;--i) if (x.\', transpiler pharoJsSelectorPrefix, \'61_(this[i])) return true;\r\treturn false\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1726' ],		#self : OmReference [ '1727' ],		#time : DateAndTime [ '2024-03-03T08:20:50.012-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTArray classTrait',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharoJs support',			#sourceCode : 'jsTranspilationImportMethods\r\t<pharoJsSkip>\r\t^ self jsTranspilationImportMethodsArray',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1727' ],		#self : OmReference [ '1728' ],		#time : DateAndTime [ '2024-03-03T08:20:50.013-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTArray classTrait',				#isMetaSide : true			},			#name : #jsTranspilationImportMethodsArray,			#protocol : #'pharoJs support',			#sourceCode : 'jsTranspilationImportMethodsArray\r\r\t<pharoJsSkip>\r\t^ self jsTranspilationImportMethodsCollection , { \r\t\t  (Array\r\t\t   ->\r\t\t\t   #( isArray shouldBePrintedAsLiteral\r\t\t\t      printAsLiteralFormOn: isSelfEvaluating printAsSelfEvaluatingFormOn:\r\t\t\t      isLiteral )).\r\t\t  (ByteArray -> #( asString )).\r\t\t  (OrderedCollection -> #( join: addAllLast: )).\r\t\t  (Collection -> #( doWithIndex: printElementsOn: printNameOn: )).\r\t\t  (SequenceableCollection\r\t\t   ->\r\t\t\t   #( withIndexDo: allButFirst allButFirst: allButLast allButLast:\r\t\t\t      #copyFrom:to: #copyReplaceFrom:to:with:\r\t\t\t      copyWith: copyWithFirst: copyWithoutIndex: #from:to:put:\r\t\t\t      grownBy: #replaceFrom:to:with: reverseDo: appendTo: putOn: )).\r\t\t  (ArrayedCollection class\r\t\t   -> #( with: #with:with: #with:with:with: #with:with:with:with: )) }',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1728' ],		#self : OmReference [ '1729' ],		#time : DateAndTime [ '2024-03-03T08:20:50.014-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTArray classTrait',				#isMetaSide : true			},			#name : #'select_jsGenerator:',			#protocol : #enumerating,			#sourceCode : 'select_jsGenerator: transpiler\r\t<pharoJsSkip> \r\t^\'var result=[];for(var i=0,max=this.length;i<max;++i){if(true==(typeof aBlock=="string"?$asNil$(this[i]).\', transpiler pharoJsSelectorPrefix, \'perform_(aBlock):aBlock(this[i])))result.push(this[i])}return result\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1729' ],		#self : OmReference [ '1730' ],		#time : DateAndTime [ '2024-03-03T08:20:50.014-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #',',			#protocol : #copying,			#sourceCode : ', other\r\t^ self class new addAll: self; addAll: other; yourself',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1730' ],		#self : OmReference [ '1731' ],		#time : DateAndTime [ '2024-03-03T08:20:50.014-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #'=',			#protocol : #enumerating,			#sourceCode : '= anArray\r\tself == anArray ifTrue: [ ^true ].\r\t(anArray isKindOf: Array) ifFalse: [^false].\r\tself size = anArray size ifFalse: [ ^false ].\r\tself with: anArray do: [ : myElement : otherElement|\r\t\tmyElement = otherElement ifFalse: [ ^false ]\r\t].\r\t^true',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1731' ],		#self : OmReference [ '1732' ],		#time : DateAndTime [ '2024-03-03T08:20:50.015-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #asArray,			#protocol : #converting,			#sourceCode : 'asArray\r\t^ Array from: self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1732' ],		#self : OmReference [ '1733' ],		#time : DateAndTime [ '2024-03-03T08:20:50.015-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #asJsObject,			#protocol : #converting,			#sourceCode : 'asJsObject\r\t| jsObject |\r\tself isEmpty ifTrue: [ ^ self ].\r\t(self first isKindOf: Association) ifFalse: [\r\t\t^ self collect: [: each | each asJsObject ]\r\t].\r\tjsObject := Object new.\r\tself do: [ : association |\r\t\tjsObject at: association key put: association value asJsObject].\r\t^jsObject',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1733' ],		#self : OmReference [ '1734' ],		#time : DateAndTime [ '2024-03-03T08:20:50.015-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #asSortedCollection,			#protocol : #converting,			#sourceCode : 'asSortedCollection\r\t^ SortedCollection new addAll: self;yourself',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1734' ],		#self : OmReference [ '1735' ],		#time : DateAndTime [ '2024-03-03T08:20:50.016-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #'at:',			#protocol : #accessing,			#sourceCode : 'at: i\r\t<javascript: \'return this[i-1]\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1735' ],		#self : OmReference [ '1736' ],		#time : DateAndTime [ '2024-03-03T08:20:50.016-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #'at:ifAbsent:',			#protocol : #accessing,			#sourceCode : 'at: index ifAbsent: aBlock\r\t(index > 0 and: [index > self size]) ifTrue: [ ^aBlock value ].\r\t^self at: index',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1736' ],		#self : OmReference [ '1737' ],		#time : DateAndTime [ '2024-03-03T08:20:50.016-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #'collect:',			#protocol : #enumerating,			#sourceCode : 'collect: aBlock\r\t<jsGenerator: #collect_jsGenerator:>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1737' ],		#self : OmReference [ '1738' ],		#time : DateAndTime [ '2024-03-03T08:20:50.016-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #'do:',			#protocol : #enumerating,			#sourceCode : 'do: aBlock\r\t<javascript: \'for(var i=0,max=this.length;i<max;++i)aBlock(this[i]);return this\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1738' ],		#self : OmReference [ '1739' ],		#time : DateAndTime [ '2024-03-03T08:20:50.017-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #'do:separatedBy:',			#protocol : #enumerating,			#sourceCode : 'do: elementBlock separatedBy: separatorBlock\r\t<javascript: \'for(var i=0,max=this.length;i<max;++i){if(i)separatorBlock();elementBlock(this[i])};return this\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1739' ],		#self : OmReference [ '1740' ],		#time : DateAndTime [ '2024-03-03T08:20:50.017-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #eighth,			#protocol : #accessing,			#sourceCode : 'eighth\r\t<javascript: \'return this[7]\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1740' ],		#self : OmReference [ '1741' ],		#time : DateAndTime [ '2024-03-03T08:20:50.017-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #fifth,			#protocol : #accessing,			#sourceCode : 'fifth\r\t<javascript: \'return this[4]\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1741' ],		#self : OmReference [ '1742' ],		#time : DateAndTime [ '2024-03-03T08:20:50.018-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #first,			#protocol : #accessing,			#sourceCode : 'first\r\t<javascript: \'return this[0]\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1742' ],		#self : OmReference [ '1743' ],		#time : DateAndTime [ '2024-03-03T08:20:50.018-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #'first:',			#protocol : #accessing,			#sourceCode : 'first: n\r\t<javascript: \'return this.slice(0,n)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1743' ],		#self : OmReference [ '1744' ],		#time : DateAndTime [ '2024-03-03T08:20:50.018-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #fourth,			#protocol : #accessing,			#sourceCode : 'fourth\r\t<javascript: \'return this[3]\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1744' ],		#self : OmReference [ '1745' ],		#time : DateAndTime [ '2024-03-03T08:20:50.019-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #'ifEmpty:',			#protocol : #testing,			#sourceCode : 'ifEmpty: aBlock\r\tself isEmpty ifTrue: [^aBlock value].\r\t^self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1745' ],		#self : OmReference [ '1746' ],		#time : DateAndTime [ '2024-03-03T08:20:50.019-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #'includes:',			#protocol : #testing,			#sourceCode : 'includes: x\r\t<jsGenerator: #includes_jsGenerator:>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1746' ],		#self : OmReference [ '1747' ],		#time : DateAndTime [ '2024-03-03T08:20:50.019-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #'indexOf:',			#protocol : #accessing,			#sourceCode : 'indexOf: x\r\t<javascript: \'return this.indexOf(x)+1\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1747' ],		#self : OmReference [ '1748' ],		#time : DateAndTime [ '2024-03-03T08:20:50.02-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #'indexOf:startingAt:',			#protocol : #accessing,			#sourceCode : 'indexOf: x startingAt: n\r\t<javascript: \'return this.indexOf(x,n-1)+1\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1748' ],		#self : OmReference [ '1749' ],		#time : DateAndTime [ '2024-03-03T08:20:50.02-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #'insert:before:',			#protocol : #accessing,			#sourceCode : 'insert: anObject before: spot\r\t<javascript: \'this.splice(spot-1, 0, anObject);return anObject\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1749' ],		#self : OmReference [ '1750' ],		#time : DateAndTime [ '2024-03-03T08:20:50.02-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #testing,			#sourceCode : 'isEmpty\r\t^ self size = 0',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1750' ],		#self : OmReference [ '1751' ],		#time : DateAndTime [ '2024-03-03T08:20:50.021-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #last,			#protocol : #accessing,			#sourceCode : 'last\r\t<javascript: \'return this[this.length-1]\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1751' ],		#self : OmReference [ '1752' ],		#time : DateAndTime [ '2024-03-03T08:20:50.021-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #'last:',			#protocol : #accessing,			#sourceCode : 'last: n\r\t<javascript: \'return this.slice(this.length-n)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1752' ],		#self : OmReference [ '1753' ],		#time : DateAndTime [ '2024-03-03T08:20:50.021-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #ninth,			#protocol : #accessing,			#sourceCode : 'ninth\r\t<javascript: \'return this[8]\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1753' ],		#self : OmReference [ '1754' ],		#time : DateAndTime [ '2024-03-03T08:20:50.022-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #notEmpty,			#protocol : #enumerating,			#sourceCode : 'notEmpty\r\t<javascript: \'return this.length!=0\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1754' ],		#self : OmReference [ '1755' ],		#time : DateAndTime [ '2024-03-03T08:20:50.022-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #reversed,			#protocol : #converting,			#sourceCode : 'reversed\r\t^ self asArray reverse',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1755' ],		#self : OmReference [ '1756' ],		#time : DateAndTime [ '2024-03-03T08:20:50.022-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #second,			#protocol : #accessing,			#sourceCode : 'second\r\t<javascript: \'return this[1]\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1756' ],		#self : OmReference [ '1757' ],		#time : DateAndTime [ '2024-03-03T08:20:50.024-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #'select:',			#protocol : #enumerating,			#sourceCode : 'select: aBlock\r\t<jsGenerator: #select_jsGenerator:>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1757' ],		#self : OmReference [ '1758' ],		#time : DateAndTime [ '2024-03-03T08:20:50.024-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #seventh,			#protocol : #accessing,			#sourceCode : 'seventh\r\t<javascript: \'return this[6]\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1758' ],		#self : OmReference [ '1759' ],		#time : DateAndTime [ '2024-03-03T08:20:50.025-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #sixth,			#protocol : #accessing,			#sourceCode : 'sixth\r\t<javascript: \'return this[5]\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1759' ],		#self : OmReference [ '1760' ],		#time : DateAndTime [ '2024-03-03T08:20:50.027-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #size,			#protocol : #enumerating,			#sourceCode : 'size\r\t<javascript: \'return this.length\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1760' ],		#self : OmReference [ '1761' ],		#time : DateAndTime [ '2024-03-03T08:20:50.028-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #third,			#protocol : #accessing,			#sourceCode : 'third\r\t<javascript: \'return this[2]\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1761' ],		#self : OmReference [ '1762' ],		#time : DateAndTime [ '2024-03-03T08:20:50.028-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #'with:do:',			#protocol : #enumerating,			#sourceCode : 'with: otherCollection do: aBlock \r\t<javascript: \'for(var i=0,max=this.length;i<max;++i)aBlock(this[i],otherCollection[i]);return this\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1762' ],		#self : OmReference [ '1763' ],		#time : DateAndTime [ '2024-03-03T08:20:50.028-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #'withIndexDo:',			#protocol : #enumerating,			#sourceCode : 'withIndexDo: aBlock \r\t<javascript: \'for(var i=0,max=this.length;i<max;++i)aBlock(this[i],i+1);return this\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1763' ],		#self : OmReference [ '1764' ],		#time : DateAndTime [ '2024-03-03T08:20:50.028-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArrayLike,				#isMetaSide : false			},			#name : #'indexOf:',			#protocol : #accessing,			#sourceCode : 'indexOf: x\r\t<javascript: \'for(var i = 0; i < this.length; i++){\r\t\tif(x == this[i]){return i + 1}\r\t}\r\treturn 0;\r\t\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1764' ],		#self : OmReference [ '1765' ],		#time : DateAndTime [ '2024-03-03T08:20:50.029-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArrayLike,				#isMetaSide : false			},			#name : #species,			#protocol : #accessing,			#sourceCode : 'species\r\t^Array',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1765' ],		#self : OmReference [ '1766' ],		#time : DateAndTime [ '2024-03-03T08:20:50.029-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTCollection classTrait',				#isMetaSide : true			},			#name : #'atRandom_jsGenerator:',			#protocol : #random,			#sourceCode : 'atRandom_jsGenerator: transpiler\r\t<pharoJsSkip>\r\t^\'var randomIndex = Math.floor((Math.random() * this.\', transpiler pharoJsSelectorPrefix, \'size()) + 1);\r\treturn this.\', transpiler pharoJsSelectorPrefix, \'at_(randomIndex);\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1766' ],		#self : OmReference [ '1767' ],		#time : DateAndTime [ '2024-03-03T08:20:50.03-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTCollection classTrait',				#isMetaSide : true			},			#name : #jsTranspilationImportMethodsCollection,			#protocol : #'pharojs support',			#sourceCode : 'jsTranspilationImportMethodsCollection\r\t<pharoJsSkip>\r\t^ {\r\t\tCollection ->#(asSet reject: asOrderedCollection\r\t\t\tallSatisfy: anySatisfy: noneSatisfy: inject:into: \r\t\t\tdetect:ifFound:ifNone: detect:ifNone: detect:ifFound: remove: isCollection \r\t\t\tasDictionary associationsDo: addAll: isEmptyOrNil removeAll: \r\t\t\tincludesAll: includesAny:\r\t\t).\r\t\tCollection class ->#(\r\t\t\twithAll: \r\t\t).\r\t\tOrderedCollection class -> #( newFrom: ).\r\t}',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1767' ],		#self : OmReference [ '1768' ],		#time : DateAndTime [ '2024-03-03T08:20:50.03-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTCollection,				#isMetaSide : false			},			#name : #'=',			#protocol : #testing,			#sourceCode : '= aMagnitude\r\t^self explicitRequirement',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1768' ],		#self : OmReference [ '1769' ],		#time : DateAndTime [ '2024-03-03T08:20:50.03-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTCollection,				#isMetaSide : false			},			#name : #atRandom,			#protocol : #random,			#sourceCode : 'atRandom\r\t<jsGenerator: #atRandom_jsGenerator:>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1769' ],		#self : OmReference [ '1770' ],		#time : DateAndTime [ '2024-03-03T08:20:50.03-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTDate classTrait',				#isMetaSide : true			},			#name : #javascriptName,			#protocol : #'pharoJs support',			#sourceCode : 'javascriptName\r\t<pharoJsSkip>\r\t^ #Date',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1770' ],		#self : OmReference [ '1771' ],		#time : DateAndTime [ '2024-03-03T08:20:50.032-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTDate classTrait',				#isMetaSide : true			},			#name : #now,			#protocol : #'instance creation',			#sourceCode : 'now\r\t<javascript: \'return new this()\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1771' ],		#self : OmReference [ '1772' ],		#time : DateAndTime [ '2024-03-03T08:20:50.032-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTDate classTrait',				#isMetaSide : true			},			#name : #today,			#protocol : #'instance creation',			#sourceCode : 'today\r\t^self now',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1772' ],		#self : OmReference [ '1773' ],		#time : DateAndTime [ '2024-03-03T08:20:50.032-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDate,				#isMetaSide : false			},			#name : #asDateAndTime,			#protocol : #converting,			#sourceCode : 'asDateAndTime\r\t^self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1773' ],		#self : OmReference [ '1774' ],		#time : DateAndTime [ '2024-03-03T08:20:50.032-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDate,				#isMetaSide : false			},			#name : #dayOfMonth,			#protocol : #accessing,			#sourceCode : 'dayOfMonth\r\t^self getDate',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1774' ],		#self : OmReference [ '1775' ],		#time : DateAndTime [ '2024-03-03T08:20:50.033-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDate,				#isMetaSide : false			},			#name : #dayOfWeek,			#protocol : #accessing,			#sourceCode : 'dayOfWeek\r\t^self getDay + 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1775' ],		#self : OmReference [ '1776' ],		#time : DateAndTime [ '2024-03-03T08:20:50.033-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDate,				#isMetaSide : false			},			#name : #monthIndex,			#protocol : #accessing,			#sourceCode : 'monthIndex\r\t^self getMonth + 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1776' ],		#self : OmReference [ '1777' ],		#time : DateAndTime [ '2024-03-03T08:20:50.033-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDate,				#isMetaSide : false			},			#name : #'monthIndex:',			#protocol : #accessing,			#sourceCode : 'monthIndex: anInteger\r\t^self month: anInteger - 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1777' ],		#self : OmReference [ '1778' ],		#time : DateAndTime [ '2024-03-03T08:20:50.033-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDate,				#isMetaSide : false			},			#name : #year,			#protocol : #accessing,			#sourceCode : 'year\r\t^self getFullYear',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1778' ],		#self : OmReference [ '1779' ],		#time : DateAndTime [ '2024-03-03T08:20:50.033-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTDateAndTime classTrait',				#isMetaSide : true			},			#name : #javascriptName,			#protocol : #'pharoJs support',			#sourceCode : 'javascriptName\r\t<pharoJsSkip>\r\t^ #Date',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1779' ],		#self : OmReference [ '1780' ],		#time : DateAndTime [ '2024-03-03T08:20:50.033-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTDateAndTime classTrait',				#isMetaSide : true			},			#name : #now,			#protocol : #'instance creation',			#sourceCode : 'now\r\t<javascript: \'return new this()\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1780' ],		#self : OmReference [ '1781' ],		#time : DateAndTime [ '2024-03-03T08:20:50.034-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDateAndTime,				#isMetaSide : false			},			#name : #asDateAndTime,			#protocol : #converting,			#sourceCode : 'asDateAndTime\r\t^self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1781' ],		#self : OmReference [ '1782' ],		#time : DateAndTime [ '2024-03-03T08:20:50.034-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDateAndTime,				#isMetaSide : false			},			#name : #dayOfMonth,			#protocol : #accessing,			#sourceCode : 'dayOfMonth\r\t^self getDate',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1782' ],		#self : OmReference [ '1783' ],		#time : DateAndTime [ '2024-03-03T08:20:50.034-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDateAndTime,				#isMetaSide : false			},			#name : #dayOfWeek,			#protocol : #accessing,			#sourceCode : 'dayOfWeek\r\t^self getDay + 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1783' ],		#self : OmReference [ '1784' ],		#time : DateAndTime [ '2024-03-03T08:20:50.034-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDateAndTime,				#isMetaSide : false			},			#name : #hour,			#protocol : #accessing,			#sourceCode : 'hour\r\t^self hour24',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1784' ],		#self : OmReference [ '1785' ],		#time : DateAndTime [ '2024-03-03T08:20:50.034-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDateAndTime,				#isMetaSide : false			},			#name : #hour12,			#protocol : #accessing,			#sourceCode : 'hour12\r\t| hour24 |\r\thour24 := self hour24.\r\thour24 = 0 ifTrue: [ ^12 ].\r\thour24 > 12 ifTrue: [ ^hour24 - 12 ].\r\t^hour24',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1785' ],		#self : OmReference [ '1786' ],		#time : DateAndTime [ '2024-03-03T08:20:50.034-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDateAndTime,				#isMetaSide : false			},			#name : #hour24,			#protocol : #accessing,			#sourceCode : 'hour24\r\t^self getHours',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1786' ],		#self : OmReference [ '1787' ],		#time : DateAndTime [ '2024-03-03T08:20:50.034-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDateAndTime,				#isMetaSide : false			},			#name : #milliSecond,			#protocol : #accessing,			#sourceCode : 'milliSecond\r\t^self getMilliseconds',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1787' ],		#self : OmReference [ '1788' ],		#time : DateAndTime [ '2024-03-03T08:20:50.035-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDateAndTime,				#isMetaSide : false			},			#name : #minute,			#protocol : #accessing,			#sourceCode : 'minute\r\t^self getMinutes',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1788' ],		#self : OmReference [ '1789' ],		#time : DateAndTime [ '2024-03-03T08:20:50.035-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDateAndTime,				#isMetaSide : false			},			#name : #monthIndex,			#protocol : #accessing,			#sourceCode : 'monthIndex\r\t^self getMonth + 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1789' ],		#self : OmReference [ '1790' ],		#time : DateAndTime [ '2024-03-03T08:20:50.035-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDateAndTime,				#isMetaSide : false			},			#name : #'monthIndex:',			#protocol : #accessing,			#sourceCode : 'monthIndex: anInteger\r\t^self month: anInteger - 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1790' ],		#self : OmReference [ '1791' ],		#time : DateAndTime [ '2024-03-03T08:20:50.035-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDateAndTime,				#isMetaSide : false			},			#name : #second,			#protocol : #accessing,			#sourceCode : 'second\r\t^self getSeconds',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1791' ],		#self : OmReference [ '1792' ],		#time : DateAndTime [ '2024-03-03T08:20:50.035-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDateAndTime,				#isMetaSide : false			},			#name : #year,			#protocol : #accessing,			#sourceCode : 'year\r\t^self getFullYear',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1792' ],		#self : OmReference [ '1793' ],		#time : DateAndTime [ '2024-03-03T08:20:50.035-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'addElement:',			#protocol : #creating,			#sourceCode : 'addElement: tagString\r\t^self addElement: tagString to: self body',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1793' ],		#self : OmReference [ '1794' ],		#time : DateAndTime [ '2024-03-03T08:20:50.036-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'addElement:style:',			#protocol : #creating,			#sourceCode : 'addElement: tagString style: cssStyleAssociations\r\t^self addElement: tagString to: self body style: cssStyleAssociations',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1794' ],		#self : OmReference [ '1795' ],		#time : DateAndTime [ '2024-03-03T08:20:50.036-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'addElement:to:',			#protocol : #creating,			#sourceCode : 'addElement: tagString to: parentNode\r\t| newElement |\r\tnewElement := self createElement: tagString.\r\tparentNode appendChild: newElement.\r\t^newElement',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1795' ],		#self : OmReference [ '1796' ],		#time : DateAndTime [ '2024-03-03T08:20:50.036-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'addElement:to:style:',			#protocol : #creating,			#sourceCode : 'addElement: tagString to: parentNode style: cssStyleAssociations\r\t| newElement |\r\tnewElement := self createElement: tagString style: cssStyleAssociations.\r\tparentNode appendChild: newElement.\r\t^ newElement',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1796' ],		#self : OmReference [ '1797' ],		#time : DateAndTime [ '2024-03-03T08:20:50.036-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'attribute:at:',			#protocol : #accessing,			#sourceCode : 'attribute: attributeName at: elementId\r\t^self attribute: attributeName ofElement: (self elementAt: elementId)',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1797' ],		#self : OmReference [ '1798' ],		#time : DateAndTime [ '2024-03-03T08:20:50.037-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'attribute:at:set:',			#protocol : #accessing,			#sourceCode : 'attribute: attributeName at: elementId set: attributeValue\r\tself attribute: attributeName ofElement: (self elementAt: elementId) set: attributeValue',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1798' ],		#self : OmReference [ '1799' ],		#time : DateAndTime [ '2024-03-03T08:20:50.037-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'attribute:ofElement:',			#protocol : #accessing,			#sourceCode : 'attribute: attributeName ofElement: domElement\r\t^domElement getAttribute: attributeName',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1799' ],		#self : OmReference [ '1800' ],		#time : DateAndTime [ '2024-03-03T08:20:50.037-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'attribute:ofElement:set:',			#protocol : #accessing,			#sourceCode : 'attribute: attributeName ofElement: domElement set: attributeValue\r\tdomElement setAttribute: attributeName to: attributeValue',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1800' ],		#self : OmReference [ '1801' ],		#time : DateAndTime [ '2024-03-03T08:20:50.037-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #body,			#protocol : #accessing,			#sourceCode : 'body\r\t^self document body',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1801' ],		#self : OmReference [ '1802' ],		#time : DateAndTime [ '2024-03-03T08:20:50.038-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'createElement:',			#protocol : #creating,			#sourceCode : 'createElement: tagString \r\t^self document createElement: tagString.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1802' ],		#self : OmReference [ '1803' ],		#time : DateAndTime [ '2024-03-03T08:20:50.038-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'createElement:style:',			#protocol : #creating,			#sourceCode : 'createElement: tagString style: cssStyleAssociations\r\t| newElement |\r\tnewElement := self document createElement: tagString.\r\tself setElement: newElement style: cssStyleAssociations.\r\t^newElement',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1803' ],		#self : OmReference [ '1804' ],		#time : DateAndTime [ '2024-03-03T08:20:50.038-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'cssClassesAddAll:element:',			#protocol : #css,			#sourceCode : 'cssClassesAddAll: newClasses element: domElement\r\tself cssClassesReplaceAll: #() byAll: newClasses element: domElement',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1804' ],		#self : OmReference [ '1805' ],		#time : DateAndTime [ '2024-03-03T08:20:50.039-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'cssClassesElement:',			#protocol : #css,			#sourceCode : 'cssClassesElement: domElement\r\t^(\' \' split: (self cssClassesStringElement: domElement)) \r\t\t"asOrderedCollection reject: [ : each | each isEmpty]"',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1805' ],		#self : OmReference [ '1806' ],		#time : DateAndTime [ '2024-03-03T08:20:50.039-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'cssClassesElement:set:',			#protocol : #css,			#sourceCode : 'cssClassesElement: domElement set: cssClasses\r\t| classString |\r\tclassString := \'\'.\r\tcssClasses do: [: each |\r\t\tclassString := classString, \' \', each  ].\r\tself cssClassesStringElement: domElement set: classString',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1806' ],		#self : OmReference [ '1807' ],		#time : DateAndTime [ '2024-03-03T08:20:50.039-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'cssClassesRemoveAll:element:',			#protocol : #css,			#sourceCode : 'cssClassesRemoveAll: oldCssClasses element: domElement\r\tself cssClassesReplaceAll: oldCssClasses byAll: #() element: domElement',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1807' ],		#self : OmReference [ '1808' ],		#time : DateAndTime [ '2024-03-03T08:20:50.039-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'cssClassesReplaceAll:byAll:element:',			#protocol : #css,			#sourceCode : 'cssClassesReplaceAll: oldCssClasses byAll: newClasses element: domElement\r\t| cssClasses |\r\tcssClasses := self cssClassesElement: domElement.\r\toldCssClasses do: [: each | cssClasses remove: each ifAbsent: nil].\r\tcssClasses addAll: newClasses.\r\tself cssClassesElement: domElement set: cssClasses.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1808' ],		#self : OmReference [ '1809' ],		#time : DateAndTime [ '2024-03-03T08:20:50.04-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'cssClassesString:',			#protocol : #css,			#sourceCode : 'cssClassesString: elementId\r\t^ self cssClassesStringElement: (self elementAt: elementId)',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1809' ],		#self : OmReference [ '1810' ],		#time : DateAndTime [ '2024-03-03T08:20:50.04-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'cssClassesString:set:',			#protocol : #css,			#sourceCode : 'cssClassesString: elementId set: attributeValue\r\t^ self attribute: #class at: elementId set: attributeValue',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1810' ],		#self : OmReference [ '1811' ],		#time : DateAndTime [ '2024-03-03T08:20:50.04-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'cssClassesStringElement:',			#protocol : #css,			#sourceCode : 'cssClassesStringElement: domElement\r\t^ (self attribute: #class ofElement: domElement) ifNil: [ \'\' ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1811' ],		#self : OmReference [ '1812' ],		#time : DateAndTime [ '2024-03-03T08:20:50.04-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'cssClassesStringElement:set:',			#protocol : #css,			#sourceCode : 'cssClassesStringElement: domElement set: newClassesString\r\tself attribute: #class ofElement: domElement set: newClassesString',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1812' ],		#self : OmReference [ '1813' ],		#time : DateAndTime [ '2024-03-03T08:20:50.041-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #document,			#protocol : #accessing,			#sourceCode : 'document\r\tself explicitRequirement',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1813' ],		#self : OmReference [ '1814' ],		#time : DateAndTime [ '2024-03-03T08:20:50.041-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'elementAt:',			#protocol : #accessing,			#sourceCode : 'elementAt: elementId\r\t^self document getElementById: elementId',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1814' ],		#self : OmReference [ '1815' ],		#time : DateAndTime [ '2024-03-03T08:20:50.041-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'elementAt:in:',			#protocol : #accessing,			#sourceCode : 'elementAt: childId in: container\r\t"Method querySelector: Returns the first child element that matches a specified \r\tCSS selector(s) of an element. To search for an element by Id, we need to use\r\ta sharp (#) as prefix. A dot (.) should be used for searching by class"\r\t^container querySelector: \'#\', childId.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1815' ],		#self : OmReference [ '1816' ],		#time : DateAndTime [ '2024-03-03T08:20:50.041-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'hide:',			#protocol : #visibility,			#sourceCode : 'hide: domElement\r\tdomElement style display: \'none\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1816' ],		#self : OmReference [ '1817' ],		#time : DateAndTime [ '2024-03-03T08:20:50.041-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'hideElementAt:in:',			#protocol : #visibility,			#sourceCode : 'hideElementAt: domElementId in: container\r\tself show: false elementAt: domElementId in: container',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1817' ],		#self : OmReference [ '1818' ],		#time : DateAndTime [ '2024-03-03T08:20:50.042-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'innerHtmlAt:',			#protocol : #accessing,			#sourceCode : 'innerHtmlAt: elementId\r\t^(self elementAt: elementId) innerHTML',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1818' ],		#self : OmReference [ '1819' ],		#time : DateAndTime [ '2024-03-03T08:20:50.042-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'innerHtmlAt:set:',			#protocol : #accessing,			#sourceCode : 'innerHtmlAt: elementId set: aString\r\t(self elementAt: elementId) innerHTML: aString',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1819' ],		#self : OmReference [ '1820' ],		#time : DateAndTime [ '2024-03-03T08:20:50.042-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'onChange:do:',			#protocol : #'event init',			#sourceCode : 'onChange: elementId do: aBlock\r\tself onChange: elementId in: self body do: aBlock',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1820' ],		#self : OmReference [ '1821' ],		#time : DateAndTime [ '2024-03-03T08:20:50.043-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'onChange:in:do:',			#protocol : #'event init',			#sourceCode : 'onChange: elementId in: container do: aBlock\r\t| element |\r\telement := self elementAt: elementId in: container.\r\tself onChangeElement: element do: aBlock',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1821' ],		#self : OmReference [ '1822' ],		#time : DateAndTime [ '2024-03-03T08:20:50.043-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'onChangeElement:do:',			#protocol : #'event init',			#sourceCode : 'onChangeElement: element do: aBlock\r\telement addEventListener: #change block: [ aBlock cull: element value cull: element ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1822' ],		#self : OmReference [ '1823' ],		#time : DateAndTime [ '2024-03-03T08:20:50.043-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'onClick:do:',			#protocol : #'event init',			#sourceCode : 'onClick: elementId  do: aBlock\r\tself onClick: elementId in: self body do: aBlock',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1823' ],		#self : OmReference [ '1824' ],		#time : DateAndTime [ '2024-03-03T08:20:50.043-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'onClick:in:do:',			#protocol : #'event init',			#sourceCode : 'onClick: elementId in: container do: aBlock\r\t| element |\r\telement := self elementAt: elementId in: container.\r\tself onClickElement: element do: aBlock',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1824' ],		#self : OmReference [ '1825' ],		#time : DateAndTime [ '2024-03-03T08:20:50.044-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'onClickElement:do:',			#protocol : #'event init',			#sourceCode : 'onClickElement: element do: aBlock\r\telement addEventListener: #click block: [ aBlock cull: element ].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1825' ],		#self : OmReference [ '1826' ],		#time : DateAndTime [ '2024-03-03T08:20:50.044-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'onEvent:for:in:do:',			#protocol : #'event init',			#sourceCode : 'onEvent: eventId for: elementId in: container do: aBlock\r\t| element |\r\telement := self elementAt: elementId in: container.\r\telement addEventListener: eventId block: aBlock',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1826' ],		#self : OmReference [ '1827' ],		#time : DateAndTime [ '2024-03-03T08:20:50.044-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'onKeyUp:do:',			#protocol : #'event init',			#sourceCode : 'onKeyUp: elementId do: aBlock\r\tself onKeyUp: elementId in: self body do: aBlock',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1827' ],		#self : OmReference [ '1828' ],		#time : DateAndTime [ '2024-03-03T08:20:50.044-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'onKeyUp:in:do:',			#protocol : #'event init',			#sourceCode : 'onKeyUp: elementId in: container do: aBlock\r\t| element |\r\telement := self elementAt: elementId in: container.\r\tself onKeyUpElement: element do: aBlock',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1828' ],		#self : OmReference [ '1829' ],		#time : DateAndTime [ '2024-03-03T08:20:50.045-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'onKeyUpElement:do:',			#protocol : #'event init',			#sourceCode : 'onKeyUpElement: element do: aBlock\r\telement addEventListener: #keyup block: [aBlock cull: element value cull: element ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1829' ],		#self : OmReference [ '1830' ],		#time : DateAndTime [ '2024-03-03T08:20:50.045-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'setElement:style:',			#protocol : #css,			#sourceCode : 'setElement: domElement style: cssStyleAssociations\r\t| style |\r\tstyle := domElement style.\r\tcssStyleAssociations asDictionary keysAndValuesDo: [ :key :value | \r\t\tstyle at: key put: value ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1830' ],		#self : OmReference [ '1831' ],		#time : DateAndTime [ '2024-03-03T08:20:50.045-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'show:',			#protocol : #visibility,			#sourceCode : 'show: domElement\r\tdomElement style display: \'\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1831' ],		#self : OmReference [ '1832' ],		#time : DateAndTime [ '2024-03-03T08:20:50.045-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'show:element:',			#protocol : #visibility,			#sourceCode : 'show: aBoolean element: domElement\r\taBoolean ifTrue: [ ^self show: domElement ].\r\tself hide: domElement',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1832' ],		#self : OmReference [ '1833' ],		#time : DateAndTime [ '2024-03-03T08:20:50.046-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'show:elementAt:in:',			#protocol : #visibility,			#sourceCode : 'show: aBoolean elementAt: domElementId in: container\r\t| element |\r\telement := self elementAt: domElementId in: container.\r\tself show: aBoolean element: element',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1833' ],		#self : OmReference [ '1834' ],		#time : DateAndTime [ '2024-03-03T08:20:50.046-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDomController,				#isMetaSide : false			},			#name : #'showElementAt:in:',			#protocol : #visibility,			#sourceCode : 'showElementAt: domElementId in: container\r\tself show: true elementAt: domElementId in: container',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1834' ],		#self : OmReference [ '1835' ],		#time : DateAndTime [ '2024-03-03T08:20:50.047-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTKernelClass classTrait',				#isMetaSide : true			},			#name : #javascriptName,			#protocol : #'pharoJs support',			#sourceCode : 'javascriptName\r\t<pharoJsSkip>\r\t^ (self name allButFirst: 2) asSymbol',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1835' ],		#self : OmReference [ '1836' ],		#time : DateAndTime [ '2024-03-03T08:20:50.047-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTMagnitude classTrait',				#isMetaSide : true			},			#name : #jsTranspilationImportMethodsMagnitude,			#protocol : #'pharoJs support',			#sourceCode : 'jsTranspilationImportMethodsMagnitude\r\t<pharoJsSkip>\r\t^ {Magnitude -> #(\r\t\t\t\tmin: max: min:max: between:and: \r\t\t\t\tcompareWith:ifLesser:ifEqual:ifGreater: \r\t\t\t\t> <= >=\r\t\t\t).\r\t\t}',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1836' ],		#self : OmReference [ '1837' ],		#time : DateAndTime [ '2024-03-03T08:20:50.047-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTMagnitude,				#isMetaSide : false			},			#name : #'<',			#protocol : #testing,			#sourceCode : '< aMagnitude\r\t^self explicitRequirement',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1837' ],		#self : OmReference [ '1838' ],		#time : DateAndTime [ '2024-03-03T08:20:50.047-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTMagnitude,				#isMetaSide : false			},			#name : #'=',			#protocol : #testing,			#sourceCode : '= aMagnitude\r\t^self explicitRequirement',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1838' ],		#self : OmReference [ '1839' ],		#time : DateAndTime [ '2024-03-03T08:20:50.048-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Dictionary class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjDictionary',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1839' ],		#self : OmReference [ '1840' ],		#time : DateAndTime [ '2024-03-03T08:20:50.048-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Set class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjSet',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1840' ],		#self : OmReference [ '1841' ],		#time : DateAndTime [ '2024-03-03T08:20:50.048-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ArrayedCollection class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjArray',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1841' ],		#self : OmReference [ '1842' ],		#time : DateAndTime [ '2024-03-03T08:20:50.049-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Object class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^PjObject',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1842' ],		#self : OmReference [ '1843' ],		#time : DateAndTime [ '2024-03-03T08:20:50.05-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #asJsObject,			#protocol : #'*PharoJs-Base-JS-CoreLibraries-converting',			#sourceCode : 'asJsObject\r\t^PjJsObjectBuilder convert: self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1843' ],		#self : OmReference [ '1844' ],		#time : DateAndTime [ '2024-03-03T08:20:50.051-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #'asJsObjectUsing:',			#protocol : #'*PharoJs-Base-JS-CoreLibraries-converting',			#sourceCode : 'asJsObjectUsing: converter\r\t| dict value |\r\tdict := Dictionary new.\r\tself class instVarNames do: [ : iv |\r\t\tvalue := self instVarNamed: iv.\r\t\tvalue ifNotNil: [ dict at: iv put: (converter convert: value)] ].\r\t^dict',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1844' ],		#self : OmReference [ '1845' ],		#time : DateAndTime [ '2024-03-03T08:20:50.052-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #isPjProxyOrNil,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'isPjProxyOrNil\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1845' ],		#self : OmReference [ '1846' ],		#time : DateAndTime [ '2024-03-03T08:20:50.052-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #'setTimeout:afterMilliseconds:',			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'setTimeout: aBlock afterMilliseconds: anInteger\r\t[anInteger milliSeconds wait.\r\taBlock value] fork',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1846' ],		#self : OmReference [ '1847' ],		#time : DateAndTime [ '2024-03-03T08:20:50.052-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjJsObjectBuilder class',				#isMetaSide : true			},			#name : #'convert:',			#protocol : #converting,			#sourceCode : 'convert: anObject\r\t^self new convert: anObject',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1847' ],		#self : OmReference [ '1848' ],		#time : DateAndTime [ '2024-03-03T08:20:50.053-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJsObjectBuilder,				#isMetaSide : false			},			#name : #'convert:',			#protocol : #converting,			#sourceCode : 'convert: anObject\r\t| jsObject |\r\tconvertedObjects at: anObject ifPresent: [: cachedJsObject | ^cachedJsObject].\r\tjsObject := anObject asJsObjectUsing: self.\r\tconvertedObjects at: anObject put: jsObject.\r\t^jsObject',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1848' ],		#self : OmReference [ '1849' ],		#time : DateAndTime [ '2024-03-03T08:20:50.053-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJsObjectBuilder,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tsuper initialize.\r\tconvertedObjects := Dictionary new',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1849' ],		#self : OmReference [ '1850' ],		#time : DateAndTime [ '2024-03-03T08:20:50.053-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Behavior class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^PjClass',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1850' ],		#self : OmReference [ '1851' ],		#time : DateAndTime [ '2024-03-03T08:20:50.053-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Behavior,				#isMetaSide : false			},			#name : #'subclassesDo:',			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'subclassesDo: aBlock\r\t"Evaluate the argument, aBlock, for each of the receiver\'s immediate subclasses."\r\tself subclasses do: aBlock',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1851' ],		#self : OmReference [ '1852' ],		#time : DateAndTime [ '2024-03-03T08:20:50.054-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Stack class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjStack',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1852' ],		#self : OmReference [ '1853' ],		#time : DateAndTime [ '2024-03-03T08:20:50.054-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDomController class',				#isMetaSide : true			},			#name : #document,			#protocol : #accessing,			#sourceCode : 'document\r\t^document',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1853' ],		#self : OmReference [ '1854' ],		#time : DateAndTime [ '2024-03-03T08:20:50.054-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDomController,				#isMetaSide : false			},			#name : #document,			#protocol : #accessing,			#sourceCode : 'document\r\t^document',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1854' ],		#self : OmReference [ '1855' ],		#time : DateAndTime [ '2024-03-03T08:20:50.057-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'DateAndTime class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries-Chronology',			#sourceCode : 'javascriptPlaceholder\r\t<pharoJsSkip>\r\t^PjDateAndTime',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1855' ],		#self : OmReference [ '1856' ],		#time : DateAndTime [ '2024-03-03T08:20:50.057-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DateAndTime,				#isMetaSide : false			},			#name : #getTime,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'getTime\r\r\t" answer number of milliseconds since unix epoch (midnight Jan 1, 1970, UTC)\r\t - for compatibility with Javascript "\r\r\t^ self asUnixTime * 1000',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1856' ],		#self : OmReference [ '1857' ],		#time : DateAndTime [ '2024-03-03T08:20:50.057-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Rectangle class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^PjRectangle',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1857' ],		#self : OmReference [ '1858' ],		#time : DateAndTime [ '2024-03-03T08:20:50.058-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDate class',				#isMetaSide : true			},			#name : #'fromString:',			#protocol : #'instance creation',			#sourceCode : 'fromString: aString\r\t<javascript: \'return new this(aString)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1858' ],		#self : OmReference [ '1859' ],		#time : DateAndTime [ '2024-03-03T08:20:50.058-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDate class',				#isMetaSide : true			},			#name : #javascriptName,			#protocol : #'pharoJs support',			#sourceCode : 'javascriptName\r\t<pharoJsSkip>\r\t^ #Date',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1859' ],		#self : OmReference [ '1860' ],		#time : DateAndTime [ '2024-03-03T08:20:50.058-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDate class',				#isMetaSide : true			},			#name : #now,			#protocol : #'instance creation',			#sourceCode : 'now\r\t<javascript: \'return new this()\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1860' ],		#self : OmReference [ '1861' ],		#time : DateAndTime [ '2024-03-03T08:20:50.058-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDate class',				#isMetaSide : true			},			#name : #today,			#protocol : #'instance creation',			#sourceCode : 'today\r\t^self now',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1861' ],		#self : OmReference [ '1862' ],		#time : DateAndTime [ '2024-03-03T08:20:50.058-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDate,				#isMetaSide : false			},			#name : #asDateAndTime,			#protocol : #converting,			#sourceCode : 'asDateAndTime\r\t^self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1862' ],		#self : OmReference [ '1863' ],		#time : DateAndTime [ '2024-03-03T08:20:50.058-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDate,				#isMetaSide : false			},			#name : #dayOfMonth,			#protocol : #accessing,			#sourceCode : 'dayOfMonth\r\t^self getDate',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1863' ],		#self : OmReference [ '1864' ],		#time : DateAndTime [ '2024-03-03T08:20:50.058-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDate,				#isMetaSide : false			},			#name : #dayOfWeek,			#protocol : #accessing,			#sourceCode : 'dayOfWeek\r\t^self getDay + 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1864' ],		#self : OmReference [ '1865' ],		#time : DateAndTime [ '2024-03-03T08:20:50.059-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDate,				#isMetaSide : false			},			#name : #monthIndex,			#protocol : #accessing,			#sourceCode : 'monthIndex\r\t^self getMonth + 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1865' ],		#self : OmReference [ '1866' ],		#time : DateAndTime [ '2024-03-03T08:20:50.059-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDate,				#isMetaSide : false			},			#name : #'monthIndex:',			#protocol : #accessing,			#sourceCode : 'monthIndex: anInteger\r\t^self month: anInteger - 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1866' ],		#self : OmReference [ '1867' ],		#time : DateAndTime [ '2024-03-03T08:20:50.059-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDate,				#isMetaSide : false			},			#name : #year,			#protocol : #accessing,			#sourceCode : 'year\r\t^self getFullYear',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1867' ],		#self : OmReference [ '1868' ],		#time : DateAndTime [ '2024-03-03T08:20:50.059-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDateAndTime class',				#isMetaSide : true			},			#name : #'basicfromString:',			#protocol : #'instance creation',			#sourceCode : 'basicfromString: aString\r\t<javascript: \'return new this(aString)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1868' ],		#self : OmReference [ '1869' ],		#time : DateAndTime [ '2024-03-03T08:20:50.059-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDateAndTime class',				#isMetaSide : true			},			#name : #'fromString:',			#protocol : #'instance creation',			#sourceCode : 'fromString: aString\r\r\t| offset |\r\t\'[-+](\\d\\d)\\:(\\d\\d)$\' asRegex matchesIn: aString do: [ :match | \r\t\t| sign hoursAndMinutes |\r\t\tsign := (match includes: $+)\r\t\t\t        ifTrue: [ 1 ]\r\t\t\t        ifFalse: [ -1 ].\r\t\thoursAndMinutes := \'(\\d\\d)\' asRegex matchesIn: match.\r\t\toffset := (sign * hoursAndMinutes first asNumber * 60\r\t\t           + (sign * hoursAndMinutes second asNumber)) minutes ].\r\t^ (self basicfromString: aString)\r\t\t  offset: offset;\r\t\t  yourself',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1869' ],		#self : OmReference [ '1870' ],		#time : DateAndTime [ '2024-03-03T08:20:50.059-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDateAndTime class',				#isMetaSide : true			},			#name : #javascriptName,			#protocol : #'pharoJs support',			#sourceCode : 'javascriptName\r\t<pharoJsSkip>\r\t^ #Date',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1870' ],		#self : OmReference [ '1871' ],		#time : DateAndTime [ '2024-03-03T08:20:50.059-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDateAndTime class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharoJs support',			#sourceCode : 'jsTranspilationImportMethods\r\r\t<pharoJsSkip>\r\t^ { \r\t\t  (DateAndTime class\r\t\t   -> #( #todayHour:minute: #tomorrowHour:minute: )).\r\t\t  (DateAndTime -> #( daysInYear )) }',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1871' ],		#self : OmReference [ '1872' ],		#time : DateAndTime [ '2024-03-03T08:20:50.06-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDateAndTime class',				#isMetaSide : true			},			#name : #now,			#protocol : #'instance creation',			#sourceCode : 'now\r\t<javascript: \'return new this()\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1872' ],		#self : OmReference [ '1873' ],		#time : DateAndTime [ '2024-03-03T08:20:50.06-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDateAndTime class',				#isMetaSide : true			},			#name : #'todayHour:minute:second:',			#protocol : #'instance creation',			#sourceCode : 'todayHour: hour minute: minute second: second\r\t"setXXX methods are defined in JS"\r\t^self new\r\t\tsetHours: hour;\r\t\tsetMinutes: minute;\r\t\tsetSeconds: second;\r\t\tyourself',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1873' ],		#self : OmReference [ '1874' ],		#time : DateAndTime [ '2024-03-03T08:20:50.06-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDateAndTime class',				#isMetaSide : true			},			#name : #'tomorrowHour:minute:second:',			#protocol : #'instance creation',			#sourceCode : 'tomorrowHour: hour minute: minute second: second\r\t^(self todayHour: hour minute: minute second: second) + 1 day',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1874' ],		#self : OmReference [ '1875' ],		#time : DateAndTime [ '2024-03-03T08:20:50.06-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDateAndTime class',				#isMetaSide : true			},			#name : #'year:month:day:hour:minute:second:',			#protocol : #'instance creation',			#sourceCode : 'year: year month: month1To12 day: day1To31 hour: hour minute: minute second: second\r\t<javascript: \'return new this(year, month1To12 - 1, day1To31, hour, minute, second)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1875' ],		#self : OmReference [ '1876' ],		#time : DateAndTime [ '2024-03-03T08:20:50.06-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #'+',			#protocol : #arithmetics,			#sourceCode : '+ otherObject\r\t^otherObject addDateAndTime: self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1876' ],		#self : OmReference [ '1877' ],		#time : DateAndTime [ '2024-03-03T08:20:50.06-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #-,			#protocol : #arithmetics,			#sourceCode : '- anObject\r\t^anObject subtractFromDateAndTime: self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1877' ],		#self : OmReference [ '1878' ],		#time : DateAndTime [ '2024-03-03T08:20:50.06-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #asDateAndTime,			#protocol : #converting,			#sourceCode : 'asDateAndTime\r\t^self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1878' ],		#self : OmReference [ '1879' ],		#time : DateAndTime [ '2024-03-03T08:20:50.061-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #basicPrintString,			#protocol : #printing,			#sourceCode : 'basicPrintString\r\r\t<javascript: \'let d;\r\td = [\r    "0" + (this.getMonth() + 1),\r    "0" + this.getDate(),\r    "0" + this.getHours(),\r    "0" + this.getMinutes(),\r    "0" + this.getSeconds()\r  ].map(component => component.slice(-2)); // take last 2 digits of every component\r\r  // join the components into date\r  return ("000"+ this.getFullYear()).slice(-4)+"-"+d.slice(0, 2).join("-")+ "T" + d.slice(2,5).join(":")\'>\r\r ',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1879' ],		#self : OmReference [ '1880' ],		#time : DateAndTime [ '2024-03-03T08:20:50.061-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #'basicSubtractFromDateAndTime:',			#protocol : #arithmetics,			#sourceCode : 'basicSubtractFromDateAndTime: other\r\t<javascript: \'return other - this;\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1880' ],		#self : OmReference [ '1881' ],		#time : DateAndTime [ '2024-03-03T08:20:50.061-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #dayOfMonth,			#protocol : #accessing,			#sourceCode : 'dayOfMonth\r\t^self getDate',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1881' ],		#self : OmReference [ '1882' ],		#time : DateAndTime [ '2024-03-03T08:20:50.061-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #dayOfWeek,			#protocol : #accessing,			#sourceCode : 'dayOfWeek\r\t^self getDay + 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1882' ],		#self : OmReference [ '1883' ],		#time : DateAndTime [ '2024-03-03T08:20:50.061-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #hour,			#protocol : #accessing,			#sourceCode : 'hour\r\t^self hour24',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1883' ],		#self : OmReference [ '1884' ],		#time : DateAndTime [ '2024-03-03T08:20:50.061-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #hour12,			#protocol : #accessing,			#sourceCode : 'hour12\r\t| hour24 |\r\thour24 := self hour24.\r\thour24 = 0 ifTrue: [ ^12 ].\r\thour24 > 12 ifTrue: [ ^hour24 - 12 ].\r\t^hour24',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1884' ],		#self : OmReference [ '1885' ],		#time : DateAndTime [ '2024-03-03T08:20:50.061-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #hour24,			#protocol : #accessing,			#sourceCode : 'hour24\r\t^self getHours',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1885' ],		#self : OmReference [ '1886' ],		#time : DateAndTime [ '2024-03-03T08:20:50.062-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #milliSecond,			#protocol : #accessing,			#sourceCode : 'milliSecond\r\t^self getMilliseconds',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1886' ],		#self : OmReference [ '1887' ],		#time : DateAndTime [ '2024-03-03T08:20:50.062-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #minute,			#protocol : #accessing,			#sourceCode : 'minute\r\t^self getMinutes',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1887' ],		#self : OmReference [ '1888' ],		#time : DateAndTime [ '2024-03-03T08:20:50.062-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #monthIndex,			#protocol : #accessing,			#sourceCode : 'monthIndex\r\t^self getMonth + 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1888' ],		#self : OmReference [ '1889' ],		#time : DateAndTime [ '2024-03-03T08:20:50.062-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #'monthIndex:',			#protocol : #accessing,			#sourceCode : 'monthIndex: anInteger\r\t^self month: anInteger - 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1889' ],		#self : OmReference [ '1890' ],		#time : DateAndTime [ '2024-03-03T08:20:50.062-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #offset,			#protocol : #accessing,			#sourceCode : 'offset\r\r\t^ offset ifNil: [ offset := (-1 * self getTimezoneOffset) minutes ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1890' ],		#self : OmReference [ '1891' ],		#time : DateAndTime [ '2024-03-03T08:20:50.062-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #'offset:',			#protocol : #accessing,			#sourceCode : 'offset: aDuration\r\r\toffset := aDuration',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1891' ],		#self : OmReference [ '1892' ],		#time : DateAndTime [ '2024-03-03T08:20:50.062-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: str\r\r\tstr << (self getTimezoneOffset minutes addDateAndTime:\r\t\t (self offset addDateAndTime: self)) basicPrintString.\r\tself offset printStringAsTimzoneOn: str',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1892' ],		#self : OmReference [ '1893' ],		#time : DateAndTime [ '2024-03-03T08:20:50.063-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #second,			#protocol : #accessing,			#sourceCode : 'second\r\t^self getSeconds',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1893' ],		#self : OmReference [ '1894' ],		#time : DateAndTime [ '2024-03-03T08:20:50.063-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #'subtractFromDateAndTime:',			#protocol : #arithmetics,			#sourceCode : 'subtractFromDateAndTime: aDateAndTime\r\t^Duration milliSeconds: (self basicSubtractFromDateAndTime: aDateAndTime)',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1894' ],		#self : OmReference [ '1895' ],		#time : DateAndTime [ '2024-03-03T08:20:50.063-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #year,			#protocol : #accessing,			#sourceCode : 'year\r\t^self getFullYear',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1895' ],		#self : OmReference [ '1896' ],		#time : DateAndTime [ '2024-03-03T08:20:50.063-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTime class',				#isMetaSide : true			},			#name : #'hour:minute:second:milliSecond:',			#protocol : #'instance creation',			#sourceCode : 'hour: hour minute: minute second: second milliSecond: milliseconds\r\t<javascript: \'\r\tvar today = new Date();\r\treturn new Date(today.getFullYear(), today.getMonth(), today.getDate(), hour, minute, second, milliseconds);\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1896' ],		#self : OmReference [ '1897' ],		#time : DateAndTime [ '2024-03-03T08:20:50.063-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTime class',				#isMetaSide : true			},			#name : #'hour:minute:second:nanoSecond:',			#protocol : #'instance creation',			#sourceCode : 'hour: hour minute: minute second: second nanoSecond: nanoCount\r\t^self hour: hour minute: minute second: second milliSecond: nanoCount // 1000000',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1897' ],		#self : OmReference [ '1898' ],		#time : DateAndTime [ '2024-03-03T08:20:50.063-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTime class',				#isMetaSide : true			},			#name : #javascriptName,			#protocol : #'pharoJs support',			#sourceCode : 'javascriptName\r\t<pharoJsSkip>\r\t^ #Date',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1898' ],		#self : OmReference [ '1899' ],		#time : DateAndTime [ '2024-03-03T08:20:50.063-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTime class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharoJs support',			#sourceCode : 'jsTranspilationImportMethods\r\t<pharoJsSkip>\r\t| classSelectors instanceSelectors |\r\tclassSelectors := Time class \r\t\tselectorsInProtocols: #(\'instance creation\' \'*PharoExtra-instance creation\' \'*Kernel-Chronology-Extras\')  \r\t\texclude: #(now nowLocal fromString: readFrom: seconds:nanoSeconds: seconds:  hour:minute:second:milliSecond: hour:minute:second:nanoSecond:\r\t\tbenchmarkMillisecondClock benchmarkPrimitiveResponseDelay dateAndTimeFromSeconds:\r\t\t). \r\tinstanceSelectors := Time \r\t\tselectorsInProtocols: #(accessing "adding comparing converting")\r\t\texclude: #(hour12 hour24 minute second).\r\t^{Time class -> classSelectors.\r\tTime -> instanceSelectors }',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1899' ],		#self : OmReference [ '1900' ],		#time : DateAndTime [ '2024-03-03T08:20:50.064-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTime class',				#isMetaSide : true			},			#name : #millisecondClockValue,			#protocol : #clock,			#sourceCode : 'millisecondClockValue\r\t<javascript: \'if(typeof performance=="object") return performance.now();\rif(typeof process=="object"){var hr=process.hrtime();return hr[0]*1000+hr[1]/1000000}\rreturn Date.now()\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1900' ],		#self : OmReference [ '1901' ],		#time : DateAndTime [ '2024-03-03T08:20:50.064-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTime class',				#isMetaSide : true			},			#name : #now,			#protocol : #'instance creation',			#sourceCode : 'now\r\t<javascript: \'return new this()\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1901' ],		#self : OmReference [ '1902' ],		#time : DateAndTime [ '2024-03-03T08:20:50.064-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTime class',				#isMetaSide : true			},			#name : #'seconds:',			#protocol : #'instance creation',			#sourceCode : 'seconds: seconds\r\t^self seconds: seconds nanoSeconds: 0',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1902' ],		#self : OmReference [ '1903' ],		#time : DateAndTime [ '2024-03-03T08:20:50.064-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTime class',				#isMetaSide : true			},			#name : #'seconds:nanoSeconds:',			#protocol : #'instance creation',			#sourceCode : 'seconds: seconds nanoSeconds: nanoCount\r\t"Answer a Time from midnight."\r\t^self basicNew\r\t\tseconds: seconds nanoSeconds: nanoCount;\r\t\tyourself',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1903' ],		#self : OmReference [ '1904' ],		#time : DateAndTime [ '2024-03-03T08:20:50.064-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTime,				#isMetaSide : false			},			#name : #asDateAndTime,			#protocol : #converting,			#sourceCode : 'asDateAndTime\r\t^self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1904' ],		#self : OmReference [ '1905' ],		#time : DateAndTime [ '2024-03-03T08:20:50.064-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTime,				#isMetaSide : false			},			#name : #asSeconds,			#protocol : #converting,			#sourceCode : 'asSeconds\r\t^(self hour24 * 3600) + (self minute * 60) + self seconds',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1905' ],		#self : OmReference [ '1906' ],		#time : DateAndTime [ '2024-03-03T08:20:50.064-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTime,				#isMetaSide : false			},			#name : #dayOfMonth,			#protocol : #accessing,			#sourceCode : 'dayOfMonth\r\t^self getDate',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1906' ],		#self : OmReference [ '1907' ],		#time : DateAndTime [ '2024-03-03T08:20:50.065-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTime,				#isMetaSide : false			},			#name : #dayOfWeek,			#protocol : #accessing,			#sourceCode : 'dayOfWeek\r\t^self getDay + 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1907' ],		#self : OmReference [ '1908' ],		#time : DateAndTime [ '2024-03-03T08:20:50.065-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTime,				#isMetaSide : false			},			#name : #hour,			#protocol : #accessing,			#sourceCode : 'hour\r\t^self hour24',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1908' ],		#self : OmReference [ '1909' ],		#time : DateAndTime [ '2024-03-03T08:20:50.065-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTime,				#isMetaSide : false			},			#name : #hour12,			#protocol : #accessing,			#sourceCode : 'hour12\r\t| hour24 |\r\thour24 := self hour24.\r\thour24 = 0 ifTrue: [ ^12 ].\r\thour24 > 12 ifTrue: [ ^hour24 - 12 ].\r\t^hour24',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1909' ],		#self : OmReference [ '1910' ],		#time : DateAndTime [ '2024-03-03T08:20:50.065-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTime,				#isMetaSide : false			},			#name : #hour24,			#protocol : #accessing,			#sourceCode : 'hour24\r\t^self getHours',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1910' ],		#self : OmReference [ '1911' ],		#time : DateAndTime [ '2024-03-03T08:20:50.065-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTime,				#isMetaSide : false			},			#name : #milliSecond,			#protocol : #accessing,			#sourceCode : 'milliSecond\r\t^self getMilliseconds',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1911' ],		#self : OmReference [ '1912' ],		#time : DateAndTime [ '2024-03-03T08:20:50.065-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTime,				#isMetaSide : false			},			#name : #minute,			#protocol : #accessing,			#sourceCode : 'minute\r\t^self getMinutes',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1912' ],		#self : OmReference [ '1913' ],		#time : DateAndTime [ '2024-03-03T08:20:50.065-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTime,				#isMetaSide : false			},			#name : #monthIndex,			#protocol : #accessing,			#sourceCode : 'monthIndex\r\t^self getMonth + 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1913' ],		#self : OmReference [ '1914' ],		#time : DateAndTime [ '2024-03-03T08:20:50.065-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTime,				#isMetaSide : false			},			#name : #'monthIndex:',			#protocol : #accessing,			#sourceCode : 'monthIndex: anInteger\r\t^self month: anInteger - 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1914' ],		#self : OmReference [ '1915' ],		#time : DateAndTime [ '2024-03-03T08:20:50.066-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTime,				#isMetaSide : false			},			#name : #second,			#protocol : #accessing,			#sourceCode : 'second\r\t^self getSeconds',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1915' ],		#self : OmReference [ '1916' ],		#time : DateAndTime [ '2024-03-03T08:20:50.066-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTime,				#isMetaSide : false			},			#name : #'seconds:',			#protocol : #private,			#sourceCode : 'seconds: secondCount\r\t| minuteSecondsCount |\r\tself setHours: (secondCount quo: SecondsInHour).\r\tminuteSecondsCount := secondCount rem: SecondsInHour.\r\tself setMinutes: (minuteSecondsCount quo: SecondsInMinute).\r\tself setSeconds: (minuteSecondsCount rem: SecondsInMinute).',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1916' ],		#self : OmReference [ '1917' ],		#time : DateAndTime [ '2024-03-03T08:20:50.066-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTime,				#isMetaSide : false			},			#name : #'seconds:nanoSeconds:',			#protocol : #private,			#sourceCode : 'seconds: secondCount nanoSeconds: nanoCount \r\tself seconds: secondCount.\r\tself setMilliseconds: nanoCount//1000000',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1917' ],		#self : OmReference [ '1918' ],		#time : DateAndTime [ '2024-03-03T08:20:50.066-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTime,				#isMetaSide : false			},			#name : #'ticks:',			#protocol : #private,			#sourceCode : 'ticks: anArray\r\t"ticks is an Array: { days. seconds. nanoSeconds }"\r\tself seconds: (anArray at: 2) nanoSeconds: anArray last',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1918' ],		#self : OmReference [ '1919' ],		#time : DateAndTime [ '2024-03-03T08:20:50.066-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTime,				#isMetaSide : false			},			#name : #year,			#protocol : #accessing,			#sourceCode : 'year\r\t^self getFullYear',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1919' ],		#self : OmReference [ '1920' ],		#time : DateAndTime [ '2024-03-03T08:20:50.066-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'SharedPool class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^PjSharedPool',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1920' ],		#self : OmReference [ '1921' ],		#time : DateAndTime [ '2024-03-03T08:20:50.067-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'SmallInteger class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjNumber',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1921' ],		#self : OmReference [ '1922' ],		#time : DateAndTime [ '2024-03-03T08:20:50.067-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'String class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjString',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1922' ],		#self : OmReference [ '1923' ],		#time : DateAndTime [ '2024-03-03T08:20:50.068-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #String,				#isMetaSide : false			},			#name : #'asJsObjectUsing:',			#protocol : #'*PharoJs-Base-JS-CoreLibraries-converting',			#sourceCode : 'asJsObjectUsing: converter\r\t^self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1923' ],		#self : OmReference [ '1924' ],		#time : DateAndTime [ '2024-03-03T08:20:50.068-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Symbol class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjString',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1924' ],		#self : OmReference [ '1925' ],		#time : DateAndTime [ '2024-03-03T08:20:50.069-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'LookupKey class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^PjLookupKey',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1925' ],		#self : OmReference [ '1926' ],		#time : DateAndTime [ '2024-03-03T08:20:50.069-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'IdentityDictionary class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjIdentityDictionary',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1926' ],		#self : OmReference [ '1927' ],		#time : DateAndTime [ '2024-03-03T08:20:50.07-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Character class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjString',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1927' ],		#self : OmReference [ '1928' ],		#time : DateAndTime [ '2024-03-03T08:20:50.07-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Magnitude class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjMagnitude',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1928' ],		#self : OmReference [ '1929' ],		#time : DateAndTime [ '2024-03-03T08:20:50.071-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Magnitude,				#isMetaSide : false			},			#name : #'asJsObjectUsing:',			#protocol : #'*PharoJs-Base-JS-CoreLibraries-converting',			#sourceCode : 'asJsObjectUsing: converter\r\t^self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1929' ],		#self : OmReference [ '1930' ],		#time : DateAndTime [ '2024-03-03T08:20:50.072-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'OrderedCollection class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries-Kernel',			#sourceCode : 'javascriptPlaceholder\r\t^ PjArray',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1930' ],		#self : OmReference [ '1931' ],		#time : DateAndTime [ '2024-03-03T08:20:50.072-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ByteArray class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjByteArray',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1931' ],		#self : OmReference [ '1932' ],		#time : DateAndTime [ '2024-03-03T08:20:50.072-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ProtoObject class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^PjObject',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1932' ],		#self : OmReference [ '1933' ],		#time : DateAndTime [ '2024-03-03T08:20:50.072-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Integer class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjNumber',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1933' ],		#self : OmReference [ '1934' ],		#time : DateAndTime [ '2024-03-03T08:20:50.073-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ClassDescription,				#isMetaSide : false			},			#name : #'selectorsInProtocols:',			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'selectorsInProtocols: protocols\r\t<pharoJsSkip>\r\t| selectors |\r\tselectors := Set new.\r\tprotocols do: [ : protocol |\r\t\tselectors addAll: (self selectorsInProtocol: protocol)].\r\t^selectors',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1934' ],		#self : OmReference [ '1935' ],		#time : DateAndTime [ '2024-03-03T08:20:50.073-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ClassDescription,				#isMetaSide : false			},			#name : #'selectorsInProtocols:exclude:',			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'selectorsInProtocols: protocols exclude: excludedSelectors\r\t<pharoJsSkip>\r\t| selectors |\r\tselectors := self selectorsInProtocols: protocols. \r\t^selectors copyWithoutAll: excludedSelectors',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1935' ],		#self : OmReference [ '1936' ],		#time : DateAndTime [ '2024-03-03T08:20:50.073-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Date class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t<pharoJsSkip>\r\t^PjDate',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1936' ],		#self : OmReference [ '1937' ],		#time : DateAndTime [ '2024-03-03T08:20:50.074-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Duration class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries-Chronology',			#sourceCode : 'javascriptPlaceholder\r\t<pharoJsSkip>\r\t^PjDuration',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1937' ],		#self : OmReference [ '1938' ],		#time : DateAndTime [ '2024-03-03T08:20:50.074-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Association class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^PjAssociation',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1938' ],		#self : OmReference [ '1939' ],		#time : DateAndTime [ '2024-03-03T08:20:50.075-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Boolean class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjBoolean',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1939' ],		#self : OmReference [ '1940' ],		#time : DateAndTime [ '2024-03-03T08:20:50.076-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Boolean,				#isMetaSide : false			},			#name : #'asJsObjectUsing:',			#protocol : #'*PharoJs-Base-JS-CoreLibraries-converting',			#sourceCode : 'asJsObjectUsing: converter\r\t^self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1940' ],		#self : OmReference [ '1941' ],		#time : DateAndTime [ '2024-03-03T08:20:50.076-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Error class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^PjError',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1941' ],		#self : OmReference [ '1942' ],		#time : DateAndTime [ '2024-03-03T08:20:50.076-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjArray class',				#isMetaSide : true			},			#name : #javascriptInitialize,			#protocol : #'class initialization',			#sourceCode : 'javascriptInitialize \r\tSmalltalk at: #OrderedCollection put: Array',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1942' ],		#self : OmReference [ '1943' ],		#time : DateAndTime [ '2024-03-03T08:20:50.076-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjArray class',				#isMetaSide : true			},			#name : #'new:',			#protocol : #'instance creation',			#sourceCode : 'new: ignored\r\t^ self new',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1943' ],		#self : OmReference [ '1944' ],		#time : DateAndTime [ '2024-03-03T08:20:50.077-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjArray class',				#isMetaSide : true			},			#name : #'streamContents:',			#protocol : #'instance creation',			#sourceCode : 'streamContents: aBlock\r\t| stream |\r\tstream := PjArrayStream new.\r\taBlock value: stream.\r\t^ stream contents',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1944' ],		#self : OmReference [ '1945' ],		#time : DateAndTime [ '2024-03-03T08:20:50.077-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjArray class',				#isMetaSide : true			},			#name : #'with:',			#protocol : #'instance creation',			#sourceCode : 'with: anObject \r\t"Answer a new instance of me, containing only anObject."\r\t<javascript: \'return [anObject]\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1945' ],		#self : OmReference [ '1946' ],		#time : DateAndTime [ '2024-03-03T08:20:50.077-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjArray class',				#isMetaSide : true			},			#name : #'with:with:',			#protocol : #'instance creation',			#sourceCode : 'with: firstObject with: secondObject \r\t"Answer a new instance of me, containing firstObject and secondObject."\r\t<javascript: \'return [firstObject,secondObject]\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1946' ],		#self : OmReference [ '1947' ],		#time : DateAndTime [ '2024-03-03T08:20:50.077-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArray,				#isMetaSide : false			},			#name : #'add:',			#protocol : #enumerating,			#sourceCode : 'add: x\r\t^ self addLast: x',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1947' ],		#self : OmReference [ '1948' ],		#time : DateAndTime [ '2024-03-03T08:20:50.077-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArray,				#isMetaSide : false			},			#name : #'addFirst:',			#protocol : #enumerating,			#sourceCode : 'addFirst: x\r\t<javascript: \'this.unshift(x);return x\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1948' ],		#self : OmReference [ '1949' ],		#time : DateAndTime [ '2024-03-03T08:20:50.077-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArray,				#isMetaSide : false			},			#name : #'addLast:',			#protocol : #enumerating,			#sourceCode : 'addLast: x\r\t<javascript: \'this.push(x);return x\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1949' ],		#self : OmReference [ '1950' ],		#time : DateAndTime [ '2024-03-03T08:20:50.077-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArray,				#isMetaSide : false			},			#name : #'at:put:',			#protocol : #enumerating,			#sourceCode : 'at: i put: x\r\t<javascript: \'return this[i-1]=x\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1950' ],		#self : OmReference [ '1951' ],		#time : DateAndTime [ '2024-03-03T08:20:50.078-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArray,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\r\t"Merging printOn: methods of Array and Collection because JS Array directly inherits from Object"\r\r\tself shouldBePrintedAsLiteral ifTrue: [ \r\t\tself printAsLiteralFormOn: aStream.\r\t\t^ self ].\r\tself isSelfEvaluating ifTrue: [ \r\t\tself printAsSelfEvaluatingFormOn: aStream.\r\t\t^ self ].\r\tself printNameOn: aStream.\r\tself printElementsOn: aStream',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1951' ],		#self : OmReference [ '1952' ],		#time : DateAndTime [ '2024-03-03T08:20:50.078-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArray,				#isMetaSide : false			},			#name : #readStream,			#protocol : #accessing,			#sourceCode : 'readStream\r\t^ PjArrayStream on: self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1952' ],		#self : OmReference [ '1953' ],		#time : DateAndTime [ '2024-03-03T08:20:50.078-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArray,				#isMetaSide : false			},			#name : #'remove:ifAbsent:',			#protocol : #removing,			#sourceCode : 'remove: oldObject ifAbsent: absentBlock\r\t| index |\r\tindex := self findIndex: [ : each | oldObject = each ].\r\tindex >= 0 ifTrue: [ ^ self removeAt: index + 1].\r\t^ absentBlock value',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1953' ],		#self : OmReference [ '1954' ],		#time : DateAndTime [ '2024-03-03T08:20:50.078-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArray,				#isMetaSide : false			},			#name : #removeAll,			#protocol : #removing,			#sourceCode : 'removeAll\r\tself size timesRepeat: [ self removeFirst ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1954' ],		#self : OmReference [ '1955' ],		#time : DateAndTime [ '2024-03-03T08:20:50.078-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArray,				#isMetaSide : false			},			#name : #'removeAt:',			#protocol : #removing,			#sourceCode : 'removeAt: aNumber\r\t<javascript: \'var result=this[aNumber-1];this.splice(aNumber - 1,1);return result\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1955' ],		#self : OmReference [ '1956' ],		#time : DateAndTime [ '2024-03-03T08:20:50.078-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArray,				#isMetaSide : false			},			#name : #removeFirst,			#protocol : #removing,			#sourceCode : 'removeFirst\r\t<javascript: \'return this.shift()\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1956' ],		#self : OmReference [ '1957' ],		#time : DateAndTime [ '2024-03-03T08:20:50.079-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArray,				#isMetaSide : false			},			#name : #removeLast,			#protocol : #removing,			#sourceCode : 'removeLast\r\t<javascript: \'return this.pop()\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1957' ],		#self : OmReference [ '1958' ],		#time : DateAndTime [ '2024-03-03T08:20:50.079-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArray,				#isMetaSide : false			},			#name : #'replaceFrom:to:with:startingAt:',			#protocol : #accessing,			#sourceCode : 'replaceFrom: start to: stop with: replacement startingAt: repStart\r\t<javascript: \'\r\tfor(var mine=stop-1,other=mine+repStart-start;\r\t\tmine>=start-1;\r\t\t--other,--mine\r\t\t)this[mine]=replacement[other];return this\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1958' ],		#self : OmReference [ '1959' ],		#time : DateAndTime [ '2024-03-03T08:20:50.079-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArray,				#isMetaSide : false			},			#name : #writeStream,			#protocol : #accessing,			#sourceCode : 'writeStream\r\t^ PjArrayStream new',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1959' ],		#self : OmReference [ '1960' ],		#time : DateAndTime [ '2024-03-03T08:20:50.079-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjSet class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharoJs support',			#sourceCode : 'jsTranspilationImportMethods\r\t<pharoJsSkip>\r\t^{Set -> #(asSet)}',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1960' ],		#self : OmReference [ '1961' ],		#time : DateAndTime [ '2024-03-03T08:20:50.079-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSet,				#isMetaSide : false			},			#name : #'addFirst:',			#protocol : #enumerating,			#sourceCode : 'addFirst: element\r\t(self includes: element) ifTrue: [ ^element ].\r\t^super addFirst: element',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1961' ],		#self : OmReference [ '1962' ],		#time : DateAndTime [ '2024-03-03T08:20:50.08-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSet,				#isMetaSide : false			},			#name : #'addLast:',			#protocol : #enumerating,			#sourceCode : 'addLast: element\r\t(self includes: element) ifTrue: [ ^element ].\r\t^super addLast: element',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1962' ],		#self : OmReference [ '1963' ],		#time : DateAndTime [ '2024-03-03T08:20:50.08-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSet,				#isMetaSide : false			},			#name : #'like:',			#protocol : #enumerating,			#sourceCode : 'like: anObject\r\t(self includes: anObject) ifTrue: [ ^ anObject ].\r\t^ nil',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1963' ],		#self : OmReference [ '1964' ],		#time : DateAndTime [ '2024-03-03T08:20:50.08-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSet,				#isMetaSide : false			},			#name : #'like:ifAbsent:',			#protocol : #enumerating,			#sourceCode : 'like: anObject ifAbsent: aBlock\r\t(self includes: anObject) ifTrue: [ ^ anObject ].\r\t^ aBlock value',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1964' ],		#self : OmReference [ '1965' ],		#time : DateAndTime [ '2024-03-03T08:20:50.08-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjSortedCollection class',				#isMetaSide : true			},			#name : #'jsSortUsing:',			#protocol : #'pharoJs support',			#sourceCode : 'jsSortUsing: aBlock\r   ^ (self respondsTo: #sortUsing:) ifTrue: [ self sortUsing: aBlock] ifFalse: [ self new sortBlock: aBlock ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1965' ],		#self : OmReference [ '1966' ],		#time : DateAndTime [ '2024-03-03T08:20:50.08-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjSortedCollection class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharoJs support',			#sourceCode : 'jsTranspilationImportMethods\r\r\t<pharoJsSkip>\r\t^ { \r\t\t  (SortedCollection -> (SortedCollection selectors copyWithoutAll:\r\t\t\t    #( collect: #insert:before: indexForInserting:\r\t\t\t       addAll: reSort #sort:to: groupedBy:))).\r\t\t  (SortedCollection class -> #( sortBlock: sortUsing: )) }',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1966' ],		#self : OmReference [ '1967' ],		#time : DateAndTime [ '2024-03-03T08:20:50.08-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSortedCollection,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #adding,			#sourceCode : 'addAll: otherCollection\r\totherCollection do: [ : each | self add: each ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1967' ],		#self : OmReference [ '1968' ],		#time : DateAndTime [ '2024-03-03T08:20:50.081-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSortedCollection,				#isMetaSide : false			},			#name : #'collect:',			#protocol : #enumerating,			#sourceCode : 'collect: aBlock \r\t"Evaluate aBlock with each of my elements as the argument. Collect the \r\tresulting values into an OrderedCollection. Answer the new collection. \r\tOverride the superclass in order to produce an OrderedCollection instead\r\tof a SortedCollection."\r\r\t| newCollection | \r\tnewCollection := OrderedCollection new.\r\tself do: [:each | newCollection addLast: (aBlock value: each)].\r\t^ newCollection',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1968' ],		#self : OmReference [ '1969' ],		#time : DateAndTime [ '2024-03-03T08:20:50.081-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSortedCollection,				#isMetaSide : false			},			#name : #'indexForInserting:',			#protocol : #private,			#sourceCode : 'indexForInserting: newObject\r\tself ifEmpty: [ ^1 ].\r\tself withIndexDo: [ : element : index | \r\t\t(self sortBlock value: newObject value: element) ifTrue: [ ^index ] ].\r\t^self size + 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1969' ],		#self : OmReference [ '1970' ],		#time : DateAndTime [ '2024-03-03T08:20:50.081-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSortedCollection,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself instVarNamed: #firstIndex put: 1.\r\tself instVarNamed: #lastIndex put: 0.\r\tself sortBlock: [ : a : b | a <= b ].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1970' ],		#self : OmReference [ '1971' ],		#time : DateAndTime [ '2024-03-03T08:20:50.081-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSortedCollection,				#isMetaSide : false			},			#name : #'insert:before:',			#protocol : #accessing,			#sourceCode : 'insert: newObject before: index\r\tself splice: index - 1 remove: 0 element: newObject',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1971' ],		#self : OmReference [ '1972' ],		#time : DateAndTime [ '2024-03-03T08:20:50.081-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSortedCollection,				#isMetaSide : false			},			#name : #reSort,			#protocol : #private,			#sourceCode : 'reSort\r\t| copy |\r\tcopy := self species sortBlock: self sortBlock.\r\tcopy addAll: self.\r\tcopy withIndexDo: [ : each : index |\r\t\tsuper at: index put: each ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1972' ],		#self : OmReference [ '1973' ],		#time : DateAndTime [ '2024-03-03T08:20:50.082-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSortedCollection,				#isMetaSide : false			},			#name : #'replaceFrom:to:with:startingAt:',			#protocol : #accessing,			#sourceCode : 'replaceFrom: start to: stop with: replacement startingAt: repStart\r\t| repStop |\r\trepStop := repStart + stop - start.\r\trepStart to: repStop do: [ : otherIndex |\r\t\tself add: (replacement at: otherIndex)  ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1973' ],		#self : OmReference [ '1974' ],		#time : DateAndTime [ '2024-03-03T08:20:50.082-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjStack class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharoJs support',			#sourceCode : 'jsTranspilationImportMethods\r\t<pharoJsSkip>\r\t^{Stack -> #(top pop push:)}',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1974' ],		#self : OmReference [ '1975' ],		#time : DateAndTime [ '2024-03-03T08:20:50.082-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBoolean class',				#isMetaSide : true			},			#name : #'identityHash_jsGenerator:',			#protocol : #'class initialization',			#sourceCode : 'identityHash_jsGenerator: transpiler\r\t<pharoJsSkip>\r\t^\'if(this == true){\r\t\treturn \', true identityHash asString,\';}\r\treturn \', false identityHash asString',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1975' ],		#self : OmReference [ '1976' ],		#time : DateAndTime [ '2024-03-03T08:20:50.082-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBoolean class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharoJs support',			#sourceCode : 'jsTranspilationImportMethods\r\r\t<pharoJsSkip>\r\t^ { (Boolean -> #( ==> eqv: isLiteral)) }',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1976' ],		#self : OmReference [ '1977' ],		#time : DateAndTime [ '2024-03-03T08:20:50.083-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #'&',			#protocol : #'logical operations',			#sourceCode : '& aBoolean\r\t^ self ifTrue: [ ^ aBoolean ] ifFalse: [ ^ false ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1977' ],		#self : OmReference [ '1978' ],		#time : DateAndTime [ '2024-03-03T08:20:50.083-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #'=',			#protocol : #comparing,			#sourceCode : '= other\r\t<javascript: \'return this==Boolean(other)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1978' ],		#self : OmReference [ '1979' ],		#time : DateAndTime [ '2024-03-03T08:20:50.083-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #'==',			#protocol : #comparing,			#sourceCode : '== other\r\t^ self = other',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1979' ],		#self : OmReference [ '1980' ],		#time : DateAndTime [ '2024-03-03T08:20:50.083-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #'and:',			#protocol : #controlling,			#sourceCode : 'and: aBlock\r\t<javascript: \'if(this==true){return aBlock();}else{return false;}\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1980' ],		#self : OmReference [ '1981' ],		#time : DateAndTime [ '2024-03-03T08:20:50.083-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #asBit,			#protocol : #converting,			#sourceCode : 'asBit\r\t<javascript: \'return this + 0\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1981' ],		#self : OmReference [ '1982' ],		#time : DateAndTime [ '2024-03-03T08:20:50.084-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #asJsObject,			#protocol : #converting,			#sourceCode : 'asJsObject\r\t"We want primitive booleans and not boxed ones!"\r\t"This is necessary because if a value like true is sent as a message, then it is wrapped, so returning this doesn’t do the right thing. so the block [ false not == true ] will return false."\r\t<javascript: \'return this == true\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1982' ],		#self : OmReference [ '1983' ],		#time : DateAndTime [ '2024-03-03T08:20:50.084-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #asString,			#protocol : #converting,			#sourceCode : 'asString\r\t<javascript: \'return this + ""\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1983' ],		#self : OmReference [ '1984' ],		#time : DateAndTime [ '2024-03-03T08:20:50.084-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #identityHash,			#protocol : #'not defined category',			#sourceCode : 'identityHash\r\t<jsGenerator: #identityHash_jsGenerator:>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1984' ],		#self : OmReference [ '1985' ],		#time : DateAndTime [ '2024-03-03T08:20:50.085-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #'ifFalse:',			#protocol : #controlling,			#sourceCode : 'ifFalse: aBlock\r\t^ self ifTrue: [] ifFalse: aBlock',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1985' ],		#self : OmReference [ '1986' ],		#time : DateAndTime [ '2024-03-03T08:20:50.085-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #'ifFalse:ifTrue:',			#protocol : #controlling,			#sourceCode : 'ifFalse: falseBlock ifTrue: trueBlock\r\t^self ifTrue: trueBlock ifFalse: falseBlock',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1986' ],		#self : OmReference [ '1987' ],		#time : DateAndTime [ '2024-03-03T08:20:50.085-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #'ifTrue:',			#protocol : #controlling,			#sourceCode : 'ifTrue: aBlock\r\t^ self ifTrue: aBlock ifFalse: [  ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1987' ],		#self : OmReference [ '1988' ],		#time : DateAndTime [ '2024-03-03T08:20:50.086-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #'ifTrue:ifFalse:',			#protocol : #controlling,			#sourceCode : 'ifTrue: trueBlock ifFalse: falseBlock\r\t<javascript: \'if(this==true){return typeof trueBlock=="function"?trueBlock():trueBlock}else{return typeof falseBlock=="function"?falseBlock():falseBlock}\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1988' ],		#self : OmReference [ '1989' ],		#time : DateAndTime [ '2024-03-03T08:20:50.086-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #isJSPrimitiveType,			#protocol : #testing,			#sourceCode : 'isJSPrimitiveType\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1989' ],		#self : OmReference [ '1990' ],		#time : DateAndTime [ '2024-03-03T08:20:50.086-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #not,			#protocol : #'logical operations',			#sourceCode : 'not\r\t^ self ifTrue: [ ^ false ] ifFalse: [ ^ true ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1990' ],		#self : OmReference [ '1991' ],		#time : DateAndTime [ '2024-03-03T08:20:50.086-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #'or:',			#protocol : #controlling,			#sourceCode : 'or: aBlock\r\t<javascript: \'if(this==true){return true}else{return aBlock()}\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1991' ],		#self : OmReference [ '1992' ],		#time : DateAndTime [ '2024-03-03T08:20:50.087-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\r\taStream nextPutAll: self asString',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1992' ],		#self : OmReference [ '1993' ],		#time : DateAndTime [ '2024-03-03T08:20:50.087-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #proxyResponse,			#protocol : #proxy,			#sourceCode : 'proxyResponse\r\t<javascript: \'return true==this\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1993' ],		#self : OmReference [ '1994' ],		#time : DateAndTime [ '2024-03-03T08:20:50.087-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #value,			#protocol : #converting,			#sourceCode : 'value\r\t<javascript: \'return true==this\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1994' ],		#self : OmReference [ '1995' ],		#time : DateAndTime [ '2024-03-03T08:20:50.087-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #'xor:',			#protocol : #controlling,			#sourceCode : 'xor: aBoolean\r\tself ifTrue: [ ^ aBoolean value not ] ifFalse: [ ^ aBoolean value ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1995' ],		#self : OmReference [ '1996' ],		#time : DateAndTime [ '2024-03-03T08:20:50.087-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #'|',			#protocol : #'logical operations',			#sourceCode : '| aBoolean\r\t^ self ifFalse: [ ^ aBoolean ] ifTrue: [ ^ true ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1996' ],		#self : OmReference [ '1997' ],		#time : DateAndTime [ '2024-03-03T08:20:50.087-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #'~~',			#protocol : #comparing,			#sourceCode : '~~ other\r\t^ self ~= other',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1997' ],		#self : OmReference [ '1998' ],		#time : DateAndTime [ '2024-03-03T08:20:50.088-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCollection class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharojs support',			#sourceCode : 'jsTranspilationImportMethods\r\t<pharoJsSkip>\r\t^ self jsTranspilationImportMethodsCollection',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1998' ],		#self : OmReference [ '1999' ],		#time : DateAndTime [ '2024-03-03T08:20:50.088-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCollection class',				#isMetaSide : true			},			#name : #'new:',			#protocol : #'instance creation',			#sourceCode : 'new: ignored\r\t" if this gets down to object, the numeric parameter will not do what we want "\r\t^ self new',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1999' ],		#self : OmReference [ '2000' ],		#time : DateAndTime [ '2024-03-03T08:20:50.088-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCollection,				#isMetaSide : false			},			#name : #'=',			#protocol : #testing,			#sourceCode : '= aMagnitude\r\t^self subclassResponsibility',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2000' ],		#self : OmReference [ '2001' ],		#time : DateAndTime [ '2024-03-03T08:20:50.088-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDictionary class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharojs support',			#sourceCode : 'jsTranspilationImportMethods\r\t<pharoJsSkip>\r\t^{\r\t\tDictionary -> #(at:ifAbsentPut:).\r\t}',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2001' ],		#self : OmReference [ '2002' ],		#time : DateAndTime [ '2024-03-03T08:20:50.088-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionary,				#isMetaSide : false			},			#name : #asDictionary,			#protocol : #converting,			#sourceCode : 'asDictionary\r\t^self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2002' ],		#self : OmReference [ '2003' ],		#time : DateAndTime [ '2024-03-03T08:20:50.088-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionary,				#isMetaSide : false			},			#name : #asJsObject,			#protocol : #converting,			#sourceCode : 'asJsObject\r\t| jsObject |\r\tjsObject := Object new.\r\tself keysAndValuesDo: [ : key : value |\r\t\tjsObject at: key put: value asJsObject].\r\t^jsObject',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2003' ],		#self : OmReference [ '2004' ],		#time : DateAndTime [ '2024-03-03T08:20:50.089-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionary,				#isMetaSide : false			},			#name : #'at:',			#protocol : #'dictionary access',			#sourceCode : 'at: key\r\t^super at: (self keyFrom: key)',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2004' ],		#self : OmReference [ '2005' ],		#time : DateAndTime [ '2024-03-03T08:20:50.089-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionary,				#isMetaSide : false			},			#name : #'at:ifAbsent:',			#protocol : #'dictionary access',			#sourceCode : 'at: key ifAbsent: aBlock\r\t^super at: (self keyFrom: key) ifAbsent: aBlock',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2005' ],		#self : OmReference [ '2006' ],		#time : DateAndTime [ '2024-03-03T08:20:50.089-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionary,				#isMetaSide : false			},			#name : #'at:ifPresent:',			#protocol : #'dictionary access',			#sourceCode : 'at: key ifPresent: aBlock\r\t^super at: (self keyFrom: key) ifPresent: aBlock',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2006' ],		#self : OmReference [ '2007' ],		#time : DateAndTime [ '2024-03-03T08:20:50.089-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionary,				#isMetaSide : false			},			#name : #'at:ifPresent:ifAbsent:',			#protocol : #'dictionary access',			#sourceCode : 'at: key ifPresent: aBlock ifAbsent: anotherBlock\r\t^super at: (self keyFrom: key) ifPresent: aBlock ifAbsent: anotherBlock',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2007' ],		#self : OmReference [ '2008' ],		#time : DateAndTime [ '2024-03-03T08:20:50.089-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionary,				#isMetaSide : false			},			#name : #'at:put:',			#protocol : #'dictionary access',			#sourceCode : 'at: key put: value\r\t^super at: (self keyFrom: key) put: value',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2008' ],		#self : OmReference [ '2009' ],		#time : DateAndTime [ '2024-03-03T08:20:50.089-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionary,				#isMetaSide : false			},			#name : #'collect:',			#protocol : #enumerating,			#sourceCode : 'collect: aBlock\r\t| resultDict |\r\tresultDict := self class new.\r\tself keysAndValuesDo: [: key : value |\r\t\tresultDict at: key put: (aBlock value: value)\r\t].\r\t^resultDict',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2009' ],		#self : OmReference [ '2010' ],		#time : DateAndTime [ '2024-03-03T08:20:50.089-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionary,				#isMetaSide : false			},			#name : #'keyFrom:',			#protocol : #'dictionary access',			#sourceCode : 'keyFrom: anObject\r\tanObject class == String ifTrue: [ ^anObject ].\r\tanObject class == Number ifTrue: [ ^anObject ].\r\t^anObject hash',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2010' ],		#self : OmReference [ '2011' ],		#time : DateAndTime [ '2024-03-03T08:20:50.09-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionary,				#isMetaSide : false			},			#name : #'at:',			#protocol : #'dictionary access',			#sourceCode : 'at: key\r\t\t<javascript: \'return this.map.get(key)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2011' ],		#self : OmReference [ '2012' ],		#time : DateAndTime [ '2024-03-03T08:20:50.09-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionary,				#isMetaSide : false			},			#name : #'at:ifAbsent:',			#protocol : #'dictionary access',			#sourceCode : 'at: key ifAbsent: aBlock\r\t| value |\r\tvalue := self at: key.\r\tvalue ifNil: [^aBlock value].\r\t^value',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2012' ],		#self : OmReference [ '2013' ],		#time : DateAndTime [ '2024-03-03T08:20:50.09-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionary,				#isMetaSide : false			},			#name : #'at:ifAbsentPut:',			#protocol : #'dictionary access',			#sourceCode : 'at: key ifAbsentPut: aBlock\r\t^ self at: key ifAbsent: [ self at: key put: aBlock value ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2013' ],		#self : OmReference [ '2014' ],		#time : DateAndTime [ '2024-03-03T08:20:50.09-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionary,				#isMetaSide : false			},			#name : #'at:ifPresent:',			#protocol : #'dictionary access',			#sourceCode : 'at: key ifPresent: aBlock\r\t| value |\r\tvalue := self at: key.\r\tvalue ifNil: [^nil].\r\t^aBlock value',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2014' ],		#self : OmReference [ '2015' ],		#time : DateAndTime [ '2024-03-03T08:20:50.09-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionary,				#isMetaSide : false			},			#name : #'at:ifPresent:ifAbsent:',			#protocol : #'dictionary access',			#sourceCode : 'at: key ifPresent: aBlock ifAbsent: anotherBlock\r\t| value |\r\tvalue := self at: key.\r\tvalue ifNil: [^anotherBlock value].\r\t^aBlock value',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2015' ],		#self : OmReference [ '2016' ],		#time : DateAndTime [ '2024-03-03T08:20:50.09-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionary,				#isMetaSide : false			},			#name : #'at:put:',			#protocol : #'dictionary access',			#sourceCode : 'at: key put: value\r\t<javascript: \'this.map.set(key,value); return value\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2016' ],		#self : OmReference [ '2017' ],		#time : DateAndTime [ '2024-03-03T08:20:50.09-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionary,				#isMetaSide : false			},			#name : #'do:',			#protocol : #'dictionary access',			#sourceCode : 'do: aBlock\r\tself valuesDo: aBlock',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2017' ],		#self : OmReference [ '2018' ],		#time : DateAndTime [ '2024-03-03T08:20:50.091-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionary,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tsuper initialize.\r\tmap := self newMap',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2018' ],		#self : OmReference [ '2019' ],		#time : DateAndTime [ '2024-03-03T08:20:50.091-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionary,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #'dictionary access',			#sourceCode : 'isEmpty\r\t^self size = 0',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2019' ],		#self : OmReference [ '2020' ],		#time : DateAndTime [ '2024-03-03T08:20:50.091-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionary,				#isMetaSide : false			},			#name : #'keysAndValuesDo:',			#protocol : #'dictionary access',			#sourceCode : 'keysAndValuesDo: twoArgsBlock\r\t<javascript: \'let iterator = this.map.entries();\r\tlet iteration = iterator.next();\r\twhile(!iteration.done){\r\t\ttwoArgsBlock.apply(this,iteration.value);\r\t\titeration = iterator.next();\r\t}\r\treturn this;\r\t\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2020' ],		#self : OmReference [ '2021' ],		#time : DateAndTime [ '2024-03-03T08:20:50.091-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionary,				#isMetaSide : false			},			#name : #newMap,			#protocol : #initialize-release,			#sourceCode : 'newMap\r\t<javascript: \'return new Map()\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2021' ],		#self : OmReference [ '2022' ],		#time : DateAndTime [ '2024-03-03T08:20:50.091-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionary,				#isMetaSide : false			},			#name : #size,			#protocol : #'dictionary access',			#sourceCode : 'size\r\t<javascript: \'return this.map.size\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2022' ],		#self : OmReference [ '2023' ],		#time : DateAndTime [ '2024-03-03T08:20:50.091-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionary,				#isMetaSide : false			},			#name : #'valuesDo:',			#protocol : #'dictionary access',			#sourceCode : 'valuesDo: aBlock\r\tself keysAndValuesDo: [ : key : value| aBlock value: value ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2023' ],		#self : OmReference [ '2024' ],		#time : DateAndTime [ '2024-03-03T08:20:50.091-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjError class',				#isMetaSide : true			},			#name : #javascriptInitialize,			#protocol : #initialization-release,			#sourceCode : 'javascriptInitialize\r\tself instVarNamed: #stackTraceLimit put: 100',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2024' ],		#self : OmReference [ '2025' ],		#time : DateAndTime [ '2024-03-03T08:20:50.091-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjError class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharoJs support',			#sourceCode : 'jsTranspilationImportMethods\r\r\t<pharoJsSkip>\r\t^ { (Exception -> #( defaultDescription description )) }',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2025' ],		#self : OmReference [ '2026' ],		#time : DateAndTime [ '2024-03-03T08:20:50.092-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjError class',				#isMetaSide : true			},			#name : #signal,			#protocol : #'instance creation',			#sourceCode : 'signal\r\t^self new signal',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2026' ],		#self : OmReference [ '2027' ],		#time : DateAndTime [ '2024-03-03T08:20:50.092-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjError class',				#isMetaSide : true			},			#name : #'signal:',			#protocol : #'instance creation',			#sourceCode : 'signal: aString\r\t^self new signal: aString',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2027' ],		#self : OmReference [ '2028' ],		#time : DateAndTime [ '2024-03-03T08:20:50.092-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjError,				#isMetaSide : false			},			#name : #messageText,			#protocol : #accessing,			#sourceCode : 'messageText\r\t^ message',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2028' ],		#self : OmReference [ '2029' ],		#time : DateAndTime [ '2024-03-03T08:20:50.092-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjError,				#isMetaSide : false			},			#name : #'messageText:',			#protocol : #accessing,			#sourceCode : 'messageText: anObject\r\tmessage := anObject',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2029' ],		#self : OmReference [ '2030' ],		#time : DateAndTime [ '2024-03-03T08:20:50.092-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjError,				#isMetaSide : false			},			#name : #signal,			#protocol : #signaling,			#sourceCode : 'signal\r\t<javascript: \'throw this\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2030' ],		#self : OmReference [ '2031' ],		#time : DateAndTime [ '2024-03-03T08:20:50.092-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjError,				#isMetaSide : false			},			#name : #'signal:',			#protocol : #signaling,			#sourceCode : 'signal: aString\r\tself messageText: aString.\r\t^self signal.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2031' ],		#self : OmReference [ '2032' ],		#time : DateAndTime [ '2024-03-03T08:20:50.092-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClass class',				#isMetaSide : true			},			#name : #'classPool_jsGenerator:',			#protocol : #'as yet unclassified',			#sourceCode : 'classPool_jsGenerator: transpiler\r\r\t<pharoJsSkip>\r\t^ \'return this.\' , transpiler classVarsPoolName',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2032' ],		#self : OmReference [ '2033' ],		#time : DateAndTime [ '2024-03-03T08:20:50.092-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClass class',				#isMetaSide : true			},			#name : #'hasClassMethod_jsGenerator:',			#protocol : #'Behavior: reflection',			#sourceCode : 'hasClassMethod_jsGenerator: transpiler\r\t<pharoJsSkip>\r\t^\'return this.__proto__.hasOwnProperty(Smalltalk.\', transpiler pharoJsSelectorPrefix, \'makePharoJsSelector_(aSymbol))\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2033' ],		#self : OmReference [ '2034' ],		#time : DateAndTime [ '2024-03-03T08:20:50.093-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClass class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharoJs support',			#sourceCode : 'jsTranspilationImportMethods\r\t<pharoJsSkip>\r\t^{\r\t\tBehavior -> #( subclassesDo: allSubclasses allSubclassesDo: isBehavior ).\r\t\tClass -> #( isClass classVarNames).\r\t}',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2034' ],		#self : OmReference [ '2035' ],		#time : DateAndTime [ '2024-03-03T08:20:50.093-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClass,				#isMetaSide : false			},			#name : #'adoptInstance:',			#protocol : #'Behaviour: object creatioin',			#sourceCode : 'adoptInstance: anObject\r\tanObject js_at: #__proto__ put: (self js_at:#prototype)\r" here so that ordinary Javascript \'classes\' will respond to the message"',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2035' ],		#self : OmReference [ '2036' ],		#time : DateAndTime [ '2024-03-03T08:20:50.093-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClass,				#isMetaSide : false			},			#name : #class,			#protocol : #'Behavior: reflection',			#sourceCode : 'class\r\t^ PjCore metaclassOf: self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2036' ],		#self : OmReference [ '2037' ],		#time : DateAndTime [ '2024-03-03T08:20:50.093-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClass,				#isMetaSide : false			},			#name : #classPool,			#protocol : #accessing,			#sourceCode : 'classPool\r\t<jsGenerator: #classPool_jsGenerator:>\r\t',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2037' ],		#self : OmReference [ '2038' ],		#time : DateAndTime [ '2024-03-03T08:20:50.093-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClass,				#isMetaSide : false			},			#name : #'classVarNamed:',			#protocol : #'Behavior: reflection',			#sourceCode : 'classVarNamed: aString\r\t^ self classPool at: aString',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2038' ],		#self : OmReference [ '2039' ],		#time : DateAndTime [ '2024-03-03T08:20:50.093-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClass,				#isMetaSide : false			},			#name : #'classVarNamed:put:',			#protocol : #'Behavior: reflection',			#sourceCode : 'classVarNamed: aString put: otherString\r\tself classPool at: aString put: otherString',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2039' ],		#self : OmReference [ '2040' ],		#time : DateAndTime [ '2024-03-03T08:20:50.093-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClass,				#isMetaSide : false			},			#name : #'hasClassMethod:',			#protocol : #'Behavior: reflection',			#sourceCode : 'hasClassMethod: aSymbol\r\t<jsGenerator: #hasClassMethod_jsGenerator:>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2040' ],		#self : OmReference [ '2041' ],		#time : DateAndTime [ '2024-03-03T08:20:50.094-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClass,				#isMetaSide : false			},			#name : #isBlock,			#protocol : #testing,			#sourceCode : 'isBlock\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2041' ],		#self : OmReference [ '2042' ],		#time : DateAndTime [ '2024-03-03T08:20:50.094-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClass,				#isMetaSide : false			},			#name : #isClass,			#protocol : #testing,			#sourceCode : 'isClass\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2042' ],		#self : OmReference [ '2043' ],		#time : DateAndTime [ '2024-03-03T08:20:50.094-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClass,				#isMetaSide : false			},			#name : #name,			#protocol : #accessing,			#sourceCode : 'name\r\t<javascript:\r\t\'var s=this.name||this.prototype.toString();\r\tif (s.substr(0,1)=="[") s=s.substr(8,s.length-9);\r\treturn s\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2043' ],		#self : OmReference [ '2044' ],		#time : DateAndTime [ '2024-03-03T08:20:50.094-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClass,				#isMetaSide : false			},			#name : #'newFromJsonString:',			#protocol : #'Behaviour: object creatioin',			#sourceCode : 'newFromJsonString: jsonString\r\t| newInstance |\r\tnewInstance := JSON js_parse: jsonString.\r\tself adoptInstance: newInstance.\r\t^newInstance\r" here so that ordinary Javascript \'classes\' will respond to the message"',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2044' ],		#self : OmReference [ '2045' ],		#time : DateAndTime [ '2024-03-03T08:20:50.094-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClass,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\r\taStream nextPutAll: self name',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2045' ],		#self : OmReference [ '2046' ],		#time : DateAndTime [ '2024-03-03T08:20:50.094-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClass,				#isMetaSide : false			},			#name : #prototype,			#protocol : #'Behavior: reflection',			#sourceCode : 'prototype\r\t^ self js_at: #prototype',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2046' ],		#self : OmReference [ '2047' ],		#time : DateAndTime [ '2024-03-03T08:20:50.095-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClass,				#isMetaSide : false			},			#name : #subclasses,			#protocol : #'Behavior: reflection',			#sourceCode : 'subclasses\r\t^ subclasses',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2047' ],		#self : OmReference [ '2048' ],		#time : DateAndTime [ '2024-03-03T08:20:50.095-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClass,				#isMetaSide : false			},			#name : #theMetaClass,			#protocol : #'Behavior: reflection',			#sourceCode : 'theMetaClass\r\t^ self class',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2048' ],		#self : OmReference [ '2049' ],		#time : DateAndTime [ '2024-03-03T08:20:50.097-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClass,				#isMetaSide : false			},			#name : #theNonMetaClass,			#protocol : #'Behavior: reflection',			#sourceCode : 'theNonMetaClass\r\t^ self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2049' ],		#self : OmReference [ '2050' ],		#time : DateAndTime [ '2024-03-03T08:20:50.097-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjFunction class',				#isMetaSide : true			},			#name : #'forceSubclass:',			#protocol : #setup,			#sourceCode : 'forceSubclass: aFunction\r\taFunction js_at: #__proto__ put: (self js_at: #prototype)',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2050' ],		#self : OmReference [ '2051' ],		#time : DateAndTime [ '2024-03-03T08:20:50.097-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjFunction class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharoJs support',			#sourceCode : 'jsTranspilationImportMethods\r\t<pharoJsSkip>\r\t^{\r\t\tBehavior -> #( inheritsFrom: ).\r\t\tBlockClosure -> #( isBlock ).\r\t}',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2051' ],		#self : OmReference [ '2052' ],		#time : DateAndTime [ '2024-03-03T08:20:50.097-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjFunction class',				#isMetaSide : true			},			#name : #'on_do_jsGenerator:',			#protocol : #exceptions,			#sourceCode : 'on_do_jsGenerator: transpiler\r\t<pharoJsSkip>\r\t^\'try{\r\t\treturn this()\r\t}catch(ex){\r\t\tif(ex.\', transpiler pharoJsSelectorPrefix, \'isKindOf_(exception)){return handlerAction(ex)}\r\t\tthrow ex\r\t}\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2052' ],		#self : OmReference [ '2053' ],		#time : DateAndTime [ '2024-03-03T08:20:50.097-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #assert,			#protocol : #exceptions,			#sourceCode : 'assert\r\r\tself value ifFalse: [AssertionFailure signal: \'Assertion failed\']',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2053' ],		#self : OmReference [ '2054' ],		#time : DateAndTime [ '2024-03-03T08:20:50.098-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #basicNew,			#protocol : #'instance creation',			#sourceCode : 'basicNew\r" here so that ordinary Javascript \'classes\' will respond to the message"\r\t<javascript: \'return new this()\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2054' ],		#self : OmReference [ '2055' ],		#time : DateAndTime [ '2024-03-03T08:20:50.098-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'basicNew:',			#protocol : #'instance creation',			#sourceCode : 'basicNew: arg\r" here so that ordinary Javascript \'classes\' will respond to the message"\r\t<javascript: \'return new this(arg)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2055' ],		#self : OmReference [ '2056' ],		#time : DateAndTime [ '2024-03-03T08:20:50.098-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'basicNew:with:',			#protocol : #'instance creation',			#sourceCode : 'basicNew: arg1 with: arg2\r" here so that ordinary Javascript \'classes\' will respond to the message"\r\t<javascript: \'return new this(arg1, arg2)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2056' ],		#self : OmReference [ '2057' ],		#time : DateAndTime [ '2024-03-03T08:20:50.098-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'basicNew:with:with:',			#protocol : #'instance creation',			#sourceCode : 'basicNew: arg1 with: arg2 with: arg3\r" here so that ordinary Javascript \'classes\' will respond to the message"\r\t<javascript: \'return new this(arg1, arg2, arg3)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2057' ],		#self : OmReference [ '2058' ],		#time : DateAndTime [ '2024-03-03T08:20:50.098-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'basicNew:with:with:with:',			#protocol : #'instance creation',			#sourceCode : 'basicNew: arg1 with: arg2 with: arg3 with: arg4\r" here so that ordinary Javascript \'classes\' will respond to the message"\r\t<javascript: \'return new this(arg1, arg2, arg3, arg4)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2058' ],		#self : OmReference [ '2059' ],		#time : DateAndTime [ '2024-03-03T08:20:50.098-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'basicNew:with:with:with:with:',			#protocol : #'instance creation',			#sourceCode : 'basicNew: arg1 with: arg2 with: arg3 with: arg4 with: arg5\r" here so that ordinary Javascript \'classes\' will respond to the message"\r\t<javascript: \'return new this(arg1, arg2, arg3, arg4, arg5)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2059' ],		#self : OmReference [ '2060' ],		#time : DateAndTime [ '2024-03-03T08:20:50.098-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'canUnderstand:',			#protocol : #'Behavior: reflection',			#sourceCode : 'canUnderstand: selector\r\t| jsSelector |\r\tjsSelector := PjCore makePharoJsSelector: selector.\r\t^ (self prototype js_at: jsSelector) ifNil: [ false ] ifNotNil: [: selct | \'__DNU\' ~= (selct js_at: #name)]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2060' ],		#self : OmReference [ '2061' ],		#time : DateAndTime [ '2024-03-03T08:20:50.099-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #close,			#protocol : #evaluating,			#sourceCode : 'close\r\tPjCore log: \'unoptimized close may not capture semantics\'.\r\t^ self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2061' ],		#self : OmReference [ '2062' ],		#time : DateAndTime [ '2024-03-03T08:20:50.099-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'cull:',			#protocol : #evaluating,			#sourceCode : 'cull: arg\r\t"In javascript a function always uses only required arguments"\r\t^self value: arg',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2062' ],		#self : OmReference [ '2063' ],		#time : DateAndTime [ '2024-03-03T08:20:50.099-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'cull:cull:',			#protocol : #evaluating,			#sourceCode : 'cull: arg1 cull: arg2\r\t"In javascript a function always uses only required arguments"\r\t^self value: arg1 value: arg2',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2063' ],		#self : OmReference [ '2064' ],		#time : DateAndTime [ '2024-03-03T08:20:50.099-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'cull:cull:cull:',			#protocol : #evaluating,			#sourceCode : 'cull: arg1 cull: arg2 cull: arg3\r\t"In javascript a function always uses only required arguments"\r\t^self value: arg1 value: arg2 value: arg3',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2064' ],		#self : OmReference [ '2065' ],		#time : DateAndTime [ '2024-03-03T08:20:50.099-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'cull:cull:cull:cul:',			#protocol : #evaluating,			#sourceCode : 'cull: arg1 cull: arg2 cull: arg3 cul: arg4\r\t"In javascript a function always uses only required arguments"\r\t^self value: arg1 value: arg2 value: arg3 value: arg4',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2065' ],		#self : OmReference [ '2066' ],		#time : DateAndTime [ '2024-03-03T08:20:50.099-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'ensure:',			#protocol : #exceptions,			#sourceCode : 'ensure: aBlock\r\t<javascript: \'\r\ttry{\r\t\treturn this()\r\t}finally{aBlock()}\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2066' ],		#self : OmReference [ '2067' ],		#time : DateAndTime [ '2024-03-03T08:20:50.1-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'ifCurtailed:',			#protocol : #exceptions,			#sourceCode : 'ifCurtailed: curtailBlock\r\t| result curtailed |\r\tcurtailed := true.\r\t[\r\t\tresult := self value.\r\t\tcurtailed := false\r\t] ensure: [\r\t\tcurtailed ifTrue: [ curtailBlock value ] ].\r\t^ result',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2067' ],		#self : OmReference [ '2068' ],		#time : DateAndTime [ '2024-03-03T08:20:50.1-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new\r\t^self basicNew \r\t\tinitialize;\r\t\tyourself',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2068' ],		#self : OmReference [ '2069' ],		#time : DateAndTime [ '2024-03-03T08:20:50.1-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'new:',			#protocol : #'instance creation',			#sourceCode : 'new: arg\r\t^(self basicNew: arg)\r\t\tinitialize;\r\t\tyourself',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2069' ],		#self : OmReference [ '2070' ],		#time : DateAndTime [ '2024-03-03T08:20:50.1-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'new:with:',			#protocol : #'instance creation',			#sourceCode : 'new: arg1 with: arg2\r\t^(self basicNew: arg1 with: arg2)\r\t\tinitialize;\r\t\tyourself',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2070' ],		#self : OmReference [ '2071' ],		#time : DateAndTime [ '2024-03-03T08:20:50.1-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'new:with:with:',			#protocol : #'instance creation',			#sourceCode : 'new: arg1 with: arg2 with: arg3\r\t^(self basicNew: arg1 with: arg2 with: arg3)\r\t\tinitialize;\r\t\tyourself',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2071' ],		#self : OmReference [ '2072' ],		#time : DateAndTime [ '2024-03-03T08:20:50.101-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'new:with:with:with:',			#protocol : #'instance creation',			#sourceCode : 'new: arg1 with: arg2 with: arg3 with: arg4\r\t^(self basicNew: arg1 with: arg2 with: arg3 with: arg4)\r\t\tinitialize;\r\t\tyourself',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2072' ],		#self : OmReference [ '2073' ],		#time : DateAndTime [ '2024-03-03T08:20:50.101-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'new:with:with:with:with:',			#protocol : #'instance creation',			#sourceCode : 'new: arg1 with: arg2 with: arg3 with: arg4 with: arg5\r\t^(self basicNew: arg1 with: arg2 with: arg3 with: arg4 with: arg5)\r\t\tinitialize;\r\t\tyourself',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2073' ],		#self : OmReference [ '2074' ],		#time : DateAndTime [ '2024-03-03T08:20:50.101-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'on:do:',			#protocol : #exceptions,			#sourceCode : 'on: exception do: handlerAction\r\t<jsGenerator: #on_do_jsGenerator:>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2074' ],		#self : OmReference [ '2075' ],		#time : DateAndTime [ '2024-03-03T08:20:50.101-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\r\taStream nextPutAll: \'a Block\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2075' ],		#self : OmReference [ '2076' ],		#time : DateAndTime [ '2024-03-03T08:20:50.101-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #superclass,			#protocol : #'Behavior: reflection',			#sourceCode : 'superclass\r\tself == Object ifTrue: [ ^nil ].\r\t^((self js_at: #prototype) js_at: #__proto__) class',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2076' ],		#self : OmReference [ '2077' ],		#time : DateAndTime [ '2024-03-03T08:20:50.101-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #value,			#protocol : #evaluating,			#sourceCode : 'value\r\t<javascript: \'return this();\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2077' ],		#self : OmReference [ '2078' ],		#time : DateAndTime [ '2024-03-03T08:20:50.102-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'value:',			#protocol : #evaluating,			#sourceCode : 'value: arg\r\t<javascript: \'return this(arg);\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2078' ],		#self : OmReference [ '2079' ],		#time : DateAndTime [ '2024-03-03T08:20:50.102-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'value:value:',			#protocol : #evaluating,			#sourceCode : 'value: arg1 value: arg2\r\t<javascript: \'return this(arg1, arg2);\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2079' ],		#self : OmReference [ '2080' ],		#time : DateAndTime [ '2024-03-03T08:20:50.102-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'value:value:value:',			#protocol : #evaluating,			#sourceCode : 'value: arg1 value: arg2 value: arg3\r\t<javascript: \'return this(arg1, arg2, arg3);\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2080' ],		#self : OmReference [ '2081' ],		#time : DateAndTime [ '2024-03-03T08:20:50.102-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'value:value:value:value:',			#protocol : #evaluating,			#sourceCode : 'value: arg1 value: arg2 value: arg3 value: arg4\r\t<javascript: \'return this(arg1, arg2, arg3, arg4);\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2081' ],		#self : OmReference [ '2082' ],		#time : DateAndTime [ '2024-03-03T08:20:50.102-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'valueWithArguments:',			#protocol : #evaluating,			#sourceCode : 'valueWithArguments: anArray\r\t<javascript: \'return this.apply(this,anArray)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2082' ],		#self : OmReference [ '2083' ],		#time : DateAndTime [ '2024-03-03T08:20:50.103-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'valueWithEnoughArguments:',			#protocol : #evaluating,			#sourceCode : 'valueWithEnoughArguments: anArray\r\t"call me with enough arguments from anArray"\r\t"In javascript a function always uses only required arguments"\r\t<javascript: \'return this.apply(this,anArray)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2083' ],		#self : OmReference [ '2084' ],		#time : DateAndTime [ '2024-03-03T08:20:50.103-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'valueWithPossibleArgs:',			#protocol : #evaluating,			#sourceCode : 'valueWithPossibleArgs: args\r\t<javascript: \'return this.apply(null,args);\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2084' ],		#self : OmReference [ '2085' ],		#time : DateAndTime [ '2024-03-03T08:20:50.103-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #whileFalse,			#protocol : #looping,			#sourceCode : 'whileFalse\r\tself whileFalse: []',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2085' ],		#self : OmReference [ '2086' ],		#time : DateAndTime [ '2024-03-03T08:20:50.103-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'whileFalse:',			#protocol : #looping,			#sourceCode : 'whileFalse: loopBlock\r\t<javascript: \'while(false==this()){loopBlock();}\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2086' ],		#self : OmReference [ '2087' ],		#time : DateAndTime [ '2024-03-03T08:20:50.103-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #whileTrue,			#protocol : #looping,			#sourceCode : 'whileTrue\r\tself whileTrue: []',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2087' ],		#self : OmReference [ '2088' ],		#time : DateAndTime [ '2024-03-03T08:20:50.103-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFunction,				#isMetaSide : false			},			#name : #'whileTrue:',			#protocol : #looping,			#sourceCode : 'whileTrue: loopBlock\r\t<javascript: \'while(true==this()){loopBlock();}\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2088' ],		#self : OmReference [ '2089' ],		#time : DateAndTime [ '2024-03-03T08:20:50.103-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDuration class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharoJs support',			#sourceCode : 'jsTranspilationImportMethods\r\t<pharoJsSkip>\r\t| creationSelectors instanceSelectors |\r\tcreationSelectors := Duration class \r\t\tselectorsInProtocols: #(\'instance creation\' \'instance creation simple\' \'*PharoExtra-Chronology\')  \r\t\texclude: #(readFrom: fromString: month:).\r\tinstanceSelectors := Duration \r\t\tselectorsInProtocols: #(accessing arithmetic comparing converting initialization private \'*PharoExtra-Chronology\')\r\t\texclude: #(asDelay storeOn:). "asDelay exclued because no support for Delay yet!"\r\t^{Duration class -> creationSelectors.\r\tDuration -> instanceSelectors }',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2089' ],		#self : OmReference [ '2090' ],		#time : DateAndTime [ '2024-03-03T08:20:50.104-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDuration,				#isMetaSide : false			},			#name : #'addDateAndTime:',			#protocol : #adding,			#sourceCode : 'addDateAndTime: aDateAndTime\r\t^(DateAndTime \r\t\tyear: aDateAndTime year\r\t\tmonth: aDateAndTime monthIndex\r\t\tday: (aDateAndTime dayOfMonth + self days)\r\t\thour: (aDateAndTime hour24 + self hoursCount) \r\t\tminute: (aDateAndTime minute + self minutesCount)\r\t\tsecond: (aDateAndTime second + self secondsCount))\r\t\tsetMilliseconds: (aDateAndTime getMilliseconds + self millisecondsCount);\r\t\tyourself',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2090' ],		#self : OmReference [ '2091' ],		#time : DateAndTime [ '2024-03-03T08:20:50.104-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDuration,				#isMetaSide : false			},			#name : #'printStringAsTimzoneOn:',			#protocol : #adding,			#sourceCode : 'printStringAsTimzoneOn: str\r\r\tself asNanoSeconds < 0\r\t\tifTrue: [ str << $- ]\r\t\tifFalse: [ str << $+ ].\r\tself printWithLeading0: self hoursCount on: str.\r\tstr << \':\'.\r\tself printWithLeading0: self minutesCount on: str',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2091' ],		#self : OmReference [ '2092' ],		#time : DateAndTime [ '2024-03-03T08:20:50.104-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDuration,				#isMetaSide : false			},			#name : #'printStringOn:',			#protocol : #adding,			#sourceCode : 'printStringOn: str\r\r\tself asNanoSeconds < 0\r\t\tifTrue: [ str << $- ]\r\t\tifFalse: [ str << $+ ].\r\tself printWithLeading0: self hoursCount on: str.\r\tstr << \':\'.\r\tself printWithLeading0: self minutesCount on: str',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2092' ],		#self : OmReference [ '2093' ],		#time : DateAndTime [ '2024-03-03T08:20:50.104-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDuration,				#isMetaSide : false			},			#name : #'printWithLeading0:',			#protocol : #adding,			#sourceCode : 'printWithLeading0: aNumber\r\r\t^ String streamContents: [ :str | \r\t\t  aNumber abs < 10 ifTrue: [ str print: 0 ].\r\t\t  str print: aNumber abs asString]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2093' ],		#self : OmReference [ '2094' ],		#time : DateAndTime [ '2024-03-03T08:20:50.104-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDuration,				#isMetaSide : false			},			#name : #'printWithLeading0:on:',			#protocol : #adding,			#sourceCode : 'printWithLeading0: aNumber on: str\r\r\taNumber abs < 10 ifTrue: [ str print: 0 ].\r\tstr print: aNumber abs',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2094' ],		#self : OmReference [ '2095' ],		#time : DateAndTime [ '2024-03-03T08:20:50.104-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAssociation class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharojs support',			#sourceCode : 'jsTranspilationImportMethods\r\t<pharoJsSkip>\r\t^{\r\t\tAssociation -> #( = key:value: value value: ).\r\t\tAssociation class -> #( key:value: ).\r\t}',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2095' ],		#self : OmReference [ '2096' ],		#time : DateAndTime [ '2024-03-03T08:20:50.104-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjLookupKey class',				#isMetaSide : true			},			#name : #javascriptName,			#protocol : #'pharojs support',			#sourceCode : 'javascriptName\r\t<pharoJsSkip>\r\t^self name',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2096' ],		#self : OmReference [ '2097' ],		#time : DateAndTime [ '2024-03-03T08:20:50.105-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjLookupKey class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharojs support',			#sourceCode : 'jsTranspilationImportMethods\r\t<pharoJsSkip>\r\t^{\r\t\tLookupKey -> #( < = key key:  ).\r\t\tLookupKey class -> #( key:  ).\r\t}',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2097' ],		#self : OmReference [ '2098' ],		#time : DateAndTime [ '2024-03-03T08:20:50.105-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjMagnitude class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharojs support',			#sourceCode : 'jsTranspilationImportMethods\r\t<pharoJsSkip>\r\t^ self jsTranspilationImportMethodsMagnitude',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2098' ],		#self : OmReference [ '2099' ],		#time : DateAndTime [ '2024-03-03T08:20:50.105-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMagnitude,				#isMetaSide : false			},			#name : #'<',			#protocol : #testing,			#sourceCode : '< aMagnitude\r\t^self subclassResponsibility',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2099' ],		#self : OmReference [ '2100' ],		#time : DateAndTime [ '2024-03-03T08:20:50.105-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMagnitude,				#isMetaSide : false			},			#name : #'=',			#protocol : #testing,			#sourceCode : '= aMagnitude\r\t^self subclassResponsibility',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2100' ],		#self : OmReference [ '2101' ],		#time : DateAndTime [ '2024-03-03T08:20:50.105-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNumber class',				#isMetaSide : true			},			#name : #'divide_jsGenerator:',			#protocol : #arithmetics,			#sourceCode : 'divide_jsGenerator: transpiler\r\t<pharoJsSkip> \r\t^\'if(anObject==0) return ZeroDivide.\', transpiler pharoJsSelectorPrefix, \'signal();return this / anObject;\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2101' ],		#self : OmReference [ '2102' ],		#time : DateAndTime [ '2024-03-03T08:20:50.105-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNumber class',				#isMetaSide : true			},			#name : #javascriptInitialize,			#protocol : #'class initialization',			#sourceCode : 'javascriptInitialize\r\tPi := Math instVarNamed: #PI.\r\tHalfpi := Pi / 2.0.\r\tTwopi := Pi * 2.0.\r\tThreePi := Pi * 3.0.\r\tRadiansPerDegree := Pi / 180.0.\r\r\tLn2 := Math instVarNamed: #LN2.\r\tLn10 :=  Math instVarNamed: #LN10.\r\tSqrt2 :=  Math instVarNamed: #SQRT2.\r\tE :=  Math instVarNamed: #E.\r\r\tEpsilon := 0.000000000001.  "Defines precision of mathematical functions"\r\r\tMaxVal := Number instVarNamed: #MAX_VALUE.\r\tMaxValLn := 709.782712893384.\r\tMinValLogBase2 := -1074.\r\r\tInfinity := Number instVarNamed: #POSITIVE_INFINITY.\r\tNegativeInfinity := Number instVarNamed: #NEGATIVE_INFINITY.\r\tNaN := Number instVarNamed: #NaN.\r\tNegativeZero := 1.0 / NegativeInfinity.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2102' ],		#self : OmReference [ '2103' ],		#time : DateAndTime [ '2024-03-03T08:20:50.106-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNumber class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharoJs support',			#sourceCode : 'jsTranspilationImportMethods\r\r\t<pharoJsSkip>\r\t| selectorsForChronology numberSelectors |\r\tselectorsForChronology := #( year years week weeks day days hour hours\r\t                             minute minutes second seconds milliSecond\r\t                             milliSeconds )\r\t                          ,\r\t                          (Number selectorsInProtocol:\r\t\t                           \'*PharoExtra-Chronology\').\r\tnumberSelectors := selectorsForChronology\r\t                   ,\r\t\t                   #( floorLog: negated reciprocal log: asInteger\r\t\t                      asNumber squared even odd fractionPart\r\t\t                      integerPart // strictlyPositive\r\t\t                      positive negative raisedToInteger:\r\t\t                      raisedTo: isNumber isZero quo: rem: ).\r\t^ self jsTranspilationImportMethodsMagnitude , { \r\t\t  (Number -> numberSelectors).\r\t\t  (Number class -> #( one )).\r\t\t  (Integer -> #( asCharacter isPowerOfTwo isLiteral)).\r\t\t  (SmallInteger\r\t\t   -> #( highBit basicIdentityHash identityHash hashMultiply\r\t\t      hash )).\r\t\t  (Float -> #( isInfinite rounded asFloat isSelfEvaluating)).\r\t\t  (Float class\r\t\t   ->\r\t\t\t   #( denormalized e emax emin epsilon fmax fmin fminDenormalized\r\t\t\t      fminNormalized halfPi infinity maxExactInteger\r\t\t\t      nan negativeInfinity negativeZero one pi precision radix\r\t\t\t      threePi twoPi zero )) }',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2103' ],		#self : OmReference [ '2104' ],		#time : DateAndTime [ '2024-03-03T08:20:50.106-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'%',			#protocol : #arithmetics,			#sourceCode : '% anObject\r\t<javascript: \'return Math.sign(anObject)*(Math.abs(this) % anObject)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2104' ],		#self : OmReference [ '2105' ],		#time : DateAndTime [ '2024-03-03T08:20:50.106-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'*',			#protocol : #arithmetics,			#sourceCode : '* anObject\r\t<javascript: \'return this * anObject;\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2105' ],		#self : OmReference [ '2106' ],		#time : DateAndTime [ '2024-03-03T08:20:50.106-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'+',			#protocol : #arithmetics,			#sourceCode : '+ anObject\r\t<javascript: \'return this + anObject;\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2106' ],		#self : OmReference [ '2107' ],		#time : DateAndTime [ '2024-03-03T08:20:50.106-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #-,			#protocol : #arithmetics,			#sourceCode : '- anObject\r\t<javascript: \'return this - anObject;\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2107' ],		#self : OmReference [ '2108' ],		#time : DateAndTime [ '2024-03-03T08:20:50.106-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #/,			#protocol : #arithmetics,			#sourceCode : '/ anObject\r\t<jsGenerator: #divide_jsGenerator:>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2108' ],		#self : OmReference [ '2109' ],		#time : DateAndTime [ '2024-03-03T08:20:50.106-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #//,			#protocol : #arithmetics,			#sourceCode : '// anObject\r\t^ Math floor: self / anObject',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2109' ],		#self : OmReference [ '2110' ],		#time : DateAndTime [ '2024-03-03T08:20:50.106-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'<',			#protocol : #comparing,			#sourceCode : '< other\r\t<javascript: \'return this < other\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2110' ],		#self : OmReference [ '2111' ],		#time : DateAndTime [ '2024-03-03T08:20:50.107-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'=',			#protocol : #comparing,			#sourceCode : '= other\r\t<javascript: \'return this == other\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2111' ],		#self : OmReference [ '2112' ],		#time : DateAndTime [ '2024-03-03T08:20:50.107-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'==',			#protocol : #comparing,			#sourceCode : '== other\r\t<javascript: \'return this == other\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2112' ],		#self : OmReference [ '2113' ],		#time : DateAndTime [ '2024-03-03T08:20:50.107-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'@',			#protocol : #converting,			#sourceCode : '@ y \r\t^Point x: self y: y',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2113' ],		#self : OmReference [ '2114' ],		#time : DateAndTime [ '2024-03-03T08:20:50.107-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'\\\\',			#protocol : #arithmetics,			#sourceCode : '\\\\ anObject\r\t^ self % anObject',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2114' ],		#self : OmReference [ '2115' ],		#time : DateAndTime [ '2024-03-03T08:20:50.107-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #abs,			#protocol : #arithmetics,			#sourceCode : 'abs\r\t<javascript: \'return Math.abs(this);\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2115' ],		#self : OmReference [ '2116' ],		#time : DateAndTime [ '2024-03-03T08:20:50.107-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #arcCos,			#protocol : #'mathematical functions',			#sourceCode : 'arcCos\r\t<javascript: \'return Math.acos(this);\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2116' ],		#self : OmReference [ '2117' ],		#time : DateAndTime [ '2024-03-03T08:20:50.107-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #arcSin,			#protocol : #'mathematical functions',			#sourceCode : 'arcSin\r\t<javascript: \'return Math.asin(this);\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2117' ],		#self : OmReference [ '2118' ],		#time : DateAndTime [ '2024-03-03T08:20:50.107-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #arcTan,			#protocol : #'mathematical functions',			#sourceCode : 'arcTan\r\t<javascript: \'return Math.atan(this);\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2118' ],		#self : OmReference [ '2119' ],		#time : DateAndTime [ '2024-03-03T08:20:50.108-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'arcTan:',			#protocol : #'mathematical functions',			#sourceCode : 'arcTan: denominator\r\t<javascript: \'return Math.atan2(this,denominator);\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2119' ],		#self : OmReference [ '2120' ],		#time : DateAndTime [ '2024-03-03T08:20:50.108-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #asFloat,			#protocol : #converting,			#sourceCode : 'asFloat\r\t<javascript: \'return +this\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2120' ],		#self : OmReference [ '2121' ],		#time : DateAndTime [ '2024-03-03T08:20:50.108-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #asJsObject,			#protocol : #converting,			#sourceCode : 'asJsObject\r\t"Ensure we get a primitive type number and not a Number object"\r\t<javascript: \'return this.valueOf()\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2121' ],		#self : OmReference [ '2122' ],		#time : DateAndTime [ '2024-03-03T08:20:50.108-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #asString,			#protocol : #converting,			#sourceCode : 'asString\r\t<javascript: \'return this + ""\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2122' ],		#self : OmReference [ '2123' ],		#time : DateAndTime [ '2024-03-03T08:20:50.108-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'between:and:',			#protocol : #comparing,			#sourceCode : 'between: min and: max \r\r\t^ self >= min and: [ self <= max ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2123' ],		#self : OmReference [ '2124' ],		#time : DateAndTime [ '2024-03-03T08:20:50.108-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'bitAnd:',			#protocol : #'bit manipulation',			#sourceCode : 'bitAnd: arg \r\t<javascript: \'return this&arg\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2124' ],		#self : OmReference [ '2125' ],		#time : DateAndTime [ '2024-03-03T08:20:50.108-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #bitInvert,			#protocol : #'bit manipulation',			#sourceCode : 'bitInvert\r\t<javascript: \'return ~this\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2125' ],		#self : OmReference [ '2126' ],		#time : DateAndTime [ '2024-03-03T08:20:50.109-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'bitOr:',			#protocol : #'bit manipulation',			#sourceCode : 'bitOr: arg \r\t<javascript: \'return this|arg\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2126' ],		#self : OmReference [ '2127' ],		#time : DateAndTime [ '2024-03-03T08:20:50.109-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'bitShift:',			#protocol : #'bit manipulation',			#sourceCode : 'bitShift: shiftCount\r\t<javascript: \'if (shiftCount<0) return this>>(-shiftCount);return this<<shiftCount\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2127' ],		#self : OmReference [ '2128' ],		#time : DateAndTime [ '2024-03-03T08:20:50.109-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'bitXor:',			#protocol : #'bit manipulation',			#sourceCode : 'bitXor: arg \r\t<javascript: \'return this^arg\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2128' ],		#self : OmReference [ '2129' ],		#time : DateAndTime [ '2024-03-03T08:20:50.109-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #ch,			#protocol : #converting,			#sourceCode : 'ch\r\t<javascript: \'return this + "ch"\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2129' ],		#self : OmReference [ '2130' ],		#time : DateAndTime [ '2024-03-03T08:20:50.109-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #cm,			#protocol : #converting,			#sourceCode : 'cm\r\t<javascript: \'return this + "cm"\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2130' ],		#self : OmReference [ '2131' ],		#time : DateAndTime [ '2024-03-03T08:20:50.109-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #cos,			#protocol : #'mathematical functions',			#sourceCode : 'cos\r\t<javascript: \'return Math.cos(this);\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2131' ],		#self : OmReference [ '2132' ],		#time : DateAndTime [ '2024-03-03T08:20:50.109-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #degreesToRadians,			#protocol : #converting,			#sourceCode : 'degreesToRadians\r\t^ self * RadiansPerDegree',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2132' ],		#self : OmReference [ '2133' ],		#time : DateAndTime [ '2024-03-03T08:20:50.109-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #em,			#protocol : #converting,			#sourceCode : 'em\r\t<javascript: \'return this + "em"\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2133' ],		#self : OmReference [ '2134' ],		#time : DateAndTime [ '2024-03-03T08:20:50.11-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #ex,			#protocol : #converting,			#sourceCode : 'ex\r\t<javascript: \'return this + "ex"\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2134' ],		#self : OmReference [ '2135' ],		#time : DateAndTime [ '2024-03-03T08:20:50.11-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #exp,			#protocol : #'mathematical functions',			#sourceCode : 'exp\r\t<javascript: \'return Math.exp(this);\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2135' ],		#self : OmReference [ '2136' ],		#time : DateAndTime [ '2024-03-03T08:20:50.11-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #highBitOfPositiveReceiver,			#protocol : #'bit manipulation',			#sourceCode : 'highBitOfPositiveReceiver\r\t| shifted bitNo |\r\t"Answer the index of the high order bit of the receiver, or zero if the \r\treceiver is zero. Receiver has to be positive!"\r\tshifted := self.\r\tbitNo := 0.\r\t[shifted < 65536]\r\t\twhileFalse: \r\t\t\t[shifted := shifted bitShift: -16.\r\t\t\tbitNo := bitNo + 16].\r\tshifted < 256\r\t\tifFalse: \r\t\t\t[shifted := shifted bitShift: -8.\r\t\t\tbitNo := bitNo + 8].\r\tshifted < 16\r\t\tifFalse: \r\t\t\t[shifted := shifted bitShift: -4.\r\t\t\tbitNo := bitNo + 4].\r\tshifted < 4\r\t\tifFalse: \r\t\t\t[shifted := shifted bitShift: -2.\r\t\t\tbitNo := bitNo + 2].\r\tshifted < 2\r\t\tifFalse: \r\t\t\t[shifted := shifted bitShift: -1.\r\t\t\tbitNo := bitNo +1].\r\t^ shifted+bitNo',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2136' ],		#self : OmReference [ '2137' ],		#time : DateAndTime [ '2024-03-03T08:20:50.11-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #in,			#protocol : #converting,			#sourceCode : 'in\r\t<javascript: \'return this + "in"\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2137' ],		#self : OmReference [ '2138' ],		#time : DateAndTime [ '2024-03-03T08:20:50.11-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #isFloat,			#protocol : #testing,			#sourceCode : 'isFloat\r\t^ self isInteger not',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2138' ],		#self : OmReference [ '2139' ],		#time : DateAndTime [ '2024-03-03T08:20:50.11-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #isInteger,			#protocol : #testing,			#sourceCode : 'isInteger\r\t<javascript: \'return (this|0)==this\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2139' ],		#self : OmReference [ '2140' ],		#time : DateAndTime [ '2024-03-03T08:20:50.111-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #isJSPrimitiveType,			#protocol : #testing,			#sourceCode : 'isJSPrimitiveType\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2140' ],		#self : OmReference [ '2141' ],		#time : DateAndTime [ '2024-03-03T08:20:50.111-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #isNaN,			#protocol : #testing,			#sourceCode : 'isNaN\r\t<javascript: \'return isNaN(this)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2141' ],		#self : OmReference [ '2142' ],		#time : DateAndTime [ '2024-03-03T08:20:50.111-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #ln,			#protocol : #'mathematical functions',			#sourceCode : 'ln\r\t<javascript: \'return Math.log(this);\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2142' ],		#self : OmReference [ '2143' ],		#time : DateAndTime [ '2024-03-03T08:20:50.111-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #log,			#protocol : #'mathematical functions',			#sourceCode : 'log\r\t<javascript: \'return Math.log10(this);\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2143' ],		#self : OmReference [ '2144' ],		#time : DateAndTime [ '2024-03-03T08:20:50.111-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #lowBit,			#protocol : #'bit manipulation',			#sourceCode : 'lowBit\r\t" Answer the index of the low order one bit.\r\t\t2r00101000 lowBit       (Answers: 4)\r\t\t2r-00101000 lowBit      (Answers: 4)\r\t  First we skip bits in groups of 8, then by 1.\r\t  While not optimal, this is a good tradeoff; long\r\t  integer #lowBit always invokes us with bytes."\r\t| n result |\r\tn := self.\r\tn = 0 ifTrue: [ ^ 0 ].\r\tresult := 1.\r\t[(n bitAnd: 16rFF) = 0]\r\t\twhileTrue: [\r\t\t\tresult := result + 8.\r\t\t\tn := n bitShift: -8 ].\r\t[(n bitAnd: 1) = 0]\r\t\twhileTrue: [\r\t\t\tresult := result + 1.\r\t\t\tn := n bitShift: -1 ].\r\t^ result',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2144' ],		#self : OmReference [ '2145' ],		#time : DateAndTime [ '2024-03-03T08:20:50.111-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #mm,			#protocol : #converting,			#sourceCode : 'mm\r\t<javascript: \'return this + "mm"\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2145' ],		#self : OmReference [ '2146' ],		#time : DateAndTime [ '2024-03-03T08:20:50.111-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #pc,			#protocol : #converting,			#sourceCode : 'pc\r\t<javascript: \'return this + "pc"\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2146' ],		#self : OmReference [ '2147' ],		#time : DateAndTime [ '2024-03-03T08:20:50.111-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #percnt,			#protocol : #converting,			#sourceCode : 'percnt\r\t<javascript: \'return this + "%"\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2147' ],		#self : OmReference [ '2148' ],		#time : DateAndTime [ '2024-03-03T08:20:50.112-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\r\tself isNaN ifTrue: [ ^ aStream nextPutAll: \'Float nan\' ].\r\tself isInfinite ifTrue: [ \r\t\t^ aStream nextPutAll: \'Float infinity\' ].\r\taStream nextPutAll: self js_toString',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2148' ],		#self : OmReference [ '2149' ],		#time : DateAndTime [ '2024-03-03T08:20:50.112-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #proxyResponse,			#protocol : #proxy,			#sourceCode : 'proxyResponse\r\t<javascript: \'return 0+this\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2149' ],		#self : OmReference [ '2150' ],		#time : DateAndTime [ '2024-03-03T08:20:50.112-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #pt,			#protocol : #converting,			#sourceCode : 'pt\r\t<javascript: \'return this + "pt"\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2150' ],		#self : OmReference [ '2151' ],		#time : DateAndTime [ '2024-03-03T08:20:50.112-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #px,			#protocol : #converting,			#sourceCode : 'px\r\t<javascript: \'return this + "px"\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2151' ],		#self : OmReference [ '2152' ],		#time : DateAndTime [ '2024-03-03T08:20:50.112-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #radiansToDegrees,			#protocol : #converting,			#sourceCode : 'radiansToDegrees\r\t^ self / RadiansPerDegree',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2152' ],		#self : OmReference [ '2153' ],		#time : DateAndTime [ '2024-03-03T08:20:50.112-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #rem,			#protocol : #converting,			#sourceCode : 'rem\r\t<javascript: \'return this + "rem"\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2153' ],		#self : OmReference [ '2154' ],		#time : DateAndTime [ '2024-03-03T08:20:50.112-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #sign,			#protocol : #'mathematical functions',			#sourceCode : 'sign\r\t<javascript: \'return Math.sign(this);\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2154' ],		#self : OmReference [ '2155' ],		#time : DateAndTime [ '2024-03-03T08:20:50.113-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #sin,			#protocol : #'mathematical functions',			#sourceCode : 'sin\r\t<javascript: \'return Math.sin(this);\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2155' ],		#self : OmReference [ '2156' ],		#time : DateAndTime [ '2024-03-03T08:20:50.113-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #sqrt,			#protocol : #'mathematical functions',			#sourceCode : 'sqrt\r\t<javascript: \'return Math.sqrt(this);\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2156' ],		#self : OmReference [ '2157' ],		#time : DateAndTime [ '2024-03-03T08:20:50.113-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #tan,			#protocol : #'mathematical functions',			#sourceCode : 'tan\r\t<javascript: \'return Math.tan(this);\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2157' ],		#self : OmReference [ '2158' ],		#time : DateAndTime [ '2024-03-03T08:20:50.113-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'timesRepeat:',			#protocol : #looping,			#sourceCode : 'timesRepeat: aBlock\r\t1 to: self do: aBlock',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2158' ],		#self : OmReference [ '2159' ],		#time : DateAndTime [ '2024-03-03T08:20:50.113-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'to:',			#protocol : #looping,			#sourceCode : 'to: end\r\t| interval |\r\tinterval := OrderedCollection new.\r\tself to: end by: 1 do: [ : each | interval add: each ].\r\t^interval',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2159' ],		#self : OmReference [ '2160' ],		#time : DateAndTime [ '2024-03-03T08:20:50.113-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'to:by:do:',			#protocol : #looping,			#sourceCode : 'to: end by: step do: aBlock\r\r\tstep >= 0\r\t\tifTrue: [ self to: end byPositive: step do: aBlock ]\r\t\tifFalse: [ self to: end byNegative: step do: aBlock ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2160' ],		#self : OmReference [ '2161' ],		#time : DateAndTime [ '2024-03-03T08:20:50.113-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'to:byNegative:do:',			#protocol : #looping,			#sourceCode : 'to: end byNegative: step do: aBlock\r\t\r\t<javascript: \'for(var i=this; i >= end; i += step){aBlock(i);}\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2161' ],		#self : OmReference [ '2162' ],		#time : DateAndTime [ '2024-03-03T08:20:50.113-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'to:byPositive:do:',			#protocol : #looping,			#sourceCode : 'to: end byPositive: step do: aBlock\r\t\r\t<javascript: \'for(var i=this; i <= end; i += step){aBlock(i);}\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2162' ],		#self : OmReference [ '2163' ],		#time : DateAndTime [ '2024-03-03T08:20:50.114-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'to:do:',			#protocol : #looping,			#sourceCode : 'to: end do: aBlock\r\tself to: end by: 1 do: aBlock',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2163' ],		#self : OmReference [ '2164' ],		#time : DateAndTime [ '2024-03-03T08:20:50.114-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #truncated,			#protocol : #converting,			#sourceCode : 'truncated\r\t<javascript: \'if (this>=0)return Math.floor(this);return Math.ceil(this)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2164' ],		#self : OmReference [ '2165' ],		#time : DateAndTime [ '2024-03-03T08:20:50.114-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #value,			#protocol : #converting,			#sourceCode : 'value\r\t<javascript: \'return 0+this\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2165' ],		#self : OmReference [ '2166' ],		#time : DateAndTime [ '2024-03-03T08:20:50.114-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #vh,			#protocol : #converting,			#sourceCode : 'vh\r\t<javascript: \'return this + "vh"\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2166' ],		#self : OmReference [ '2167' ],		#time : DateAndTime [ '2024-03-03T08:20:50.114-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #vmax,			#protocol : #converting,			#sourceCode : 'vmax\r\t<javascript: \'return this + "vmax"\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2167' ],		#self : OmReference [ '2168' ],		#time : DateAndTime [ '2024-03-03T08:20:50.114-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #vmin,			#protocol : #converting,			#sourceCode : 'vmin\r\t<javascript: \'return this + "vmin"\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2168' ],		#self : OmReference [ '2169' ],		#time : DateAndTime [ '2024-03-03T08:20:50.114-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #vw,			#protocol : #converting,			#sourceCode : 'vw\r\t<javascript: \'return this + "vw"\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2169' ],		#self : OmReference [ '2170' ],		#time : DateAndTime [ '2024-03-03T08:20:50.114-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'|',			#protocol : #arithmetics,			#sourceCode : '| anObject\r\t<javascript: \'return this | anObject;\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2170' ],		#self : OmReference [ '2171' ],		#time : DateAndTime [ '2024-03-03T08:20:50.115-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'~=',			#protocol : #comparing,			#sourceCode : '~= other\r\t<javascript: \'return this != other\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2171' ],		#self : OmReference [ '2172' ],		#time : DateAndTime [ '2024-03-03T08:20:50.115-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjObject class',				#isMetaSide : true			},			#name : #'addDnuSupportFor:',			#protocol : #'doesNotUnderstand support',			#sourceCode : 'addDnuSupportFor: selector\r\t<javascript: \'if(Object.prototype.hasOwnProperty(selector)){return;}\r\t\tObject.prototype.selector =  function(){\r\t\t\tthrow "Does not understand message " + selector;};\r\t\'>\r\tself flag: #todo "see JbObject>>#registerDNU:"',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2172' ],		#self : OmReference [ '2173' ],		#time : DateAndTime [ '2024-03-03T08:20:50.115-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjObject class',				#isMetaSide : true			},			#name : #'allEnumeratableKeysDo_jsGenerator:',			#protocol : #reflection,			#sourceCode : 'allEnumeratableKeysDo_jsGenerator: transpiler\r\t<pharoJsSkip>\r\t^\'for (var i in this){aBlock.\', transpiler pharoJsSelectorPrefix, \'value_(i)};\r\treturn this;\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2173' ],		#self : OmReference [ '2174' ],		#time : DateAndTime [ '2024-03-03T08:20:50.115-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjObject class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharoJs support',			#sourceCode : 'jsTranspilationImportMethods\r\r\t<pharoJsSkip>\r\t^ { \r\t\t  (ProtoObject\r\t\t   -> #( isNil ifNil: ifNotNil: #ifNil:ifNotNil: #ifNotNil:ifNil: )).\r\t\t  (Object\r\t\t   ->\r\t\t\t   #( -> as: asOrderedCollection isKindOf: error: respondsTo:\r\t\t\t      isMemberOf: className isNotNil notNil isString isClass\r\t\t\t      isBlock isNumber isBehavior isCollection isArray isFloat\r\t\t\t      isInteger isCharacter isSymbol isStream isPjProxyOrNil\r\t\t\t      printOn: shouldBePrintedAsLiteral isLiteral isSelfEvaluating )).\r\t\t  (Collection\r\t\t   -> #( addAll: #ifEmpty:ifNotEmpty: #ifNotEmpty:ifEmpty:\r\t\t\t      ifEmpty: ifNotEmpty: )).\r\t\t  (Dictionary -> #( do: )).\r\t\t  (Dictionary class -> #( newFrom: newFromPairs: )) }',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2174' ],		#self : OmReference [ '2175' ],		#time : DateAndTime [ '2024-03-03T08:20:50.115-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjObject class',				#isMetaSide : true			},			#name : #'keysAndValuesDo_jsGenerator:',			#protocol : #'dictionary emulation',			#sourceCode : 'keysAndValuesDo_jsGenerator: transpiler\r\t<pharoJsSkip>\r\t^\'for (var i in this){if(this.hasOwnProperty(i))aBlock.\', transpiler pharoJsSelectorPrefix, \'value_value_(i,this[i])};\r\treturn this;\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2175' ],		#self : OmReference [ '2176' ],		#time : DateAndTime [ '2024-03-03T08:20:50.116-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjObject class',				#isMetaSide : true			},			#name : #'keysDo_jsGenerator:',			#protocol : #'dictionary emulation',			#sourceCode : 'keysDo_jsGenerator: transpiler\r\t<pharoJsSkip>\r\t^\'for (var i in this){if(this.hasOwnProperty(i))aBlock.\', transpiler pharoJsSelectorPrefix, \'value_(i)};\r\treturn this;\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2176' ],		#self : OmReference [ '2177' ],		#time : DateAndTime [ '2024-03-03T08:20:50.116-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjObject class',				#isMetaSide : true			},			#name : #nextIdentityHash,			#protocol : #comparing,			#sourceCode : 'nextIdentityHash\r\t^ nextIdentityHash := (nextIdentityHash ifNil: [12345]) hashMultiply',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2177' ],		#self : OmReference [ '2178' ],		#time : DateAndTime [ '2024-03-03T08:20:50.116-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjObject class',				#isMetaSide : true			},			#name : #'valuesDo_jsGenerator:',			#protocol : #'dictionary emulation',			#sourceCode : 'valuesDo_jsGenerator: transpiler\r\t<pharoJsSkip>\r\t^\'for (var i in this){if(this.hasOwnProperty(i))aBlock.\', transpiler pharoJsSelectorPrefix, \'value_(this[i])};\r\treturn this;\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2178' ],		#self : OmReference [ '2179' ],		#time : DateAndTime [ '2024-03-03T08:20:50.116-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'=',			#protocol : #comparing,			#sourceCode : '= other\r\t<javascript: \'return this==other\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2179' ],		#self : OmReference [ '2180' ],		#time : DateAndTime [ '2024-03-03T08:20:50.117-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'==',			#protocol : #comparing,			#sourceCode : '== other\r\t<javascript: \'return this===other\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2180' ],		#self : OmReference [ '2181' ],		#time : DateAndTime [ '2024-03-03T08:20:50.117-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'add:',			#protocol : #'dictionary emulation',			#sourceCode : 'add: assoc\r\t" this strange code is to install add: for objects that already have an add field or to do at:put: "\r\r\t^ PjCore\r\t\tinstallDnuArgs: {assoc}\r\t\tselector: #add\r\t\tjs: #_add_\r\t\tfor: self\r\t\telse: [ self js_at: assoc key put: assoc value ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2181' ],		#self : OmReference [ '2182' ],		#time : DateAndTime [ '2024-03-03T08:20:50.117-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #allEnumeratableKeys,			#protocol : #reflection,			#sourceCode : 'allEnumeratableKeys\r\t| allKeys |\r\tallKeys := Set new.\r\tself allEnumeratableKeysDo: [ : each | allKeys add: each ].\r\t^allKeys',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2182' ],		#self : OmReference [ '2183' ],		#time : DateAndTime [ '2024-03-03T08:20:50.117-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'allEnumeratableKeysDo:',			#protocol : #reflection,			#sourceCode : 'allEnumeratableKeysDo: aBlock\r\t<jsGenerator: #allEnumeratableKeysDo_jsGenerator:>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2183' ],		#self : OmReference [ '2184' ],		#time : DateAndTime [ '2024-03-03T08:20:50.117-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #asJSON,			#protocol : #converting,			#sourceCode : 'asJSON\r\t^ JSON stringify: self value',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2184' ],		#self : OmReference [ '2185' ],		#time : DateAndTime [ '2024-03-03T08:20:50.117-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #asJsObject,			#protocol : #converting,			#sourceCode : 'asJsObject\r\t^self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2185' ],		#self : OmReference [ '2186' ],		#time : DateAndTime [ '2024-03-03T08:20:50.117-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'associationsDo:',			#protocol : #'dictionary emulation',			#sourceCode : 'associationsDo: aBlock\r\tself keysAndValuesDo: [: key : value |\r\t\taBlock value: (Association key: key value: value)\r\t]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2186' ],		#self : OmReference [ '2187' ],		#time : DateAndTime [ '2024-03-03T08:20:50.118-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'at:',			#protocol : #'dictionary emulation',			#sourceCode : 'at: key\r\t<javascript: \'return this[key]\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2187' ],		#self : OmReference [ '2188' ],		#time : DateAndTime [ '2024-03-03T08:20:50.118-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'at:ifAbsent:',			#protocol : #'dictionary emulation',			#sourceCode : 'at: key ifAbsent: aBlock\r\t(self js_hasOwnProperty: key) ifTrue: [ ^self js_at: key].\r\t^ aBlock value',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2188' ],		#self : OmReference [ '2189' ],		#time : DateAndTime [ '2024-03-03T08:20:50.118-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'at:ifPresent:',			#protocol : #'dictionary emulation',			#sourceCode : 'at: key ifPresent: aBlock\r\t(self js_hasOwnProperty: key) ifFalse: [ ^ nil].\r\t^ aBlock cull: (self js_at: key)',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2189' ],		#self : OmReference [ '2190' ],		#time : DateAndTime [ '2024-03-03T08:20:50.118-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'at:ifPresent:ifAbsent:',			#protocol : #'dictionary emulation',			#sourceCode : 'at: key ifPresent: aBlock ifAbsent: anotherBlock\r\t(self js_hasOwnProperty: key) ifTrue: [ ^ aBlock cull: (self js_at: key)].\r\t^ anotherBlock value',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2190' ],		#self : OmReference [ '2191' ],		#time : DateAndTime [ '2024-03-03T08:20:50.118-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'at:put:',			#protocol : #'dictionary emulation',			#sourceCode : 'at: key put: value\r\t<javascript: \'return this[key]=value\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2191' ],		#self : OmReference [ '2192' ],		#time : DateAndTime [ '2024-03-03T08:20:50.118-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #class,			#protocol : #reflection,			#sourceCode : 'class\r\t^ self js_at: #constructor',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2192' ],		#self : OmReference [ '2193' ],		#time : DateAndTime [ '2024-03-03T08:20:50.118-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #copy,			#protocol : #copying,			#sourceCode : 'copy\r\t^self shallowCopy postCopy',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2193' ],		#self : OmReference [ '2194' ],		#time : DateAndTime [ '2024-03-03T08:20:50.119-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'doesNotUnderstand:',			#protocol : #reflection,			#sourceCode : 'doesNotUnderstand: aMessage\r\t^ PjCore handleDNU: aMessage for: self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2194' ],		#self : OmReference [ '2195' ],		#time : DateAndTime [ '2024-03-03T08:20:50.119-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'flag:',			#protocol : #flagging,			#sourceCode : 'flag: aSymbol',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2195' ],		#self : OmReference [ '2196' ],		#time : DateAndTime [ '2024-03-03T08:20:50.119-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #halt,			#protocol : #reflection,			#sourceCode : 'halt\r\t<javascript: \'debugger\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2196' ],		#self : OmReference [ '2197' ],		#time : DateAndTime [ '2024-03-03T08:20:50.119-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #hash,			#protocol : #comparing,			#sourceCode : 'hash\r\t^ self identityHash',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2197' ],		#self : OmReference [ '2198' ],		#time : DateAndTime [ '2024-03-03T08:20:50.119-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #identityHash,			#protocol : #comparing,			#sourceCode : 'identityHash\r\t^ (self instVarNamed: #_js_hash) ifNil: [\r\t\tself instVarNamed: #_js_hash putHidden: self class nextIdentityHash ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2198' ],		#self : OmReference [ '2199' ],		#time : DateAndTime [ '2024-03-03T08:20:50.12-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'includesKey:',			#protocol : #'dictionary emulation',			#sourceCode : 'includesKey: key\r\t<javascript: \'return this.hasOwnProperty(key)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2199' ],		#self : OmReference [ '2200' ],		#time : DateAndTime [ '2024-03-03T08:20:50.12-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2200' ],		#self : OmReference [ '2201' ],		#time : DateAndTime [ '2024-03-03T08:20:50.12-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'instVarNamed:',			#protocol : #introspection,			#sourceCode : 'instVarNamed: aString\r\t^ self js_at: aString',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2201' ],		#self : OmReference [ '2202' ],		#time : DateAndTime [ '2024-03-03T08:20:50.12-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'instVarNamed:put:',			#protocol : #introspection,			#sourceCode : 'instVarNamed: aString put: anObject\r\t^ self js_at: aString put: anObject',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2202' ],		#self : OmReference [ '2203' ],		#time : DateAndTime [ '2024-03-03T08:20:50.12-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'instVarNamed:putHidden:',			#protocol : #introspection,			#sourceCode : 'instVarNamed: aString putHidden: anObject\r\t<javascript: \'\r\ttry{Object.defineProperty(this,aString,{value:anObject,writable:true})}catch(e){}\r\treturn anObject\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2203' ],		#self : OmReference [ '2204' ],		#time : DateAndTime [ '2024-03-03T08:20:50.12-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #'dictionary emulation',			#sourceCode : 'isEmpty\r\tself keysDo: [ ^ false ].\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2204' ],		#self : OmReference [ '2205' ],		#time : DateAndTime [ '2024-03-03T08:20:50.12-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #isEmptyOrNil,			#protocol : #'dictionary emulation',			#sourceCode : 'isEmptyOrNil\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2205' ],		#self : OmReference [ '2206' ],		#time : DateAndTime [ '2024-03-03T08:20:50.121-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #isJSPrimitiveType,			#protocol : #testing,			#sourceCode : 'isJSPrimitiveType\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2206' ],		#self : OmReference [ '2207' ],		#time : DateAndTime [ '2024-03-03T08:20:50.121-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #keys,			#protocol : #'dictionary emulation',			#sourceCode : 'keys\r\t"Answer an Array containing the receiver\'s keys."\r\t| result |\r\tresult := Array new.\r\tself keysDo: [:key| result addLast: key].\r\t^ result',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2207' ],		#self : OmReference [ '2208' ],		#time : DateAndTime [ '2024-03-03T08:20:50.121-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'keysAndValuesDo:',			#protocol : #'dictionary emulation',			#sourceCode : 'keysAndValuesDo: aBlock\r\t<jsGenerator: #keysAndValuesDo_jsGenerator:>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2208' ],		#self : OmReference [ '2209' ],		#time : DateAndTime [ '2024-03-03T08:20:50.121-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'keysDo:',			#protocol : #'dictionary emulation',			#sourceCode : 'keysDo: aBlock\r\t<jsGenerator: #keysDo_jsGenerator:>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2209' ],		#self : OmReference [ '2210' ],		#time : DateAndTime [ '2024-03-03T08:20:50.121-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'perform:',			#protocol : #'message performing',			#sourceCode : 'perform: selector\r\t^ (self js_at: (PjCore registerDnu: selector)) call: self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2210' ],		#self : OmReference [ '2211' ],		#time : DateAndTime [ '2024-03-03T08:20:50.121-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'perform:with:',			#protocol : #'message performing',			#sourceCode : 'perform: selector with: arg\r\t^ (self js_at: (PjCore registerDnu: selector)) call: self with: arg',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2211' ],		#self : OmReference [ '2212' ],		#time : DateAndTime [ '2024-03-03T08:20:50.122-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'perform:with:with:',			#protocol : #'message performing',			#sourceCode : 'perform: selector with: arg1 with: arg2\r\t^ (self js_at: (PjCore registerDnu: selector)) call: self with: arg1 with: arg2',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2212' ],		#self : OmReference [ '2213' ],		#time : DateAndTime [ '2024-03-03T08:20:50.122-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'perform:with:with:with:',			#protocol : #'message performing',			#sourceCode : 'perform: selector with: arg1 with: arg2 with: arg3\r\t^ (self js_at: (PjCore registerDnu: selector)) call: self with: arg1 with: arg2 with: arg3',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2213' ],		#self : OmReference [ '2214' ],		#time : DateAndTime [ '2024-03-03T08:20:50.122-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'perform:withArguments:',			#protocol : #'message performing',			#sourceCode : 'perform: selector withArguments: argArray\r\t^ (self js_at: (PjCore registerDnu: selector)) apply: self with: argArray',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2214' ],		#self : OmReference [ '2215' ],		#time : DateAndTime [ '2024-03-03T08:20:50.122-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'perform:withArguments:inSuperclass:',			#protocol : #'message performing',			#sourceCode : 'perform: selector withArguments: argArray inSuperclass: lookupClass\r\t^ (lookupClass prototype js_at: (PjCore registerDnu: selector)) apply: self with: argArray',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2215' ],		#self : OmReference [ '2216' ],		#time : DateAndTime [ '2024-03-03T08:20:50.122-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #postCopy,			#protocol : #copying,			#sourceCode : 'postCopy\r\t^self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2216' ],		#self : OmReference [ '2217' ],		#time : DateAndTime [ '2024-03-03T08:20:50.122-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #printString,			#protocol : #printing,			#sourceCode : 'printString\r\r\t^String streamContents: [ : stream | self printOn: stream ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2217' ],		#self : OmReference [ '2218' ],		#time : DateAndTime [ '2024-03-03T08:20:50.123-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #proxyResponse,			#protocol : #proxy,			#sourceCode : 'proxyResponse\r\t<PjTodo: \'not sure if proxyResponse is a good name\'>\r\t| assoc p |\r\tassoc := PjProxyManager ensureObjectRegistered: self.\r\tp := PjProxyInfo new.\r\tp oid: assoc key.\r\tp remove: (self instVarNamed: \'$PjProxyRemove\').\r\tp globalName: assoc value.\r\t^ p',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2218' ],		#self : OmReference [ '2219' ],		#time : DateAndTime [ '2024-03-03T08:20:50.123-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #release,			#protocol : #initialize-release,			#sourceCode : 'release',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2219' ],		#self : OmReference [ '2220' ],		#time : DateAndTime [ '2024-03-03T08:20:50.123-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'removeKey:',			#protocol : #'dictionary emulation',			#sourceCode : 'removeKey: key\r\t<javascript: \'var result=this[key];delete this[key];return result\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2220' ],		#self : OmReference [ '2221' ],		#time : DateAndTime [ '2024-03-03T08:20:50.123-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'setTimeout:afterMilliseconds:',			#protocol : #'process operations',			#sourceCode : 'setTimeout: aBlock afterMilliseconds: anInteger\r\t<javascript: \'global.setTimeout(aBlock, anInteger)\'>\r\tsuper setTimeout: aBlock afterMilliseconds: anInteger',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2221' ],		#self : OmReference [ '2222' ],		#time : DateAndTime [ '2024-03-03T08:20:50.123-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #shallowCopy,			#protocol : #copying,			#sourceCode : 'shallowCopy\r\t| copy |\r\tcopy := self class basicNew.\r\tself keysAndValuesDo: [ : key : value |\r\t\tcopy instVarNamed: key put: value ].\r\t^copy',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2222' ],		#self : OmReference [ '2223' ],		#time : DateAndTime [ '2024-03-03T08:20:50.123-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #size,			#protocol : #accessing,			#sourceCode : 'size\r\t| count |\r\tcount := 0.\r\tself keysDo: [: value |\r\t\tcount := count + 1\r\t].\r\t^ count',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2223' ],		#self : OmReference [ '2224' ],		#time : DateAndTime [ '2024-03-03T08:20:50.124-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #species,			#protocol : #reflection,			#sourceCode : 'species\r\t^ self class',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2224' ],		#self : OmReference [ '2225' ],		#time : DateAndTime [ '2024-03-03T08:20:50.124-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #typeof,			#protocol : #reflection,			#sourceCode : 'typeof\r\t<javascript: \'return typeof this\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2225' ],		#self : OmReference [ '2226' ],		#time : DateAndTime [ '2024-03-03T08:20:50.124-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'typeof:',			#protocol : #reflection,			#sourceCode : 'typeof: anObject\r\t<javascript: \'return typeof anObject\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2226' ],		#self : OmReference [ '2227' ],		#time : DateAndTime [ '2024-03-03T08:20:50.124-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #value,			#protocol : #testing,			#sourceCode : 'value\r\t" this strange code is to install _value for objects that already have a value field or to return self "\r\r\t^ PjCore\r\t\tinstallDnuArgs: #()\r\t\tselector: #value\r\t\tjs: PjCore pharoJsSelectorPrefix, \'value\'\r\t\tfor: self\r\t\telse: [ self ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2227' ],		#self : OmReference [ '2228' ],		#time : DateAndTime [ '2024-03-03T08:20:50.124-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'valuesDo:',			#protocol : #'dictionary emulation',			#sourceCode : 'valuesDo: aBlock\r\t<jsGenerator: #valuesDo_jsGenerator:>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2228' ],		#self : OmReference [ '2229' ],		#time : DateAndTime [ '2024-03-03T08:20:50.125-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #yourself,			#protocol : #accessing,			#sourceCode : 'yourself\r\t^self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2229' ],		#self : OmReference [ '2230' ],		#time : DateAndTime [ '2024-03-03T08:20:50.125-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'~=',			#protocol : #comparing,			#sourceCode : '~= other\r\t^ (self = other) not',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2230' ],		#self : OmReference [ '2231' ],		#time : DateAndTime [ '2024-03-03T08:20:50.125-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #'~~',			#protocol : #comparing,			#sourceCode : '~~ other\r\t^ (self == other) not',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2231' ],		#self : OmReference [ '2232' ],		#time : DateAndTime [ '2024-03-03T08:20:50.125-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjArrayStream class',				#isMetaSide : true			},			#name : #'on:',			#protocol : #'instance creation',			#sourceCode : 'on: aCollection\r\t^ self new on: aCollection',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2232' ],		#self : OmReference [ '2233' ],		#time : DateAndTime [ '2024-03-03T08:20:50.125-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayStream,				#isMetaSide : false			},			#name : #emptyCollection,			#protocol : #initialize-release,			#sourceCode : 'emptyCollection\r\t^ #()',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2233' ],		#self : OmReference [ '2234' ],		#time : DateAndTime [ '2024-03-03T08:20:50.125-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayStream,				#isMetaSide : false			},			#name : #join,			#protocol : #accessing,			#sourceCode : 'join\r\t| temp |\r\ttemp := OrderedCollection new.\r\tarray do: [: each |\r\t\teach do: [: element |\r\t\t\ttemp addLast: element\r\t\t]\r\t].\r\t^ temp',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2234' ],		#self : OmReference [ '2235' ],		#time : DateAndTime [ '2024-03-03T08:20:50.125-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayStream,				#isMetaSide : false			},			#name : #'nextPut:',			#protocol : #accessing,			#sourceCode : 'nextPut: aValue\r\tarray addLast: {aValue}.\r\t^ aValue',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2235' ],		#self : OmReference [ '2236' ],		#time : DateAndTime [ '2024-03-03T08:20:50.126-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjReadWriteStream class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharoJs support',			#sourceCode : 'jsTranspilationImportMethods\r\r\t<pharoJsSkip>\r\t^ { \r\t\t  (PositionableStream\r\t\t   ->\r\t\t\t   #( back isEmpty match: next: nextDelimited: peek peekBack\r\t\t\t      peekFor: position position: positionError reset resetContents\r\t\t\t      #setFrom:to: setToEnd skip: upTo: )).\r\t\t  (WriteStream -> #( << space tab )).\r\t\t  (Stream -> #( print: )) }',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2236' ],		#self : OmReference [ '2237' ],		#time : DateAndTime [ '2024-03-03T08:20:50.126-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReadWriteStream,				#isMetaSide : false			},			#name : #atEnd,			#protocol : #accessing,			#sourceCode : 'atEnd\r\tposition >= readLimit ifTrue: [ self contents ].\r\t^ position >= readLimit',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2237' ],		#self : OmReference [ '2238' ],		#time : DateAndTime [ '2024-03-03T08:20:50.126-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReadWriteStream,				#isMetaSide : false			},			#name : #contents,			#protocol : #accessing,			#sourceCode : 'contents\r\t1 < array size ifTrue: [ self load: self join ].\r\t^ collection',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2238' ],		#self : OmReference [ '2239' ],		#time : DateAndTime [ '2024-03-03T08:20:50.126-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReadWriteStream,				#isMetaSide : false			},			#name : #emptyCollection,			#protocol : #initialize-release,			#sourceCode : 'emptyCollection\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2239' ],		#self : OmReference [ '2240' ],		#time : DateAndTime [ '2024-03-03T08:20:50.126-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReadWriteStream,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tsuper initialize.\r\tarray := OrderedCollection with: (collection := self emptyCollection).\r\treadLimit := 0.\r\tposition := 0.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2240' ],		#self : OmReference [ '2241' ],		#time : DateAndTime [ '2024-03-03T08:20:50.126-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReadWriteStream,				#isMetaSide : false			},			#name : #join,			#protocol : #accessing,			#sourceCode : 'join\r\t^ self subclassResponsibility',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2241' ],		#self : OmReference [ '2242' ],		#time : DateAndTime [ '2024-03-03T08:20:50.126-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReadWriteStream,				#isMetaSide : false			},			#name : #'load:',			#protocol : #accessing,			#sourceCode : 'load: temp\r\tarray := OrderedCollection with: temp.\r\tcollection := temp.\r\treadLimit := temp size.\r\t^ temp',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2242' ],		#self : OmReference [ '2243' ],		#time : DateAndTime [ '2024-03-03T08:20:50.127-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReadWriteStream,				#isMetaSide : false			},			#name : #next,			#protocol : #accessing,			#sourceCode : 'next\r\tself atEnd ifTrue: [ ^ nil ].\r\t^ collection at: (position := position + 1)',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2243' ],		#self : OmReference [ '2244' ],		#time : DateAndTime [ '2024-03-03T08:20:50.127-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReadWriteStream,				#isMetaSide : false			},			#name : #'nextPut:',			#protocol : #accessing,			#sourceCode : 'nextPut: aCharacter\r\t^ self subclassResponsibility',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2244' ],		#self : OmReference [ '2245' ],		#time : DateAndTime [ '2024-03-03T08:20:50.127-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReadWriteStream,				#isMetaSide : false			},			#name : #'nextPutAll:',			#protocol : #accessing,			#sourceCode : 'nextPutAll: aCollection\r\tarray addLast: aCollection.\r\t^ aCollection',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2245' ],		#self : OmReference [ '2246' ],		#time : DateAndTime [ '2024-03-03T08:20:50.127-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReadWriteStream,				#isMetaSide : false			},			#name : #'on:',			#protocol : #accessing,			#sourceCode : 'on: temp\r\tself load: temp.\r\tself reset.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2246' ],		#self : OmReference [ '2247' ],		#time : DateAndTime [ '2024-03-03T08:20:50.129-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReadWriteStream,				#isMetaSide : false			},			#name : #'skip:',			#protocol : #accessing,			#sourceCode : 'skip: n\r\tposition := position + n.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2247' ],		#self : OmReference [ '2248' ],		#time : DateAndTime [ '2024-03-03T08:20:50.129-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjStringStream class',				#isMetaSide : true			},			#name : #'on:',			#protocol : #'instance creation',			#sourceCode : 'on: aCollection\r\t^ self new on: aCollection',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2248' ],		#self : OmReference [ '2249' ],		#time : DateAndTime [ '2024-03-03T08:20:50.129-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringStream,				#isMetaSide : false			},			#name : #emptyCollection,			#protocol : #initialize-release,			#sourceCode : 'emptyCollection\r\t^ \'\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2249' ],		#self : OmReference [ '2250' ],		#time : DateAndTime [ '2024-03-03T08:20:50.13-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringStream,				#isMetaSide : false			},			#name : #join,			#protocol : #accessing,			#sourceCode : 'join\r\t^ \'\' join: array',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2250' ],		#self : OmReference [ '2251' ],		#time : DateAndTime [ '2024-03-03T08:20:50.13-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringStream,				#isMetaSide : false			},			#name : #'nextPut:',			#protocol : #accessing,			#sourceCode : 'nextPut: aCharacter\r\tarray addLast: aCharacter asString.\r\t^ aCharacter',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2251' ],		#self : OmReference [ '2252' ],		#time : DateAndTime [ '2024-03-03T08:20:50.13-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjRectangle class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharojs support',			#sourceCode : 'jsTranspilationImportMethods\r\t<pharoJsSkip>\r\t^ {(Rectangle  \r\t\t\t\t->\r\t\t\t\t\t#(containsPoint: setPoint:point:)).\r\t\t(Rectangle class \r\t\t\t\t->\r\t\t\t\t\t#(origin:corner:)).\r\t\t\t\t\t\t\t}',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2252' ],		#self : OmReference [ '2253' ],		#time : DateAndTime [ '2024-03-03T08:20:50.13-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjRxParser class',				#isMetaSide : true			},			#name : #javascriptName,			#protocol : #'pharoJs support',			#sourceCode : 'javascriptName\r\r\t<pharoJsSkip>\r\t^ \'RegExp\' ',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2253' ],		#self : OmReference [ '2254' ],		#time : DateAndTime [ '2024-03-03T08:20:50.13-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRxParser,				#isMetaSide : false			},			#name : #'matchesIn:',			#protocol : #testing,			#sourceCode : 'matchesIn: aString\r\t^ aString match: self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2254' ],		#self : OmReference [ '2255' ],		#time : DateAndTime [ '2024-03-03T08:20:50.13-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRxParser,				#isMetaSide : false			},			#name : #'matchesIn:do:',			#protocol : #testing,			#sourceCode : 'matchesIn: aString do: aBlock\r\t| matches |\r\tmatches := (self matchesIn: aString).\r\tmatches ifNil: [ ^ self ].\r\t^ matches do: aBlock',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2255' ],		#self : OmReference [ '2256' ],		#time : DateAndTime [ '2024-03-03T08:20:50.13-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjString class',				#isMetaSide : true			},			#name : #defaultSize,			#protocol : #'instance creation',			#sourceCode : 'defaultSize\r\t^10',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2256' ],		#self : OmReference [ '2257' ],		#time : DateAndTime [ '2024-03-03T08:20:50.13-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjString class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharoJs support',			#sourceCode : 'jsTranspilationImportMethods\r\r\t<pharoJsSkip>\r\t^ self jsTranspilationImportMethodsArray , { \r\t\t  (String class -> #( #stringHash:initialHash:\r\t\t      fromByteArray: )).\r\t\t  (String\r\t\t   ->\r\t\t   #( findTokens: linesDo: lineIndicesDo: printOn: storeOn: isLiteral shouldBePrintedAsLiteral)).\r\t\t  (Symbol -> #( cull: value: )).\r\t\t  (Character class -> #( cr escape lf linefeed space tab )).\r\t\t  (Character -> #( isVowel isCharacter to: )) }',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2257' ],		#self : OmReference [ '2258' ],		#time : DateAndTime [ '2024-03-03T08:20:50.131-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjString class',				#isMetaSide : true			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new\r\t^ \'\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2258' ],		#self : OmReference [ '2259' ],		#time : DateAndTime [ '2024-03-03T08:20:50.131-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjString class',				#isMetaSide : true			},			#name : #'new:',			#protocol : #'instance creation',			#sourceCode : 'new: ignored\r\t^ self new',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2259' ],		#self : OmReference [ '2260' ],		#time : DateAndTime [ '2024-03-03T08:20:50.131-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjString class',				#isMetaSide : true			},			#name : #'new:streamContents:',			#protocol : #'instance creation',			#sourceCode : 'new: anInteger streamContents: aBlock\r\t^ self streamContents: aBlock',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2260' ],		#self : OmReference [ '2261' ],		#time : DateAndTime [ '2024-03-03T08:20:50.131-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjString class',				#isMetaSide : true			},			#name : #'streamContents:',			#protocol : #'instance creation',			#sourceCode : 'streamContents: aBlock\r\t| stream |\r\tstream := PjStringStream new.\r\taBlock value: stream.\r\t^ stream contents',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2261' ],		#self : OmReference [ '2262' ],		#time : DateAndTime [ '2024-03-03T08:20:50.131-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjString class',				#isMetaSide : true			},			#name : #'value:',			#protocol : #'instance creation',			#sourceCode : 'value: anInteger\r\t^ String js_fromCharCode: anInteger',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2262' ],		#self : OmReference [ '2263' ],		#time : DateAndTime [ '2024-03-03T08:20:50.131-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #',',			#protocol : #copying,			#sourceCode : ', other\r\t<javascript: \'return this+other\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2263' ],		#self : OmReference [ '2264' ],		#time : DateAndTime [ '2024-03-03T08:20:50.131-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'<',			#protocol : #comparing,			#sourceCode : '< other\r\t<javascript: \'return this<other\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2264' ],		#self : OmReference [ '2265' ],		#time : DateAndTime [ '2024-03-03T08:20:50.132-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'<=',			#protocol : #comparing,			#sourceCode : '<= other\r\t<javascript: \'return this<=other\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2265' ],		#self : OmReference [ '2266' ],		#time : DateAndTime [ '2024-03-03T08:20:50.132-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'=',			#protocol : #comparing,			#sourceCode : '= other\r\t<javascript: \'return this==other\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2266' ],		#self : OmReference [ '2267' ],		#time : DateAndTime [ '2024-03-03T08:20:50.132-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'>',			#protocol : #comparing,			#sourceCode : '> other\r\t<javascript: \'return this>other\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2267' ],		#self : OmReference [ '2268' ],		#time : DateAndTime [ '2024-03-03T08:20:50.132-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'>=',			#protocol : #comparing,			#sourceCode : '>= other\r\t<javascript: \'return this>=other\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2268' ],		#self : OmReference [ '2269' ],		#time : DateAndTime [ '2024-03-03T08:20:50.132-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #allButFirst,			#protocol : #accessing,			#sourceCode : 'allButFirst\r\t^ self js_substring: 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2269' ],		#self : OmReference [ '2270' ],		#time : DateAndTime [ '2024-03-03T08:20:50.132-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'allButFirst:',			#protocol : #accessing,			#sourceCode : 'allButFirst: n\r\t^ self js_substring: n',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2270' ],		#self : OmReference [ '2271' ],		#time : DateAndTime [ '2024-03-03T08:20:50.132-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #allButLast,			#protocol : #accessing,			#sourceCode : 'allButLast\r\t^ self js_substring: 0 to: self size - 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2271' ],		#self : OmReference [ '2272' ],		#time : DateAndTime [ '2024-03-03T08:20:50.132-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'allButLast:',			#protocol : #accessing,			#sourceCode : 'allButLast: n\r\t^ self js_substring: 0 to: self size - n',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2272' ],		#self : OmReference [ '2273' ],		#time : DateAndTime [ '2024-03-03T08:20:50.133-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #asCharacter,			#protocol : #converting,			#sourceCode : 'asCharacter\r\t^ self js_charAt: 0',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2273' ],		#self : OmReference [ '2274' ],		#time : DateAndTime [ '2024-03-03T08:20:50.133-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #asElementId,			#protocol : #converting,			#sourceCode : 'asElementId\r\t^ document getElementById: self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2274' ],		#self : OmReference [ '2275' ],		#time : DateAndTime [ '2024-03-03T08:20:50.133-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #asElementSelector,			#protocol : #converting,			#sourceCode : 'asElementSelector\r\t^ document querySelector: self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2275' ],		#self : OmReference [ '2276' ],		#time : DateAndTime [ '2024-03-03T08:20:50.133-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #asInteger,			#protocol : #converting,			#sourceCode : 'asInteger\r\t<javascript: \'return parseInt(this)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2276' ],		#self : OmReference [ '2277' ],		#time : DateAndTime [ '2024-03-03T08:20:50.133-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #asJsObject,			#protocol : #converting,			#sourceCode : 'asJsObject\r\t"Ensure we get a primitive type string and not a String object"\r\t<javascript: \'return this.valueOf()\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2277' ],		#self : OmReference [ '2278' ],		#time : DateAndTime [ '2024-03-03T08:20:50.133-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #asLowercase,			#protocol : #converting,			#sourceCode : 'asLowercase\r\t^ self js_toLowerCase',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2278' ],		#self : OmReference [ '2279' ],		#time : DateAndTime [ '2024-03-03T08:20:50.133-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #asNumber,			#protocol : #converting,			#sourceCode : 'asNumber\r\t<javascript: \'return parseFloat(this)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2279' ],		#self : OmReference [ '2280' ],		#time : DateAndTime [ '2024-03-03T08:20:50.133-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #asRegex,			#protocol : #converting,			#sourceCode : 'asRegex\r\r\t^ PjRxParser new: self with: \'g\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2280' ],		#self : OmReference [ '2281' ],		#time : DateAndTime [ '2024-03-03T08:20:50.135-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #asString,			#protocol : #converting,			#sourceCode : 'asString\r\t<javascript: \'return ""+this\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2281' ],		#self : OmReference [ '2282' ],		#time : DateAndTime [ '2024-03-03T08:20:50.135-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #asSymbol,			#protocol : #converting,			#sourceCode : 'asSymbol\r\t<javascript: \'return ""+this\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2282' ],		#self : OmReference [ '2283' ],		#time : DateAndTime [ '2024-03-03T08:20:50.135-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #asUppercase,			#protocol : #converting,			#sourceCode : 'asUppercase\r\t^ self js_toUpperCase',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2283' ],		#self : OmReference [ '2284' ],		#time : DateAndTime [ '2024-03-03T08:20:50.135-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #asciiValue,			#protocol : #accessing,			#sourceCode : 'asciiValue\r\t^ self js_charCodeAt: 0',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2284' ],		#self : OmReference [ '2285' ],		#time : DateAndTime [ '2024-03-03T08:20:50.135-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'at:',			#protocol : #accessing,			#sourceCode : 'at: index\r\t"JavaScript arrays first index is 0 "\r\t<javascript: \'return this[index - 1];\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2285' ],		#self : OmReference [ '2286' ],		#time : DateAndTime [ '2024-03-03T08:20:50.135-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'at:put:',			#protocol : #accessing,			#sourceCode : 'at: index put: anObject\r\t<javascript: \'throw new Error("cannot mutate strings");\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2286' ],		#self : OmReference [ '2287' ],		#time : DateAndTime [ '2024-03-03T08:20:50.136-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'basicAt:',			#protocol : #accessing,			#sourceCode : 'basicAt: aNumber\r\t^ \tself js_charCodeAt: aNumber-1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2287' ],		#self : OmReference [ '2288' ],		#time : DateAndTime [ '2024-03-03T08:20:50.136-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'beginsWith:',			#protocol : #comparing,			#sourceCode : 'beginsWith: prefix\r\t^ (self js_substring: 0 to: prefix size)=prefix',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2288' ],		#self : OmReference [ '2289' ],		#time : DateAndTime [ '2024-03-03T08:20:50.136-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #capitalized,			#protocol : #converting,			#sourceCode : 'capitalized\r\tself isEmpty ifTrue: [ ^self ].\r\t^ (self js_charAt:0) js_toUpperCase,(self js_substring: 1)',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2289' ],		#self : OmReference [ '2290' ],		#time : DateAndTime [ '2024-03-03T08:20:50.136-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #charCode,			#protocol : #accessing,			#sourceCode : 'charCode\r\t^ self basicAt: 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2290' ],		#self : OmReference [ '2291' ],		#time : DateAndTime [ '2024-03-03T08:20:50.136-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #codePoint,			#protocol : #accessing,			#sourceCode : 'codePoint\r\t^ self js_charCodeAt: 0',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2291' ],		#self : OmReference [ '2292' ],		#time : DateAndTime [ '2024-03-03T08:20:50.136-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'collect:',			#protocol : #enumerating,			#sourceCode : 'collect: aBlock\r\t| arr |\r\tarr := self js_split: \'\'.\r\t1 to: self size do: [: idx |\r\t\tarr at: idx put: (aBlock value: (arr at: idx))\r\t].\r\t^ arr js_join: \'\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2292' ],		#self : OmReference [ '2293' ],		#time : DateAndTime [ '2024-03-03T08:20:50.137-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'copyFrom:',			#protocol : #comparing,			#sourceCode : 'copyFrom: start\r\t^ self js_substring: start-1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2293' ],		#self : OmReference [ '2294' ],		#time : DateAndTime [ '2024-03-03T08:20:50.137-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'copyFrom:to:',			#protocol : #comparing,			#sourceCode : 'copyFrom: start to: stop\r\t^ self js_substring: start-1 to: stop',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2294' ],		#self : OmReference [ '2295' ],		#time : DateAndTime [ '2024-03-03T08:20:50.137-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'endsWith:',			#protocol : #comparing,			#sourceCode : 'endsWith: suffix\r\t^ (self js_substring: self size - suffix size)=suffix',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2295' ],		#self : OmReference [ '2296' ],		#time : DateAndTime [ '2024-03-03T08:20:50.137-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'findString:startingAt:',			#protocol : #accessing,			#sourceCode : 'findString: substring startingAt: start\r\t<javaScript: \'return this.indexOf(substring,start-1)+1\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2296' ],		#self : OmReference [ '2297' ],		#time : DateAndTime [ '2024-03-03T08:20:50.137-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #first,			#protocol : #accessing,			#sourceCode : 'first\r\t^self at: 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2297' ],		#self : OmReference [ '2298' ],		#time : DateAndTime [ '2024-03-03T08:20:50.137-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'first:',			#protocol : #accessing,			#sourceCode : 'first: n\r\t^ self js_substring: 0 to: n',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2298' ],		#self : OmReference [ '2299' ],		#time : DateAndTime [ '2024-03-03T08:20:50.137-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #hash,			#protocol : #comparing,			#sourceCode : 'hash\r\t"#hash is implemented, because #= is implemented"\r\t"ar 4/10/2005: I had to change this to use ByteString hash as initial \r\thash in order to avoid having to rehash everything and yet compute\r\tthe same hash for ByteString and WideString."\r\t^ self class stringHash: self initialHash: 0',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2299' ],		#self : OmReference [ '2300' ],		#time : DateAndTime [ '2024-03-03T08:20:50.138-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'ifEmpty:',			#protocol : #testing,			#sourceCode : 'ifEmpty: aBlock\r\tself isEmpty ifTrue: [^aBlock value].\r\t^self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2300' ],		#self : OmReference [ '2301' ],		#time : DateAndTime [ '2024-03-03T08:20:50.138-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #isAlphaNumeric,			#protocol : #testing,			#sourceCode : 'isAlphaNumeric\r\r\t| char |\r\tchar := (self js_charAt: 0).\r\t^ char isLetter or: [ char isDigit ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2301' ],		#self : OmReference [ '2302' ],		#time : DateAndTime [ '2024-03-03T08:20:50.138-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #isDigit,			#protocol : #testing,			#sourceCode : 'isDigit\r\t^ (self js_charCodeAt: 0) between: 48 and: 57 ',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2302' ],		#self : OmReference [ '2303' ],		#time : DateAndTime [ '2024-03-03T08:20:50.138-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #testing,			#sourceCode : 'isEmpty\r\t^self = \'\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2303' ],		#self : OmReference [ '2304' ],		#time : DateAndTime [ '2024-03-03T08:20:50.138-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #isJSPrimitiveType,			#protocol : #testing,			#sourceCode : 'isJSPrimitiveType\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2304' ],		#self : OmReference [ '2305' ],		#time : DateAndTime [ '2024-03-03T08:20:50.138-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #isLetter,			#protocol : #testing,			#sourceCode : 'isLetter\r\t^self letterCharCodes includes: (self js_charCodeAt: 0)',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2305' ],		#self : OmReference [ '2306' ],		#time : DateAndTime [ '2024-03-03T08:20:50.138-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #isSelfEvaluating,			#protocol : #testing,			#sourceCode : 'isSelfEvaluating \r\t^true',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2306' ],		#self : OmReference [ '2307' ],		#time : DateAndTime [ '2024-03-03T08:20:50.139-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #isSeparator,			#protocol : #testing,			#sourceCode : 'isSeparator \r\t| in |\r\t^ (in := (self js_charCodeAt: 0) asInteger) == 32 or: [ in == 13 or: [ in == 9 or: [ in == 10 or: [ in == 12 ] ] ] ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2307' ],		#self : OmReference [ '2308' ],		#time : DateAndTime [ '2024-03-03T08:20:50.139-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #isString,			#protocol : #testing,			#sourceCode : 'isString\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2308' ],		#self : OmReference [ '2309' ],		#time : DateAndTime [ '2024-03-03T08:20:50.139-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'join:',			#protocol : #splitjoin,			#sourceCode : 'join: anArray\r\t^ anArray js_join: self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2309' ],		#self : OmReference [ '2310' ],		#time : DateAndTime [ '2024-03-03T08:20:50.139-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #last,			#protocol : #accessing,			#sourceCode : 'last\r\t^self at: self size',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2310' ],		#self : OmReference [ '2311' ],		#time : DateAndTime [ '2024-03-03T08:20:50.139-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'lastIndexOf:',			#protocol : #accessing,			#sourceCode : 'lastIndexOf: x\r\t<javascript: \'return this.lastIndexOf(x)+1\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2311' ],		#self : OmReference [ '2312' ],		#time : DateAndTime [ '2024-03-03T08:20:50.139-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #letterCharCodes,			#protocol : #testing,			#sourceCode : 'letterCharCodes\r\t^#(65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 170 181 186 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 250 251 252 253 254 255)',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2312' ],		#self : OmReference [ '2313' ],		#time : DateAndTime [ '2024-03-03T08:20:50.139-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #notEmpty,			#protocol : #testing,			#sourceCode : 'notEmpty\r\t^self ~= \'\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2313' ],		#self : OmReference [ '2314' ],		#time : DateAndTime [ '2024-03-03T08:20:50.14-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #proxyResponse,			#protocol : #proxy,			#sourceCode : 'proxyResponse\r\t<javascript: \'return ""+this\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2314' ],		#self : OmReference [ '2315' ],		#time : DateAndTime [ '2024-03-03T08:20:50.14-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #readStream,			#protocol : #writing,			#sourceCode : 'readStream\r\t^ PjStringStream on: self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2315' ],		#self : OmReference [ '2316' ],		#time : DateAndTime [ '2024-03-03T08:20:50.14-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'replaceFrom:to:with:startingAt:',			#protocol : #accessing,			#sourceCode : 'replaceFrom: start to: stop with: replacement startingAt: repStart\r\t<javascript: \'\r\tvar repl=[],isString=typeof replacement=="string";\r\tfor(var mine=stop-1,other=mine+repStart-start;\r\t\tmine>=start-1;\r\t\t--other,--mine\r\t\t)repl[other]=isString?replacement[other]:String.fromCharCode(replacement[other]);\r\t\treturn this.substring(0,start-1)+repl.join("")+this.substr(stop)\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2316' ],		#self : OmReference [ '2317' ],		#time : DateAndTime [ '2024-03-03T08:20:50.14-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #reversed,			#protocol : #converting,			#sourceCode : 'reversed\r\t^ \'\' join: self asArray reverse',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2317' ],		#self : OmReference [ '2318' ],		#time : DateAndTime [ '2024-03-03T08:20:50.14-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #shouldBePrintedAsLiteral,			#protocol : #testing,			#sourceCode : 'shouldBePrintedAsLiteral\r\t^true',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2318' ],		#self : OmReference [ '2319' ],		#time : DateAndTime [ '2024-03-03T08:20:50.14-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #size,			#protocol : #accessing,			#sourceCode : 'size\r\t^self js_at:#length',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2319' ],		#self : OmReference [ '2320' ],		#time : DateAndTime [ '2024-03-03T08:20:50.14-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'split:',			#protocol : #splitjoin,			#sourceCode : 'split: aString\r\r\t^ aString js_split: self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2320' ],		#self : OmReference [ '2321' ],		#time : DateAndTime [ '2024-03-03T08:20:50.141-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'splitOn:',			#protocol : #splitjoin,			#sourceCode : 'splitOn: anArray\r\t^ anArray split: self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2321' ],		#self : OmReference [ '2322' ],		#time : DateAndTime [ '2024-03-03T08:20:50.141-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #value,			#protocol : #converting,			#sourceCode : 'value\r\t<javascript: \'return ""+this\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2322' ],		#self : OmReference [ '2323' ],		#time : DateAndTime [ '2024-03-03T08:20:50.141-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #writeStream,			#protocol : #writing,			#sourceCode : 'writeStream\r\t^ PjStringStream new',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2323' ],		#self : OmReference [ '2324' ],		#time : DateAndTime [ '2024-03-03T08:20:50.141-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'~=',			#protocol : #comparing,			#sourceCode : '~= other\r\t<javascript: \'return this!=other\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2324' ],		#self : OmReference [ '2325' ],		#time : DateAndTime [ '2024-03-03T08:20:50.141-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjUndefinedObject class',				#isMetaSide : true			},			#name : #'identityHash_jsGenerator:',			#protocol : #'class initialization',			#sourceCode : 'identityHash_jsGenerator: transpiler\r\t<pharoJsSkip>\r\t^\'return \', nil identityHash asString',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2325' ],		#self : OmReference [ '2326' ],		#time : DateAndTime [ '2024-03-03T08:20:50.141-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjUndefinedObject class',				#isMetaSide : true			},			#name : #javascriptInitialize,			#protocol : #'class initialization',			#sourceCode : 'javascriptInitialize\r\r\tuniqueInstance := self basicNew.\r\tObject js_freeze: uniqueInstance;\r\t js_freeze: self\r\t',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2326' ],		#self : OmReference [ '2327' ],		#time : DateAndTime [ '2024-03-03T08:20:50.141-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjUndefinedObject class',				#isMetaSide : true			},			#name : #javascriptName,			#protocol : #'pharojs support',			#sourceCode : 'javascriptName\r\t<pharoJsSkip>\r\t^self name',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2327' ],		#self : OmReference [ '2328' ],		#time : DateAndTime [ '2024-03-03T08:20:50.141-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjUndefinedObject class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethods,			#protocol : #'pharoJs support',			#sourceCode : 'jsTranspilationImportMethods\r\r\t<pharoJsSkip>\r\t^ { (UndefinedObject\r\t   -> #( isNil ifNil: ifNotNil: #ifNil:ifNotNil: #ifNotNil:ifNil:\r\t\t      isNotNil notNil isEmptyOrNil isLiteral printOn: )) }',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2328' ],		#self : OmReference [ '2329' ],		#time : DateAndTime [ '2024-03-03T08:20:50.142-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjUndefinedObject class',				#isMetaSide : true			},			#name : #new,			#protocol : #'class initialization',			#sourceCode : 'new\r\t^PjCore signal: \'cannot create instances of UndefinedObject\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2329' ],		#self : OmReference [ '2330' ],		#time : DateAndTime [ '2024-03-03T08:20:50.142-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUndefinedObject,				#isMetaSide : false			},			#name : #'=',			#protocol : #comparing,			#sourceCode : '= other\r\t<javascript: \'return null==other\'>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2330' ],		#self : OmReference [ '2331' ],		#time : DateAndTime [ '2024-03-03T08:20:50.142-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUndefinedObject,				#isMetaSide : false			},			#name : #asJSON,			#protocol : #converting,			#sourceCode : 'asJSON\r\t^ \'null\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2331' ],		#self : OmReference [ '2332' ],		#time : DateAndTime [ '2024-03-03T08:20:50.142-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUndefinedObject,				#isMetaSide : false			},			#name : #identityHash,			#protocol : #comparing,			#sourceCode : 'identityHash\r\t<jsGenerator: #identityHash_jsGenerator:>',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2332' ],		#self : OmReference [ '2333' ],		#time : DateAndTime [ '2024-03-03T08:20:50.142-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUndefinedObject,				#isMetaSide : false			},			#name : #isJSPrimitiveType,			#protocol : #accessing,			#sourceCode : 'isJSPrimitiveType\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2333' ],		#self : OmReference [ '2334' ],		#time : DateAndTime [ '2024-03-03T08:20:50.142-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUndefinedObject,				#isMetaSide : false			},			#name : #proxyResponse,			#protocol : #converting,			#sourceCode : 'proxyResponse\r\t^ self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2334' ],		#self : OmReference [ '2335' ],		#time : DateAndTime [ '2024-03-03T08:20:50.142-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUndefinedObject,				#isMetaSide : false			},			#name : #value,			#protocol : #converting,			#sourceCode : 'value\r\t^ nil',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2335' ],		#self : OmReference [ '2336' ],		#time : DateAndTime [ '2024-03-03T08:20:50.143-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Float class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjNumber',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2336' ],		#self : OmReference [ '2337' ],		#time : DateAndTime [ '2024-03-03T08:20:50.143-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Time class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjTime',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2337' ],		#self : OmReference [ '2338' ],		#time : DateAndTime [ '2024-03-03T08:20:50.143-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Margin class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjMargin',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2338' ],		#self : OmReference [ '2339' ],		#time : DateAndTime [ '2024-03-03T08:20:50.143-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'SequenceableCollection class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjArray',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2339' ],		#self : OmReference [ '2340' ],		#time : DateAndTime [ '2024-03-03T08:20:50.144-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Number class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjNumber',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2340' ],		#self : OmReference [ '2341' ],		#time : DateAndTime [ '2024-03-03T08:20:50.144-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'UndefinedObject class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjUndefinedObject',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2341' ],		#self : OmReference [ '2342' ],		#time : DateAndTime [ '2024-03-03T08:20:50.145-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UndefinedObject,				#isMetaSide : false			},			#name : #'asJsObjectUsing:',			#protocol : #'*PharoJs-Base-JS-CoreLibraries-converting',			#sourceCode : 'asJsObjectUsing: converter\r\t^self',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2342' ],		#self : OmReference [ '2343' ],		#time : DateAndTime [ '2024-03-03T08:20:50.145-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UndefinedObject,				#isMetaSide : false			},			#name : #isPjProxyOrNil,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'isPjProxyOrNil\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2343' ],		#self : OmReference [ '2344' ],		#time : DateAndTime [ '2024-03-03T08:20:50.145-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Class class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^PjClass',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2344' ],		#self : OmReference [ '2345' ],		#time : DateAndTime [ '2024-03-03T08:20:50.146-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'BlockClosure class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjFunction',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2345' ],		#self : OmReference [ '2346' ],		#time : DateAndTime [ '2024-03-03T08:20:50.146-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'SortedCollection class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries-Kernel',			#sourceCode : 'javascriptPlaceholder\r\t<pharoJsSkip>\r\t^PjSortedCollection',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2346' ],		#self : OmReference [ '2347' ],		#time : DateAndTime [ '2024-03-03T08:20:50.147-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Collection class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^PjCollection',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2347' ],		#self : OmReference [ '2348' ],		#time : DateAndTime [ '2024-03-03T08:20:50.148-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Collection,				#isMetaSide : false			},			#name : #'asJsObjectUsing:',			#protocol : #'*PharoJs-Base-JS-CoreLibraries-converting',			#sourceCode : 'asJsObjectUsing: converter\r\t^self collect: [ : each | each  asJsObjectUsing: converter]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2348' ],		#self : OmReference [ '2349' ],		#time : DateAndTime [ '2024-03-03T08:20:50.148-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Array class',				#isMetaSide : true			},			#name : #javascriptPlaceholder,			#protocol : #'*PharoJs-Base-JS-CoreLibraries',			#sourceCode : 'javascriptPlaceholder\r\t^ PjArray',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2349' ],		#self : OmReference [ '2350' ],		#time : DateAndTime [ '2024-03-03T08:20:50.148-05:00' ],		#trigger : OmReference [ '1638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Array,				#isMetaSide : false			},			#name : #'asJsObjectUsing:',			#protocol : #'*PharoJs-Base-JS-CoreLibraries-converting',			#sourceCode : 'asJsObjectUsing: converter\r\t"This method is used only in the Pharo world. In JS, we use instead PjTArray>>#asJsObject"\r\t(self notEmpty and: [(self first isKindOf: Association) not]) ifTrue: [ \r\t\t^self\r\t].\r\t^self asDictionary asJsObjectUsing: converter',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:50.5-05:00' ],		#prior : OmReference [ '2350' ],		#self : OmReference [ '2351' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-Base-Serialization-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2351' ],		#self : OmReference [ '2352' ],		#time : DateAndTime [ '2024-03-03T08:20:50.527-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Serialization-Manifest,		#affectedPackageName : #PharoJs-Base-Serialization	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2352' ],		#self : OmReference [ '2353' ],		#time : DateAndTime [ '2024-03-03T08:20:50.529-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PackageManifest subclass: #ManifestPharoJsBaseSerialization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Serialization-Manifest\'',				#superclassName : 'PackageManifest',				#traitCompositionSource : '{}'			},			#name : #ManifestPharoJsBaseSerialization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ManifestPharoJsBaseSerialization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ManifestPharoJsBaseSerialization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestPharoJsBaseSerialization,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Serialization-Manifest,			#package : #PharoJs-Base-Serialization,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2353' ],		#self : OmReference [ '2354' ],		#time : DateAndTime [ '2024-03-03T08:20:50.533-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PackageManifest subclass: #ManifestPharoJsBaseSerialization\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Serialization-Manifest\'',				#superclassName : 'PackageManifest',				#traitCompositionSource : '{}'			},			#name : #ManifestPharoJsBaseSerialization,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ManifestPharoJsBaseSerialization class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ManifestPharoJsBaseSerialization class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestPharoJsBaseSerialization,					#isMetaSide : false				},				#parent : @8,				#content : 'Obviously one of the most rudimentary needs is the ability to transfer instances between pharo an js world in a transparent and reciprocal way.\rI concidered using STON or NeoJson, but neither are useable in js world (I think? By the way, I really miss String streamContents in js )\rEventhough it feels like I\'m trying to reïnvent the wheel, I just started working on r/w classes: PhxJsonWriter and PhxJsonReader.\r\rThe serialized form is pure JSON. It includes meta info, needed for deserialization.\rexample:\r\t(Date newDay: 1 month: 2 year: 2003) asPhxJsonString  evaluates as: \'{"class":"Date","instance":"2003-02-01"}\'.\r\t\rIt\'s a bit like STON except:\r-it\'s pure JSON (not a superset)\r-The  r/w classes can be used in js world.\r\rIt also uses references to instances (for efficiency an cyclic problems)\r\rSo far following tests are green in Pharo.\r\tself isEqualAfterWriteReadCycle: {}.\r\tself isEqualAfterWriteReadCycle: OrderedCollection new.\r\tself isEqualAfterWriteReadCycle: Date today.\t\r\tself isEqualAfterWriteReadCycle: DateAndTime now.\t\r\tself isEqualAfterWriteReadCycle: \'Hi there, I\'\'m just a "String", and I cost only 2€. Olé!\'.\r\tself isEqualAfterWriteReadCycle: Object new.\r\tself isEqualAfterWriteReadCycle: 123456789.\r\tself isEqualAfterWriteReadCycle: 12345.6789.\r\tself isEqualAfterWriteReadCycle: PhxJsonWriter testObject1\r\t\rNow I stumble upon the fact that OrderedCollection in js world becomes an Array.\rAlso DateAndTime becomes a Date in js.\rSuggestions or ideas anyone?',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Serialization-Manifest,			#package : #PharoJs-Base-Serialization,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Obviously one of the most rudimentary needs is the ability to transfer instances between pharo an js world in a transparent and reciprocal way.\rI concidered using STON or NeoJson, but neither are useable in js world (I think? By the way, I really miss String streamContents in js )\rEventhough it feels like I\'m trying to reïnvent the wheel, I just started working on r/w classes: PhxJsonWriter and PhxJsonReader.\r\rThe serialized form is pure JSON. It includes meta info, needed for deserialization.\rexample:\r\t(Date newDay: 1 month: 2 year: 2003) asPhxJsonString  evaluates as: \'{"class":"Date","instance":"2003-02-01"}\'.\r\t\rIt\'s a bit like STON except:\r-it\'s pure JSON (not a superset)\r-The  r/w classes can be used in js world.\r\rIt also uses references to instances (for efficiency an cyclic problems)\r\rSo far following tests are green in Pharo.\r\tself isEqualAfterWriteReadCycle: {}.\r\tself isEqualAfterWriteReadCycle: OrderedCollection new.\r\tself isEqualAfterWriteReadCycle: Date today.\t\r\tself isEqualAfterWriteReadCycle: DateAndTime now.\t\r\tself isEqualAfterWriteReadCycle: \'Hi there, I\'\'m just a "String", and I cost only 2€. Olé!\'.\r\tself isEqualAfterWriteReadCycle: Object new.\r\tself isEqualAfterWriteReadCycle: 123456789.\r\tself isEqualAfterWriteReadCycle: 12345.6789.\r\tself isEqualAfterWriteReadCycle: PhxJsonWriter testObject1\r\t\rNow I stumble upon the fact that OrderedCollection in js world becomes an Array.\rAlso DateAndTime becomes a Date in js.\rSuggestions or ideas anyone?',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2354' ],		#self : OmReference [ '2355' ],		#time : DateAndTime [ '2024-03-03T08:20:50.537-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Serialization-Core,		#affectedPackageName : #PharoJs-Base-Serialization	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2355' ],		#self : OmReference [ '2356' ],		#time : DateAndTime [ '2024-03-03T08:20:50.538-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDomController subclass: #PhxJsonReader\r\tinstanceVariableNames: \'knownObjects\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Serialization-Core\'',				#superclassName : 'PjDomController',				#traitCompositionSource : '{}'			},			#name : #PhxJsonReader,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PhxJsonReader,						#isMetaSide : false					},					#name : #knownObjects,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PhxJsonReader class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PhxJsonReader class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PhxJsonReader,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Serialization-Core,			#package : #PharoJs-Base-Serialization,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2356' ],		#self : OmReference [ '2357' ],		#time : DateAndTime [ '2024-03-03T08:20:50.539-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDomController subclass: #PhxJsonReader\r\tinstanceVariableNames: \'knownObjects\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Serialization-Core\'',				#superclassName : 'PjDomController',				#traitCompositionSource : '{}'			},			#name : #PhxJsonReader,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PhxJsonReader,						#isMetaSide : false					},					#name : #knownObjects,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PhxJsonReader class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PhxJsonReader class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PhxJsonReader,					#isMetaSide : false				},				#parent : @8,				#content : 'A JSON Reader - to read an object from JSON format',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Serialization-Core,			#package : #PharoJs-Base-Serialization,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A JSON Reader - to read an object from JSON format',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2357' ],		#self : OmReference [ '2358' ],		#time : DateAndTime [ '2024-03-03T08:20:50.541-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDomController subclass: #PhxJsonWriter\r\tinstanceVariableNames: \'knownObjects stream\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Serialization-Core\'',				#superclassName : 'PjDomController',				#traitCompositionSource : '{}'			},			#name : #PhxJsonWriter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PhxJsonWriter,						#isMetaSide : false					},					#name : #knownObjects,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PhxJsonWriter,						#isMetaSide : false					},					#name : #stream,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PhxJsonWriter class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PhxJsonWriter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PhxJsonWriter,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Serialization-Core,			#package : #PharoJs-Base-Serialization,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2358' ],		#self : OmReference [ '2359' ],		#time : DateAndTime [ '2024-03-03T08:20:50.543-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDomController subclass: #PhxJsonWriter\r\tinstanceVariableNames: \'knownObjects stream\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Serialization-Core\'',				#superclassName : 'PjDomController',				#traitCompositionSource : '{}'			},			#name : #PhxJsonWriter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PhxJsonWriter,						#isMetaSide : false					},					#name : #knownObjects,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PhxJsonWriter,						#isMetaSide : false					},					#name : #stream,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PhxJsonWriter class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PhxJsonWriter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PhxJsonWriter,					#isMetaSide : false				},				#parent : @8,				#content : 'A JSON Writer - to write an object into JSON format',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Serialization-Core,			#package : #PharoJs-Base-Serialization,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A JSON Writer - to write an object into JSON format',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2359' ],		#self : OmReference [ '2360' ],		#time : DateAndTime [ '2024-03-03T08:20:50.661-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Number,				#isMetaSide : false			},			#name : #'writePhxJsonOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonOn: w\r\tw << self asString',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2360' ],		#self : OmReference [ '2361' ],		#time : DateAndTime [ '2024-03-03T08:20:50.662-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Set class',				#isMetaSide : true			},			#name : #'instantiateWithPhxJsonReader:instanceJsonObject:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'instantiateWithPhxJsonReader: reader instanceJsonObject: jsonObject\r\t| newCollection |\r\tnewCollection := self new.\r\treader addKnownObject: newCollection.\r\tjsonObject do: [ : each | newCollection add: (reader readFromJsObjectOrDictionary: each) ].\r\t^newCollection',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2361' ],		#self : OmReference [ '2362' ],		#time : DateAndTime [ '2024-03-03T08:20:50.663-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #'writePhxJsonOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonOn: w\r\tw << self',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2362' ],		#self : OmReference [ '2363' ],		#time : DateAndTime [ '2024-03-03T08:20:50.663-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjSet class',				#isMetaSide : true			},			#name : #phxJsonClassName,			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'phxJsonClassName\r\t^ \'Set\'',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2363' ],		#self : OmReference [ '2364' ],		#time : DateAndTime [ '2024-03-03T08:20:50.663-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDate class',				#isMetaSide : true			},			#name : #'instantiateWithPhxJsonReader:instanceJsonObject:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'instantiateWithPhxJsonReader: reader instanceJsonObject: str\r\t"<javascript:\r\t\t\'  var y = str.substr(0,4),\r        m = str.substr(5,2) - 1,\r        d = str.substr(8,2);\r    return new Date(y,m,d);\'>"\r\r\t<javascript: \'return new Date(str);\'>',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2364' ],		#self : OmReference [ '2365' ],		#time : DateAndTime [ '2024-03-03T08:20:50.664-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDate class',				#isMetaSide : true			},			#name : #phxJsonClassName,			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'phxJsonClassName\r\t^ \'DateAndTime\'',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2365' ],		#self : OmReference [ '2366' ],		#time : DateAndTime [ '2024-03-03T08:20:50.664-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDate,				#isMetaSide : false			},			#name : #'writePhxJsonRepresentationOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonRepresentationOn: w\r\tw writeQuoted: "self yyyymmdd" self toISOString "toString"',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2366' ],		#self : OmReference [ '2367' ],		#time : DateAndTime [ '2024-03-03T08:20:50.664-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDate,				#isMetaSide : false			},			#name : #yyyymmdd,			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'yyyymmdd\r\t<javascript: \' var d = new Date(this),\r        month = "" + (d.getMonth() + 1),\r        day = "" + d.getDate(),\r        year = d.getFullYear();\r\r    if (month.length < 2) \r        month = "0" + month;\r    if (day.length < 2) \r        day = "0" + day;\r\r    return [year, month, day].join("-");\'>',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2367' ],		#self : OmReference [ '2368' ],		#time : DateAndTime [ '2024-03-03T08:20:50.664-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'DateAndTime class',				#isMetaSide : true			},			#name : #'instantiateWithPhxJsonReader:instanceJsonObject:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'instantiateWithPhxJsonReader: reader instanceJsonObject: jsonObject\r\r\t^ reader addKnownObject: (self fromString: jsonObject)',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2368' ],		#self : OmReference [ '2369' ],		#time : DateAndTime [ '2024-03-03T08:20:50.665-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DateAndTime,				#isMetaSide : false			},			#name : #'writePhxJsonOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonOn: w\r\tself writePhxJsonObjectOn: w',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2369' ],		#self : OmReference [ '2370' ],		#time : DateAndTime [ '2024-03-03T08:20:50.665-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DateAndTime,				#isMetaSide : false			},			#name : #'writePhxJsonRepresentationOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonRepresentationOn: w\r\tw writeQuoted: self asUTC asString',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2370' ],		#self : OmReference [ '2371' ],		#time : DateAndTime [ '2024-03-03T08:20:50.665-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #False,				#isMetaSide : false			},			#name : #'writePhxJsonOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonOn: w\r\tw << \'false\'',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2371' ],		#self : OmReference [ '2372' ],		#time : DateAndTime [ '2024-03-03T08:20:50.667-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTArray classTrait',				#isMetaSide : true			},			#name : #'instantiateWithPhxJsonReader:instanceJsonObject:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'instantiateWithPhxJsonReader: reader instanceJsonObject: jsonObject\r\t| resultCollection elements |\r\tresultCollection := self new: jsonObject size.\r\treader addKnownObject: resultCollection.\r\telements := jsonObject collect: [ :each | reader readFromJsObjectOrDictionary: each ].\r\t^resultCollection\r\t\taddAll: elements;\r\t\tyourself',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2372' ],		#self : OmReference [ '2373' ],		#time : DateAndTime [ '2024-03-03T08:20:50.667-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArray,				#isMetaSide : false			},			#name : #'writePhxJsonRepresentationOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonRepresentationOn: w\r\tw\r\t\tdoBetweenSquareBrackets: [ self\r\t\t\t\tdo: [ :each | each writePhxJsonOn: w ]\r\t\t\t\tseparatedBy: [ w comma ] ]',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2373' ],		#self : OmReference [ '2374' ],		#time : DateAndTime [ '2024-03-03T08:20:50.668-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ScaledDecimal,				#isMetaSide : false			},			#name : #'writePhxJsonOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonOn: w\r\tw << (self printShowingDecimalPlaces: self scale)',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2374' ],		#self : OmReference [ '2375' ],		#time : DateAndTime [ '2024-03-03T08:20:50.668-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Dictionary class',				#isMetaSide : true			},			#name : #'instantiateWithPhxJsonReader:instanceJsonObject:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'instantiateWithPhxJsonReader: reader instanceJsonObject: jsonObject\r\t| newDict |\r\tnewDict := self new.\r\treader addKnownObject: newDict.\r\tjsonObject keysAndValuesDo: [ :key :value | \r\t\tnewDict at: key put: (reader readFromJsObjectOrDictionary: value) ].\r\t^ newDict',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2375' ],		#self : OmReference [ '2376' ],		#time : DateAndTime [ '2024-03-03T08:20:50.669-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Dictionary,				#isMetaSide : false			},			#name : #'writePhxJsonRepresentationOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonRepresentationOn: w\r\tw\r\t\tdoBetweenCurlyBraces: [ self keys\r\t\t\t\tdo:\r\t\t\t\t\t[ :key | w writeKeyName: key andValue: [ (self at: key) writePhxJsonOn: w ] ]\r\t\t\t\tseparatedBy: [ w comma ] ]',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2376' ],		#self : OmReference [ '2377' ],		#time : DateAndTime [ '2024-03-03T08:20:50.669-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDictionary class',				#isMetaSide : true			},			#name : #phxJsonClassName,			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'phxJsonClassName\r\t^ \'Dictionary\'',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2377' ],		#self : OmReference [ '2378' ],		#time : DateAndTime [ '2024-03-03T08:20:50.669-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionary,				#isMetaSide : false			},			#name : #'writePhxJsonRepresentationOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonRepresentationOn: w\r\tself asJsObject writePhxJsonRepresentationOn: w',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2378' ],		#self : OmReference [ '2379' ],		#time : DateAndTime [ '2024-03-03T08:20:50.67-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'SequenceableCollection class',				#isMetaSide : true			},			#name : #'instantiateWithPhxJsonReader:instanceJsonObject:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'instantiateWithPhxJsonReader: reader instanceJsonObject: jsonObject\r\t| resultCollection |\r\tresultCollection := self ofSize: jsonObject size.\r\treader addKnownObject: resultCollection.\r\tjsonObject\r\t\tdoWithIndex: [ :each :index | \r\t\t\tresultCollection\r\t\t\t\tat: index\r\t\t\t\tput: (reader readFromJsObjectOrDictionary: each) ].\r\t^ resultCollection',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2379' ],		#self : OmReference [ '2380' ],		#time : DateAndTime [ '2024-03-03T08:20:50.67-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjObject class',				#isMetaSide : true			},			#name : #'instantiateWithPhxJsonReader:instanceJsonObject:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'instantiateWithPhxJsonReader: reader instanceJsonObject: jsonObject\r\t| obj |\r\tobj := self new.\r\treader addKnownObject: obj.\r\tjsonObject\r\t\tkeysAndValuesDo: [ :k :v | obj instVarNamed: k put: (reader readFromJsObjectOrDictionary: v) ].\r\t^ obj',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2380' ],		#self : OmReference [ '2381' ],		#time : DateAndTime [ '2024-03-03T08:20:50.67-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjObject class',				#isMetaSide : true			},			#name : #jsTranspilationImportMethodsNonstandard,			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'jsTranspilationImportMethodsNonstandard\r\t<pharoJsSkip>\r\t^ {(Object class -> #(newPhxJsonWriter)).\r\t(Object\r\t\t->\r\t\t\t#(asPhxJsonString #writePhxJsonOn: writePhxJsonRepresentationOn: #writePhxJsonObjectOn:))}',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2381' ],		#self : OmReference [ '2382' ],		#time : DateAndTime [ '2024-03-03T08:20:50.67-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjObject class',				#isMetaSide : true			},			#name : #phxJsonClassName,			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'phxJsonClassName\r\t^ self name',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2382' ],		#self : OmReference [ '2383' ],		#time : DateAndTime [ '2024-03-03T08:20:50.671-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #allPhxJsonInstvarNames,			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'allPhxJsonInstvarNames\r\t^ self keys',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2383' ],		#self : OmReference [ '2384' ],		#time : DateAndTime [ '2024-03-03T08:20:50.671-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAssociation class',				#isMetaSide : true			},			#name : #phxJsonClassName,			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'phxJsonClassName\r\t^ \'Association\'',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2384' ],		#self : OmReference [ '2385' ],		#time : DateAndTime [ '2024-03-03T08:20:50.671-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UndefinedObject,				#isMetaSide : false			},			#name : #'writePhxJsonOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonOn: w\r\tw << \'null\'',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2385' ],		#self : OmReference [ '2386' ],		#time : DateAndTime [ '2024-03-03T08:20:50.671-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #'writePhxJsonOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonOn: w\r\tw << self asJSON',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2386' ],		#self : OmReference [ '2387' ],		#time : DateAndTime [ '2024-03-03T08:20:50.672-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PhxJsonReader class',				#isMetaSide : true			},			#name : #'materializeJsonString:',			#protocol : #'instance creation',			#sourceCode : 'materializeJsonString: aString\r\t<javascript: \'return JSON.parse(aString)\'>\r\t"returns a javascript object in js world"\r\t"returns a dictionary in st world"\r\t\r\t^ STONJSON fromString: aString readStream',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2387' ],		#self : OmReference [ '2388' ],		#time : DateAndTime [ '2024-03-03T08:20:50.672-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PhxJsonReader class',				#isMetaSide : true			},			#name : #'readFromJsObjectOrDictionary:',			#protocol : #'instance creation',			#sourceCode : 'readFromJsObjectOrDictionary: jsObjectOrDictionary\r\r\t^ self new readFromJsObjectOrDictionary: jsObjectOrDictionary',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2388' ],		#self : OmReference [ '2389' ],		#time : DateAndTime [ '2024-03-03T08:20:50.672-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PhxJsonReader class',				#isMetaSide : true			},			#name : #'readFromString:',			#protocol : #'instance creation',			#sourceCode : 'readFromString: aString\r\r\t^ self readFromJsObjectOrDictionary: (self materializeJsonString: aString)',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2389' ],		#self : OmReference [ '2390' ],		#time : DateAndTime [ '2024-03-03T08:20:50.672-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJsonReader,				#isMetaSide : false			},			#name : #'addKnownObject:',			#protocol : #'instance creation',			#sourceCode : 'addKnownObject: anObject\r\t^knownObjects add: anObject',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2390' ],		#self : OmReference [ '2391' ],		#time : DateAndTime [ '2024-03-03T08:20:50.672-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJsonReader,				#isMetaSide : false			},			#name : #'classNameForJsonClassName:',			#protocol : #'instance creation',			#sourceCode : 'classNameForJsonClassName: jsonClassName\r\t<javascript:\r\t\t\'if(jsonClassName == "DateAndTime") { return "Date"}\rif(jsonClassName == "Dictionary") { return "PjDictionary"}\rif(jsonClassName == "Association") { return "PjAssociation"}\rif(jsonClassName == "IdentityDictionary") { return "PjIdentityDictionary"}\rif(jsonClassName == "Set") { return "PjSet"}\rreturn jsonClassName;\'>\r\t^ jsonClassName',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2391' ],		#self : OmReference [ '2392' ],		#time : DateAndTime [ '2024-03-03T08:20:50.672-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJsonReader,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tknownObjects := OrderedCollection new',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2392' ],		#self : OmReference [ '2393' ],		#time : DateAndTime [ '2024-03-03T08:20:50.672-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJsonReader,				#isMetaSide : false			},			#name : #'readFromJsObjectOrDictionary:',			#protocol : #'instance creation',			#sourceCode : 'readFromJsObjectOrDictionary: jsonObject\r\t| jsonClassName |\r\tjsonObject ifNil: [ ^ nil ].\r\tjsonObject isString\r\t\tifTrue: [ ^ jsonObject ].\r\tjsonObject isNumber\r\t\tifTrue: [ ^ jsonObject ].\r\tjsonObject == true\r\t\tifTrue: [ ^ true ].\r\tjsonObject == false\r\t\tifTrue: [ ^ false ].\r\t(jsonObject at: \'instRef\' ifAbsent: [ nil ])\r\t\tifNotNil: [ :idx | ^ knownObjects at: idx ].\r\tjsonClassName := jsonObject at: \'class\' ifAbsent: [ nil ].\r\t(self classNameForJsonClassName: jsonClassName)\r\t\tifNotNil: [ :className | \r\t\t\t| class instJsonObject |\r\t\t\tclass := Smalltalk at: className asSymbol ifAbsent: [ nil ].\r\t\t\tclass ifNil: [ self error: \'Class not found: \' , className ].\r\t\t\tinstJsonObject := jsonObject at: \'instance\'.\r\t\t\t^ (class\r\t\t\t\t\t\tinstantiateWithPhxJsonReader: self\r\t\t\t\t\t\tinstanceJsonObject: instJsonObject) ].\r\t^ self error',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2393' ],		#self : OmReference [ '2394' ],		#time : DateAndTime [ '2024-03-03T08:20:50.673-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJsonWriter,				#isMetaSide : false			},			#name : #'<<',			#protocol : #writing,			#sourceCode : '<< aString\r\tstream nextPutAll: aString',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2394' ],		#self : OmReference [ '2395' ],		#time : DateAndTime [ '2024-03-03T08:20:50.673-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJsonWriter,				#isMetaSide : false			},			#name : #comma,			#protocol : #writing,			#sourceCode : 'comma\r\tself << \',\'',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2395' ],		#self : OmReference [ '2396' ],		#time : DateAndTime [ '2024-03-03T08:20:50.673-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJsonWriter,				#isMetaSide : false			},			#name : #'doBetweenCurlyBraces:',			#protocol : #writing,			#sourceCode : 'doBetweenCurlyBraces: aBlock\r\tself << \'{\'.\r\taBlock value. \r\tself << \'}\'',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2396' ],		#self : OmReference [ '2397' ],		#time : DateAndTime [ '2024-03-03T08:20:50.673-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJsonWriter,				#isMetaSide : false			},			#name : #'doBetweenSquareBrackets:',			#protocol : #writing,			#sourceCode : 'doBetweenSquareBrackets: aBlock\r\tself << \'[\'.\r\taBlock value. \r\tself << \']\'',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2397' ],		#self : OmReference [ '2398' ],		#time : DateAndTime [ '2024-03-03T08:20:50.673-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJsonWriter,				#isMetaSide : false			},			#name : #'identityIndexOf:',			#protocol : #writing,			#sourceCode : 'identityIndexOf: anObject\r\tknownObjects\r\t\tdoWithIndex: [ :obj :index | \r\t\t\tobj == anObject\r\t\t\t\tifTrue: [ ^ index ] ].\r\t^ nil',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2398' ],		#self : OmReference [ '2399' ],		#time : DateAndTime [ '2024-03-03T08:20:50.673-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJsonWriter,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tstream := \'\' writeStream.\r\tknownObjects := OrderedCollection new',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2399' ],		#self : OmReference [ '2400' ],		#time : DateAndTime [ '2024-03-03T08:20:50.674-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJsonWriter,				#isMetaSide : false			},			#name : #string,			#protocol : #accessing,			#sourceCode : 'string\r\r\t^ stream contents',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2400' ],		#self : OmReference [ '2401' ],		#time : DateAndTime [ '2024-03-03T08:20:50.674-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJsonWriter,				#isMetaSide : false			},			#name : #'writeKeyName:andValue:',			#protocol : #writing,			#sourceCode : 'writeKeyName: key andValue: anObject\r\tself writeQuoted: key.\r\tself << \':\'.\r\tanObject isBlock\r\t\tifTrue: [ anObject value ]\r\t\tifFalse: [ anObject\r\t\t\t\tifNil: [ self << \'null\' ]\r\t\t\t\tifNotNil: [ self << anObject asJSON ] ]',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2401' ],		#self : OmReference [ '2402' ],		#time : DateAndTime [ '2024-03-03T08:20:50.674-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJsonWriter,				#isMetaSide : false			},			#name : #'writeQuoted:',			#protocol : #writing,			#sourceCode : 'writeQuoted: aString\r\tself << \'"\' << aString << \'"\'',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2402' ],		#self : OmReference [ '2403' ],		#time : DateAndTime [ '2024-03-03T08:20:50.674-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJsonWriter,				#isMetaSide : false			},			#name : #'writeReferenceFor:or:',			#protocol : #writing,			#sourceCode : 'writeReferenceFor: anObject or: aBlock\r\t(self identityIndexOf: anObject)\r\t\tifNotNil: [ :i | \r\t\t\ti isZero\r\t\t\t\tifFalse: [ self\r\t\t\t\t\t\tdoBetweenCurlyBraces: [ self writeKeyName: \'instRef\' andValue: i ].\r\t\t\t\t\t^ self ] ].\r\tknownObjects add: anObject.\r\taBlock value',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2403' ],		#self : OmReference [ '2404' ],		#time : DateAndTime [ '2024-03-03T08:20:50.674-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Collection,				#isMetaSide : false			},			#name : #'writePhxJsonRepresentationOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonRepresentationOn: w\r\tw\r\t\tdoBetweenSquareBrackets: [ self\r\t\t\t\tdo: [ :each | each writePhxJsonOn: w ]\r\t\t\t\tseparatedBy: [ w comma ] ]',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2404' ],		#self : OmReference [ '2405' ],		#time : DateAndTime [ '2024-03-03T08:20:50.675-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Date class',				#isMetaSide : true			},			#name : #'instantiateWithPhxJsonReader:instanceJsonObject:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'instantiateWithPhxJsonReader: reader instanceJsonObject: aString\r\t^self readFrom: (aString ifNotNilOrEmpty: [aString first:10]) pattern: \'yyyy-mm-dd\'',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2405' ],		#self : OmReference [ '2406' ],		#time : DateAndTime [ '2024-03-03T08:20:50.675-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Date,				#isMetaSide : false			},			#name : #'writePhxJsonOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonOn: w\r\tself writePhxJsonObjectOn: w',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2406' ],		#self : OmReference [ '2407' ],		#time : DateAndTime [ '2024-03-03T08:20:50.675-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Date,				#isMetaSide : false			},			#name : #'writePhxJsonRepresentationOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonRepresentationOn: w\r\tw writeQuoted: self yyyymmdd',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2407' ],		#self : OmReference [ '2408' ],		#time : DateAndTime [ '2024-03-03T08:20:50.675-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjIdentityDictionary class',				#isMetaSide : true			},			#name : #'instantiateWithPhxJsonReader:instanceJsonObject:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'instantiateWithPhxJsonReader: reader instanceJsonObject: jsonObject\r\t| obj |\r\tobj := self new.\r\treader addKnownObject: obj.\r\tjsonObject\r\t\tkeysAndValuesDo: [ :k :v | obj at: k put: (reader readFromJsObjectOrDictionary: v) ].\r\t^ obj ',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2408' ],		#self : OmReference [ '2409' ],		#time : DateAndTime [ '2024-03-03T08:20:50.675-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjIdentityDictionary class',				#isMetaSide : true			},			#name : #phxJsonClassName,			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'phxJsonClassName\r\t^ \'IdentityDictionary\'',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2409' ],		#self : OmReference [ '2410' ],		#time : DateAndTime [ '2024-03-03T08:20:50.676-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #True,				#isMetaSide : false			},			#name : #'writePhxJsonOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonOn: w\r\tw << \'true\'',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2410' ],		#self : OmReference [ '2411' ],		#time : DateAndTime [ '2024-03-03T08:20:50.676-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCollection,				#isMetaSide : false			},			#name : #'writePhxJsonRepresentationOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonRepresentationOn: w\r\tw\r\t\tdoBetweenSquareBrackets: [ self\r\t\t\t\tdo: [ :each | each writePhxJsonOn: w ]\r\t\t\t\tseparatedBy: [ w comma ] ]',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2411' ],		#self : OmReference [ '2412' ],		#time : DateAndTime [ '2024-03-03T08:20:50.676-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #'writePhxJsonOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonOn: w\r\tw << self asString',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2412' ],		#self : OmReference [ '2413' ],		#time : DateAndTime [ '2024-03-03T08:20:50.677-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Object class',				#isMetaSide : true			},			#name : #'instantiateWithPhxJsonReader:instanceJsonObject:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'instantiateWithPhxJsonReader: reader instanceJsonObject: jsonObject\r\r\t| obj |\r\tobj := self new.\r\treader addKnownObject: obj.\r\tjsonObject keys asSortedCollection do: [ : ivName | \r\t\t|ivValue|\r\t\tivValue := jsonObject at: ivName.\r\t\tobj instVarNamed: ivName put: (reader readFromJsObjectOrDictionary: ivValue) ].\r\t^ obj',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2413' ],		#self : OmReference [ '2414' ],		#time : DateAndTime [ '2024-03-03T08:20:50.678-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Object class',				#isMetaSide : true			},			#name : #newPhxJsonWriter,			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'newPhxJsonWriter\r\t^PhxJsonWriter new',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2414' ],		#self : OmReference [ '2415' ],		#time : DateAndTime [ '2024-03-03T08:20:50.678-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Object class',				#isMetaSide : true			},			#name : #phxJsonClassName,			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'phxJsonClassName\r\t^ self name',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2415' ],		#self : OmReference [ '2416' ],		#time : DateAndTime [ '2024-03-03T08:20:50.679-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #allPhxJsonInstvarNames,			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'allPhxJsonInstvarNames\r\t^ self class allInstVarNames',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2416' ],		#self : OmReference [ '2417' ],		#time : DateAndTime [ '2024-03-03T08:20:50.679-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #asPhxJsonString,			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'asPhxJsonString\r\t| writer |\r\twriter := self class newPhxJsonWriter.\r\tself writePhxJsonOn: writer.\r\t^ writer string',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2417' ],		#self : OmReference [ '2418' ],		#time : DateAndTime [ '2024-03-03T08:20:50.679-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #'writePhxJsonObjectOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonObjectOn: w\r\t^ w\r\t\tdoBetweenCurlyBraces: [ w writeKeyName: \'class\' andValue: self class phxJsonClassName.\r\t\t\tw comma.\r\t\t\t"usefull for debugging: \r\t\t\tw writeKeyName: \'instId\' andValue: (w identityIndexOf: self).\r\t\t\tw comma."\r\t\t\tw\r\t\t\t\twriteKeyName: \'instance\'\r\t\t\t\tandValue: [ self writePhxJsonRepresentationOn: w ] ]',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2418' ],		#self : OmReference [ '2419' ],		#time : DateAndTime [ '2024-03-03T08:20:50.68-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #'writePhxJsonOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonOn: w\r\tw\r\t\twriteReferenceFor: self\r\t\tor: [ self writePhxJsonObjectOn: w ]',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2419' ],		#self : OmReference [ '2420' ],		#time : DateAndTime [ '2024-03-03T08:20:50.68-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #'writePhxJsonRepresentationOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonRepresentationOn: w\r\r\tw doBetweenCurlyBraces: [ \r\t\tself allPhxJsonInstvarNames asSortedCollection\r\t\t\tdo: [ :key | \r\t\t\t\tw\r\t\t\t\t\twriteKeyName: key\r\t\t\t\t\tandValue: [ (self instVarNamed: key) writePhxJsonOn: w ] ]\r\t\t\tseparatedBy: [ w comma ] ]',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2420' ],		#self : OmReference [ '2421' ],		#time : DateAndTime [ '2024-03-03T08:20:50.68-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDateAndTime class',				#isMetaSide : true			},			#name : #'instantiateWithPhxJsonReader:instanceJsonObject:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'instantiateWithPhxJsonReader: reader instanceJsonObject: str\r\t<javascript: \'return new Date(str);\'>',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2421' ],		#self : OmReference [ '2422' ],		#time : DateAndTime [ '2024-03-03T08:20:50.681-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDateAndTime class',				#isMetaSide : true			},			#name : #phxJsonClassName,			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'phxJsonClassName\r\t^ \'DateAndTime\'',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2422' ],		#self : OmReference [ '2423' ],		#time : DateAndTime [ '2024-03-03T08:20:50.681-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTime,				#isMetaSide : false			},			#name : #'writePhxJsonRepresentationOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonRepresentationOn: w\r\tw writeQuoted: "self yyyymmdd" self toISOString "toString"',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2423' ],		#self : OmReference [ '2424' ],		#time : DateAndTime [ '2024-03-03T08:20:50.681-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUndefinedObject,				#isMetaSide : false			},			#name : #'writePhxJsonOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonOn: w\r\tw << \'null\'',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2424' ],		#self : OmReference [ '2425' ],		#time : DateAndTime [ '2024-03-03T08:20:50.681-05:00' ],		#trigger : OmReference [ '2351' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #String,				#isMetaSide : false			},			#name : #'writePhxJsonOn:',			#protocol : #'*PharoJs-Base-Serialization',			#sourceCode : 'writePhxJsonOn: w\r\tw << (STONJSON toString: self)',			#stamp : '',			#package : #PharoJs-Base-Serialization		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:50.944-05:00' ],		#prior : OmReference [ '2425' ],		#self : OmReference [ '2426' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-Base-App-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2426' ],		#self : OmReference [ '2427' ],		#time : DateAndTime [ '2024-03-03T08:20:50.98-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-App,		#affectedPackageName : #PharoJs-Base-App	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2427' ],		#self : OmReference [ '2428' ],		#time : DateAndTime [ '2024-03-03T08:20:50.984-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTWebClientApp\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-Base-App\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTWebClientApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTWebClientApp classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTWebClientApp classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTWebClientApp,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-Base-App,			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2428' ],		#self : OmReference [ '2429' ],		#time : DateAndTime [ '2024-03-03T08:20:50.988-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjApplication\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjUniversalGlobals\'\r\tpackage: \'PharoJs-Base-App\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjApplication class\r\tinstanceVariableNames: \'appFolder currentInstance port status exportVersion\'',					#traitCompositionSource : '{}'				},				#name : #'PjApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjApplication class'						},						#name : #appFolder,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjApplication class'						},						#name : #currentInstance,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjApplication class'						},						#name : #port,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjApplication class'						},						#name : #status,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjApplication class'						},						#name : #exportVersion,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjApplication,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-App,			#package : #PharoJs-Base-App,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjApplication,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2429' ],		#self : OmReference [ '2430' ],		#time : DateAndTime [ '2024-03-03T08:20:50.991-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjApplication\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjUniversalGlobals\'\r\tpackage: \'PharoJs-Base-App\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjApplication class\r\tinstanceVariableNames: \'appFolder currentInstance port status exportVersion\'',					#traitCompositionSource : '{}'				},				#name : #'PjApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjApplication class'						},						#name : #appFolder,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjApplication class'						},						#name : #currentInstance,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjApplication class'						},						#name : #port,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjApplication class'						},						#name : #status,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjApplication class'						},						#name : #exportVersion,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjApplication,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the class that all PharoJS applications should extend.\r\rI contain methods that DOM (Browser and PhoneGap) and NodeJS applications have in common.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-App,			#package : #PharoJs-Base-App,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjApplication,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'I am the class that all PharoJS applications should extend.\r\rI contain methods that DOM (Browser and PhoneGap) and NodeJS applications have in common.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2430' ],		#self : OmReference [ '2431' ],		#time : DateAndTime [ '2024-03-03T08:20:51.006-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjApplication subclass: #PjDOMApplication\r\tuses: PjTDomController\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjDomGlobals\'\r\tpackage: \'PharoJs-Base-App\'',				#superclassName : 'PjApplication',				#traitCompositionSource : 'PjTDomController'			},			#name : #PjDOMApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDOMApplication class\r\tuses: PjTDomController classTrait\r\tinstanceVariableNames: \'cssFile htmlFile\'',					#traitCompositionSource : 'PjTDomController classTrait'				},				#name : #'PjDOMApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjDOMApplication class'						},						#name : #cssFile,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjDOMApplication class'						},						#name : #htmlFile,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDOMApplication,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-App,			#package : #PharoJs-Base-App,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDOMApplication,						#isMetaSide : false					},					#name : #PjDomGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2431' ],		#self : OmReference [ '2432' ],		#time : DateAndTime [ '2024-03-03T08:20:51.008-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjApplication subclass: #PjDOMApplication\r\tuses: PjTDomController\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjDomGlobals\'\r\tpackage: \'PharoJs-Base-App\'',				#superclassName : 'PjApplication',				#traitCompositionSource : 'PjTDomController'			},			#name : #PjDOMApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDOMApplication class\r\tuses: PjTDomController classTrait\r\tinstanceVariableNames: \'cssFile htmlFile\'',					#traitCompositionSource : 'PjTDomController classTrait'				},				#name : #'PjDOMApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjDOMApplication class'						},						#name : #cssFile,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjDOMApplication class'						},						#name : #htmlFile,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDOMApplication,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the abstract superclass that all client-side PharoJS applications should extend (directly or indirectly).\r\rI contain methods that Browser and PhoneGap applications have in common.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-App,			#package : #PharoJs-Base-App,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDOMApplication,						#isMetaSide : false					},					#name : #PjDomGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'I am the abstract superclass that all client-side PharoJS applications should extend (directly or indirectly).\r\rI contain methods that Browser and PhoneGap applications have in common.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2432' ],		#self : OmReference [ '2433' ],		#time : DateAndTime [ '2024-03-03T08:20:51.01-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDOMApplication subclass: #PjWebApplication\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjBrowserGlobals\'\r\tpackage: \'PharoJs-Base-App\'',				#superclassName : 'PjDOMApplication',				#traitCompositionSource : '{}'			},			#name : #PjWebApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjWebApplication class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjWebApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjWebApplication,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-App,			#package : #PharoJs-Base-App,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWebApplication,						#isMetaSide : false					},					#name : #PjBrowserGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2433' ],		#self : OmReference [ '2434' ],		#time : DateAndTime [ '2024-03-03T08:20:51.012-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDOMApplication subclass: #PjWebApplication\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjBrowserGlobals\'\r\tpackage: \'PharoJs-Base-App\'',				#superclassName : 'PjDOMApplication',				#traitCompositionSource : '{}'			},			#name : #PjWebApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjWebApplication class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjWebApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjWebApplication,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the abstract superclass that all web-based PharoJS applications should extend (directly or indirectly). Those are apps that rely on HTML and run in a web browser or a web view \r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-App,			#package : #PharoJs-Base-App,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWebApplication,						#isMetaSide : false					},					#name : #PjBrowserGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'I am the abstract superclass that all web-based PharoJS applications should extend (directly or indirectly). Those are apps that rely on HTML and run in a web browser or a web view \r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2434' ],		#self : OmReference [ '2435' ],		#time : DateAndTime [ '2024-03-03T08:20:51.023-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebApplication subclass: #PjFileBasedWebApp\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-App\'',				#superclassName : 'PjWebApplication',				#traitCompositionSource : '{}'			},			#name : #PjFileBasedWebApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjFileBasedWebApp class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjFileBasedWebApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjFileBasedWebApp,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-App,			#package : #PharoJs-Base-App,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2435' ],		#self : OmReference [ '2436' ],		#time : DateAndTime [ '2024-03-03T08:20:51.024-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebApplication subclass: #PjFileBasedWebApp\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-App\'',				#superclassName : 'PjWebApplication',				#traitCompositionSource : '{}'			},			#name : #PjFileBasedWebApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjFileBasedWebApp class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjFileBasedWebApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjFileBasedWebApp,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a web app that rely on a HTML file. My JS code is exported to a JS file that should be referenced by the HTML file.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-App,			#package : #PharoJs-Base-App,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a web app that rely on a HTML file. My JS code is exported to a JS file that should be referenced by the HTML file.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2436' ],		#self : OmReference [ '2437' ],		#time : DateAndTime [ '2024-03-03T08:20:51.027-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjApplication subclass: #PjNodeApplication\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjNodeGlobals\'\r\tpackage: \'PharoJs-Base-App\'',				#superclassName : 'PjApplication',				#traitCompositionSource : '{}'			},			#name : #PjNodeApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNodeApplication class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNodeApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNodeApplication,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-App,			#package : #PharoJs-Base-App,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeApplication,						#isMetaSide : false					},					#name : #PjNodeGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2437' ],		#self : OmReference [ '2438' ],		#time : DateAndTime [ '2024-03-03T08:20:51.029-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjApplication subclass: #PjNodeApplication\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjNodeGlobals\'\r\tpackage: \'PharoJs-Base-App\'',				#superclassName : 'PjApplication',				#traitCompositionSource : '{}'			},			#name : #PjNodeApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNodeApplication class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNodeApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNodeApplication,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the abstract superclass that all server-side PharoJS applications should extend (directly or indirectly)\r\rTo open playground for concrete subclasses or run tests via PharoJS test framework, please ensure node package ws (https://www.npmjs.com/package/ws) is installed in your system.\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-App,			#package : #PharoJs-Base-App,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeApplication,						#isMetaSide : false					},					#name : #PjNodeGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'I am the abstract superclass that all server-side PharoJS applications should extend (directly or indirectly)\r\rTo open playground for concrete subclasses or run tests via PharoJS test framework, please ensure node package ws (https://www.npmjs.com/package/ws) is installed in your system.\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2438' ],		#self : OmReference [ '2439' ],		#time : DateAndTime [ '2024-03-03T08:20:51.03-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjNodeApplication subclass: #PjExpressApp\r\tinstanceVariableNames: \'server port\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-App\'',				#superclassName : 'PjNodeApplication',				#traitCompositionSource : '{}'			},			#name : #PjExpressApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExpressApp,						#isMetaSide : false					},					#name : #server,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExpressApp,						#isMetaSide : false					},					#name : #port,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjExpressApp class\r\tinstanceVariableNames: \'expressConstructorFunction bodyParserFactory\'',					#traitCompositionSource : '{}'				},				#name : #'PjExpressApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjExpressApp class'						},						#name : #expressConstructorFunction,						#parent : @17					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjExpressApp class'						},						#name : #bodyParserFactory,						#parent : @17					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjExpressApp,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-App,			#package : #PharoJs-Base-App,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2439' ],		#self : OmReference [ '2440' ],		#time : DateAndTime [ '2024-03-03T08:20:51.031-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjNodeApplication subclass: #PjExpressApp\r\tinstanceVariableNames: \'server port\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-App\'',				#superclassName : 'PjNodeApplication',				#traitCompositionSource : '{}'			},			#name : #PjExpressApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExpressApp,						#isMetaSide : false					},					#name : #server,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExpressApp,						#isMetaSide : false					},					#name : #port,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjExpressApp class\r\tinstanceVariableNames: \'expressConstructorFunction bodyParserFactory\'',					#traitCompositionSource : '{}'				},				#name : #'PjExpressApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjExpressApp class'						},						#name : #expressConstructorFunction,						#parent : @17					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjExpressApp class'						},						#name : #bodyParserFactory,						#parent : @17					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjExpressApp,					#isMetaSide : false				},				#parent : @8,				#content : 'I use [expressJS](https://expressjs.com) to make a web app.\rI assume that the target folder comply with the following :\r- The folder is an npm initialized folder, i.e you have run `npm init`\r- The express node modules is installed, i.e. you should run `npm install express` in the app\'s folder\r- The [body-parser](https://expressjs.com/en/resources/middleware/body-parser.html): Parse incoming request bodies in a middleware before your handlers, available under the req.body property.\r- Optional: [serve-static](https://expressjs.com/en/resources/middleware/serve-static.html): Create a new middleware function to serve files from within a given root directory. The file to serve will be determined by combining req.url with the provided root directory. When a file is not found, instead of sending a 404 response, this module will instead call next() to move on to the next middleware, allowing for stacking and fall-backs.\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-App,			#package : #PharoJs-Base-App,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I use [expressJS](https://expressjs.com) to make a web app.\rI assume that the target folder comply with the following :\r- The folder is an npm initialized folder, i.e you have run `npm init`\r- The express node modules is installed, i.e. you should run `npm install express` in the app\'s folder\r- The [body-parser](https://expressjs.com/en/resources/middleware/body-parser.html): Parse incoming request bodies in a middleware before your handlers, available under the req.body property.\r- Optional: [serve-static](https://expressjs.com/en/resources/middleware/serve-static.html): Create a new middleware function to serve files from within a given root directory. The file to serve will be determined by combining req.url with the provided root directory. When a file is not found, instead of sending a 404 response, this module will instead call next() to move on to the next middleware, allowing for stacking and fall-backs.\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2440' ],		#self : OmReference [ '2441' ],		#time : DateAndTime [ '2024-03-03T08:20:51.032-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjNodeModulesManager\r\tinstanceVariableNames: \'modulesDict\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-App\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjNodeModulesManager,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeModulesManager,						#isMetaSide : false					},					#name : #modulesDict,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNodeModulesManager class\r\tinstanceVariableNames: \'default\'',					#traitCompositionSource : '{}'				},				#name : #'PjNodeModulesManager class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjNodeModulesManager class'						},						#name : #default,						#parent : @15					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNodeModulesManager,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-App,			#package : #PharoJs-Base-App,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2441' ],		#self : OmReference [ '2442' ],		#time : DateAndTime [ '2024-03-03T08:20:51.065-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjApplication subclass: #PjDOMApplication\r\tuses: PjTDomController\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjDomGlobals\'\r\tpackage: \'PharoJs-Base-App\'',				#superclassName : 'PjApplication',				#traitCompositionSource : 'PjTDomController'			},			#name : #PjDOMApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDOMApplication class\r\tuses: PjTDomController classTrait\r\tinstanceVariableNames: \'cssFile htmlFile\'',					#traitCompositionSource : 'PjTDomController classTrait'				},				#name : #'PjDOMApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjDOMApplication class'						},						#name : #cssFile,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjDOMApplication class'						},						#name : #htmlFile,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDOMApplication,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the abstract superclass that all client-side PharoJS applications should extend (directly or indirectly).\r\rI contain methods that Browser and PhoneGap applications have in common.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-App,			#package : #PharoJs-Base-App,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDOMApplication,						#isMetaSide : false					},					#name : #PjDomGlobals,					#parent : @8				}			]		},		#protocol : #accessing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2442' ],		#self : OmReference [ '2443' ],		#time : DateAndTime [ '2024-03-03T08:20:51.066-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjApplication subclass: #PjDOMApplication\r\tuses: PjTDomController\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjDomGlobals\'\r\tpackage: \'PharoJs-Base-App\'',				#superclassName : 'PjApplication',				#traitCompositionSource : 'PjTDomController'			},			#name : #PjDOMApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDOMApplication class\r\tuses: PjTDomController classTrait\r\tinstanceVariableNames: \'cssFile htmlFile\'',					#traitCompositionSource : 'PjTDomController classTrait'				},				#name : #'PjDOMApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjDOMApplication class'						},						#name : #cssFile,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjDOMApplication class'						},						#name : #htmlFile,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDOMApplication,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the abstract superclass that all client-side PharoJS applications should extend (directly or indirectly).\r\rI contain methods that Browser and PhoneGap applications have in common.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-App,			#package : #PharoJs-Base-App,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDOMApplication,						#isMetaSide : false					},					#name : #PjDomGlobals,					#parent : @8				}			]		},		#protocol : #visibility	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2443' ],		#self : OmReference [ '2444' ],		#time : DateAndTime [ '2024-03-03T08:20:51.066-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjApplication subclass: #PjDOMApplication\r\tuses: PjTDomController\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjDomGlobals\'\r\tpackage: \'PharoJs-Base-App\'',				#superclassName : 'PjApplication',				#traitCompositionSource : 'PjTDomController'			},			#name : #PjDOMApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDOMApplication class\r\tuses: PjTDomController classTrait\r\tinstanceVariableNames: \'cssFile htmlFile\'',					#traitCompositionSource : 'PjTDomController classTrait'				},				#name : #'PjDOMApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjDOMApplication class'						},						#name : #cssFile,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjDOMApplication class'						},						#name : #htmlFile,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDOMApplication,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the abstract superclass that all client-side PharoJS applications should extend (directly or indirectly).\r\rI contain methods that Browser and PhoneGap applications have in common.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-App,			#package : #PharoJs-Base-App,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDOMApplication,						#isMetaSide : false					},					#name : #PjDomGlobals,					#parent : @8				}			]		},		#protocol : #creating	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2444' ],		#self : OmReference [ '2445' ],		#time : DateAndTime [ '2024-03-03T08:20:51.067-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjApplication subclass: #PjDOMApplication\r\tuses: PjTDomController\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjDomGlobals\'\r\tpackage: \'PharoJs-Base-App\'',				#superclassName : 'PjApplication',				#traitCompositionSource : 'PjTDomController'			},			#name : #PjDOMApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDOMApplication class\r\tuses: PjTDomController classTrait\r\tinstanceVariableNames: \'cssFile htmlFile\'',					#traitCompositionSource : 'PjTDomController classTrait'				},				#name : #'PjDOMApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjDOMApplication class'						},						#name : #cssFile,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjDOMApplication class'						},						#name : #htmlFile,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDOMApplication,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the abstract superclass that all client-side PharoJS applications should extend (directly or indirectly).\r\rI contain methods that Browser and PhoneGap applications have in common.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-App,			#package : #PharoJs-Base-App,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDOMApplication,						#isMetaSide : false					},					#name : #PjDomGlobals,					#parent : @8				}			]		},		#protocol : #'event init'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2445' ],		#self : OmReference [ '2446' ],		#time : DateAndTime [ '2024-03-03T08:20:51.165-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTWebClientApp classTrait',				#isMetaSide : true			},			#name : #defaultAppFolderName,			#protocol : #exporting,			#sourceCode : 'defaultAppFolderName\r\r\t<pharoJsSkip>\r\t^ self serverAppClass staticFilesFolderName',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2446' ],		#self : OmReference [ '2447' ],		#time : DateAndTime [ '2024-03-03T08:20:51.165-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTWebClientApp classTrait',				#isMetaSide : true			},			#name : #defaultAppFolderParent,			#protocol : #exporting,			#sourceCode : 'defaultAppFolderParent\r\r\t<pharoJsSkip>\r\t^ self serverAppClass appFolder',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2447' ],		#self : OmReference [ '2448' ],		#time : DateAndTime [ '2024-03-03T08:20:51.166-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTWebClientApp classTrait',				#isMetaSide : true			},			#name : #serverAppClass,			#protocol : #exporting,			#sourceCode : 'serverAppClass\r\r\t<pharoJsSkip>\r\t^ self explicitRequirement ',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2448' ],		#self : OmReference [ '2449' ],		#time : DateAndTime [ '2024-03-03T08:20:51.166-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #appClass,			#protocol : #'accessing - description',			#sourceCode : 'appClass\r\t<pharoJsSkip>\r\t\r\t^ self',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2449' ],		#self : OmReference [ '2450' ],		#time : DateAndTime [ '2024-03-03T08:20:51.166-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #appClasses,			#protocol : #'accessing - description',			#sourceCode : 'appClasses\r\t<pharoJsSkip>\r\r\t^ self appClass withAllSuperclasses',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2450' ],		#self : OmReference [ '2451' ],		#time : DateAndTime [ '2024-03-03T08:20:51.166-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #appLaunchBlock,			#protocol : #'accessing - description',			#sourceCode : 'appLaunchBlock\r\t<pharoJsSkip>\r\r\t| appClass |\r\tappClass := self.\r\t^[ appClass start ] asClosedBlock',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2451' ],		#self : OmReference [ '2452' ],		#time : DateAndTime [ '2024-03-03T08:20:51.167-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #appPackages,			#protocol : #'accessing - description',			#sourceCode : 'appPackages\r\t<pharoJsSkip>\r\t\r\t^ Set new',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2452' ],		#self : OmReference [ '2453' ],		#time : DateAndTime [ '2024-03-03T08:20:51.167-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #currentInstance,			#protocol : #'instance creation',			#sourceCode : 'currentInstance\r\r\t^ currentInstance',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2453' ],		#self : OmReference [ '2454' ],		#time : DateAndTime [ '2024-03-03T08:20:51.167-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #headerLine,			#protocol : #accessing,			#sourceCode : 'headerLine\r\t<pharoJsSkip>\r\t\r\t^ nil',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2454' ],		#self : OmReference [ '2455' ],		#time : DateAndTime [ '2024-03-03T08:20:51.167-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #pharoJsSelectorPrefix,			#protocol : #accessing,			#sourceCode : 'pharoJsSelectorPrefix\r\t<pharoJsSkip>\r\t\r\t^ \'pj_\'',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2455' ],		#self : OmReference [ '2456' ],		#time : DateAndTime [ '2024-03-03T08:20:51.167-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #resetCurrentInstance,			#protocol : #'instance creation',			#sourceCode : 'resetCurrentInstance\r\t<script>\r\t\r\tcurrentInstance := nil',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2456' ],		#self : OmReference [ '2457' ],		#time : DateAndTime [ '2024-03-03T08:20:51.167-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #setupCode,			#protocol : #'accessing - description',			#sourceCode : 'setupCode\r\t<pharoJsSkip>\r\t\r\t^ \'\'',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2457' ],		#self : OmReference [ '2458' ],		#time : DateAndTime [ '2024-03-03T08:20:51.167-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #start,			#protocol : #'start-stop application',			#sourceCode : 'start\r\t<script>\r\t\r\tself whenJsReady: [ self startInstance ]',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2458' ],		#self : OmReference [ '2459' ],		#time : DateAndTime [ '2024-03-03T08:20:51.168-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #startInstance,			#protocol : #private,			#sourceCode : 'startInstance\r\t\r\tself currentInstance ifNil: [ currentInstance := self new ].\r\tself currentInstance start',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2459' ],		#self : OmReference [ '2460' ],		#time : DateAndTime [ '2024-03-03T08:20:51.168-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #stop,			#protocol : #'start-stop application',			#sourceCode : 'stop\r\t<script>\r\t\r\tself currentInstance ifNil: [ ^ self ].\r\tself currentInstance stop',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2460' ],		#self : OmReference [ '2461' ],		#time : DateAndTime [ '2024-03-03T08:20:51.168-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #'whenJsReady:',			#protocol : #private,			#sourceCode : 'whenJsReady: aBlock\r\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2461' ],		#self : OmReference [ '2462' ],		#time : DateAndTime [ '2024-03-03T08:20:51.169-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjApplication,				#isMetaSide : false			},			#name : #start,			#protocol : #start-stop,			#sourceCode : 'start',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2462' ],		#self : OmReference [ '2463' ],		#time : DateAndTime [ '2024-03-03T08:20:51.169-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjApplication,				#isMetaSide : false			},			#name : #stop,			#protocol : #start-stop,			#sourceCode : 'stop',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2463' ],		#self : OmReference [ '2464' ],		#time : DateAndTime [ '2024-03-03T08:20:51.17-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDOMApplication class',				#isMetaSide : true			},			#name : #appClasses,			#protocol : #'accessing - description',			#sourceCode : 'appClasses\r\t<pharoJsSkip>\r\t\r\t^ super appClasses, { PjHTMLCollection. PjNodeList}',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2464' ],		#self : OmReference [ '2465' ],		#time : DateAndTime [ '2024-03-03T08:20:51.17-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDOMApplication class',				#isMetaSide : true			},			#name : #isAbstract,			#protocol : #testing,			#sourceCode : 'isAbstract\r\r\t^ self = PjDOMApplication\r\t\t  ifTrue: [ ^ true ]\r\t\t  ifFalse: [ super isAbstract ]',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2465' ],		#self : OmReference [ '2466' ],		#time : DateAndTime [ '2024-03-03T08:20:51.17-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDOMApplication class',				#isMetaSide : true			},			#name : #setupCode,			#protocol : #'accessing - description',			#sourceCode : 'setupCode\r\r\t<pharoJsSkip>\r\t^ super setupCode , \'var global=global??this\'',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2466' ],		#self : OmReference [ '2467' ],		#time : DateAndTime [ '2024-03-03T08:20:51.171-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDOMApplication,				#isMetaSide : false			},			#name : #document,			#protocol : #accessing,			#sourceCode : 'document\r\tself explicitRequirement',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDOMApplication,				#isMetaSide : false			},			#name : #document,			#protocol : #accessing,			#sourceCode : 'document\r\r\t^ document',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2467' ],		#self : OmReference [ '2468' ],		#time : DateAndTime [ '2024-03-03T08:20:51.171-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDOMApplication,				#isMetaSide : false			},			#name : #start,			#protocol : #start-stop,			#sourceCode : 'start\r\tsuper start.\r\tself subscribeToDeviceEvents',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2468' ],		#self : OmReference [ '2469' ],		#time : DateAndTime [ '2024-03-03T08:20:51.172-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDOMApplication,				#isMetaSide : false			},			#name : #subscribeToDeviceEvents,			#protocol : #initialize-release,			#sourceCode : 'subscribeToDeviceEvents\r\t^self',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2469' ],		#self : OmReference [ '2470' ],		#time : DateAndTime [ '2024-03-03T08:20:51.172-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjFileBasedWebApp class',				#isMetaSide : true			},			#name : #isAbstract,			#protocol : #testing,			#sourceCode : 'isAbstract\r\r\t^ self = PjFileBasedWebApp \r\t\t\t\t\tifTrue: [ ^ true ]\r\t\t  \t\t\tifFalse: [ super isAbstract ]',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2470' ],		#self : OmReference [ '2471' ],		#time : DateAndTime [ '2024-03-03T08:20:51.172-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjWebApplication class',				#isMetaSide : true			},			#name : #isAbstract,			#protocol : #testing,			#sourceCode : 'isAbstract\r\r\t^ self = PjWebApplication\r\t\t  ifTrue: [ ^ true ]\r\t\t  ifFalse: [ super isAbstract ]',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2471' ],		#self : OmReference [ '2472' ],		#time : DateAndTime [ '2024-03-03T08:20:51.172-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjWebApplication class',				#isMetaSide : true			},			#name : #'whenJsReady:',			#protocol : #private,			#sourceCode : 'whenJsReady: aBlock\r\t"The subscription to the load event is done in JS code only to allow running applications as pharo object. This is useful during development stages when all Pharo code runs on Pharo side, while a web browser provides JS objects."\r\t<javascript: \'window.addEventListener("load", aBlock)\'>\r\t\r\t^ aBlock value',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2472' ],		#self : OmReference [ '2473' ],		#time : DateAndTime [ '2024-03-03T08:20:51.172-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExpressApp class',				#isMetaSide : true			},			#name : #isAbstract,			#protocol : #testing,			#sourceCode : 'isAbstract\r\r\t^ self = PjExpressApp \r\t\t  ifTrue: [ ^ true ]\r\t\t  ifFalse: [ super isAbstract ]',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2473' ],		#self : OmReference [ '2474' ],		#time : DateAndTime [ '2024-03-03T08:20:51.173-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExpressApp,				#isMetaSide : false			},			#name : #bodyParser,			#protocol : #accessing,			#sourceCode : 'bodyParser\r\t^self moduleNamed: \'body-parser\'',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2474' ],		#self : OmReference [ '2475' ],		#time : DateAndTime [ '2024-03-03T08:20:51.173-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExpressApp,				#isMetaSide : false			},			#name : #bodyParserMiddleware,			#protocol : #initialization,			#sourceCode : 'bodyParserMiddleware\r\r\t"More options and alternatives such as json in body-parser module doc\r\thttps://expressjs.com/en/resources/middleware/body-parser.html"\r\r\t^ self bodyParser text',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2475' ],		#self : OmReference [ '2476' ],		#time : DateAndTime [ '2024-03-03T08:20:51.173-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExpressApp,				#isMetaSide : false			},			#name : #defaultPort,			#protocol : #initialization,			#sourceCode : 'defaultPort\r\t^4321',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2476' ],		#self : OmReference [ '2477' ],		#time : DateAndTime [ '2024-03-03T08:20:51.173-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExpressApp,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\r\tsuper initialize.\r\tserver := self newServer.\r\tself port: self defaultPort.\r\tserver use: self bodyParserMiddleware',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2477' ],		#self : OmReference [ '2478' ],		#time : DateAndTime [ '2024-03-03T08:20:51.173-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExpressApp,				#isMetaSide : false			},			#name : #newServer,			#protocol : #initialization,			#sourceCode : 'newServer\r\r\t^ (self moduleNamed: \'express\') value',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2478' ],		#self : OmReference [ '2479' ],		#time : DateAndTime [ '2024-03-03T08:20:51.173-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExpressApp,				#isMetaSide : false			},			#name : #port,			#protocol : #accessing,			#sourceCode : 'port\r\r\t^ port',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2479' ],		#self : OmReference [ '2480' ],		#time : DateAndTime [ '2024-03-03T08:20:51.173-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExpressApp,				#isMetaSide : false			},			#name : #'port:',			#protocol : #accessing,			#sourceCode : 'port: anObject\r\r\tport := anObject',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2480' ],		#self : OmReference [ '2481' ],		#time : DateAndTime [ '2024-03-03T08:20:51.173-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExpressApp,				#isMetaSide : false			},			#name : #'serveStaticFilesIn:',			#protocol : #initialization,			#sourceCode : 'serveStaticFilesIn: localFolderName\r\r\t| path serveStatic |\r\tpath := self fullPathFor: localFolderName.\r\tserveStatic := self serveStaticFunction value: path.\r\tserver use: serveStatic.\r',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2481' ],		#self : OmReference [ '2482' ],		#time : DateAndTime [ '2024-03-03T08:20:51.173-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExpressApp,				#isMetaSide : false			},			#name : #serveStaticFunction,			#protocol : #accessing,			#sourceCode : 'serveStaticFunction\r\r\t^ self moduleNamed: \'serve-static\'',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2482' ],		#self : OmReference [ '2483' ],		#time : DateAndTime [ '2024-03-03T08:20:51.173-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExpressApp,				#isMetaSide : false			},			#name : #start,			#protocol : #start-stop,			#sourceCode : 'start \r\tsuper start.\r\tserver listen: self port onStartDo: [ self startUpAction ]',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2483' ],		#self : OmReference [ '2484' ],		#time : DateAndTime [ '2024-03-03T08:20:51.174-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExpressApp,				#isMetaSide : false			},			#name : #startUpAction,			#protocol : #start-stop,			#sourceCode : 'startUpAction\r\r\tconsole log:\r\t\tself className , \' web app started on port \' , self port asString',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2484' ],		#self : OmReference [ '2485' ],		#time : DateAndTime [ '2024-03-03T08:20:51.174-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNodeApplication class',				#isMetaSide : true			},			#name : #headerLine,			#protocol : #accessing,			#sourceCode : 'headerLine\r\t<pharoJsSkip>\r\t\r\t^ \'#! /usr/bin/env node\'',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2485' ],		#self : OmReference [ '2486' ],		#time : DateAndTime [ '2024-03-03T08:20:51.174-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNodeApplication class',				#isMetaSide : true			},			#name : #isAbstract,			#protocol : #testing,			#sourceCode : 'isAbstract\r\r\t^ self = PjNodeApplication \r\t\t\t\t\tifTrue: [ ^ true ]\r\t\t \t\t   ifFalse: [ super isAbstract ]',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2486' ],		#self : OmReference [ '2487' ],		#time : DateAndTime [ '2024-03-03T08:20:51.174-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNodeApplication class',				#isMetaSide : true			},			#name : #modulesFolder,			#protocol : #accessing,			#sourceCode : 'modulesFolder\r\r\t<pharoJsSkip>\r\t^ (self appFolder / self modulesFolderName) ',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2487' ],		#self : OmReference [ '2488' ],		#time : DateAndTime [ '2024-03-03T08:20:51.174-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNodeApplication class',				#isMetaSide : true			},			#name : #modulesFolderName,			#protocol : #accessing,			#sourceCode : 'modulesFolderName\r\t^\'node_modules\'',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2488' ],		#self : OmReference [ '2489' ],		#time : DateAndTime [ '2024-03-03T08:20:51.174-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNodeApplication class',				#isMetaSide : true			},			#name : #'whenJsReady:',			#protocol : #private,			#sourceCode : 'whenJsReady: aBlock\r\taBlock value',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2489' ],		#self : OmReference [ '2490' ],		#time : DateAndTime [ '2024-03-03T08:20:51.174-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeApplication,				#isMetaSide : false			},			#name : #dirName,			#protocol : #accessing,			#sourceCode : 'dirName\r\r"__dirname is an environment variable that tells you the absolute path of the directory containing the currently executing file."\r\t<javascript: \'return __dirname\'>\r\t',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2490' ],		#self : OmReference [ '2491' ],		#time : DateAndTime [ '2024-03-03T08:20:51.174-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeApplication,				#isMetaSide : false			},			#name : #'fullPathFor:',			#protocol : #accessing,			#sourceCode : 'fullPathFor: relativePathName\r\t^self pathFactory\r\t\t        join: self dirName\r\t\t        with: relativePathName',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2491' ],		#self : OmReference [ '2492' ],		#time : DateAndTime [ '2024-03-03T08:20:51.174-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeApplication,				#isMetaSide : false			},			#name : #'moduleNamed:',			#protocol : #accessing,			#sourceCode : 'moduleNamed: aString\r\t^self modulesManager moduleNamed: aString',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2492' ],		#self : OmReference [ '2493' ],		#time : DateAndTime [ '2024-03-03T08:20:51.175-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeApplication,				#isMetaSide : false			},			#name : #modulesManager,			#protocol : #accessing,			#sourceCode : 'modulesManager\r\t^PjNodeModulesManager default',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2493' ],		#self : OmReference [ '2494' ],		#time : DateAndTime [ '2024-03-03T08:20:51.175-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeApplication,				#isMetaSide : false			},			#name : #pathFactory,			#protocol : #accessing,			#sourceCode : 'pathFactory\r\r\t^ self moduleNamed: \'path\'',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2494' ],		#self : OmReference [ '2495' ],		#time : DateAndTime [ '2024-03-03T08:20:51.175-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNodeModulesManager class',				#isMetaSide : true			},			#name : #default,			#protocol : #accessing,			#sourceCode : 'default\r\t^default ifNil: [ default := self new ]',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2495' ],		#self : OmReference [ '2496' ],		#time : DateAndTime [ '2024-03-03T08:20:51.175-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNodeModulesManager class',				#isMetaSide : true			},			#name : #'moduleNamed:',			#protocol : #accessing,			#sourceCode : 'moduleNamed: aString\r\t^self default moduleNamed: aString\r',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2496' ],		#self : OmReference [ '2497' ],		#time : DateAndTime [ '2024-03-03T08:20:51.175-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNodeModulesManager class',				#isMetaSide : true			},			#name : #resetDefault,			#protocol : #accessing,			#sourceCode : 'resetDefault\r\r\tdefault := nil',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2497' ],		#self : OmReference [ '2498' ],		#time : DateAndTime [ '2024-03-03T08:20:51.175-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeModulesManager,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize \r\tsuper initialize .\r\tmodulesDict := Dictionary new',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2498' ],		#self : OmReference [ '2499' ],		#time : DateAndTime [ '2024-03-03T08:20:51.175-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeModulesManager,				#isMetaSide : false			},			#name : #'moduleNamed:',			#protocol : #accessing,			#sourceCode : 'moduleNamed: aString\r\r\t^ modulesDict\r\t\t  at: aString asSymbol\r\t\t  ifAbsentPut: [ self require: aString ]',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2499' ],		#self : OmReference [ '2500' ],		#time : DateAndTime [ '2024-03-03T08:20:51.175-05:00' ],		#trigger : OmReference [ '2426' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeModulesManager,				#isMetaSide : false			},			#name : #'require:',			#protocol : #accessing,			#sourceCode : 'require: moduleName\r\r\t^ Smalltalk require: moduleName',			#stamp : '',			#package : #PharoJs-Base-App		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:51.322-05:00' ],		#prior : OmReference [ '2500' ],		#self : OmReference [ '2501' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-Base-Exporter-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2501' ],		#self : OmReference [ '2502' ],		#time : DateAndTime [ '2024-03-03T08:20:51.354-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Exporter-Kernel,		#affectedPackageName : #PharoJs-Base-Exporter	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2502' ],		#self : OmReference [ '2503' ],		#time : DateAndTime [ '2024-03-03T08:20:51.357-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjExporter\r\tinstanceVariableNames: \'classes appClass fileName transpiler jsStream launchBlock launchArgs globalsPools\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Exporter-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjExporter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporter,						#isMetaSide : false					},					#name : #classes,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporter,						#isMetaSide : false					},					#name : #appClass,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporter,						#isMetaSide : false					},					#name : #fileName,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporter,						#isMetaSide : false					},					#name : #transpiler,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporter,						#isMetaSide : false					},					#name : #jsStream,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporter,						#isMetaSide : false					},					#name : #launchBlock,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporter,						#isMetaSide : false					},					#name : #launchArgs,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporter,						#isMetaSide : false					},					#name : #globalsPools,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjExporter class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjExporter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjExporter,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Exporter-Kernel,			#package : #PharoJs-Base-Exporter,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2503' ],		#self : OmReference [ '2504' ],		#time : DateAndTime [ '2024-03-03T08:20:51.358-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjExporter\r\tinstanceVariableNames: \'classes appClass fileName transpiler jsStream launchBlock launchArgs globalsPools\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Exporter-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjExporter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporter,						#isMetaSide : false					},					#name : #classes,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporter,						#isMetaSide : false					},					#name : #appClass,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporter,						#isMetaSide : false					},					#name : #fileName,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporter,						#isMetaSide : false					},					#name : #transpiler,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporter,						#isMetaSide : false					},					#name : #jsStream,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporter,						#isMetaSide : false					},					#name : #launchBlock,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporter,						#isMetaSide : false					},					#name : #launchArgs,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporter,						#isMetaSide : false					},					#name : #globalsPools,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjExporter class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjExporter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjExporter,					#isMetaSide : false				},				#parent : @8,				#content : 'I use PjTranspiler to export a PharoJs application to a stream.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Exporter-Kernel,			#package : #PharoJs-Base-Exporter,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I use PjTranspiler to export a PharoJs application to a stream.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2504' ],		#self : OmReference [ '2505' ],		#time : DateAndTime [ '2024-03-03T08:20:51.362-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjExporter subclass: #PjFileExporter\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Exporter-Kernel\'',				#superclassName : 'PjExporter',				#traitCompositionSource : '{}'			},			#name : #PjFileExporter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjFileExporter class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjFileExporter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjFileExporter,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Exporter-Kernel,			#package : #PharoJs-Base-Exporter,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2505' ],		#self : OmReference [ '2506' ],		#time : DateAndTime [ '2024-03-03T08:20:51.364-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjExporter subclass: #PjFileExporter\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Exporter-Kernel\'',				#superclassName : 'PjExporter',				#traitCompositionSource : '{}'			},			#name : #PjFileExporter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjFileExporter class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjFileExporter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjFileExporter,					#isMetaSide : false				},				#parent : @8,				#content : 'I use PjTranspiler to export a PharoJs application to a file.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Exporter-Kernel,			#package : #PharoJs-Base-Exporter,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I use PjTranspiler to export a PharoJs application to a file.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2506' ],		#self : OmReference [ '2507' ],		#time : DateAndTime [ '2024-03-03T08:20:51.366-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileExporter subclass: #PjTestFileExporter\r\tinstanceVariableNames: \'writeStream\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Exporter-Kernel\'',				#superclassName : 'PjFileExporter',				#traitCompositionSource : '{}'			},			#name : #PjTestFileExporter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTestFileExporter,						#isMetaSide : false					},					#name : #writeStream,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTestFileExporter class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTestFileExporter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTestFileExporter,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Exporter-Kernel,			#package : #PharoJs-Base-Exporter,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2507' ],		#self : OmReference [ '2508' ],		#time : DateAndTime [ '2024-03-03T08:20:51.367-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileExporter subclass: #PjTestFileExporter\r\tinstanceVariableNames: \'writeStream\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Exporter-Kernel\'',				#superclassName : 'PjFileExporter',				#traitCompositionSource : '{}'			},			#name : #PjTestFileExporter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTestFileExporter,						#isMetaSide : false					},					#name : #writeStream,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTestFileExporter class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTestFileExporter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTestFileExporter,					#isMetaSide : false				},				#parent : @8,				#content : 'I am used in tests.\r\rI use all the same mechanisms as PjFileExporter, except I don\'t output to a file, but rather remember it to be accessed by the contents method.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Exporter-Kernel,			#package : #PharoJs-Base-Exporter,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am used in tests.\r\rI use all the same mechanisms as PjFileExporter, except I don\'t output to a file, but rather remember it to be accessed by the contents method.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2508' ],		#self : OmReference [ '2509' ],		#time : DateAndTime [ '2024-03-03T08:20:51.37-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Exporter-Manifest,		#affectedPackageName : #PharoJs-Base-Exporter	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2509' ],		#self : OmReference [ '2510' ],		#time : DateAndTime [ '2024-03-03T08:20:51.371-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PackageManifest subclass: #ManifestPharoJsBaseExporter\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Exporter-Manifest\'',				#superclassName : 'PackageManifest',				#traitCompositionSource : '{}'			},			#name : #ManifestPharoJsBaseExporter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ManifestPharoJsBaseExporter class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ManifestPharoJsBaseExporter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestPharoJsBaseExporter,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Exporter-Manifest,			#package : #PharoJs-Base-Exporter,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2510' ],		#self : OmReference [ '2511' ],		#time : DateAndTime [ '2024-03-03T08:20:51.372-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PackageManifest subclass: #ManifestPharoJsBaseExporter\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Exporter-Manifest\'',				#superclassName : 'PackageManifest',				#traitCompositionSource : '{}'			},			#name : #ManifestPharoJsBaseExporter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ManifestPharoJsBaseExporter class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ManifestPharoJsBaseExporter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestPharoJsBaseExporter,					#isMetaSide : false				},				#parent : @8,				#content : 'I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Exporter-Manifest,			#package : #PharoJs-Base-Exporter,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2511' ],		#self : OmReference [ '2512' ],		#time : DateAndTime [ '2024-03-03T08:20:51.374-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjTranspiler subclass: #PjDependentTranspiler\r\tinstanceVariableNames: \'convertedMethods classesToConvert convertedClasses alreadyDefinedClasses alreadyInitializedClasses alreadyVariablesDeclaredClasses globalPools\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Exporter-Kernel\'',				#superclassName : 'PjTranspiler',				#traitCompositionSource : '{}'			},			#name : #PjDependentTranspiler,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDependentTranspiler,						#isMetaSide : false					},					#name : #convertedMethods,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDependentTranspiler,						#isMetaSide : false					},					#name : #classesToConvert,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDependentTranspiler,						#isMetaSide : false					},					#name : #convertedClasses,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDependentTranspiler,						#isMetaSide : false					},					#name : #alreadyDefinedClasses,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDependentTranspiler,						#isMetaSide : false					},					#name : #alreadyInitializedClasses,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDependentTranspiler,						#isMetaSide : false					},					#name : #alreadyVariablesDeclaredClasses,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDependentTranspiler,						#isMetaSide : false					},					#name : #globalPools,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDependentTranspiler class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDependentTranspiler class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDependentTranspiler,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Exporter-Kernel,			#package : #PharoJs-Base-Exporter,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2512' ],		#self : OmReference [ '2513' ],		#time : DateAndTime [ '2024-03-03T08:20:51.375-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjTranspiler subclass: #PjDependentTranspiler\r\tinstanceVariableNames: \'convertedMethods classesToConvert convertedClasses alreadyDefinedClasses alreadyInitializedClasses alreadyVariablesDeclaredClasses globalPools\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Exporter-Kernel\'',				#superclassName : 'PjTranspiler',				#traitCompositionSource : '{}'			},			#name : #PjDependentTranspiler,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDependentTranspiler,						#isMetaSide : false					},					#name : #convertedMethods,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDependentTranspiler,						#isMetaSide : false					},					#name : #classesToConvert,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDependentTranspiler,						#isMetaSide : false					},					#name : #convertedClasses,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDependentTranspiler,						#isMetaSide : false					},					#name : #alreadyDefinedClasses,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDependentTranspiler,						#isMetaSide : false					},					#name : #alreadyInitializedClasses,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDependentTranspiler,						#isMetaSide : false					},					#name : #alreadyVariablesDeclaredClasses,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDependentTranspiler,						#isMetaSide : false					},					#name : #globalPools,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDependentTranspiler class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDependentTranspiler class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDependentTranspiler,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a PjTranspiler where convertAllClasses: automatically includes any classes required by the given classes',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Exporter-Kernel,			#package : #PharoJs-Base-Exporter,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a PjTranspiler where convertAllClasses: automatically includes any classes required by the given classes',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2513' ],		#self : OmReference [ '2514' ],		#time : DateAndTime [ '2024-03-03T08:20:51.506-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExporter class',				#isMetaSide : true			},			#name : #bootstrapClasses,			#protocol : #accessing,			#sourceCode : 'bootstrapClasses\r\t^ {Object. Boolean. Number. String. UndefinedObject. BlockClosure. Error. Array. Class}',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2514' ],		#self : OmReference [ '2515' ],		#time : DateAndTime [ '2024-03-03T08:20:51.507-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExporter class',				#isMetaSide : true			},			#name : #coreClass,			#protocol : #accessing,			#sourceCode : 'coreClass\r\t^ self transpilerClass coreClass',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2515' ],		#self : OmReference [ '2516' ],		#time : DateAndTime [ '2024-03-03T08:20:51.507-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExporter class',				#isMetaSide : true			},			#name : #'newWithAppClass:',			#protocol : #'instance creation',			#sourceCode : 'newWithAppClass: aClass\r\t^self new\r\t\tinitializeWithAppClass: aClass;\r\t\tyourself',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2516' ],		#self : OmReference [ '2517' ],		#time : DateAndTime [ '2024-03-03T08:20:51.507-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExporter class',				#isMetaSide : true			},			#name : #transpilerClass,			#protocol : #accessing,			#sourceCode : 'transpilerClass\r\t^ PjDependentTranspiler',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2517' ],		#self : OmReference [ '2518' ],		#time : DateAndTime [ '2024-03-03T08:20:51.507-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'<<',			#protocol : #'writing low-level',			#sourceCode : '<< aString\r\r\tjsStream << aString',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2518' ],		#self : OmReference [ '2519' ],		#time : DateAndTime [ '2024-03-03T08:20:51.507-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'addAllClasses:',			#protocol : #adding,			#sourceCode : 'addAllClasses: someClasses\r\r\tsomeClasses do: [ :each | self addClass: each ]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2519' ],		#self : OmReference [ '2520' ],		#time : DateAndTime [ '2024-03-03T08:20:51.507-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'addAllPackages:',			#protocol : #adding,			#sourceCode : 'addAllPackages: packageNames\r\r\tpackageNames do: [ :each | self addPackage: each ]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2520' ],		#self : OmReference [ '2521' ],		#time : DateAndTime [ '2024-03-03T08:20:51.507-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'addClass:',			#protocol : #adding,			#sourceCode : 'addClass: aClass\r\r\t(self isExportable: aClass) ifFalse: [ ^ self ].\r\tself classes add: aClass',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2521' ],		#self : OmReference [ '2522' ],		#time : DateAndTime [ '2024-03-03T08:20:51.508-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'addPackage:',			#protocol : #adding,			#sourceCode : 'addPackage: packageName\r\r\t"gather all classes from the package with name packageName. This includes definedClasses\r\tand extendedClasses. As there could be a Metaclass in the list we collect only the \r\tinstanceSide of Metaclass"\r\r\tself addAllClasses:\r\t\t((self classesInPackageNamed: packageName) collect:\r\t\t\t #instanceSide) asSet',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2522' ],		#self : OmReference [ '2523' ],		#time : DateAndTime [ '2024-03-03T08:20:51.508-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #appClass,			#protocol : #accessing,			#sourceCode : 'appClass\r\r\t^ appClass',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2523' ],		#self : OmReference [ '2524' ],		#time : DateAndTime [ '2024-03-03T08:20:51.508-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #bootstrapClasses,			#protocol : #accessing,			#sourceCode : 'bootstrapClasses\r\r\t^ self class bootstrapClasses',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2524' ],		#self : OmReference [ '2525' ],		#time : DateAndTime [ '2024-03-03T08:20:51.508-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #classes,			#protocol : #accessing,			#sourceCode : 'classes\r\r\t^ classes',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2525' ],		#self : OmReference [ '2526' ],		#time : DateAndTime [ '2024-03-03T08:20:51.508-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'classesInPackageNamed:',			#protocol : #adding,			#sourceCode : 'classesInPackageNamed: packageName\r\r\t| package tagName tag |\r\tpackage := RPackage organizer packageMatchingExtensionName:\r\t\t           packageName.\r\tpackageName == packageName ifTrue: [ ^ package classes ].\rtagName := packageName allButFirst:  package name size + 1.\rtag := package classTagNamed: tagName.\r^tag classes.',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2526' ],		#self : OmReference [ '2527' ],		#time : DateAndTime [ '2024-03-03T08:20:51.509-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'convertAllClassesToJs:',			#protocol : #loading,			#sourceCode : 'convertAllClassesToJs: someClasses\r\r\tsomeClasses do: [ :aClass | self invalidateClass: aClass ].\r\tself addAllClasses: someClasses.\r\t^ self transpiler onTempStreamDo: [ \r\t\t  self transpiler\r\t\t\t  convertAllClasses: self nonBootstrapClasses\r\t\t\t  writeDnu: true ]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2527' ],		#self : OmReference [ '2528' ],		#time : DateAndTime [ '2024-03-03T08:20:51.509-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #copyMethodsSelector,			#protocol : #writing,			#sourceCode : 'copyMethodsSelector\r\r\t^ #copyMethods',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2528' ],		#self : OmReference [ '2529' ],		#time : DateAndTime [ '2024-03-03T08:20:51.509-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #coreClass,			#protocol : #accessing,			#sourceCode : 'coreClass\r\r\t^ self class coreClass',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2529' ],		#self : OmReference [ '2530' ],		#time : DateAndTime [ '2024-03-03T08:20:51.509-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #cr,			#protocol : #'writing low-level',			#sourceCode : 'cr\r\r\tjsStream lf',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2530' ],		#self : OmReference [ '2531' ],		#time : DateAndTime [ '2024-03-03T08:20:51.509-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #crtab,			#protocol : #'writing low-level',			#sourceCode : 'crtab\r\r\tjsStream cr; tab',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2531' ],		#self : OmReference [ '2532' ],		#time : DateAndTime [ '2024-03-03T08:20:51.509-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #dnuHook,			#protocol : #writing,			#sourceCode : 'dnuHook\r\r\t^ [ \r\t  self writeGlobalsPolyfills: nil.\r\t  true ]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2532' ],		#self : OmReference [ '2533' ],		#time : DateAndTime [ '2024-03-03T08:20:51.509-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #fixInheritanceLinkOfMethodDefinition,			#protocol : #'writing core',			#sourceCode : 'fixInheritanceLinkOfMethodDefinition\r\t^\'function(aClass) {\r    if (!aClass.hasOwnProperty("subclasses")) {\r        aClass.subclasses = [];\r    }\r    let currentSuperclass;\r    if (aClass == Object) {\r        currentSuperclass = undefined;\r    } else {\r        currentSuperclass = aClass.__proto__;\r    }\r    if (currentSuperclass == undefined) { return this; }\r    if (!currentSuperclass.hasOwnProperty("subclasses")) {\r        return currentSuperclass.subclasses = [aClass];\r    }\r    if (currentSuperclass.subclasses.includes(aClass)) { return; }\r    currentSuperclass.subclasses.push(aClass);\r}\'',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2533' ],		#self : OmReference [ '2534' ],		#time : DateAndTime [ '2024-03-03T08:20:51.509-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #fixInheritanceLinkOfSelector,			#protocol : #'writing core',			#sourceCode : 'fixInheritanceLinkOfSelector\r\r\t^ #fixInheritanceLinkOf',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2534' ],		#self : OmReference [ '2535' ],		#time : DateAndTime [ '2024-03-03T08:20:51.51-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #fixMetaclassOfMethodDefinition,			#protocol : #'writing core',			#sourceCode : 'fixMetaclassOfMethodDefinition\r\t^\'function(aClass)\r{\r  if (aClass === this) { return this; }\r  if (aClass === Object) {\r    return Object.setPrototypeOf(aClass, PjClass.prototype);\r  }\r  if (Object.getPrototypeOf(aClass) === Function.prototype){ \r    return Object.setPrototypeOf(aClass, Object);\r  }\r}\'',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2535' ],		#self : OmReference [ '2536' ],		#time : DateAndTime [ '2024-03-03T08:20:51.51-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #fixMetaclassOfSelector,			#protocol : #'writing core',			#sourceCode : 'fixMetaclassOfSelector\r\r\t^ #fixMetaclassOf',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2536' ],		#self : OmReference [ '2537' ],		#time : DateAndTime [ '2024-03-03T08:20:51.51-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #headerLine,			#protocol : #accessing,			#sourceCode : 'headerLine\r\r\t^ self appClass headerLine',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2537' ],		#self : OmReference [ '2538' ],		#time : DateAndTime [ '2024-03-03T08:20:51.51-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\r\tsuper initialize.\r\tclasses := Set new.\r\tglobalsPools := Set new.\r\tself transpiler: self transpilerClass new.\r\tself transpiler addAllOptionalConversions "Except: 0 to: 1/2".\r\tself setUpForPolyfill',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2538' ],		#self : OmReference [ '2539' ],		#time : DateAndTime [ '2024-03-03T08:20:51.51-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'initializeWithAppClass:',			#protocol : #accessing,			#sourceCode : 'initializeWithAppClass: aClass\r\r\tappClass := aClass.\r\ttranspiler pharoJsSelectorPrefix: aClass pharoJsSelectorPrefix.\r\tself addAllClasses: appClass appClasses.\r\tself addAllPackages: appClass appPackages',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2539' ],		#self : OmReference [ '2540' ],		#time : DateAndTime [ '2024-03-03T08:20:51.51-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #installAllAliasesSelector,			#protocol : #writing,			#sourceCode : 'installAllAliasesSelector\r\t^PjTranspiler installAllAliasesSelector',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2540' ],		#self : OmReference [ '2541' ],		#time : DateAndTime [ '2024-03-03T08:20:51.51-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #installClassSelector,			#protocol : #'writing core',			#sourceCode : 'installClassSelector\r\t^self transpiler installClassSelector',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2541' ],		#self : OmReference [ '2542' ],		#time : DateAndTime [ '2024-03-03T08:20:51.51-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #installJsClassPlaceholderSelector,			#protocol : #writing,			#sourceCode : 'installJsClassPlaceholderSelector\r\t^self transpiler installJsClassPlaceholderSelector',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2542' ],		#self : OmReference [ '2543' ],		#time : DateAndTime [ '2024-03-03T08:20:51.51-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'isExportable:',			#protocol : #testing,			#sourceCode : 'isExportable: aClass\r\r\taClass ifNil: [ ^ false ].\r\taClass isTrait ifTrue: [ ^false ].\r\taClass isTestCase ifTrue: [ ^false ].\r\t(aClass includesBehavior: TestResource) ifTrue: [ ^false ].\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2543' ],		#self : OmReference [ '2544' ],		#time : DateAndTime [ '2024-03-03T08:20:51.511-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #javascriptCode,			#protocol : #'test support',			#sourceCode : 'javascriptCode\r\r\t^ String streamContents: [: aStream | self writeJsCodeOn: aStream]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2544' ],		#self : OmReference [ '2545' ],		#time : DateAndTime [ '2024-03-03T08:20:51.511-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'jsStream:do:',			#protocol : #'writing low-level',			#sourceCode : 'jsStream: aStream do: aBlock\r\r\t| savedStream |\r\tsavedStream := jsStream.\r\tjsStream := aStream.\r\t[\r\t\taBlock value\r\t] ensure: [ jsStream := savedStream ]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2545' ],		#self : OmReference [ '2546' ],		#time : DateAndTime [ '2024-03-03T08:20:51.511-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #launchBlock,			#protocol : #accessing,			#sourceCode : 'launchBlock\r\r\t^ launchBlock ifNil: [ self appClass appLaunchBlock ]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2546' ],		#self : OmReference [ '2547' ],		#time : DateAndTime [ '2024-03-03T08:20:51.511-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'launchBlock:',			#protocol : #accessing,			#sourceCode : 'launchBlock: aBlock\r\r\tlaunchBlock := aBlock',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2547' ],		#self : OmReference [ '2548' ],		#time : DateAndTime [ '2024-03-03T08:20:51.511-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'nextPut:',			#protocol : #'writing low-level',			#sourceCode : 'nextPut: aCharacter\r\r\tjsStream nextPut: aCharacter',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2548' ],		#self : OmReference [ '2549' ],		#time : DateAndTime [ '2024-03-03T08:20:51.511-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'nextPutAll:',			#protocol : #'writing low-level',			#sourceCode : 'nextPutAll: aString\r\r\tjsStream nextPutAll: aString',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2549' ],		#self : OmReference [ '2550' ],		#time : DateAndTime [ '2024-03-03T08:20:51.511-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #nonBootstrapClasses,			#protocol : #writing,			#sourceCode : 'nonBootstrapClasses\r\r\t| actualBootstrapClasses |\r\tactualBootstrapClasses := self bootstrapClasses asSet collect: #classToUseForJsConversion.\r\t^self classes reject: [ :setClass | \r\t\t\tactualBootstrapClasses includes: setClass classToUseForJsConversion]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2550' ],		#self : OmReference [ '2551' ],		#time : DateAndTime [ '2024-03-03T08:20:51.511-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #pharoJsSelectorPrefix,			#protocol : #writing,			#sourceCode : 'pharoJsSelectorPrefix\r\r\t^ self transpiler pharoJsSelectorPrefix',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2551' ],		#self : OmReference [ '2552' ],		#time : DateAndTime [ '2024-03-03T08:20:51.511-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #setUpForPolyfill,			#protocol : #initialize-release,			#sourceCode : 'setUpForPolyfill\r\r\tself transpiler beforeCodeOutputHook: [: pools | self writeGlobalsPolyfills: pools]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2552' ],		#self : OmReference [ '2553' ],		#time : DateAndTime [ '2024-03-03T08:20:51.512-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #setupCode,			#protocol : #accessing,			#sourceCode : 'setupCode\r\r\t^ self appClass setupCode',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2553' ],		#self : OmReference [ '2554' ],		#time : DateAndTime [ '2024-03-03T08:20:51.512-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #space,			#protocol : #writing,			#sourceCode : 'space\r\tjsStream space',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2554' ],		#self : OmReference [ '2555' ],		#time : DateAndTime [ '2024-03-03T08:20:51.512-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #transpiler,			#protocol : #accessing,			#sourceCode : 'transpiler\r\r\t^ transpiler',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2555' ],		#self : OmReference [ '2556' ],		#time : DateAndTime [ '2024-03-03T08:20:51.512-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'transpiler:',			#protocol : #accessing,			#sourceCode : 'transpiler: aTranspiler\r\r\ttranspiler := aTranspiler.\r\ttranspiler onStream: self',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2556' ],		#self : OmReference [ '2557' ],		#time : DateAndTime [ '2024-03-03T08:20:51.512-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #transpilerClass,			#protocol : #accessing,			#sourceCode : 'transpilerClass\r\r\t^ self class transpilerClass',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2557' ],		#self : OmReference [ '2558' ],		#time : DateAndTime [ '2024-03-03T08:20:51.512-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #writeCore,			#protocol : #'writing core',			#sourceCode : 'writeCore\r\r\tself writeCoreObject.\r\tself writeCoreClass.\r\tself transpiler\r\t\twriteNameForClass: PjCore;\r\t\t<< \'.theClassClass=\';\r\t\twriteNameForClass: PjClass;\r\t\t<< $;;\r\t\tcr;\r\t\twriteNameForClass: PjCore;\r\t\t<< $.;\r\t\t<< transpiler pharoJsSelectorPrefix;\r\t\t<< \'initializeCore();\';\r\t\tcr',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2558' ],		#self : OmReference [ '2559' ],		#time : DateAndTime [ '2024-03-03T08:20:51.512-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #writeCoreClass,			#protocol : #'writing core',			#sourceCode : 'writeCoreClass\r\r\tself transpiler\r\t\tconvertMethodAsts: PjClass newClasses: Set new;\r\t\twriteClassDefinitionOf: PjClass',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2559' ],		#self : OmReference [ '2560' ],		#time : DateAndTime [ '2024-03-03T08:20:51.512-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #writeCoreObject,			#protocol : #'writing core',			#sourceCode : 'writeCoreObject\r\r\tself writeCoreObjectCreation.\r\tself writeCoreObjectBasicMethods.\r\tself transpiler\r\t\tconvertMethodAsts: PjCore newClasses: Set new;\r\t\twriteClassDefinitionOf: PjCore',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2560' ],		#self : OmReference [ '2561' ],		#time : DateAndTime [ '2024-03-03T08:20:51.512-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #writeCoreObjectBasicMethods,			#protocol : #'writing core',			#sourceCode : 'writeCoreObjectBasicMethods\r\r\tself\r\t\twriteCoreObjectCopyMethods;\r\t\twriteFixMetaclassOfMethod;\r\t\twriteFixInheritanceLinkOfMethod;\r\t\twriteCoreObjectInstallClassMethod;\r\t\twriteCoreObjectInstallClassExtensionMethod;\r\t\twriteCoreObjectInstallAliasesMethods',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2561' ],		#self : OmReference [ '2562' ],		#time : DateAndTime [ '2024-03-03T08:20:51.512-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #writeCoreObjectCopyMethods,			#protocol : #'writing core',			#sourceCode : 'writeCoreObjectCopyMethods\r\r\tself transpiler\r\t\tcr;\r\t\twriteNameForClass: PjCore;\r\t\t<< $.;\r\t\t<< self copyMethodsSelector;\r\t\t<< \'=function(source,target){\r    let propertyNames = Object.getOwnPropertyNames(source).filter((each)=>\r\t\t\t/\\b\';\r\t\t<< self pharoJsSelectorPrefix;\r\t\t<< \'/.test(each)\r\t  ); \r    propertyNames.forEach(\'.\r\tself writePropertyDefinitionFunctionFrom: \'source\' to: \'target\'.\r\tself transpiler\r\t\t<< \');\r}\';\r\t\tcr',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2562' ],		#self : OmReference [ '2563' ],		#time : DateAndTime [ '2024-03-03T08:20:51.513-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #writeCoreObjectCreation,			#protocol : #'writing core',			#sourceCode : 'writeCoreObjectCreation\r\r\tself transpiler\r\t\t<< \'global.\';\r\t\twriteNameForClass: PjCore;\r\t\t<< \'=global.\';\r\t\twriteNameForClass: PjCore;\r\t\t<< \'??class extends Object{};\'',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2563' ],		#self : OmReference [ '2564' ],		#time : DateAndTime [ '2024-03-03T08:20:51.513-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #writeCoreObjectInstallAliasesMethods,			#protocol : #'writing core',			#sourceCode : 'writeCoreObjectInstallAliasesMethods\r\r\t| coreClassName |\r\tcoreClassName := PjCore instanceSide nameToUseForJsConversion.\r\tself transpiler\r\t\t<< coreClassName;\r\t\t<<\r\t\t\t\'.installSelectorAliases=function(aliases, selector, target){\r\t\taliases.forEach(\'.\r\tself\r\t\twritePropertyDefinitionFunctionFrom: \'target\'\r\t\tat: \'selector\'\r\t\tto: \'target\'.\r\tself transpiler\r\t\t<< \');\r\t}\';\r\t\tcr;\r\t\t<< coreClassName;\r\t\t<< \'.installAliasesFromDict=function(aliasesDict, target){\r\t\tfor(let key of Object.getOwnPropertyNames(aliasesDict)){\';\r\t\t<< coreClassName;\r\t\t<< \'.installSelectorAliases(aliasesDict[key], key, target);\r\t}}\';\r\t\tcr;\r\t\t<< coreClassName;\r\t\t<< $.;\r\t\t<< self installAllAliasesSelector;\r\t\t<<\r\t\t\t\'=function(instanceSideAliasesDict, classSideAliasesDict, targetClass){\';\r\t\tcr;\r\t\t<< coreClassName;\r\t\t<<\r\t\t\t\'.installAliasesFromDict(instanceSideAliasesDict, targetClass.prototype);\';\r\t\tcr;\r\t\t<< coreClassName;\r\t\t<< \'.installAliasesFromDict(classSideAliasesDict, targetClass);\r\t}\';\r\t\tcr',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2564' ],		#self : OmReference [ '2565' ],		#time : DateAndTime [ '2024-03-03T08:20:51.513-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #writeCoreObjectInstallClassExtensionMethod,			#protocol : #'writing core',			#sourceCode : 'writeCoreObjectInstallClassExtensionMethod\r\r\tself transpiler\r\t\twriteNameForClass: PjCore;\r\t\t<< $.;\r\t\t<< self installJsClassPlaceholderSelector;\r\t\t<<\r\t\t\t\'=function(extensionClass,targetClass,instanceSideAliasesDict,classSideAliasesDict){\';\r\t\tcrtab;\r\t\t<< \'this.\';\r\t\t<< self copyMethodsSelector;\r\t\t<< \'(extensionClass.prototype, targetClass.prototype);\';\r\t\tcrtab;\r\t\t<< \'this.\';\r\t\t<< self copyMethodsSelector;\r\t\t<< \'(extensionClass, targetClass);\';\r\t\tcrtab;\r\t\t<< \'targetClass.\';\r\t\twriteClassVarsPoolName;\r\t\t<< \'=\';\r\t\t<< \'targetClass.\';\r\t\twriteClassVarsPoolName;\r\t\t<< \'??{};\';\r\t\tcrtab;\r\t\t<< \'Object.assign(targetClass.\';\r\t\twriteClassVarsPoolName;\r\t\t<< \', extensionClass.\';\r\t\twriteClassVarsPoolName;\r\t\t<< \');\';\r\t\tcrtab;\r\t\t<< \'this.\';\r\t\t<< self installAllAliasesSelector;\r\t\t<<\r\t\t\t\'(instanceSideAliasesDict, classSideAliasesDict, targetClass);\';\r\t\tcrtab;\r\t\t<< \'this.\';\r\t\t<< self fixMetaclassOfSelector;\r\t\t<< \'(targetClass);\';\r\t\tcrtab;\r\t\t<< \'this.\';\r\t\t<< self fixInheritanceLinkOfSelector;\r\t\t<< \'(targetClass);\';\r\t\tcrtab;\r\t\t<< \'this[targetClass.name]=targetClass;\';\r\t\tcrtab;\r\t\t<< \'global[targetClass.name]=targetClass;\';\r\t\tcr;\r\t\t<< $};\r\t\tcr',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2565' ],		#self : OmReference [ '2566' ],		#time : DateAndTime [ '2024-03-03T08:20:51.513-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #writeCoreObjectInstallClassMethod,			#protocol : #'writing core',			#sourceCode : 'writeCoreObjectInstallClassMethod\r\r\tself transpiler\r\t\twriteNameForClass: PjCore;\r\t\t<< $.;\r\t\t<< self installClassSelector;\r\t\t<<\r\t\t\t\'=function(newClass,instanceSideAliasesDict,classSideAliasesDict){\';\r\t\tcrtab;\r\t\t<< \'this.\';\r\t\t<< self installAllAliasesSelector;\r\t\t<<\r\t\t\t\'(instanceSideAliasesDict, classSideAliasesDict, newClass, newClass);\';\r\t\tcrtab;\r\t\t<< \'this.\';\r\t\t<< self fixMetaclassOfSelector;\r\t\t<< \'(newClass);\';\r\t\tcrtab;\r\t\t<< \'this.\';\r\t\t<< self fixInheritanceLinkOfSelector;\r\t\t<< \'(newClass);\';\r\t\tcrtab;\r\t\t<< \'this[newClass.name]=newClass;\';\r\t\tcrtab;\r\t\t<< \'global[newClass.name]=newClass;\';\r\t\tcr;\r\t\t<< $};\r\t\tcr',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2566' ],		#self : OmReference [ '2567' ],		#time : DateAndTime [ '2024-03-03T08:20:51.513-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #writeFixInheritanceLinkOfMethod,			#protocol : #'writing core',			#sourceCode : 'writeFixInheritanceLinkOfMethod\r\r\tself transpiler\r\t\twriteNameForClass: PjCore;\r\t\t<< $.;\r\t\t<< self fixInheritanceLinkOfSelector;\r\t\t<< $=;\r\t\t<< self fixInheritanceLinkOfMethodDefinition;\r\t\t<< $; ;\r\t\tcr',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2567' ],		#self : OmReference [ '2568' ],		#time : DateAndTime [ '2024-03-03T08:20:51.513-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #writeFixMetaclassOfMethod,			#protocol : #'writing core',			#sourceCode : 'writeFixMetaclassOfMethod\r\r\tself transpiler\r\t\twriteNameForClass: PjCore;\r\t\t<< $.;\r\t\t<< self fixMetaclassOfSelector;\r\t\t<< $=;\r\t\t<< self fixMetaclassOfMethodDefinition;\r\t\t<< $; ;\r\t\tcr',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2568' ],		#self : OmReference [ '2569' ],		#time : DateAndTime [ '2024-03-03T08:20:51.513-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'writeGlobalsPolyfills:',			#protocol : #writing,			#sourceCode : 'writeGlobalsPolyfills: pools\r\r\tpools do: [ :pool | \r\t\tself appClass\r\t\t\tpolyfill: pool\r\t\t\twithTranspiler: self transpiler\r\t\t\tunlessIn: globalsPools ]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2569' ],		#self : OmReference [ '2570' ],		#time : DateAndTime [ '2024-03-03T08:20:51.513-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #writeJsCode,			#protocol : #writing,			#sourceCode : 'writeJsCode\r\r\tself appClass beforeExportApp.\r\tself writeJsCoreAndBootstrap.\r\tself writeNonBootstrapClasses.\r\tself writeLaunchCode.\r\tself appClass afterExportApp',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2570' ],		#self : OmReference [ '2571' ],		#time : DateAndTime [ '2024-03-03T08:20:51.514-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'writeJsCodeOn:',			#protocol : #writing,			#sourceCode : 'writeJsCodeOn: aStream\r\r\tself jsStream: aStream do: [ self writeJsCode ]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2571' ],		#self : OmReference [ '2572' ],		#time : DateAndTime [ '2024-03-03T08:20:51.514-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #writeJsCoreAndBootstrap,			#protocol : #writing,			#sourceCode : 'writeJsCoreAndBootstrap\r\r\tself nextPutAll: self setupCode; cr.\r\tself writeCore.\r\tself transpiler convertAllClasses: self bootstrapClasses writeDnu: false',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2572' ],		#self : OmReference [ '2573' ],		#time : DateAndTime [ '2024-03-03T08:20:51.514-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #writeLaunchCode,			#protocol : #writing,			#sourceCode : 'writeLaunchCode\r\r\tself transpiler convertAndWriteClosedBlock: self launchBlock',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2573' ],		#self : OmReference [ '2574' ],		#time : DateAndTime [ '2024-03-03T08:20:51.514-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #writeNonBootstrapClasses,			#protocol : #writing,			#sourceCode : 'writeNonBootstrapClasses\r\r\tself transpiler\r\t\tconvertAllClasses: self nonBootstrapClasses\r\t\twriteDnu: true',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2574' ],		#self : OmReference [ '2575' ],		#time : DateAndTime [ '2024-03-03T08:20:51.514-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'writePropertyDefinitionFunctionFrom:at:to:',			#protocol : #'writing core',			#sourceCode : 'writePropertyDefinitionFunctionFrom: sourceString at: sourceSelector to: targetString\r\r\tself\r\t\twritePropertyDefinitionFunctionFrom: sourceString\r\t\tat: sourceSelector \r\t\tto: targetString\r\t\tat: \'name\'',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2575' ],		#self : OmReference [ '2576' ],		#time : DateAndTime [ '2024-03-03T08:20:51.514-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'writePropertyDefinitionFunctionFrom:at:to:at:',			#protocol : #'writing core',			#sourceCode : 'writePropertyDefinitionFunctionFrom: sourceString at: sourceSelector to: targetString at: targetSelector\r\r\tself transpiler\r\t\t<< \'(\';\r\t\t<< targetSelector;\r\t\t<< \')=>Object.defineProperty(\';\r\t\t<< targetString;\r\t\t<< \',\';\r\t\t<< targetSelector;\r\t\t<< \',{value:\';\r\t\t<< sourceString;\r\t\t<< \'[\';\r\t\t<< sourceSelector;\r\t\t<< \'],configurable:true})\'',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2576' ],		#self : OmReference [ '2577' ],		#time : DateAndTime [ '2024-03-03T08:20:51.514-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'writePropertyDefinitionFunctionFrom:to:',			#protocol : #'writing core',			#sourceCode : 'writePropertyDefinitionFunctionFrom: sourceString to: targetString\r\r\tself writePropertyDefinitionFunctionFrom: sourceString at: \'name\' to: targetString at: \'name\'',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2577' ],		#self : OmReference [ '2578' ],		#time : DateAndTime [ '2024-03-03T08:20:51.514-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjFileExporter class',				#isMetaSide : true			},			#name : #'exportApp:',			#protocol : #exporting,			#sourceCode : 'exportApp: aClass\r\t^ (self newWithAppClass: aClass) writeFiles',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2578' ],		#self : OmReference [ '2579' ],		#time : DateAndTime [ '2024-03-03T08:20:51.515-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFileExporter,				#isMetaSide : false			},			#name : #'createFileNamed:startingWith:and:ifEditableDo:',			#protocol : #files,			#sourceCode : 'createFileNamed: someFileName startingWith: beginning and: string ifEditableDo: aBlock\r\r\t| fileReference |\r\tfileReference := self fileReferenceFrom: someFileName.\r\tfileReference exists ifTrue: [ \r\t\tself delete: fileReference ifMatches: string ].\r\tself\r\t\twriteInto: fileReference\r\t\tmatch: string\r\t\tstartingWith: beginning\r\t\tdo: aBlock',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2579' ],		#self : OmReference [ '2580' ],		#time : DateAndTime [ '2024-03-03T08:20:51.515-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFileExporter,				#isMetaSide : false			},			#name : #'delete:ifMatches:',			#protocol : #files,			#sourceCode : 'delete: fileReference ifMatches: string\r\r\t| fileStream first100 match |\r\tfileReference exists ifFalse: [ ^ self ].\r\tfileStream := fileReference openForRead.\r\tfirst100 := fileStream next: 100 into: (String new: 100).\r\tfileStream close.\r\tmatch := self matchFrom: string.\r\t(first100 = \'\' or: [ \r\t\t (first100 findString: match startingAt: 1 caseSensitive: true) > 0 ]) \r\t\tifTrue: [ ^ self ].\r\tError signal:\r\t\tfileReference pathString , \' exists and does not contain "\' , string\r\t\t, \'" in the first 100 bytes\'',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2580' ],		#self : OmReference [ '2581' ],		#time : DateAndTime [ '2024-03-03T08:20:51.515-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFileExporter,				#isMetaSide : false			},			#name : #fileName,			#protocol : #files,			#sourceCode : 'fileName\r\r\t^ self appClass appFullJsFileName',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2581' ],		#self : OmReference [ '2582' ],		#time : DateAndTime [ '2024-03-03T08:20:51.515-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFileExporter,				#isMetaSide : false			},			#name : #'fileReferenceFrom:',			#protocol : #files,			#sourceCode : 'fileReferenceFrom: someFileName\r\r\t^ someFileName asFileReference',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2582' ],		#self : OmReference [ '2583' ],		#time : DateAndTime [ '2024-03-03T08:20:51.515-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFileExporter,				#isMetaSide : false			},			#name : #'matchFrom:',			#protocol : #files,			#sourceCode : 'matchFrom: string\r\r\t^ string , \' *** DO NOT EDIT ***\'',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2583' ],		#self : OmReference [ '2584' ],		#time : DateAndTime [ '2024-03-03T08:20:51.515-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFileExporter,				#isMetaSide : false			},			#name : #writeFiles,			#protocol : #files,			#sourceCode : 'writeFiles\r\r\tself writeJavascriptFileNamed: self fileName',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2584' ],		#self : OmReference [ '2585' ],		#time : DateAndTime [ '2024-03-03T08:20:51.515-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFileExporter,				#isMetaSide : false			},			#name : #'writeInto:match:startingWith:do:',			#protocol : #files,			#sourceCode : 'writeInto: fileReference match: string startingWith: beginning  do: aBlock\r\r\t| fileStream |\r\tfileStream := fileReference writeStream.\r\tself\r\t\tjsStream: fileStream\r\t\tdo: [ beginning\r\t\t\t\tifNotNil: [ self\r\t\t\t\t\t\tnextPutAll: beginning;\r\t\t\t\t\t\tcr ].\r\t\t\tself\r\t\t\t\tnextPutAll: (self matchFrom: string);\r\t\t\t\tnextPutAll: \' on \';\r\t\t\t\tnextPutAll: DateAndTime now asString.\r\t\t\tOSPlatform current environment at: \'LOGNAME\' ifPresent: [: name |\r\t\t\t\tself nextPutAll: \' by \';nextPutAll: name\r\t\t\t] ifAbsent: [\r\t\t\t\tOSPlatform current environment at: \'USER\' ifPresent: [: name |\r\t\t\t\t\tself nextPutAll: \' by \';nextPutAll: name\r\t\t\t\t] ifAbsent: [\r\t\t\t\t\tOSPlatform current environment at: \'USERNAME\' ifPresent: [: name |\r\t\t\t\t\t\tself nextPutAll: \' by \';nextPutAll: name]]].\r\t\t\tself cr.\r\t\t\tself nextPutAll: \'\'\'use strict\'\';\';cr.\r\t\t\taBlock value: fileStream ].\r\tfileStream close',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2585' ],		#self : OmReference [ '2586' ],		#time : DateAndTime [ '2024-03-03T08:20:51.515-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFileExporter,				#isMetaSide : false			},			#name : #'writeJavascriptFileNamed:',			#protocol : #files,			#sourceCode : 'writeJavascriptFileNamed: aFileName\r\t"Delete file first, because Windows can\'t open it for writing later when the file is open."\r\t\r\taFileName ifNotNil: [aFileName resolve deleteIfAbsent: [ ]].\r\tself\r\t\tcreateFileNamed: aFileName\r\t\tstartingWith: self headerLine\r\t\tand: \'// generated by PharoJS\'\r\t\tifEditableDo: [ :fileStream | self writeJsCodeOn: fileStream]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2586' ],		#self : OmReference [ '2587' ],		#time : DateAndTime [ '2024-03-03T08:20:51.515-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTestFileExporter,				#isMetaSide : false			},			#name : #contents,			#protocol : #accessing,			#sourceCode : 'contents\r\r\t^ self writeStream contents',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2587' ],		#self : OmReference [ '2588' ],		#time : DateAndTime [ '2024-03-03T08:20:51.516-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTestFileExporter,				#isMetaSide : false			},			#name : #exists,			#protocol : #testing,			#sourceCode : 'exists\r\t^false',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2588' ],		#self : OmReference [ '2589' ],		#time : DateAndTime [ '2024-03-03T08:20:51.516-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTestFileExporter,				#isMetaSide : false			},			#name : #fileName,			#protocol : #files,			#sourceCode : 'fileName\r\t^ nil',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2589' ],		#self : OmReference [ '2590' ],		#time : DateAndTime [ '2024-03-03T08:20:51.516-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTestFileExporter,				#isMetaSide : false			},			#name : #'fileReferenceFrom:',			#protocol : #accessing,			#sourceCode : 'fileReferenceFrom: someFileName\r\r\t^ self',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2590' ],		#self : OmReference [ '2591' ],		#time : DateAndTime [ '2024-03-03T08:20:51.516-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTestFileExporter,				#isMetaSide : false			},			#name : #writeStream,			#protocol : #accessing,			#sourceCode : 'writeStream\r\r\t^ writeStream ifNil: [ writeStream := WriteStream with: \'\' ]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2591' ],		#self : OmReference [ '2592' ],		#time : DateAndTime [ '2024-03-03T08:20:51.517-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #afterExportApp,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'afterExportApp\r\r\t<pharoJsSkip>\r\tself inform: \'DONE exporting JS code for \' , self name',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2592' ],		#self : OmReference [ '2593' ],		#time : DateAndTime [ '2024-03-03T08:20:51.517-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #appFolder,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'appFolder\r\t<pharoJsSkip>\r\t\r\tappFolder ifNil: [ \r\t\tappFolder := [ self defaultAppFolder ]\r\t\t\t             on: Exception\r\t\t\t             do: [ nil ] ].\r\tself ifInvalidFolder: appFolder do: [ self setUpAppFolder ].\r\t^ appFolder',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2593' ],		#self : OmReference [ '2594' ],		#time : DateAndTime [ '2024-03-03T08:20:51.52-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #'appFolder:',			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'appFolder: anObject\r\t<pharoJsSkip>\r\t\r\tappFolder := anObject',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2594' ],		#self : OmReference [ '2595' ],		#time : DateAndTime [ '2024-03-03T08:20:51.521-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #appFullJsFileName,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'appFullJsFileName\r\t<pharoJsSkip>\r\t\r\t^ self appFullJsFolderPath / self appJsFileName',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2595' ],		#self : OmReference [ '2596' ],		#time : DateAndTime [ '2024-03-03T08:20:51.521-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #appFullJsFolderPath,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'appFullJsFolderPath\r\t<pharoJsSkip>\r\t\r\tself appJsSubFolder ifNotNil: [: subfolder|\r\t\t^self appFolder / subfolder \r\t].\r\t^self appFolder',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2596' ],		#self : OmReference [ '2597' ],		#time : DateAndTime [ '2024-03-03T08:20:51.522-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #appJsFileName,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'appJsFileName\r\t<pharoJsSkip>\r\t\r\t^ \'index.js\'',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2597' ],		#self : OmReference [ '2598' ],		#time : DateAndTime [ '2024-03-03T08:20:51.523-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #appJsSubFolder,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'appJsSubFolder\r\t<pharoJsSkip>\r\t"Subclass might return, e.g. \'js\' if you want the javascript to be in the js sub-directory. \r\tUseful, when you need to access the app/project folder that is different from the JS folder as with PhoneGap."\r\t\r\t^ nil',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2598' ],		#self : OmReference [ '2599' ],		#time : DateAndTime [ '2024-03-03T08:20:51.523-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #beforeExportApp,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'beforeExportApp\r\r\t<pharoJsSkip>\r\t^self',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2599' ],		#self : OmReference [ '2600' ],		#time : DateAndTime [ '2024-03-03T08:20:51.524-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #defaultAppFolder,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'defaultAppFolder\r\r\t<pharoJsSkip>\r\t| defaultAppFolder |\r\tdefaultAppFolder := self defaultAppFolderPath.\r\tdefaultAppFolder ensureCreateDirectory.\r\t^ defaultAppFolder',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2600' ],		#self : OmReference [ '2601' ],		#time : DateAndTime [ '2024-03-03T08:20:51.525-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #defaultAppFolderName,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'defaultAppFolderName\r\t<pharoJsSkip>\r\t\r\t^ self name',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2601' ],		#self : OmReference [ '2602' ],		#time : DateAndTime [ '2024-03-03T08:20:51.525-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #defaultAppFolderParent,			#protocol : #'*PharoJs-Base-Exporter',			#sourceCode : 'defaultAppFolderParent\r\t<pharoJsSkip>\r\t\r\t^ self repositoryPath / self defaultAppFolderParentName / self package name',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2602' ],		#self : OmReference [ '2603' ],		#time : DateAndTime [ '2024-03-03T08:20:51.525-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #defaultAppFolderParentName,			#protocol : #'*PharoJs-Base-Exporter',			#sourceCode : 'defaultAppFolderParentName\r\t<pharoJsSkip>\r\t\r\t^\'HTML\'',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2603' ],		#self : OmReference [ '2604' ],		#time : DateAndTime [ '2024-03-03T08:20:51.526-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #defaultAppFolderPath,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'defaultAppFolderPath\r\t<pharoJsSkip>\r\r\t^ self defaultAppFolderParent / self defaultAppFolderName',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2604' ],		#self : OmReference [ '2605' ],		#time : DateAndTime [ '2024-03-03T08:20:51.527-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #exportApp,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'exportApp\r\r\t<pharoJsSkip>\r\tself exporterClass exportApp: self appClass.\r',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2605' ],		#self : OmReference [ '2606' ],		#time : DateAndTime [ '2024-03-03T08:20:51.527-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #'exportApp:',			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'exportApp: version\r\t<pharoJsSkip>\r\t\r\texportVersion := version.\r\tself exportApp',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2606' ],		#self : OmReference [ '2607' ],		#time : DateAndTime [ '2024-03-03T08:20:51.528-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #exportVersion,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'exportVersion\r\t<pharoJsSkip>\r\t\r\tself error: \'Override this in your application with the code:\rexportVersion\r\t<jsLiteralGenerator>\r\t^ exportVersion\'',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2607' ],		#self : OmReference [ '2608' ],		#time : DateAndTime [ '2024-03-03T08:20:51.528-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #exporterClass,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'exporterClass\r\t<pharoJsSkip>\r\t\r\t^ PjFileExporter',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2608' ],		#self : OmReference [ '2609' ],		#time : DateAndTime [ '2024-03-03T08:20:51.529-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #globalsPools,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'globalsPools\r\t<pharoJsSkip>\r\t\r\t^ self allSharedPoolsRecursive select: #isJavascriptGlobalsPool',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2609' ],		#self : OmReference [ '2610' ],		#time : DateAndTime [ '2024-03-03T08:20:51.53-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #'ifInvalidFolder:do:',			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'ifInvalidFolder: folder do: aBlock\r\t<pharoJsSkip>\r\t\r\t(folder isNil or: [folder exists not]) ifTrue: aBlock',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2610' ],		#self : OmReference [ '2611' ],		#time : DateAndTime [ '2024-03-03T08:20:51.53-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #'polyfill:withTranspiler:unlessIn:',			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'polyfill: aPolyfillClass withTranspiler: aTranspiler unlessIn: aSet\r\t<pharoJsSkip>\r\t\r\t(aSet includes: aPolyfillClass) ifFalse: [\r\t\taSet add: aPolyfillClass.\r\t\taPolyfillClass requiredPolyfills do: [ : pool |\r\t\t\tself polyfill: pool withTranspiler: aTranspiler unlessIn: aSet\r\t\t].\r\t\t^ true\r\t].\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2611' ],		#self : OmReference [ '2612' ],		#time : DateAndTime [ '2024-03-03T08:20:51.53-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #repository,			#protocol : #'*PharoJs-Base-Exporter',			#sourceCode : 'repository\r\t<pharoJsSkip>\r\t\r\t| packageName |\r\tpackageName := self package name.\r\t^IceRepository registry  detect: [: repo | repo includesPackageNamed: packageName].',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2612' ],		#self : OmReference [ '2613' ],		#time : DateAndTime [ '2024-03-03T08:20:51.531-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #repositoryPath,			#protocol : #'*PharoJs-Base-Exporter',			#sourceCode : 'repositoryPath\r\t<pharoJsSkip>\r\t\r\t^self repository location',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2613' ],		#self : OmReference [ '2614' ],		#time : DateAndTime [ '2024-03-03T08:20:51.531-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #resetAppFolder,			#protocol : #'*PharoJs-Base-Exporter',			#sourceCode : 'resetAppFolder\r\t<pharoJsSkip>\r\tself appFolder: nil',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2614' ],		#self : OmReference [ '2615' ],		#time : DateAndTime [ '2024-03-03T08:20:51.531-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #setUpAppFolder,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'setUpAppFolder\r\t<pharoJsSkip>\r\t\r\t| folder |\r\tfolder := UIManager default chooseDirectory: self setUpAppFolderPrompt.\r\tself ifInvalidFolder: folder do: [  \r\t\t^self error: \'PharoJS: Invalid folder for app \', self name].\r\tself appFolder: folder.',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2615' ],		#self : OmReference [ '2616' ],		#time : DateAndTime [ '2024-03-03T08:20:51.532-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #setUpAppFolderPrompt,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'setUpAppFolderPrompt\r\t<pharoJsSkip>\r\t^ \'PharoJS: Folder for app \' , self name , \' please?\'',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2616' ],		#self : OmReference [ '2617' ],		#time : DateAndTime [ '2024-03-03T08:20:51.532-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExpressApp class',				#isMetaSide : true			},			#name : #afterExportApp,			#protocol : #'*PharoJs-Base-Exporter',			#sourceCode : 'afterExportApp\r\r\t<pharoJsSkip>\r\tsuper afterExportApp.\r\tself clientAppClasses do: #exportApp',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2617' ],		#self : OmReference [ '2618' ],		#time : DateAndTime [ '2024-03-03T08:20:51.532-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExpressApp class',				#isMetaSide : true			},			#name : #clientAppClasses,			#protocol : #'*PharoJs-Base-Exporter',			#sourceCode : 'clientAppClasses\r\r\t<pharoJsSkip>\r\t^ #(  ) ',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2618' ],		#self : OmReference [ '2619' ],		#time : DateAndTime [ '2024-03-03T08:20:51.533-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestPharoJsBaseExporter class',				#isMetaSide : true			},			#name : #ruleGRGuradGuardClauseRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleGRGuradGuardClauseRuleV1FalsePositive\r\t^ #(#(#(#RGMethodDefinition #(#PjDependentTranspiler #addClassToConvert: #false)) #\'2020-02-14T08:19:48.428313-05:00\') )',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2619' ],		#self : OmReference [ '2620' ],		#time : DateAndTime [ '2024-03-03T08:20:51.533-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestPharoJsBaseExporter class',				#isMetaSide : true			},			#name : #ruleRBGuardingClauseRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBGuardingClauseRuleV1FalsePositive\r\t^ #(#(#(#RGMethodDefinition #(#PjDependentTranspiler #addClassToConvert: #false)) #\'2020-02-14T08:19:35.789312-05:00\') )',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2620' ],		#self : OmReference [ '2621' ],		#time : DateAndTime [ '2024-03-03T08:20:51.533-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestPharoJsBaseExporter class',				#isMetaSide : true			},			#name : #ruleRBLongMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBLongMethodsRuleV1FalsePositive\r\t^ #(#(#(#RGMethodDefinition #(#PjFileExporter #createFileNamed:startingWith:and:ifEditableDo: #false)) #\'2020-03-24T09:25:20.198093-04:00\') )',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2621' ],		#self : OmReference [ '2622' ],		#time : DateAndTime [ '2024-03-03T08:20:51.533-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDependentTranspiler class',				#isMetaSide : true			},			#name : #lineEnding,			#protocol : #accessing,			#sourceCode : 'lineEnding\r\t^Character lf',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2622' ],		#self : OmReference [ '2623' ],		#time : DateAndTime [ '2024-03-03T08:20:51.533-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'addAlreadyDefinedClasses:',			#protocol : #accessing,			#sourceCode : 'addAlreadyDefinedClasses: classes\r\r\talreadyDefinedClasses addAll: classes',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2623' ],		#self : OmReference [ '2624' ],		#time : DateAndTime [ '2024-03-03T08:20:51.533-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'addClassToConvert:',			#protocol : #transpiling,			#sourceCode : 'addClassToConvert: aClass\r\r\t| addClass |\r\taClass javascriptIsExportableClass ifFalse: [ \r\t\t^ converter transpilationError:\r\t\t\t  \'non-exportable class \' , aClass name , \' referenced\' ].\r\taddClass := aClass classToUseForJsConversion.\r\t(classesToConvert includes: addClass) ifFalse: [ " redundant test allows setting breakpoint for adding classes "\r\t\taddClass == PjTranspiler ifTrue: [ self halt ].\r\t\taddClass == Random ifTrue: [ self halt ].\r\t\tclassesToConvert add: addClass ]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2624' ],		#self : OmReference [ '2625' ],		#time : DateAndTime [ '2024-03-03T08:20:51.533-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'addClassesToConvert:',			#protocol : #transpiling,			#sourceCode : 'addClassesToConvert: classes\r\r\tclasses do: [ :aClass | self addClassToConvert: aClass ]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2625' ],		#self : OmReference [ '2626' ],		#time : DateAndTime [ '2024-03-03T08:20:51.533-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'alreadyConvertedClasses:',			#protocol : #loading,			#sourceCode : 'alreadyConvertedClasses: classes\r\r\tconvertedClasses addAll: classes',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2626' ],		#self : OmReference [ '2627' ],		#time : DateAndTime [ '2024-03-03T08:20:51.533-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'beforeCodeOutputHook:',			#protocol : #accessing,			#sourceCode : 'beforeCodeOutputHook: aBlock\r\r\tsuper beforeCodeOutputHook: [ aBlock value: globalPools ]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2627' ],		#self : OmReference [ '2628' ],		#time : DateAndTime [ '2024-03-03T08:20:51.533-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'convertAllClasses:',			#protocol : #transpiling,			#sourceCode : 'convertAllClasses: classes\r\r\t| newClasses |\r\tself\r\t\taddClassesToConvert: (classes select: #javascriptIsExportableClass).\r\tnewClasses := OrderedCollection new.\r\t[ classesToConvert isEmpty ]\r\t\twhileFalse: [ | theseClasses |\r\t\t\ttheseClasses := classesToConvert.\r\t\t\tclassesToConvert := Set new.\r\t\t\ttheseClasses\r\t\t\t\tdo:\r\t\t\t\t\t[ :aClass | self convertMethodAsts: aClass instanceSide newClasses: newClasses ] ].\r\tsuper convertAllClasses: newClasses',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2628' ],		#self : OmReference [ '2629' ],		#time : DateAndTime [ '2024-03-03T08:20:51.533-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'convertAndWriteClosedBlock:',			#protocol : #transpiling,			#sourceCode : 'convertAndWriteClosedBlock: valuedBlock\r\r\tself convertAndWriteClosedBlock: valuedBlock with: [\r\t\tself convertAllClasses: #() writeDnu: self shouldWriteDnu\r\t]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2629' ],		#self : OmReference [ '2630' ],		#time : DateAndTime [ '2024-03-03T08:20:51.533-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'convertClass:',			#protocol : #transpiling,			#sourceCode : 'convertClass: aClass\r\r\tself convertAllClasses: { aClass } writeDnu: self shouldWriteDnu',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2630' ],		#self : OmReference [ '2631' ],		#time : DateAndTime [ '2024-03-03T08:20:51.534-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'convertMethodAst:',			#protocol : #transpiling,			#sourceCode : 'convertMethodAst: aMethod\r\t(self shouldSkipMethodNode: aMethod) ifTrue: [ ^self ].\r\t^convertedMethods at: aMethod ifAbsentPut: [\r\t\tconverter\r\t\t\tclassForConversion: aMethod methodClass classToUseForJsConversion;\r\t\t\tconvertAst: aMethod ast withPrimitive: aMethod primitive]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2631' ],		#self : OmReference [ '2632' ],		#time : DateAndTime [ '2024-03-03T08:20:51.534-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'convertMethodAsts:newClasses:',			#protocol : #transpiling,			#sourceCode : 'convertMethodAsts: aClass newClasses: newClasses\r\r\t(convertedClasses includes: aClass)\r\t\tifFalse: [ aClass superclass\r\t\t\t\tifNotNil: [ self addClassToConvert: aClass superclass ].\r\t\t\tself\r\t\t\t\taddClassesToConvert: (aClass instanceSide sharedPools reject: #isJavascriptGlobalsPool).\r\t\t\tconvertedClasses add: aClass.\r\t\t\tnewClasses add: aClass ].\r\tself\r\t\twithMethodsOf: aClass\r\t\tdo: [ :aMethod | self convertMethodAst: aMethod ].\r\tself\r\t\twithMethodsOf: aClass class\r\t\tdo: [ :aMethod | self convertMethodAst: aMethod ]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2632' ],		#self : OmReference [ '2633' ],		#time : DateAndTime [ '2024-03-03T08:20:51.534-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'discoveredGlobalsPool:',			#protocol : #loading,			#sourceCode : 'discoveredGlobalsPool: aClass\r\r\tglobalPools add: aClass',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2633' ],		#self : OmReference [ '2634' ],		#time : DateAndTime [ '2024-03-03T08:20:51.534-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'discoveredReferenceToClass:',			#protocol : #loading,			#sourceCode : 'discoveredReferenceToClass: aClass\r\r\t^ self addClassToConvert: aClass',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2634' ],		#self : OmReference [ '2635' ],		#time : DateAndTime [ '2024-03-03T08:20:51.534-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'generateCodeStringFrom:',			#protocol : #transpiling,			#sourceCode : 'generateCodeStringFrom: jsAst\r\r\tself convertAllClasses: classesToConvert.\r\tsuper generateCodeStringFrom: jsAst',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2635' ],		#self : OmReference [ '2636' ],		#time : DateAndTime [ '2024-03-03T08:20:51.534-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'importMethodsAll:forClass:',			#protocol : #transpiling,			#sourceCode : 'importMethodsAll: aCollection forClass: aClass\r\t| importMethods |\r\timportMethods := Dictionary new.\r\taCollection\r\t\tdo: [ :aSymbol | \r\t\t\t(aClass instanceSide hasClassMethod: aSymbol)\r\t\t\t\tifTrue: [ (aClass instanceSide perform: aSymbol)\r\t\t\t\t\t\tassociationsDo: [ :assoc | \r\t\t\t\t\t\t\timportMethods\r\t\t\t\t\t\t\t\tat: assoc key\r\t\t\t\t\t\t\t\tifPresent: [ :im | im value addAll: assoc value ]\r\t\t\t\t\t\t\t\tifAbsent: [ importMethods at: assoc key put: assoc value asSet ] ] ] ].\r\t^ importMethods',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2636' ],		#self : OmReference [ '2637' ],		#time : DateAndTime [ '2024-03-03T08:20:51.535-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\r\tsuper initialize.\r\tconvertedMethods := IdentityDictionary new.\r\tclassesToConvert := Set new.\r\tconvertedClasses := Set new.\r\talreadyDefinedClasses := Set new.\r\talreadyInitializedClasses := Set new.\r\talreadyVariablesDeclaredClasses := Set new.\r\tglobalPools := Set new.',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2637' ],		#self : OmReference [ '2638' ],		#time : DateAndTime [ '2024-03-03T08:20:51.535-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'invalidateClass:',			#protocol : #invalidating,			#sourceCode : 'invalidateClass: aClass\r\r\tconvertedClasses remove: aClass ifAbsent: [  ].\r\talreadyDefinedClasses remove: aClass ifAbsent: [  ].\r\tself invalidateMethods:\r\t\taClass classToUseForJsConversion instanceSide methods.\r\tself invalidateMethods:\r\t\taClass classToUseForJsConversion classSide methods',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2638' ],		#self : OmReference [ '2639' ],		#time : DateAndTime [ '2024-03-03T08:20:51.535-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'invalidateMethod:',			#protocol : #invalidating,			#sourceCode : 'invalidateMethod: aMethod\r\r\tconvertedMethods removeKey: aMethod ifAbsent: [].',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2639' ],		#self : OmReference [ '2640' ],		#time : DateAndTime [ '2024-03-03T08:20:51.535-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'invalidateMethods:',			#protocol : #invalidating,			#sourceCode : 'invalidateMethods: aCollection\r\r\taCollection do: [ : method | self invalidateMethod: method ]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2640' ],		#self : OmReference [ '2641' ],		#time : DateAndTime [ '2024-03-03T08:20:51.535-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #numberOfClasses,			#protocol : #statistics,			#sourceCode : 'numberOfClasses\r\r\t^ convertedClasses size',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2641' ],		#self : OmReference [ '2642' ],		#time : DateAndTime [ '2024-03-03T08:20:51.535-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #numberOfMethods,			#protocol : #statistics,			#sourceCode : 'numberOfMethods\r\r\t^ convertedMethods size',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2642' ],		#self : OmReference [ '2643' ],		#time : DateAndTime [ '2024-03-03T08:20:51.535-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'transpileMethod:',			#protocol : #transpiling,			#sourceCode : 'transpileMethod: aMethod\r\r\t| jsAst |\r\tjsAst := self convertMethodAst: aMethod.\r\tgenerator asString: jsAst on: self jsStream',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2643' ],		#self : OmReference [ '2644' ],		#time : DateAndTime [ '2024-03-03T08:20:51.536-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'withMethodsOf:do:',			#protocol : #transpiling,			#sourceCode : 'withMethodsOf: aClass do: aBlock\r\r\t| nonOverriddenSelectors importMethods methodsToOutput |\r\tmethodsToOutput := OrderedCollection new.\r\tsuper withMethodsOf: aClass do: [: method | methodsToOutput add: method].\r\timportMethods := self\r\t\timportMethodsAll: #(jsTranspilationImportMethods jsTranspilationImportMethodsNonstandard)\r\t\tforClass: aClass.\r\timportMethods keysAndValuesDo: [ : class : selectors |\r\t\tclass isMeta = aClass isMeta ifTrue: [\r\t\t\tnonOverriddenSelectors := selectors copyWithoutAll: aClass selectors.\r\t\t\tnonOverriddenSelectors do: [ : aSymbol |\r\t\t\t\tmethodsToOutput add: (class compiledMethodAt: aSymbol) ]]].\r\tmethodsToOutput sort: [: l : r | l selector < r selector ].\r\tmethodsToOutput do: aBlock.',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2644' ],		#self : OmReference [ '2645' ],		#time : DateAndTime [ '2024-03-03T08:20:51.536-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'writeClassDefinitionOf:',			#protocol : #transpiling,			#sourceCode : 'writeClassDefinitionOf: aClass\r\r\talreadyDefinedClasses addIfNotPresent: aClass ifPresentDo: [ ^ self ].\r\tsuper writeClassDefinitionOf: aClass',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2645' ],		#self : OmReference [ '2646' ],		#time : DateAndTime [ '2024-03-03T08:20:51.536-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'writeClassInitializeOf:',			#protocol : #transpiling,			#sourceCode : 'writeClassInitializeOf: aClass\r\r\talreadyInitializedClasses addIfNotPresent: aClass ifPresentDo: [ ^ self ].\r\tsuper writeClassInitializeOf: aClass',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2646' ],		#self : OmReference [ '2647' ],		#time : DateAndTime [ '2024-03-03T08:20:51.536-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspiler,				#isMetaSide : false			},			#name : #'writeClassVariableDeclarationsOf:',			#protocol : #transpiling,			#sourceCode : 'writeClassVariableDeclarationsOf: aClass\r\r\talreadyVariablesDeclaredClasses addIfNotPresent: aClass ifPresentDo: [ ^ self ].\r\tsuper writeClassVariableDeclarationsOf: aClass',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2647' ],		#self : OmReference [ '2648' ],		#time : DateAndTime [ '2024-03-03T08:20:51.537-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #allSharedPoolsRecursive,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'allSharedPoolsRecursive\r\t"Answer a set of the pools the receiver shares, including those defined  in the superclasses of the receiver."\r\t\r\t^ self allSharedPoolsRecursiveInto: Set new',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2648' ],		#self : OmReference [ '2649' ],		#time : DateAndTime [ '2024-03-03T08:20:51.538-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #'allSharedPoolsRecursiveInto:',			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'allSharedPoolsRecursiveInto: aCollection\r\t"Add to the collection all of the pools the receiver shares, including those defined  in the superclasses of the receiver."\r\t\r\tself inheritedSharedPools do: [ : each |\r\t\t(aCollection includes: each) ifFalse: [\r\t\t\taCollection add: each.\r\t\t\teach allSharedPoolsRecursiveInto: aCollection\r\t\t]\r\t].\r\t^ aCollection',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2649' ],		#self : OmReference [ '2650' ],		#time : DateAndTime [ '2024-03-03T08:20:51.538-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #inheritedSharedPools,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'inheritedSharedPools\r\r\t^ self allSharedPools',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2650' ],		#self : OmReference [ '2651' ],		#time : DateAndTime [ '2024-03-03T08:20:51.539-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #javascriptIsExportableClass,			#protocol : #'*PharoJs-Base-Exporter',			#sourceCode : 'javascriptIsExportableClass\r\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2651' ],		#self : OmReference [ '2652' ],		#time : DateAndTime [ '2024-03-03T08:20:51.54-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #'sharedPoolOfVarNamedRecursive:',			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'sharedPoolOfVarNamedRecursive: aString\r\t"Returns the SharedPool or nil from which the pool variable named aString is coming from."\r\t\r\t ^ self allSharedPoolsRecursive \r\t\t\tdetect: [:each | each usesClassVarNamed: aString ]\r\t\t\tifNone: [ nil ]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2652' ],		#self : OmReference [ '2653' ],		#time : DateAndTime [ '2024-03-03T08:20:51.54-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNodeApplication class',				#isMetaSide : true			},			#name : #beforeExportApp,			#protocol : #'*PharoJs-Base-Exporter',			#sourceCode : 'beforeExportApp\r\r\t<pharoJsSkip>\r\tsuper beforeExportApp.\r\tself ensureRequiredModulesInstalled.\r',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2653' ],		#self : OmReference [ '2654' ],		#time : DateAndTime [ '2024-03-03T08:20:51.54-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNodeApplication class',				#isMetaSide : true			},			#name : #ensureRequiredModulesInstalled,			#protocol : #'*PharoJs-Base-Exporter',			#sourceCode : 'ensureRequiredModulesInstalled\r\r\t<pharoJsSkip>\r\tself modulesFolder exists ifTrue: [ ^ self ].\r\t(self appFolder / \'package-lock.json\') exists ifFalse: [ ^ self ].\r\tself inform: \'Installing NPM modules for \' , self name.\r\tLibC runCommand: self installNpmModulesCommandLine',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2654' ],		#self : OmReference [ '2655' ],		#time : DateAndTime [ '2024-03-03T08:20:51.541-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNodeApplication class',				#isMetaSide : true			},			#name : #installNpmModulesCommandLine,			#protocol : #'*PharoJs-Base-Exporter',			#sourceCode : 'installNpmModulesCommandLine\r\t<pharoJsSkip>\r\t^String streamContents: [ : str |\r\t\tstr << \r\t\t\'cd\';\r\t\tspace ; << self appFolder absolutePath pathString; << $; ;\r\t\t<< \'npm install\']',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2655' ],		#self : OmReference [ '2656' ],		#time : DateAndTime [ '2024-03-03T08:20:51.541-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNodeApplication class',				#isMetaSide : true			},			#name : #'polyfill:withTranspiler:unlessIn:',			#protocol : #'*PharoJs-Base-Exporter',			#sourceCode : 'polyfill: aPolyfillClass withTranspiler: aTranspiler unlessIn: aSet\r\t<pharoJsSkip>\r\t\r\t^ (super polyfill: aPolyfillClass withTranspiler: aTranspiler unlessIn: aSet) and: [\r\t\taPolyfillClass nodePolyfill: aTranspiler.\r\t\ttrue\r\t]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2656' ],		#self : OmReference [ '2657' ],		#time : DateAndTime [ '2024-03-03T08:20:51.541-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjWebApplication class',				#isMetaSide : true			},			#name : #appHtmlUrlString,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'appHtmlUrlString\r\t<pharoJsSkip>\r\t\r\t^ \'file:\' , self appFullHtmlFileName pathString asUrl asString',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2657' ],		#self : OmReference [ '2658' ],		#time : DateAndTime [ '2024-03-03T08:20:51.542-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjWebApplication class',				#isMetaSide : true			},			#name : #'polyfill:withTranspiler:unlessIn:',			#protocol : #'*PharoJs-Base-Exporter',			#sourceCode : 'polyfill: aPolyfillClass withTranspiler: aTranspiler unlessIn: aSet\r\t<pharoJsSkip>\r\t\r\t^ (super\r\t\t   polyfill: aPolyfillClass\r\t\t   withTranspiler: aTranspiler\r\t\t   unlessIn: aSet) and: [ \r\t\t  aPolyfillClass browserPolyfill: aTranspiler.\r\t\t  true ]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2658' ],		#self : OmReference [ '2659' ],		#time : DateAndTime [ '2024-03-03T08:20:51.542-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'SharedPool class',				#isMetaSide : true			},			#name : #inheritedSharedPools,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'inheritedSharedPools\r\r\t^ self sharedPools',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2659' ],		#self : OmReference [ '2660' ],		#time : DateAndTime [ '2024-03-03T08:20:51.543-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDOMApplication class',				#isMetaSide : true			},			#name : #appFullHtmlFileName,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'appFullHtmlFileName\r\t<pharoJsSkip>\r\t\r\t^self appFullHtmlFolderPath / self appHtmlFileName',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2660' ],		#self : OmReference [ '2661' ],		#time : DateAndTime [ '2024-03-03T08:20:51.544-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDOMApplication class',				#isMetaSide : true			},			#name : #appFullHtmlFolderPath,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'appFullHtmlFolderPath\r\r\t<pharoJsSkip>\r\tself appHtmlSubFolder ifNotNil: [ :subfolder | \r\t\t^ self appFolder / subfolder ].\r\t^ self appFolder',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2661' ],		#self : OmReference [ '2662' ],		#time : DateAndTime [ '2024-03-03T08:20:51.544-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDOMApplication class',				#isMetaSide : true			},			#name : #appFullJsFolderPath,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'appFullJsFolderPath\r\t<pharoJsSkip>\r\t\r\tself appJsSubFolder ifNotNil: [ :subfolder | \r\t\t^ self appFullHtmlFolderPath / subfolder ].\r\t^ self appFullHtmlFolderPath',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2662' ],		#self : OmReference [ '2663' ],		#time : DateAndTime [ '2024-03-03T08:20:51.545-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDOMApplication class',				#isMetaSide : true			},			#name : #appHtmlFileName,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'appHtmlFileName\r\t<pharoJsSkip>\r\t^ \'index.html\'',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2663' ],		#self : OmReference [ '2664' ],		#time : DateAndTime [ '2024-03-03T08:20:51.546-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDOMApplication class',				#isMetaSide : true			},			#name : #appHtmlSubFolder,			#protocol : #'*PharoJs-Base-Exporter-App',			#sourceCode : 'appHtmlSubFolder\r\t<pharoJsSkip>\r\t"Subclass might return, e.g. \'www\' if you want the html to be in the www sub-directory. \r\tUseful, when you need to access the app/project folder that is different from the JS folder as with PhoneGap."\r\t^ nil',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2664' ],		#self : OmReference [ '2665' ],		#time : DateAndTime [ '2024-03-03T08:20:51.546-05:00' ],		#trigger : OmReference [ '2501' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDOMApplication class',				#isMetaSide : true			},			#name : #'polyfill:withTranspiler:unlessIn:',			#protocol : #'*PharoJs-Base-Exporter',			#sourceCode : 'polyfill: aPolyfillClass withTranspiler: aTranspiler unlessIn: aSet\r\t<pharoJsSkip>\r\t^ (super polyfill: aPolyfillClass withTranspiler: aTranspiler unlessIn: aSet) and: [\r\t\taPolyfillClass domPolyfill: aTranspiler.\r\t\ttrue\r\t]',			#stamp : '',			#package : #PharoJs-Base-Exporter		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:51.73-05:00' ],		#prior : OmReference [ '2665' ],		#self : OmReference [ '2666' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-Base-Bridge-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2666' ],		#self : OmReference [ '2667' ],		#time : DateAndTime [ '2024-03-03T08:20:51.777-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Bridge-Client-Kernel,		#affectedPackageName : #PharoJs-Base-Bridge	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2667' ],		#self : OmReference [ '2668' ],		#time : DateAndTime [ '2024-03-03T08:20:51.78-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTWebBridgeClient\r\tinstanceVariableNames: \'openBrowserInBackground\'\r\tpackage: \'PharoJs-Base-Bridge-Client-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTWebBridgeClient,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTWebBridgeClient classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTWebBridgeClient classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTWebBridgeClient,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-Base-Bridge-Client-Kernel,			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2668' ],		#self : OmReference [ '2669' ],		#time : DateAndTime [ '2024-03-03T08:20:51.781-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTWebBridgeClient\r\tinstanceVariableNames: \'openBrowserInBackground\'\r\tpackage: \'PharoJs-Base-Bridge-Client-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTWebBridgeClient,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTWebBridgeClient classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTWebBridgeClient classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTWebBridgeClient,					#isMetaSide : false				},				#parent : @8,				#content : 'Utility trait to control the webbrowser',				#stamp : ''			},			#category : #PharoJs-Base-Bridge-Client-Kernel,			#package : #PharoJs-Base-Bridge		},		#oldComment : '',		#newComment : 'Utility trait to control the webbrowser',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2669' ],		#self : OmReference [ '2670' ],		#time : DateAndTime [ '2024-03-03T08:20:51.785-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Bridge-Kernel,		#affectedPackageName : #PharoJs-Base-Bridge	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2670' ],		#self : OmReference [ '2671' ],		#time : DateAndTime [ '2024-03-03T08:20:51.786-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjBridge\r\tinstanceVariableNames: \'server timeout proxies blockClosures client shouldStartJsInterpreter monitor incomingMessageFrames\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjBridge,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridge,						#isMetaSide : false					},					#name : #server,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridge,						#isMetaSide : false					},					#name : #timeout,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridge,						#isMetaSide : false					},					#name : #proxies,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridge,						#isMetaSide : false					},					#name : #blockClosures,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridge,						#isMetaSide : false					},					#name : #client,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridge,						#isMetaSide : false					},					#name : #shouldStartJsInterpreter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridge,						#isMetaSide : false					},					#name : #monitor,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridge,						#isMetaSide : false					},					#name : #incomingMessageFrames,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBridge class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBridge class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBridge,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2671' ],		#self : OmReference [ '2672' ],		#time : DateAndTime [ '2024-03-03T08:20:51.788-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjBridge\r\tinstanceVariableNames: \'server timeout proxies blockClosures client shouldStartJsInterpreter monitor incomingMessageFrames\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjBridge,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridge,						#isMetaSide : false					},					#name : #server,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridge,						#isMetaSide : false					},					#name : #timeout,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridge,						#isMetaSide : false					},					#name : #proxies,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridge,						#isMetaSide : false					},					#name : #blockClosures,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridge,						#isMetaSide : false					},					#name : #client,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridge,						#isMetaSide : false					},					#name : #shouldStartJsInterpreter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridge,						#isMetaSide : false					},					#name : #monitor,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridge,						#isMetaSide : false					},					#name : #incomingMessageFrames,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBridge class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBridge class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBridge,					#isMetaSide : false				},				#parent : @8,				#content : 'A PjBridge is the facade that allows interacting (i.e. evaluting code) with a javascript interpreter. \r\rExample: \r"1) Start a bridge in a workspace"\rbridge := PjBridge startOn: 12345 title: \'Example\'.\r\r"2) Open a web browser on http://localhost:12345"\r\r"3) Perform in the workspace the following expressions one at a time. Use \'printIt\' to display results. Watch the log on the web browser to see the  javascript code actually peformed."\rbridge eval: \'1+2\'.\rbridge eval: \'x := 6 * 7\'.\rbridge eval: \'x - 5\'.\rbridge loadClass: PjCounter.\rbridge eval: \'counter := PjCounter new.\rcounter increment.\rcounter increment.\rcounter increment.\rcounter count.\'. \r\r"4) Once done, don\'t forget to stop the bridge"\rbridge stop.\r\rInstance Variables\r\tclientClassName:\t\t<String>\r\tcommunicationTrialsCount:\t\t<Integer>\r\tconverter:\t\t<PjSmalltalkToJavaScriptConverer>\r\tserver:\t\t<PjServer>\r\rclientClassName\r\t- Name of the class of the socket wrapper running on the JavaScript client (e.g. PjEvaluatorWebSocketDelegate)\r\rcommunicationTrialsCount\r\t- Number of attempts to send/receive data through the webSocket\r\rconverter\r\t- Smalltalk to JavaScript converter. Used to translate Smalltalk code to JavaScript before evaluating it on the client (see #eval: and #loadClass:)\r\rserver\r\t- Manages client connections including the websocket\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A PjBridge is the facade that allows interacting (i.e. evaluting code) with a javascript interpreter. \r\rExample: \r"1) Start a bridge in a workspace"\rbridge := PjBridge startOn: 12345 title: \'Example\'.\r\r"2) Open a web browser on http://localhost:12345"\r\r"3) Perform in the workspace the following expressions one at a time. Use \'printIt\' to display results. Watch the log on the web browser to see the  javascript code actually peformed."\rbridge eval: \'1+2\'.\rbridge eval: \'x := 6 * 7\'.\rbridge eval: \'x - 5\'.\rbridge loadClass: PjCounter.\rbridge eval: \'counter := PjCounter new.\rcounter increment.\rcounter increment.\rcounter increment.\rcounter count.\'. \r\r"4) Once done, don\'t forget to stop the bridge"\rbridge stop.\r\rInstance Variables\r\tclientClassName:\t\t<String>\r\tcommunicationTrialsCount:\t\t<Integer>\r\tconverter:\t\t<PjSmalltalkToJavaScriptConverer>\r\tserver:\t\t<PjServer>\r\rclientClassName\r\t- Name of the class of the socket wrapper running on the JavaScript client (e.g. PjEvaluatorWebSocketDelegate)\r\rcommunicationTrialsCount\r\t- Number of attempts to send/receive data through the webSocket\r\rconverter\r\t- Smalltalk to JavaScript converter. Used to translate Smalltalk code to JavaScript before evaluating it on the client (see #eval: and #loadClass:)\r\rserver\r\t- Manages client connections including the websocket\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2672' ],		#self : OmReference [ '2673' ],		#time : DateAndTime [ '2024-03-03T08:20:51.79-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Bridge-Client-CodeGenerator,		#affectedPackageName : #PharoJs-Base-Bridge	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2673' ],		#self : OmReference [ '2674' ],		#time : DateAndTime [ '2024-03-03T08:20:51.791-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjBridgeAppClassDecorator\r\tinstanceVariableNames: \'rawAppClass bridge\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-CodeGenerator\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjBridgeAppClassDecorator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeAppClassDecorator,						#isMetaSide : false					},					#name : #rawAppClass,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeAppClassDecorator,						#isMetaSide : false					},					#name : #bridge,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBridgeAppClassDecorator class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBridgeAppClassDecorator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBridgeAppClassDecorator,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-CodeGenerator,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2674' ],		#self : OmReference [ '2675' ],		#time : DateAndTime [ '2024-03-03T08:20:51.793-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeAppClassDecorator subclass: #PjLoggingClientBridgeAppClassDecorator\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-CodeGenerator\'',				#superclassName : 'PjBridgeAppClassDecorator',				#traitCompositionSource : '{}'			},			#name : #PjLoggingClientBridgeAppClassDecorator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjLoggingClientBridgeAppClassDecorator class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjLoggingClientBridgeAppClassDecorator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjLoggingClientBridgeAppClassDecorator,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-CodeGenerator,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2675' ],		#self : OmReference [ '2676' ],		#time : DateAndTime [ '2024-03-03T08:20:51.795-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjBridgeClient\r\tinstanceVariableNames: \'bridge codeGenerator exporter appClass clientId\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjBridgeClient,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeClient,						#isMetaSide : false					},					#name : #bridge,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeClient,						#isMetaSide : false					},					#name : #codeGenerator,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeClient,						#isMetaSide : false					},					#name : #exporter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeClient,						#isMetaSide : false					},					#name : #appClass,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeClient,						#isMetaSide : false					},					#name : #clientId,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBridgeClient class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBridgeClient class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBridgeClient,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2676' ],		#self : OmReference [ '2677' ],		#time : DateAndTime [ '2024-03-03T08:20:51.796-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjBridgeClient\r\tinstanceVariableNames: \'bridge codeGenerator exporter appClass clientId\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjBridgeClient,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeClient,						#isMetaSide : false					},					#name : #bridge,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeClient,						#isMetaSide : false					},					#name : #codeGenerator,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeClient,						#isMetaSide : false					},					#name : #exporter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeClient,						#isMetaSide : false					},					#name : #appClass,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeClient,						#isMetaSide : false					},					#name : #clientId,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBridgeClient class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBridgeClient class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBridgeClient,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent a bridge client i.e. javascript interpreter and code that talks to a bridge.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I represent a bridge client i.e. javascript interpreter and code that talks to a bridge.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2677' ],		#self : OmReference [ '2678' ],		#time : DateAndTime [ '2024-03-03T08:20:51.806-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeClient subclass: #PjBrowserBridgeClient\r\tuses: PjTWebBridgeClient\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-Kernel\'',				#superclassName : 'PjBridgeClient',				#traitCompositionSource : 'PjTWebBridgeClient'			},			#name : #PjBrowserBridgeClient,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserBridgeClient,						#isMetaSide : false					},					#name : #openBrowserInBackground,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBrowserBridgeClient class\r\tuses: PjTWebBridgeClient classTrait\r\tinstanceVariableNames: \'defaultWebBrowserName\'',					#traitCompositionSource : 'PjTWebBridgeClient classTrait'				},				#name : #'PjBrowserBridgeClient class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjBrowserBridgeClient class'						},						#name : #defaultWebBrowserName,						#parent : @15					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBrowserBridgeClient,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2678' ],		#self : OmReference [ '2679' ],		#time : DateAndTime [ '2024-03-03T08:20:51.808-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeClient subclass: #PjBrowserBridgeClient\r\tuses: PjTWebBridgeClient\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-Kernel\'',				#superclassName : 'PjBridgeClient',				#traitCompositionSource : 'PjTWebBridgeClient'			},			#name : #PjBrowserBridgeClient,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserBridgeClient,						#isMetaSide : false					},					#name : #openBrowserInBackground,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBrowserBridgeClient class\r\tuses: PjTWebBridgeClient classTrait\r\tinstanceVariableNames: \'defaultWebBrowserName\'',					#traitCompositionSource : 'PjTWebBridgeClient classTrait'				},				#name : #'PjBrowserBridgeClient class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjBrowserBridgeClient class'						},						#name : #defaultWebBrowserName,						#parent : @15					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBrowserBridgeClient,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent a web bridge client i.e. an interactive interpreter is launched upon start',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I represent a web bridge client i.e. an interactive interpreter is launched upon start',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2679' ],		#self : OmReference [ '2680' ],		#time : DateAndTime [ '2024-03-03T08:20:51.823-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeClient subclass: #PjFileBasedBridgeClient\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-Kernel\'',				#superclassName : 'PjBridgeClient',				#traitCompositionSource : '{}'			},			#name : #PjFileBasedBridgeClient,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjFileBasedBridgeClient class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjFileBasedBridgeClient class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjFileBasedBridgeClient,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2680' ],		#self : OmReference [ '2681' ],		#time : DateAndTime [ '2024-03-03T08:20:51.825-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeClient subclass: #PjFileBasedBridgeClient\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-Kernel\'',				#superclassName : 'PjBridgeClient',				#traitCompositionSource : '{}'			},			#name : #PjFileBasedBridgeClient,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjFileBasedBridgeClient class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjFileBasedBridgeClient class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjFileBasedBridgeClient,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the super class for bridge clients that need to write out the javascript file.  This includes NodeJS apps and browsers that have more resources than the CSS and HTML files.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the super class for bridge clients that need to write out the javascript file.  This includes NodeJS apps and browsers that have more resources than the CSS and HTML files.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2681' ],		#self : OmReference [ '2682' ],		#time : DateAndTime [ '2024-03-03T08:20:51.832-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedBridgeClient subclass: #PjFileBasedBrowserBridgeClient\r\tuses: PjTWebBridgeClient\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-Kernel\'',				#superclassName : 'PjFileBasedBridgeClient',				#traitCompositionSource : 'PjTWebBridgeClient'			},			#name : #PjFileBasedBrowserBridgeClient,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjFileBasedBrowserBridgeClient,						#isMetaSide : false					},					#name : #openBrowserInBackground,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjFileBasedBrowserBridgeClient class\r\tuses: PjTWebBridgeClient classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTWebBridgeClient classTrait'				},				#name : #'PjFileBasedBrowserBridgeClient class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjFileBasedBrowserBridgeClient,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2682' ],		#self : OmReference [ '2683' ],		#time : DateAndTime [ '2024-03-03T08:20:51.833-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedBridgeClient subclass: #PjFileBasedBrowserBridgeClient\r\tuses: PjTWebBridgeClient\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-Kernel\'',				#superclassName : 'PjFileBasedBridgeClient',				#traitCompositionSource : 'PjTWebBridgeClient'			},			#name : #PjFileBasedBrowserBridgeClient,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjFileBasedBrowserBridgeClient,						#isMetaSide : false					},					#name : #openBrowserInBackground,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjFileBasedBrowserBridgeClient class\r\tuses: PjTWebBridgeClient classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTWebBridgeClient classTrait'				},				#name : #'PjFileBasedBrowserBridgeClient class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjFileBasedBrowserBridgeClient,					#isMetaSide : false				},				#parent : @8,				#content : 'I am for browsers that have more resources than the CSS and HTML files that need to be loaded.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am for browsers that have more resources than the CSS and HTML files that need to be loaded.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2683' ],		#self : OmReference [ '2684' ],		#time : DateAndTime [ '2024-03-03T08:20:51.835-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedBrowserBridgeClient subclass: #PjBridgeServedFileBasedBrowserBridgeClient\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-Kernel\'',				#superclassName : 'PjFileBasedBrowserBridgeClient',				#traitCompositionSource : '{}'			},			#name : #PjBridgeServedFileBasedBrowserBridgeClient,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBridgeServedFileBasedBrowserBridgeClient class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBridgeServedFileBasedBrowserBridgeClient class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBridgeServedFileBasedBrowserBridgeClient,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2684' ],		#self : OmReference [ '2685' ],		#time : DateAndTime [ '2024-03-03T08:20:51.836-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedBridgeClient subclass: #PjNodeBridgeClient\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-Kernel\'',				#superclassName : 'PjFileBasedBridgeClient',				#traitCompositionSource : '{}'			},			#name : #PjNodeBridgeClient,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNodeBridgeClient class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNodeBridgeClient class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNodeBridgeClient,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2685' ],		#self : OmReference [ '2686' ],		#time : DateAndTime [ '2024-03-03T08:20:51.838-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedBridgeClient subclass: #PjNodeBridgeClient\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-Kernel\'',				#superclassName : 'PjFileBasedBridgeClient',				#traitCompositionSource : '{}'			},			#name : #PjNodeBridgeClient,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNodeBridgeClient class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNodeBridgeClient class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNodeBridgeClient,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the bridge client for applications to run on NodeJS',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the bridge client for applications to run on NodeJS',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2686' ],		#self : OmReference [ '2687' ],		#time : DateAndTime [ '2024-03-03T08:20:51.846-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedBridgeClient subclass: #PjWebServedBridgeClient\r\tuses: PjTWebBridgeClient\r\tinstanceVariableNames: \'urlString\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-Kernel\'',				#superclassName : 'PjFileBasedBridgeClient',				#traitCompositionSource : 'PjTWebBridgeClient'			},			#name : #PjWebServedBridgeClient,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWebServedBridgeClient,						#isMetaSide : false					},					#name : #urlString,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWebServedBridgeClient,						#isMetaSide : false					},					#name : #openBrowserInBackground,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjWebServedBridgeClient class\r\tuses: PjTWebBridgeClient classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTWebBridgeClient classTrait'				},				#name : #'PjWebServedBridgeClient class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjWebServedBridgeClient,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2687' ],		#self : OmReference [ '2688' ],		#time : DateAndTime [ '2024-03-03T08:20:51.847-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeClient subclass: #PjNullBridgeClient\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-Kernel\'',				#superclassName : 'PjBridgeClient',				#traitCompositionSource : '{}'			},			#name : #PjNullBridgeClient,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNullBridgeClient class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNullBridgeClient class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNullBridgeClient,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2688' ],		#self : OmReference [ '2689' ],		#time : DateAndTime [ '2024-03-03T08:20:51.849-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeClient subclass: #PjNullBridgeClient\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-Kernel\'',				#superclassName : 'PjBridgeClient',				#traitCompositionSource : '{}'			},			#name : #PjNullBridgeClient,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNullBridgeClient class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNullBridgeClient class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNullBridgeClient,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent a null bridge client i.e. no interpreter is actually launched upon start',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I represent a null bridge client i.e. no interpreter is actually launched upon start',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2689' ],		#self : OmReference [ '2690' ],		#time : DateAndTime [ '2024-03-03T08:20:51.85-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjBridgeServer\r\tinstanceVariableNames: \'timing html javascript css favicon fingerPrint znServer webSocket bridge\'\r\tclassVariableNames: \'CurrentUsablePortNumber\'\r\tpackage: \'PharoJs-Base-Bridge-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjBridgeServer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeServer,						#isMetaSide : false					},					#name : #timing,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeServer,						#isMetaSide : false					},					#name : #html,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeServer,						#isMetaSide : false					},					#name : #javascript,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeServer,						#isMetaSide : false					},					#name : #css,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeServer,						#isMetaSide : false					},					#name : #favicon,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeServer,						#isMetaSide : false					},					#name : #fingerPrint,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeServer,						#isMetaSide : false					},					#name : #znServer,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeServer,						#isMetaSide : false					},					#name : #webSocket,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeServer,						#isMetaSide : false					},					#name : #bridge,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBridgeServer class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBridgeServer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBridgeServer,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeServer,						#isMetaSide : false					},					#name : #CurrentUsablePortNumber,					#parent : @8				}			],			#category : #PharoJs-Base-Bridge-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2690' ],		#self : OmReference [ '2691' ],		#time : DateAndTime [ '2024-03-03T08:20:51.851-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjClientCodeGenerator\r\tinstanceVariableNames: \'titleString appClass htmlGenerator appClassDecorator\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-CodeGenerator\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjClientCodeGenerator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClientCodeGenerator,						#isMetaSide : false					},					#name : #titleString,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClientCodeGenerator,						#isMetaSide : false					},					#name : #appClass,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClientCodeGenerator,						#isMetaSide : false					},					#name : #htmlGenerator,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClientCodeGenerator,						#isMetaSide : false					},					#name : #appClassDecorator,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClientCodeGenerator class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClientCodeGenerator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClientCodeGenerator,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-CodeGenerator,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2691' ],		#self : OmReference [ '2692' ],		#time : DateAndTime [ '2024-03-03T08:20:51.852-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjClientCodeGenerator\r\tinstanceVariableNames: \'titleString appClass htmlGenerator appClassDecorator\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-CodeGenerator\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjClientCodeGenerator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClientCodeGenerator,						#isMetaSide : false					},					#name : #titleString,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClientCodeGenerator,						#isMetaSide : false					},					#name : #appClass,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClientCodeGenerator,						#isMetaSide : false					},					#name : #htmlGenerator,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjClientCodeGenerator,						#isMetaSide : false					},					#name : #appClassDecorator,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClientCodeGenerator class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClientCodeGenerator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClientCodeGenerator,					#isMetaSide : false				},				#parent : @8,				#content : 'A PjClientCodeGenerator generates the HTML that includes javascript code made available through the server to the client (typically on the browser).\r\rInstance Variables\r\tconverter:\t\t<PjSmalltalkToJavaScriptBasicConverer>\r\rconverter\r\t- translates Smalltalk code into JavaScript\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-CodeGenerator,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A PjClientCodeGenerator generates the HTML that includes javascript code made available through the server to the client (typically on the browser).\r\rInstance Variables\r\tconverter:\t\t<PjSmalltalkToJavaScriptBasicConverer>\r\rconverter\r\t- translates Smalltalk code into JavaScript\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2692' ],		#self : OmReference [ '2693' ],		#time : DateAndTime [ '2024-03-03T08:20:51.854-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjClientCodeGenerator subclass: #PjLoggingClientCodeGenerator\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-CodeGenerator\'',				#superclassName : 'PjClientCodeGenerator',				#traitCompositionSource : '{}'			},			#name : #PjLoggingClientCodeGenerator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjLoggingClientCodeGenerator class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjLoggingClientCodeGenerator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjLoggingClientCodeGenerator,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-CodeGenerator,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2693' ],		#self : OmReference [ '2694' ],		#time : DateAndTime [ '2024-03-03T08:20:51.855-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjClientCodeGenerator subclass: #PjLoggingClientCodeGenerator\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-CodeGenerator\'',				#superclassName : 'PjClientCodeGenerator',				#traitCompositionSource : '{}'			},			#name : #PjLoggingClientCodeGenerator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjLoggingClientCodeGenerator class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjLoggingClientCodeGenerator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjLoggingClientCodeGenerator,					#isMetaSide : false				},				#parent : @8,				#content : 'A PjLoggingClientCodeGenerator is a generator for HTML/Javascript client code that logs websocket activity on the HTML page.\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-CodeGenerator,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A PjLoggingClientCodeGenerator is a generator for HTML/Javascript client code that logs websocket activity on the HTML page.\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2694' ],		#self : OmReference [ '2695' ],		#time : DateAndTime [ '2024-03-03T08:20:51.857-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjHtmlGenerator\r\tinstanceVariableNames: \'headerStream bodyStream scriptsStream bodyAttributes\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-CodeGenerator\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjHtmlGenerator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjHtmlGenerator,						#isMetaSide : false					},					#name : #headerStream,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjHtmlGenerator,						#isMetaSide : false					},					#name : #bodyStream,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjHtmlGenerator,						#isMetaSide : false					},					#name : #scriptsStream,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjHtmlGenerator,						#isMetaSide : false					},					#name : #bodyAttributes,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjHtmlGenerator class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjHtmlGenerator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjHtmlGenerator,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-CodeGenerator,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2695' ],		#self : OmReference [ '2696' ],		#time : DateAndTime [ '2024-03-03T08:20:51.858-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjHtmlGenerator\r\tinstanceVariableNames: \'headerStream bodyStream scriptsStream bodyAttributes\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-CodeGenerator\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjHtmlGenerator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjHtmlGenerator,						#isMetaSide : false					},					#name : #headerStream,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjHtmlGenerator,						#isMetaSide : false					},					#name : #bodyStream,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjHtmlGenerator,						#isMetaSide : false					},					#name : #scriptsStream,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjHtmlGenerator,						#isMetaSide : false					},					#name : #bodyAttributes,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjHtmlGenerator class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjHtmlGenerator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjHtmlGenerator,					#isMetaSide : false				},				#parent : @8,				#content : 'A PjHtmlGenerator is a facility to build a html pages (strings).\r\rInstance Variables\r\tbodyStream:\t\t<WriteStream on String>\r\theaderStream:\t\t<WriteStream on String>\r\tscriptsStream:\t\t<WriteStream on String>\r\rbodyStream\r\t- Dedicated to the content of the body\r\rheaderStream\r\t- Dedicated to the content of the header\r\rscriptsStream\r\t- Dedicated to JavaScript scripts. They are typically inserted at the end of the resulting HTML page (a string)\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-CodeGenerator,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A PjHtmlGenerator is a facility to build a html pages (strings).\r\rInstance Variables\r\tbodyStream:\t\t<WriteStream on String>\r\theaderStream:\t\t<WriteStream on String>\r\tscriptsStream:\t\t<WriteStream on String>\r\rbodyStream\r\t- Dedicated to the content of the body\r\rheaderStream\r\t- Dedicated to the content of the header\r\rscriptsStream\r\t- Dedicated to JavaScript scripts. They are typically inserted at the end of the resulting HTML page (a string)\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2696' ],		#self : OmReference [ '2697' ],		#time : DateAndTime [ '2024-03-03T08:20:51.859-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Bridge-Messages,		#affectedPackageName : #PharoJs-Base-Bridge	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2697' ],		#self : OmReference [ '2698' ],		#time : DateAndTime [ '2024-03-03T08:20:51.86-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjMessageContext\r\tinstanceVariableNames: \'websocketDelegate\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Messages\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjMessageContext,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageContext,						#isMetaSide : false					},					#name : #websocketDelegate,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageContext class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageContext class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageContext,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Messages,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2698' ],		#self : OmReference [ '2699' ],		#time : DateAndTime [ '2024-03-03T08:20:51.861-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Bridge-Obsolete,		#affectedPackageName : #PharoJs-Base-Bridge	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2699' ],		#self : OmReference [ '2700' ],		#time : DateAndTime [ '2024-03-03T08:20:51.863-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjParametrizableServerDelegate\r\tinstanceVariableNames: \'html javascript css favicon fingerPrint\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Obsolete\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjParametrizableServerDelegate,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjParametrizableServerDelegate,						#isMetaSide : false					},					#name : #html,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjParametrizableServerDelegate,						#isMetaSide : false					},					#name : #javascript,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjParametrizableServerDelegate,						#isMetaSide : false					},					#name : #css,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjParametrizableServerDelegate,						#isMetaSide : false					},					#name : #favicon,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjParametrizableServerDelegate,						#isMetaSide : false					},					#name : #fingerPrint,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjParametrizableServerDelegate class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjParametrizableServerDelegate class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjParametrizableServerDelegate,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Obsolete,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2700' ],		#self : OmReference [ '2701' ],		#time : DateAndTime [ '2024-03-03T08:20:51.864-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjParametrizableServerDelegate\r\tinstanceVariableNames: \'html javascript css favicon fingerPrint\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Obsolete\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjParametrizableServerDelegate,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjParametrizableServerDelegate,						#isMetaSide : false					},					#name : #html,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjParametrizableServerDelegate,						#isMetaSide : false					},					#name : #javascript,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjParametrizableServerDelegate,						#isMetaSide : false					},					#name : #css,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjParametrizableServerDelegate,						#isMetaSide : false					},					#name : #favicon,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjParametrizableServerDelegate,						#isMetaSide : false					},					#name : #fingerPrint,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjParametrizableServerDelegate class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjParametrizableServerDelegate class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjParametrizableServerDelegate,					#isMetaSide : false				},				#parent : @8,				#content : 'A PjParametrizableServerDelegate is a delegate for the server that simply stores a HTML page that is sent as a response to any client request.\r\rInstance Variables\r\thtml:\t\t<String>\r\rhtml\r\t- HTML page sent to clients\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Obsolete,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A PjParametrizableServerDelegate is a delegate for the server that simply stores a HTML page that is sent as a response to any client request.\r\rInstance Variables\r\thtml:\t\t<String>\r\rhtml\r\t- HTML page sent to clients\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2701' ],		#self : OmReference [ '2702' ],		#time : DateAndTime [ '2024-03-03T08:20:51.866-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Bridge-Proxy,		#affectedPackageName : #PharoJs-Base-Bridge	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2702' ],		#self : OmReference [ '2703' ],		#time : DateAndTime [ '2024-03-03T08:20:51.867-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjProxy\r\tinstanceVariableNames: \'jsName oid closure proxySpecificBridge\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Proxy\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjProxy,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxy,						#isMetaSide : false					},					#name : #jsName,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxy,						#isMetaSide : false					},					#name : #oid,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxy,						#isMetaSide : false					},					#name : #closure,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxy,						#isMetaSide : false					},					#name : #proxySpecificBridge,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjProxy class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjProxy class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjProxy,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Proxy,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2703' ],		#self : OmReference [ '2704' ],		#time : DateAndTime [ '2024-03-03T08:20:51.868-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjProxy\r\tinstanceVariableNames: \'jsName oid closure proxySpecificBridge\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Proxy\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjProxy,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxy,						#isMetaSide : false					},					#name : #jsName,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxy,						#isMetaSide : false					},					#name : #oid,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxy,						#isMetaSide : false					},					#name : #closure,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxy,						#isMetaSide : false					},					#name : #proxySpecificBridge,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjProxy class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjProxy class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjProxy,					#isMetaSide : false				},				#parent : @8,				#content : 'I am PjBrowserProxy and I provide a Pharo-side proxy for browser-side Javascript objects.\r\rI provide access to Javascript and DOM objects on the browser.\rMessages sent to my instances will evaluate on the browser allowing creation and manipulation of Javascript and DOM objects.\rThis allows development and debugging of programs on Pharo (using the browser as the UI) for subsequent deployment on the browser.\r\rI should become a subclass of ProtoObject, but there are things to be done first, such as implement isNil, the ifNil:s, class, inspect, Nautilus support methods, etc.  In the meantime, if there is a method that should go to the browser, define it like #confirm:\r\rMy class has a reference to a PjBrowserBridge which has a connection to the browser so that I can execute code on the browser.\r\rExample: \r\r1) highlight and do: " PjProxy startOn: 12345 "\r\r2) now in a browser open localhost:12345\r\r3) in a Playground, you can now access "window", "document" (but you cannot do it in the same playground as the startOn:)\r\r4) When you are finished do: " PjProxy stop "\r\rPublic API and Key Messages\r\r- startOn: - class method to create a port for connection from a browser \r- stop - class method to end the connection\r\rThe values window and document are pre-defined PjBrowserProxy  objects.\rAny message sent to a PjBrowserProxy object will execute on the browser and return a Smalltalk value - either a primitive value or a PjBrowserProxy object.\r  \rInternal Representation and Key Implementation Points.\r\r    Class Variables\r\tbridge:\t\t<PjBrowserBridge> - connection to the browser\r\r    Instance Variables\r\tjsName:\t\t<String> - browser-side name of the value\r\r\r    Implementation Points\r\r- finalization of the Smalltalk object deletes the cached value on the browser\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Proxy,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am PjBrowserProxy and I provide a Pharo-side proxy for browser-side Javascript objects.\r\rI provide access to Javascript and DOM objects on the browser.\rMessages sent to my instances will evaluate on the browser allowing creation and manipulation of Javascript and DOM objects.\rThis allows development and debugging of programs on Pharo (using the browser as the UI) for subsequent deployment on the browser.\r\rI should become a subclass of ProtoObject, but there are things to be done first, such as implement isNil, the ifNil:s, class, inspect, Nautilus support methods, etc.  In the meantime, if there is a method that should go to the browser, define it like #confirm:\r\rMy class has a reference to a PjBrowserBridge which has a connection to the browser so that I can execute code on the browser.\r\rExample: \r\r1) highlight and do: " PjProxy startOn: 12345 "\r\r2) now in a browser open localhost:12345\r\r3) in a Playground, you can now access "window", "document" (but you cannot do it in the same playground as the startOn:)\r\r4) When you are finished do: " PjProxy stop "\r\rPublic API and Key Messages\r\r- startOn: - class method to create a port for connection from a browser \r- stop - class method to end the connection\r\rThe values window and document are pre-defined PjBrowserProxy  objects.\rAny message sent to a PjBrowserProxy object will execute on the browser and return a Smalltalk value - either a primitive value or a PjBrowserProxy object.\r  \rInternal Representation and Key Implementation Points.\r\r    Class Variables\r\tbridge:\t\t<PjBrowserBridge> - connection to the browser\r\r    Instance Variables\r\tjsName:\t\t<String> - browser-side name of the value\r\r\r    Implementation Points\r\r- finalization of the Smalltalk object deletes the cached value on the browser\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2704' ],		#self : OmReference [ '2705' ],		#time : DateAndTime [ '2024-03-03T08:20:51.87-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjProxy subclass: #PjProxyForGlobal\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Proxy\'',				#superclassName : 'PjProxy',				#traitCompositionSource : '{}'			},			#name : #PjProxyForGlobal,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjProxyForGlobal class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjProxyForGlobal class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjProxyForGlobal,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Proxy,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2705' ],		#self : OmReference [ '2706' ],		#time : DateAndTime [ '2024-03-03T08:20:51.872-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjProxy subclass: #PjProxyForGlobal\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Proxy\'',				#superclassName : 'PjProxy',				#traitCompositionSource : '{}'			},			#name : #PjProxyForGlobal,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjProxyForGlobal class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjProxyForGlobal class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjProxyForGlobal,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a proxy for a Javascript named global, such as document, Math, console',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Proxy,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a proxy for a Javascript named global, such as document, Math, console',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2706' ],		#self : OmReference [ '2707' ],		#time : DateAndTime [ '2024-03-03T08:20:51.874-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjProxyFinalizationHandler\r\tinstanceVariableNames: \'weakBridgeArray proxyJsName\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Proxy\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjProxyFinalizationHandler,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxyFinalizationHandler,						#isMetaSide : false					},					#name : #weakBridgeArray,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxyFinalizationHandler,						#isMetaSide : false					},					#name : #proxyJsName,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjProxyFinalizationHandler class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjProxyFinalizationHandler class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjProxyFinalizationHandler,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Proxy,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2707' ],		#self : OmReference [ '2708' ],		#time : DateAndTime [ '2024-03-03T08:20:51.875-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjProxyFinalizationHandler\r\tinstanceVariableNames: \'weakBridgeArray proxyJsName\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Proxy\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjProxyFinalizationHandler,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxyFinalizationHandler,						#isMetaSide : false					},					#name : #weakBridgeArray,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxyFinalizationHandler,						#isMetaSide : false					},					#name : #proxyJsName,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjProxyFinalizationHandler class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjProxyFinalizationHandler class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjProxyFinalizationHandler,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the finilizer for temporary proxy values so they can be removed from the Javascript engine side when no longer referenced by the Pharo side',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Proxy,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the finilizer for temporary proxy values so they can be removed from the Javascript engine side when no longer referenced by the Pharo side',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2708' ],		#self : OmReference [ '2709' ],		#time : DateAndTime [ '2024-03-03T08:20:51.876-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjSinkObject\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Proxy\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjSinkObject,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSinkObject class\r\tinstanceVariableNames: \'default\'',					#traitCompositionSource : '{}'				},				#name : #'PjSinkObject class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjSinkObject class'						},						#name : #default,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSinkObject,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Proxy,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2709' ],		#self : OmReference [ '2710' ],		#time : DateAndTime [ '2024-03-03T08:20:51.877-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjSinkObject\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Proxy\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjSinkObject,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSinkObject class\r\tinstanceVariableNames: \'default\'',					#traitCompositionSource : '{}'				},				#name : #'PjSinkObject class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjSinkObject class'						},						#name : #default,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSinkObject,					#isMetaSide : false				},				#parent : @8,				#content : 'A PjSinkObject is an object that accepts any message. The response is always itself. This is usefull as a placeholder of missing objects, such as javascript globals. It allows partially testing code that relies on Javascript libraries. \r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Proxy,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A PjSinkObject is an object that accepts any message. The response is always itself. This is usefull as a placeholder of missing objects, such as javascript globals. It allows partially testing code that relies on Javascript libraries. \r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2710' ],		#self : OmReference [ '2711' ],		#time : DateAndTime [ '2024-03-03T08:20:51.881-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Bridge-Manifest,		#affectedPackageName : #PharoJs-Base-Bridge	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2711' ],		#self : OmReference [ '2712' ],		#time : DateAndTime [ '2024-03-03T08:20:51.884-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PackageManifest subclass: #ManifestPharoJsBaseBridge\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Manifest\'',				#superclassName : 'PackageManifest',				#traitCompositionSource : '{}'			},			#name : #ManifestPharoJsBaseBridge,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ManifestPharoJsBaseBridge class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ManifestPharoJsBaseBridge class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestPharoJsBaseBridge,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Manifest,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2712' ],		#self : OmReference [ '2713' ],		#time : DateAndTime [ '2024-03-03T08:20:51.885-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PackageManifest subclass: #ManifestPharoJsBaseBridge\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Manifest\'',				#superclassName : 'PackageManifest',				#traitCompositionSource : '{}'			},			#name : #ManifestPharoJsBaseBridge,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ManifestPharoJsBaseBridge class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ManifestPharoJsBaseBridge class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestPharoJsBaseBridge,					#isMetaSide : false				},				#parent : @8,				#content : 'Please describe the package using the class comment of the included manifest class. The manifest class also includes other additional metadata for the package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Manifest,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please describe the package using the class comment of the included manifest class. The manifest class also includes other additional metadata for the package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2713' ],		#self : OmReference [ '2714' ],		#time : DateAndTime [ '2024-03-03T08:20:51.888-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'ZnServerLogEvent subclass: #PjSocketLogEvent\r\tinstanceVariableNames: \'direction contents\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Kernel\'',				#superclassName : 'ZnServerLogEvent',				#traitCompositionSource : '{}'			},			#name : #PjSocketLogEvent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSocketLogEvent,						#isMetaSide : false					},					#name : #direction,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSocketLogEvent,						#isMetaSide : false					},					#name : #contents,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSocketLogEvent class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSocketLogEvent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSocketLogEvent,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2714' ],		#self : OmReference [ '2715' ],		#time : DateAndTime [ '2024-03-03T08:20:51.889-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'ZnServerLogEvent subclass: #PjSocketLogEvent\r\tinstanceVariableNames: \'direction contents\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Kernel\'',				#superclassName : 'ZnServerLogEvent',				#traitCompositionSource : '{}'			},			#name : #PjSocketLogEvent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSocketLogEvent,						#isMetaSide : false					},					#name : #direction,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSocketLogEvent,						#isMetaSide : false					},					#name : #contents,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSocketLogEvent class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSocketLogEvent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSocketLogEvent,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a log event subclassed from ZnLogEvent that is used to log webSocket I/O\r\rI am usually used at an extended loglevel of 4',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a log event subclassed from ZnLogEvent that is used to log webSocket I/O\r\rI am usually used at an extended loglevel of 4',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2715' ],		#self : OmReference [ '2716' ],		#time : DateAndTime [ '2024-03-03T08:20:51.89-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'ProcessLocalVariable subclass: #PjProxyLocalBridge\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Proxy\'',				#superclassName : 'ProcessLocalVariable',				#traitCompositionSource : '{}'			},			#name : #PjProxyLocalBridge,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjProxyLocalBridge class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjProxyLocalBridge class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjProxyLocalBridge,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Proxy,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2716' ],		#self : OmReference [ '2717' ],		#time : DateAndTime [ '2024-03-03T08:20:51.891-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'ProcessLocalVariable subclass: #PjProxyLocalBridge\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Proxy\'',				#superclassName : 'ProcessLocalVariable',				#traitCompositionSource : '{}'			},			#name : #PjProxyLocalBridge,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjProxyLocalBridge class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjProxyLocalBridge class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjProxyLocalBridge,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a ProcessLocalVariable that contains the PjBridge in use by this process.\r\rThis allows us to simultaneously debug multiple applications (for example a client and a server.)\r\rThis is used by PjProxy.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Proxy,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a ProcessLocalVariable that contains the PjBridge in use by this process.\r\rThis allows us to simultaneously debug multiple applications (for example a client and a server.)\r\rThis is used by PjProxy.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2717' ],		#self : OmReference [ '2718' ],		#time : DateAndTime [ '2024-03-03T08:20:51.894-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjProxyInfo\r\tinstanceVariableNames: \'remove oid globalName\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjNodeGlobals\'\r\tpackage: \'PharoJs-Base-Bridge-Proxy\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjProxyInfo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxyInfo,						#isMetaSide : false					},					#name : #remove,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxyInfo,						#isMetaSide : false					},					#name : #oid,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxyInfo,						#isMetaSide : false					},					#name : #globalName,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjProxyInfo class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjProxyInfo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjProxyInfo,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Proxy,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxyInfo,						#isMetaSide : false					},					#name : #PjNodeGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2718' ],		#self : OmReference [ '2719' ],		#time : DateAndTime [ '2024-03-03T08:20:51.896-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Bridge-Client-WebSocketDelegate,		#affectedPackageName : #PharoJs-Base-Bridge	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2719' ],		#self : OmReference [ '2720' ],		#time : DateAndTime [ '2024-03-03T08:20:51.898-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjProxyManager\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'currentId\'\r\tpoolDictionaries: \'PjNodeGlobals\'\r\tpackage: \'PharoJs-Base-Bridge-Client-WebSocketDelegate\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjProxyManager,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjProxyManager class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjProxyManager class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjProxyManager,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxyManager,						#isMetaSide : false					},					#name : #currentId,					#parent : @8				}			],			#category : #PharoJs-Base-Bridge-Client-WebSocketDelegate,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxyManager,						#isMetaSide : false					},					#name : #PjNodeGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2720' ],		#self : OmReference [ '2721' ],		#time : DateAndTime [ '2024-03-03T08:20:51.899-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjProxyManager\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'currentId\'\r\tpoolDictionaries: \'PjNodeGlobals\'\r\tpackage: \'PharoJs-Base-Bridge-Client-WebSocketDelegate\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjProxyManager,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjProxyManager class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjProxyManager class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjProxyManager,					#isMetaSide : false				},				#parent : @8,				#content : 'Utility class to managed proxies',				#stamp : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxyManager,						#isMetaSide : false					},					#name : #currentId,					#parent : @8				}			],			#category : #PharoJs-Base-Bridge-Client-WebSocketDelegate,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxyManager,						#isMetaSide : false					},					#name : #PjNodeGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'Utility class to managed proxies',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2721' ],		#self : OmReference [ '2722' ],		#time : DateAndTime [ '2024-03-03T08:20:51.903-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjWebsocketDelegate\r\tinstanceVariableNames: \'webSocket id\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjNodeGlobals\'\r\tpackage: \'PharoJs-Base-Bridge-Client-WebSocketDelegate\'',				#superclassName : 'PjObject',				#traitCompositionSource : '{}'			},			#name : #PjWebsocketDelegate,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWebsocketDelegate,						#isMetaSide : false					},					#name : #webSocket,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWebsocketDelegate,						#isMetaSide : false					},					#name : #id,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjWebsocketDelegate class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjWebsocketDelegate class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjWebsocketDelegate,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-WebSocketDelegate,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWebsocketDelegate,						#isMetaSide : false					},					#name : #PjNodeGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2722' ],		#self : OmReference [ '2723' ],		#time : DateAndTime [ '2024-03-03T08:20:51.906-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjObject subclass: #PjWebsocketDelegate\r\tinstanceVariableNames: \'webSocket id\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjNodeGlobals\'\r\tpackage: \'PharoJs-Base-Bridge-Client-WebSocketDelegate\'',				#superclassName : 'PjObject',				#traitCompositionSource : '{}'			},			#name : #PjWebsocketDelegate,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWebsocketDelegate,						#isMetaSide : false					},					#name : #webSocket,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWebsocketDelegate,						#isMetaSide : false					},					#name : #id,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjWebsocketDelegate class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjWebsocketDelegate class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjWebsocketDelegate,					#isMetaSide : false				},				#parent : @8,				#content : 'A PjWebSocketDelegate is a wrapper for a JavaScript websocket. It provides entry points for subclasses to perform some actions during the websocket lifecycle \r\rIn production, the code of this class is translated to javascript and run on the client side.\r\rInstance Variables\r\twebSocket:\t\t<JavaScript WebSocket>\r\rwebSocket\r\t- WebSocket created at the JavaScript client side\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-WebSocketDelegate,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWebsocketDelegate,						#isMetaSide : false					},					#name : #PjNodeGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'A PjWebSocketDelegate is a wrapper for a JavaScript websocket. It provides entry points for subclasses to perform some actions during the websocket lifecycle \r\rIn production, the code of this class is translated to javascript and run on the client side.\r\rInstance Variables\r\twebSocket:\t\t<JavaScript WebSocket>\r\rwebSocket\r\t- WebSocket created at the JavaScript client side\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2723' ],		#self : OmReference [ '2724' ],		#time : DateAndTime [ '2024-03-03T08:20:51.909-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebsocketDelegate subclass: #PjEvaluatorWebsocketDelegate\r\tinstanceVariableNames: \'bridgeUrlString shouldRetryToConnectToServer\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-WebSocketDelegate\'',				#superclassName : 'PjWebsocketDelegate',				#traitCompositionSource : '{}'			},			#name : #PjEvaluatorWebsocketDelegate,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjEvaluatorWebsocketDelegate,						#isMetaSide : false					},					#name : #bridgeUrlString,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjEvaluatorWebsocketDelegate,						#isMetaSide : false					},					#name : #shouldRetryToConnectToServer,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjEvaluatorWebsocketDelegate class\r\tinstanceVariableNames: \'default\'',					#traitCompositionSource : '{}'				},				#name : #'PjEvaluatorWebsocketDelegate class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjEvaluatorWebsocketDelegate class'						},						#name : #default,						#parent : @17					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjEvaluatorWebsocketDelegate,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-WebSocketDelegate,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2724' ],		#self : OmReference [ '2725' ],		#time : DateAndTime [ '2024-03-03T08:20:51.91-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebsocketDelegate subclass: #PjEvaluatorWebsocketDelegate\r\tinstanceVariableNames: \'bridgeUrlString shouldRetryToConnectToServer\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-WebSocketDelegate\'',				#superclassName : 'PjWebsocketDelegate',				#traitCompositionSource : '{}'			},			#name : #PjEvaluatorWebsocketDelegate,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjEvaluatorWebsocketDelegate,						#isMetaSide : false					},					#name : #bridgeUrlString,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjEvaluatorWebsocketDelegate,						#isMetaSide : false					},					#name : #shouldRetryToConnectToServer,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjEvaluatorWebsocketDelegate class\r\tinstanceVariableNames: \'default\'',					#traitCompositionSource : '{}'				},				#name : #'PjEvaluatorWebsocketDelegate class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjEvaluatorWebsocketDelegate class'						},						#name : #default,						#parent : @17					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjEvaluatorWebsocketDelegate,					#isMetaSide : false				},				#parent : @8,				#content : 'A PjEvaluatorWebSocketDelegate is a wrapper for websocket that evaluates received JavaScript code (see onMessage: ). It allows the bridge to control the client (see PjBridge>>#eval:).\r\rIn production, the code of this class is translated to javascript and run on the client side.\r\r\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-WebSocketDelegate,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A PjEvaluatorWebSocketDelegate is a wrapper for websocket that evaluates received JavaScript code (see onMessage: ). It allows the bridge to control the client (see PjBridge>>#eval:).\r\rIn production, the code of this class is translated to javascript and run on the client side.\r\r\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2725' ],		#self : OmReference [ '2726' ],		#time : DateAndTime [ '2024-03-03T08:20:51.913-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjEvaluatorWebsocketDelegate subclass: #PjLoggingEvaluatorWebsocketDelegate\r\tinstanceVariableNames: \'logElementId\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-WebSocketDelegate\'',				#superclassName : 'PjEvaluatorWebsocketDelegate',				#traitCompositionSource : '{}'			},			#name : #PjLoggingEvaluatorWebsocketDelegate,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjLoggingEvaluatorWebsocketDelegate,						#isMetaSide : false					},					#name : #logElementId,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjLoggingEvaluatorWebsocketDelegate class\r\tinstanceVariableNames: \'logElementId\'',					#traitCompositionSource : '{}'				},				#name : #'PjLoggingEvaluatorWebsocketDelegate class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjLoggingEvaluatorWebsocketDelegate class'						},						#name : #logElementId,						#parent : @15					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjLoggingEvaluatorWebsocketDelegate,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-WebSocketDelegate,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2726' ],		#self : OmReference [ '2727' ],		#time : DateAndTime [ '2024-03-03T08:20:51.914-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjEvaluatorWebsocketDelegate subclass: #PjLoggingEvaluatorWebsocketDelegate\r\tinstanceVariableNames: \'logElementId\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Client-WebSocketDelegate\'',				#superclassName : 'PjEvaluatorWebsocketDelegate',				#traitCompositionSource : '{}'			},			#name : #PjLoggingEvaluatorWebsocketDelegate,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjLoggingEvaluatorWebsocketDelegate,						#isMetaSide : false					},					#name : #logElementId,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjLoggingEvaluatorWebsocketDelegate class\r\tinstanceVariableNames: \'logElementId\'',					#traitCompositionSource : '{}'				},				#name : #'PjLoggingEvaluatorWebsocketDelegate class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjLoggingEvaluatorWebsocketDelegate class'						},						#name : #logElementId,						#parent : @15					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjLoggingEvaluatorWebsocketDelegate,					#isMetaSide : false				},				#parent : @8,				#content : 'A PjLoggingEvaluatorWebSocketDelegate is websocket wrapper that logs the web socket activity. It is run on the client side typically for debug and test purpose.\r\rIn production, the code of this class is translated to javascript and run on the client side.\r\r\rInstance Variables\r\tlogElementId:\t\t<String>\r\rlogElementId\r\t- ID of the element in which logs are written\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Client-WebSocketDelegate,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A PjLoggingEvaluatorWebSocketDelegate is websocket wrapper that logs the web socket activity. It is run on the client side typically for debug and test purpose.\r\rIn production, the code of this class is translated to javascript and run on the client side.\r\r\rInstance Variables\r\tlogElementId:\t\t<String>\r\rlogElementId\r\t- ID of the element in which logs are written\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2727' ],		#self : OmReference [ '2728' ],		#time : DateAndTime [ '2024-03-03T08:20:51.916-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Error subclass: #PjJavascriptError\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Kernel\'',				#superclassName : 'Error',				#traitCompositionSource : '{}'			},			#name : #PjJavascriptError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjJavascriptError class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjJavascriptError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjJavascriptError,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2728' ],		#self : OmReference [ '2729' ],		#time : DateAndTime [ '2024-03-03T08:20:51.917-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Error subclass: #PjJavascriptError\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Kernel\'',				#superclassName : 'Error',				#traitCompositionSource : '{}'			},			#name : #PjJavascriptError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjJavascriptError class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjJavascriptError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjJavascriptError,					#isMetaSide : false				},				#parent : @8,				#content : 'A PjJavaScriptError is an exception raised when the execution at the JavaScript side leads to an exception.\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A PjJavaScriptError is an exception raised when the execution at the JavaScript side leads to an exception.\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2729' ],		#self : OmReference [ '2730' ],		#time : DateAndTime [ '2024-03-03T08:20:51.918-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDomController subclass: #PjMessage\r\tinstanceVariableNames: \'contents id\'\r\tclassVariableNames: \'currentId\'\r\tpackage: \'PharoJs-Base-Bridge-Messages\'',				#superclassName : 'PjDomController',				#traitCompositionSource : '{}'			},			#name : #PjMessage,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessage,						#isMetaSide : false					},					#name : #contents,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessage,						#isMetaSide : false					},					#name : #id,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessage class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessage class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessage,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessage,						#isMetaSide : false					},					#name : #currentId,					#parent : @8				}			],			#category : #PharoJs-Base-Bridge-Messages,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2730' ],		#self : OmReference [ '2731' ],		#time : DateAndTime [ '2024-03-03T08:20:51.92-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjMessage subclass: #PjMessageC2s\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Messages\'',				#superclassName : 'PjMessage',				#traitCompositionSource : '{}'			},			#name : #PjMessageC2s,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageC2s class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageC2s class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageC2s,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Messages,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2731' ],		#self : OmReference [ '2732' ],		#time : DateAndTime [ '2024-03-03T08:20:51.921-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjMessageC2s subclass: #PjMessageC2sInResponseTo\r\tinstanceVariableNames: \'inResponseToId\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Messages\'',				#superclassName : 'PjMessageC2s',				#traitCompositionSource : '{}'			},			#name : #PjMessageC2sInResponseTo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageC2sInResponseTo,						#isMetaSide : false					},					#name : #inResponseToId,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageC2sInResponseTo class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageC2sInResponseTo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageC2sInResponseTo,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Messages,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2732' ],		#self : OmReference [ '2733' ],		#time : DateAndTime [ '2024-03-03T08:20:51.922-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjMessageC2sInResponseTo subclass: #PjMessageErrorResponse\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Messages\'',				#superclassName : 'PjMessageC2sInResponseTo',				#traitCompositionSource : '{}'			},			#name : #PjMessageErrorResponse,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageErrorResponse class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageErrorResponse class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageErrorResponse,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Messages,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2733' ],		#self : OmReference [ '2734' ],		#time : DateAndTime [ '2024-03-03T08:20:51.923-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjMessageC2sInResponseTo subclass: #PjMessageEvaluationResponse\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Messages\'',				#superclassName : 'PjMessageC2sInResponseTo',				#traitCompositionSource : '{}'			},			#name : #PjMessageEvaluationResponse,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageEvaluationResponse class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageEvaluationResponse class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageEvaluationResponse,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Messages,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2734' ],		#self : OmReference [ '2735' ],		#time : DateAndTime [ '2024-03-03T08:20:51.925-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjMessageC2sInResponseTo subclass: #PjMessageGetKeysResponse\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Messages\'',				#superclassName : 'PjMessageC2sInResponseTo',				#traitCompositionSource : '{}'			},			#name : #PjMessageGetKeysResponse,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageGetKeysResponse class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageGetKeysResponse class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageGetKeysResponse,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Messages,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2735' ],		#self : OmReference [ '2736' ],		#time : DateAndTime [ '2024-03-03T08:20:51.926-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjMessageC2s subclass: #PjMessageCallback\r\tinstanceVariableNames: \'receiverProxyInfo eventProxyInfo eventTargetProxyInfo\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Messages\'',				#superclassName : 'PjMessageC2s',				#traitCompositionSource : '{}'			},			#name : #PjMessageCallback,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageCallback,						#isMetaSide : false					},					#name : #receiverProxyInfo,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageCallback,						#isMetaSide : false					},					#name : #eventProxyInfo,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageCallback,						#isMetaSide : false					},					#name : #eventTargetProxyInfo,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageCallback class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageCallback class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageCallback,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Messages,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2736' ],		#self : OmReference [ '2737' ],		#time : DateAndTime [ '2024-03-03T08:20:51.927-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjMessageC2s subclass: #PjMessageInspect\r\tinstanceVariableNames: \'subjectProxyInfo\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Messages\'',				#superclassName : 'PjMessageC2s',				#traitCompositionSource : '{}'			},			#name : #PjMessageInspect,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageInspect,						#isMetaSide : false					},					#name : #subjectProxyInfo,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageInspect class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageInspect class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageInspect,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Messages,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2737' ],		#self : OmReference [ '2738' ],		#time : DateAndTime [ '2024-03-03T08:20:51.928-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjMessageC2s subclass: #PjMessageSetClientId\r\tinstanceVariableNames: \'clientId\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Messages\'',				#superclassName : 'PjMessageC2s',				#traitCompositionSource : '{}'			},			#name : #PjMessageSetClientId,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageSetClientId,						#isMetaSide : false					},					#name : #clientId,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageSetClientId class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageSetClientId class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageSetClientId,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Messages,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2738' ],		#self : OmReference [ '2739' ],		#time : DateAndTime [ '2024-03-03T08:20:51.929-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjMessage subclass: #PjMessageS2c\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Messages\'',				#superclassName : 'PjMessage',				#traitCompositionSource : '{}'			},			#name : #PjMessageS2c,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageS2c class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageS2c class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageS2c,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Messages,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2739' ],		#self : OmReference [ '2740' ],		#time : DateAndTime [ '2024-03-03T08:20:51.931-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjMessageS2c subclass: #PjMessageDeleteGlobalVar\r\tinstanceVariableNames: \'varName\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Messages\'',				#superclassName : 'PjMessageS2c',				#traitCompositionSource : '{}'			},			#name : #PjMessageDeleteGlobalVar,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageDeleteGlobalVar,						#isMetaSide : false					},					#name : #varName,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageDeleteGlobalVar class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageDeleteGlobalVar class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageDeleteGlobalVar,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Messages,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2740' ],		#self : OmReference [ '2741' ],		#time : DateAndTime [ '2024-03-03T08:20:51.933-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjMessageS2c subclass: #PjMessageEvaluateJavascript\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Messages\'',				#superclassName : 'PjMessageS2c',				#traitCompositionSource : '{}'			},			#name : #PjMessageEvaluateJavascript,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageEvaluateJavascript class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageEvaluateJavascript class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageEvaluateJavascript,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Messages,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2741' ],		#self : OmReference [ '2742' ],		#time : DateAndTime [ '2024-03-03T08:20:51.933-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjMessageS2c subclass: #PjMessageGetKeys\r\tinstanceVariableNames: \'proxyInfo\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Messages\'',				#superclassName : 'PjMessageS2c',				#traitCompositionSource : '{}'			},			#name : #PjMessageGetKeys,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageGetKeys,						#isMetaSide : false					},					#name : #proxyInfo,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageGetKeys class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageGetKeys class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageGetKeys,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Messages,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2742' ],		#self : OmReference [ '2743' ],		#time : DateAndTime [ '2024-03-03T08:20:51.935-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjMessageS2c subclass: #PjMessageMakeBlockClosureProxy\r\tinstanceVariableNames: \'stopPropagation includeEventTarget\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Messages\'',				#superclassName : 'PjMessageS2c',				#traitCompositionSource : '{}'			},			#name : #PjMessageMakeBlockClosureProxy,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageMakeBlockClosureProxy,						#isMetaSide : false					},					#name : #stopPropagation,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageMakeBlockClosureProxy,						#isMetaSide : false					},					#name : #includeEventTarget,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageMakeBlockClosureProxy class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageMakeBlockClosureProxy class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageMakeBlockClosureProxy,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Messages,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2743' ],		#self : OmReference [ '2744' ],		#time : DateAndTime [ '2024-03-03T08:20:51.938-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjMessageS2c subclass: #PjMessageReload\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Messages\'',				#superclassName : 'PjMessageS2c',				#traitCompositionSource : '{}'			},			#name : #PjMessageReload,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageReload class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageReload class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageReload,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Messages,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2744' ],		#self : OmReference [ '2745' ],		#time : DateAndTime [ '2024-03-03T08:20:51.94-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjMessageS2c subclass: #PjMessageSetEventListener\r\tinstanceVariableNames: \'targetProxyInfo listenerProxyInfo eventName\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Messages\'',				#superclassName : 'PjMessageS2c',				#traitCompositionSource : '{}'			},			#name : #PjMessageSetEventListener,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageSetEventListener,						#isMetaSide : false					},					#name : #targetProxyInfo,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageSetEventListener,						#isMetaSide : false					},					#name : #listenerProxyInfo,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMessageSetEventListener,						#isMetaSide : false					},					#name : #eventName,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageSetEventListener class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageSetEventListener class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageSetEventListener,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Messages,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2745' ],		#self : OmReference [ '2746' ],		#time : DateAndTime [ '2024-03-03T08:20:51.941-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjMessageS2c subclass: #PjMessageTerminate\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Messages\'',				#superclassName : 'PjMessageS2c',				#traitCompositionSource : '{}'			},			#name : #PjMessageTerminate,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMessageTerminate class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMessageTerminate class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMessageTerminate,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Messages,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2746' ],		#self : OmReference [ '2747' ],		#time : DateAndTime [ '2024-03-03T08:20:51.942-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'ZnSingleThreadedServer subclass: #PjServer\r\tinstanceVariableNames: \'timing webSocket\'\r\tclassVariableNames: \'LastUsedPort\'\r\tpackage: \'PharoJs-Base-Bridge-Obsolete\'',				#superclassName : 'ZnSingleThreadedServer',				#traitCompositionSource : '{}'			},			#name : #PjServer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjServer,						#isMetaSide : false					},					#name : #timing,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjServer,						#isMetaSide : false					},					#name : #webSocket,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjServer class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjServer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjServer,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjServer,						#isMetaSide : false					},					#name : #LastUsedPort,					#parent : @8				}			],			#category : #PharoJs-Base-Bridge-Obsolete,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2747' ],		#self : OmReference [ '2748' ],		#time : DateAndTime [ '2024-03-03T08:20:51.943-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'ZnSingleThreadedServer subclass: #PjServer\r\tinstanceVariableNames: \'timing webSocket\'\r\tclassVariableNames: \'LastUsedPort\'\r\tpackage: \'PharoJs-Base-Bridge-Obsolete\'',				#superclassName : 'ZnSingleThreadedServer',				#traitCompositionSource : '{}'			},			#name : #PjServer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjServer,						#isMetaSide : false					},					#name : #timing,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjServer,						#isMetaSide : false					},					#name : #webSocket,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjServer class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjServer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjServer,					#isMetaSide : false				},				#parent : @8,				#content : 'A PjServer is a server that manages a websocket used by the bridge to run/control javascript code on the client\r\rInstance Variables\r\ttiming:\t\t<Object>\r\twebSocket:\t\t<ZnWebSocket>\r',				#stamp : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjServer,						#isMetaSide : false					},					#name : #LastUsedPort,					#parent : @8				}			],			#category : #PharoJs-Base-Bridge-Obsolete,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A PjServer is a server that manages a websocket used by the bridge to run/control javascript code on the client\r\rInstance Variables\r\ttiming:\t\t<Object>\r\twebSocket:\t\t<ZnWebSocket>\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2748' ],		#self : OmReference [ '2749' ],		#time : DateAndTime [ '2024-03-03T08:20:51.944-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'STONReader subclass: #PjSTONReader\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Kernel\'',				#superclassName : 'STONReader',				#traitCompositionSource : '{}'			},			#name : #PjSTONReader,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSTONReader class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSTONReader class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSTONReader,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2749' ],		#self : OmReference [ '2750' ],		#time : DateAndTime [ '2024-03-03T08:20:51.945-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'STONReader subclass: #PjSTONReader\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Kernel\'',				#superclassName : 'STONReader',				#traitCompositionSource : '{}'			},			#name : #PjSTONReader,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSTONReader class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSTONReader class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSTONReader,					#isMetaSide : false				},				#parent : @8,				#content : 'I extend STONReader to include Infinity -Infinity and NaN',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I extend STONReader to include Infinity -Infinity and NaN',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2750' ],		#self : OmReference [ '2751' ],		#time : DateAndTime [ '2024-03-03T08:20:51.945-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Message subclass: #PjJavascriptMessage\r\tinstanceVariableNames: \'receiverId\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Kernel\'',				#superclassName : 'Message',				#traitCompositionSource : '{}'			},			#name : #PjJavascriptMessage,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjJavascriptMessage,						#isMetaSide : false					},					#name : #receiverId,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjJavascriptMessage class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjJavascriptMessage class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjJavascriptMessage,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2751' ],		#self : OmReference [ '2752' ],		#time : DateAndTime [ '2024-03-03T08:20:51.948-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Message subclass: #PjJavascriptMessage\r\tinstanceVariableNames: \'receiverId\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Kernel\'',				#superclassName : 'Message',				#traitCompositionSource : '{}'			},			#name : #PjJavascriptMessage,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjJavascriptMessage,						#isMetaSide : false					},					#name : #receiverId,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjJavascriptMessage class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjJavascriptMessage class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjJavascriptMessage,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent a message to be evaluated on the Javascript side.\r\rI extend the standard Message class, with a receiver.\r\rThe transpiler converts me to Javascript in a special way.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I represent a message to be evaluated on the Javascript side.\r\rI extend the standard Message class, with a receiver.\r\rThe transpiler converts me to Javascript in a special way.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2752' ],		#self : OmReference [ '2753' ],		#time : DateAndTime [ '2024-03-03T08:20:51.955-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'ZnDefaultServerDelegate subclass: #PjBridgeServerDelegate\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Kernel\'',				#superclassName : 'ZnDefaultServerDelegate',				#traitCompositionSource : '{}'			},			#name : #PjBridgeServerDelegate,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBridgeServerDelegate class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBridgeServerDelegate class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBridgeServerDelegate,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Kernel,			#package : #PharoJs-Base-Bridge,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2753' ],		#self : OmReference [ '2754' ],		#time : DateAndTime [ '2024-03-03T08:20:53.306-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebBridgeClient,				#isMetaSide : false			},			#name : #openBrowserInBackground,			#protocol : #actions,			#sourceCode : 'openBrowserInBackground\r\r\t^ openBrowserInBackground ifNil: [ false ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2754' ],		#self : OmReference [ '2755' ],		#time : DateAndTime [ '2024-03-03T08:20:53.307-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebBridgeClient,				#isMetaSide : false			},			#name : #'openBrowserInBackground:',			#protocol : #actions,			#sourceCode : 'openBrowserInBackground: aBoolean\r\r\topenBrowserInBackground := aBoolean',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2755' ],		#self : OmReference [ '2756' ],		#time : DateAndTime [ '2024-03-03T08:20:53.307-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebBridgeClient,				#isMetaSide : false			},			#name : #'openWebBrowserOn:',			#protocol : #actions,			#sourceCode : 'openWebBrowserOn: urlString\r\r\tWebBrowser\r\t\topenOn: urlString \r\t\tinBackground: self openBrowserInBackground',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2756' ],		#self : OmReference [ '2757' ],		#time : DateAndTime [ '2024-03-03T08:20:53.307-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebBridgeClient,				#isMetaSide : false			},			#name : #reset,			#protocol : #initialization,			#sourceCode : 'reset\r\tself sendMessage: PjMessageReload new.\r\tself resetProxiesImmediately.\r\tsuper reset',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2757' ],		#self : OmReference [ '2758' ],		#time : DateAndTime [ '2024-03-03T08:20:53.308-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebBridgeClient,				#isMetaSide : false			},			#name : #'sendMessage:',			#protocol : #actions,			#sourceCode : 'sendMessage: aMessage\r\tself bridge sendMessage: aMessage',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2758' ],		#self : OmReference [ '2759' ],		#time : DateAndTime [ '2024-03-03T08:20:53.308-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebBridgeClient,				#isMetaSide : false			},			#name : #startJsInterpreter,			#protocol : #actions,			#sourceCode : 'startJsInterpreter\r\r\tWebBrowser\r\t\topenOn: self urlString\r\t\tinBackground: self openBrowserInBackground',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2759' ],		#self : OmReference [ '2760' ],		#time : DateAndTime [ '2024-03-03T08:20:53.308-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebBridgeClient,				#isMetaSide : false			},			#name : #urlString,			#protocol : #accessing,			#sourceCode : 'urlString\r\r\tself explicitRequirement',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2760' ],		#self : OmReference [ '2761' ],		#time : DateAndTime [ '2024-03-03T08:20:53.309-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Object,				#isMetaSide : false			},			#name : #asLocalObject,			#protocol : #'*PharoJs-Base-Bridge',			#sourceCode : 'asLocalObject\r\r\t^ self',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2761' ],		#self : OmReference [ '2762' ],		#time : DateAndTime [ '2024-03-03T08:20:53.309-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridge class',				#isMetaSide : true			},			#name : #'bridgeForAppClass:',			#protocol : #'instance creation',			#sourceCode : 'bridgeForAppClass: appClass\r\r\t^ self bridgeForAppClass: appClass client: appClass newBridgeClient',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2762' ],		#self : OmReference [ '2763' ],		#time : DateAndTime [ '2024-03-03T08:20:53.309-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridge class',				#isMetaSide : true			},			#name : #'bridgeForAppClass:client:',			#protocol : #'instance creation',			#sourceCode : 'bridgeForAppClass: appClass client: bridgeClient\r\r\t^ self new\r\t\t  initializeWithClient: bridgeClient;\r\t\t  initializeWithAppClass: appClass;\r\t\t  yourself',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2763' ],		#self : OmReference [ '2764' ],		#time : DateAndTime [ '2024-03-03T08:20:53.309-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridge class',				#isMetaSide : true			},			#name : #debugClass,			#protocol : #accessing,			#sourceCode : 'debugClass\r\r\t^ self',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2764' ],		#self : OmReference [ '2765' ],		#time : DateAndTime [ '2024-03-03T08:20:53.309-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridge class',				#isMetaSide : true			},			#name : #defaultApp,			#protocol : #accessing,			#sourceCode : 'defaultApp\r\r\t^ PjWebApplication',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2765' ],		#self : OmReference [ '2766' ],		#time : DateAndTime [ '2024-03-03T08:20:53.309-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridge class',				#isMetaSide : true			},			#name : #defaultClientClass,			#protocol : #accessing,			#sourceCode : 'defaultClientClass\r\r\t^ self defaultApp bridgeClientClass',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2766' ],		#self : OmReference [ '2767' ],		#time : DateAndTime [ '2024-03-03T08:20:53.31-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridge class',				#isMetaSide : true			},			#name : #'openOn:title:',			#protocol : #'instance creation',			#sourceCode : 'openOn: portNumber title: title\r\r\t^ self new\r\t\t  openOn: portNumber title: title;\r\t\t  yourself',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2767' ],		#self : OmReference [ '2768' ],		#time : DateAndTime [ '2024-03-03T08:20:53.31-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridge class',				#isMetaSide : true			},			#name : #soleBridge,			#protocol : #'bridge handling',			#sourceCode : 'soleBridge\r\t^ PjProxyLocalBridge value\r\t" the following is a hack to make debugging workable if there is only 1 bridge in existence "\r\t\tifNil: [ | instances |\r\t\t\tinstances := self allInstances select: #isServerStarted.\r\t\t\tinstances size = 1 ifTrue: [ instances first ] ifFalse: [ nil ]\r\t\t]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2768' ],		#self : OmReference [ '2769' ],		#time : DateAndTime [ '2024-03-03T08:20:53.31-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridge class',				#isMetaSide : true			},			#name : #'soleBridge:',			#protocol : #'bridge handling',			#sourceCode : 'soleBridge: aBridge\r\r\tPjProxyLocalBridge value: aBridge',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2769' ],		#self : OmReference [ '2770' ],		#time : DateAndTime [ '2024-03-03T08:20:53.31-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridge class',				#isMetaSide : true			},			#name : #'startOn:title:',			#protocol : #'instance creation',			#sourceCode : 'startOn: portNumber title: title\r\r\t^ (self bridgeForAppClass: self defaultApp)\r\t\t  startOn: portNumber title: title;\r\t\t  yourself',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2770' ],		#self : OmReference [ '2771' ],		#time : DateAndTime [ '2024-03-03T08:20:53.31-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridge class',				#isMetaSide : true			},			#name : #stop,			#protocol : #'bridge handling',			#sourceCode : 'stop\r\t<script>\r\t\r\tself soleBridge ifNotNil: [ \r\t\tself soleBridge stop.\r\t\tself soleBridge: nil.\r\t\tSmalltalk garbageCollect ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2771' ],		#self : OmReference [ '2772' ],		#time : DateAndTime [ '2024-03-03T08:20:53.31-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'acceptIncomingMessageFromClient:',			#protocol : #actions,			#sourceCode : 'acceptIncomingMessageFromClient: aMessage\r\r\taMessage shouldEvaluateImmediately\r\t\tifTrue: [ aMessage processWithBridge: self.\r\t\t\tmonitor critical: [ monitor signal ].\r\t\t\t^ self ].\r\tmonitor\r\t\tcritical: [ self incomingMessages add: aMessage.\r\t\t\tmonitor signal ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2772' ],		#self : OmReference [ '2773' ],		#time : DateAndTime [ '2024-03-03T08:20:53.31-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #blockClosures,			#protocol : #'closure handling',			#sourceCode : 'blockClosures\r\r\t^ blockClosures ifNil: [ blockClosures := IdentityDictionary new ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2773' ],		#self : OmReference [ '2774' ],		#time : DateAndTime [ '2024-03-03T08:20:53.31-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #client,			#protocol : #accessing,			#sourceCode : 'client\r\r\t^ client',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2774' ],		#self : OmReference [ '2775' ],		#time : DateAndTime [ '2024-03-03T08:20:53.31-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #clientTitle,			#protocol : #initialization,			#sourceCode : 'clientTitle\r\r\t^ self client title',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2775' ],		#self : OmReference [ '2776' ],		#time : DateAndTime [ '2024-03-03T08:20:53.31-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'convertToJs:',			#protocol : #public,			#sourceCode : 'convertToJs: anObject\r\r\t^ self exporter convertToJs: anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2776' ],		#self : OmReference [ '2777' ],		#time : DateAndTime [ '2024-03-03T08:20:53.311-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #defaultClientClass,			#protocol : #accessing,			#sourceCode : 'defaultClientClass\r\r\t^ self class defaultClientClass',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2777' ],		#self : OmReference [ '2778' ],		#time : DateAndTime [ '2024-03-03T08:20:53.311-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'deleteBlockClosure:',			#protocol : #'closure handling',			#sourceCode : 'deleteBlockClosure: aBlockClosure\r\r\tself blockClosures removeKey: aBlockClosure ifAbsent: [  ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2778' ],		#self : OmReference [ '2779' ],		#time : DateAndTime [ '2024-03-03T08:20:53.311-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'deleteJsValue:',			#protocol : #'bridge handling',			#sourceCode : 'deleteJsValue: jsName\r\t"Called by proxy finalizer see methode PjProxy>>jsName:onBridge:"\r\t<PjTodo: \'should use PjProxyInfo\'>\r\t\r\tself proxies removeKey: jsName ifAbsent: [  ].\r\tself isServerStopped ifTrue: [ ^ self ].\r\tself sendMessage: (PjMessageDeleteGlobalVar newForVarName: jsName).\r\t^ proxies',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2779' ],		#self : OmReference [ '2780' ],		#time : DateAndTime [ '2024-03-03T08:20:53.311-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'disableWriteDnuDuring:',			#protocol : #evaluating,			#sourceCode : 'disableWriteDnuDuring: aBlockClosure\r\r\t^ self transpiler disableWriteDnuDuring: aBlockClosure',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2780' ],		#self : OmReference [ '2781' ],		#time : DateAndTime [ '2024-03-03T08:20:53.311-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #dnuJsString,			#protocol : #evaluating,			#sourceCode : 'dnuJsString\r\r\t^ self transpiler dnuJsString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2781' ],		#self : OmReference [ '2782' ],		#time : DateAndTime [ '2024-03-03T08:20:53.311-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'doInNewFrame:',			#protocol : #initialization,			#sourceCode : 'doInNewFrame: aBlock\r\r\tincomingMessageFrames add: OrderedCollection new.\r\taBlock value.\r\tincomingMessageFrames removeLast',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2782' ],		#self : OmReference [ '2783' ],		#time : DateAndTime [ '2024-03-03T08:20:53.311-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #enableClientLogging,			#protocol : #public,			#sourceCode : 'enableClientLogging\r\r\tself initializeWithClient: self client withClientLogging',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2783' ],		#self : OmReference [ '2784' ],		#time : DateAndTime [ '2024-03-03T08:20:53.311-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'ensureProxyForEventListenerBlock:',			#protocol : #'closure handling',			#sourceCode : 'ensureProxyForEventListenerBlock: aBlockClosure\r\r\t^ self blockClosures\r\t\tat: aBlockClosure\r\t\tifAbsentPut: [ | thisArg includeEventTarget msg proxy |\r\t\t\t(aBlockClosure isKindOf: BlockClosure)\r\t\t\t\tifFalse: [ ^ PjJavascriptError signal: \'Must be a BlockClosure\' ].\r\t\t\taBlockClosure hasMethodReturn\r\t\t\t\tifTrue: [ ^ PjJavascriptError signal: \'Block cannot have return\' ].\r\t\t\tthisArg := aBlockClosure argumentNames\r\t\t\t\tfindFirst: [ :name | name = \'this\' ].\r\t\t\tincludeEventTarget := thisArg > 0.\r\t\t\tmsg := PjMessageMakeBlockClosureProxy newWithId.\r\t\t\tmsg includeEventTarget: includeEventTarget.\r\t\t\tmsg stopPropagation: true.\r\t\t\tproxy := self sendMessageAndWaitForResponse: msg.\r\t\t\tproxy closure: aBlockClosure.\r\t\t\tproxy ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2784' ],		#self : OmReference [ '2785' ],		#time : DateAndTime [ '2024-03-03T08:20:53.311-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'evalBlock:',			#protocol : #public,			#sourceCode : 'evalBlock: aBlock\r\r\t^ self evalJavascript: (self convertToJs: aBlock asValuedBlock)',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2785' ],		#self : OmReference [ '2786' ],		#time : DateAndTime [ '2024-03-03T08:20:53.312-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'evalJavascript:',			#protocol : #public,			#sourceCode : 'evalJavascript: javaScriptString\r\r\t| msg |\r\tself isConnected ifFalse: [ ^ nil ].\r\tmsg := PjMessageEvaluateJavascript newWithContents: javaScriptString.\r\t^ self sendMessageAndWaitForResponse: msg',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2786' ],		#self : OmReference [ '2787' ],		#time : DateAndTime [ '2024-03-03T08:20:53.312-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'evalJavascriptWithDnuFrom:',			#protocol : #public,			#sourceCode : 'evalJavascriptWithDnuFrom: aBlock\r\r\t| jsBlockCode jsDnuCode |\r\tjsBlockCode := self disableWriteDnuDuring: aBlock.\r\tjsDnuCode := self dnuJsString.\r\t^ self evalJavascript: jsDnuCode , jsBlockCode',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2787' ],		#self : OmReference [ '2788' ],		#time : DateAndTime [ '2024-03-03T08:20:53.312-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'evalMessage:',			#protocol : #public,			#sourceCode : 'evalMessage: jsMessage\r\r\t^ self evalJavascriptWithDnuFrom: [ self convertToJs: jsMessage ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2788' ],		#self : OmReference [ '2789' ],		#time : DateAndTime [ '2024-03-03T08:20:53.312-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'evalMessage:sentTo:',			#protocol : #public,			#sourceCode : 'evalMessage: aMessage sentTo: receiverJsID\r\r\t^self evalSelector: aMessage selector sentTo: receiverJsID args: aMessage arguments\r',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2789' ],		#self : OmReference [ '2790' ],		#time : DateAndTime [ '2024-03-03T08:20:53.312-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'evalSelector:sentTo:',			#protocol : #public,			#sourceCode : 'evalSelector: aSymbol sentTo: receiverJsID\r\r\t^self evalSelector: aSymbol sentTo: receiverJsID args: #()',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2790' ],		#self : OmReference [ '2791' ],		#time : DateAndTime [ '2024-03-03T08:20:53.312-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'evalSelector:sentTo:args:',			#protocol : #public,			#sourceCode : 'evalSelector: aSymbol sentTo: receiverJsID args: args\r\r\t| jsMessage |\r\tjsMessage := PjJavascriptMessage\r\t\t             receiverId: receiverJsID\r\t\t             selector: aSymbol\r\t\t             arguments: args.\r\t^ self evalMessage: jsMessage',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2791' ],		#self : OmReference [ '2792' ],		#time : DateAndTime [ '2024-03-03T08:20:53.312-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #executeCallbacksUntilDepletion,			#protocol : #actions,			#sourceCode : 'executeCallbacksUntilDepletion\r\r\t[ \r\tself takeNextCallbackFromIncomingMessages\r\t\tifNil: [ ^ self ]\r\t\tifNotNil: [ :cb | \r\t\tself doInNewFrame: [ cb processCallbackWithBridge: self ] ] ] repeat',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2792' ],		#self : OmReference [ '2793' ],		#time : DateAndTime [ '2024-03-03T08:20:53.312-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #exporter,			#protocol : #accessing,			#sourceCode : 'exporter\r\r\t^ self client exporter',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2793' ],		#self : OmReference [ '2794' ],		#time : DateAndTime [ '2024-03-03T08:20:53.312-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #incomingMessages,			#protocol : #accessing,			#sourceCode : 'incomingMessages\r\r\t^ incomingMessageFrames last',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2794' ],		#self : OmReference [ '2795' ],		#time : DateAndTime [ '2024-03-03T08:20:53.313-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'incomingResponseMessageForSentMessage:',			#protocol : #evaluating,			#sourceCode : 'incomingResponseMessageForSentMessage: aMsg\r\r\t^ self incomingMessages\r\t\t  detect: [ :msg | \r\t\t  msg inResponseToId = aMsg id and: [ msg isCallback not ] ]\r\t\t  ifNone: [ nil ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2795' ],		#self : OmReference [ '2796' ],		#time : DateAndTime [ '2024-03-03T08:20:53.313-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\r\tsuper initialize.\r\tincomingMessageFrames := OrderedCollection with:\r\t\t                         OrderedCollection new.\r\tshouldStartJsInterpreter := true.\r\tself server: self serverClass new.\r\tself finalizationRegistry add: self executor: (ObjectFinalizer new\r\t\t\t receiver: self server;\r\t\t\t selector: #stop;\r\t\t\t yourself).\r\tmonitor := Monitor new',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2796' ],		#self : OmReference [ '2797' ],		#time : DateAndTime [ '2024-03-03T08:20:53.313-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'initializeWithAppClass:',			#protocol : #accessing,			#sourceCode : 'initializeWithAppClass: aPharoJsAppClass\r\r\tself client initializeWithAppClass: aPharoJsAppClass.\r\tself client initializeWithBridge: self',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2797' ],		#self : OmReference [ '2798' ],		#time : DateAndTime [ '2024-03-03T08:20:53.313-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'initializeWithClient:',			#protocol : #accessing,			#sourceCode : 'initializeWithClient: aClient\r\r\tclient := aClient.\r\tclient initializeWithBridge: self',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2798' ],		#self : OmReference [ '2799' ],		#time : DateAndTime [ '2024-03-03T08:20:53.313-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #isClientIdReceived,			#protocol : #actions,			#sourceCode : 'isClientIdReceived\r\r\t^ self client clientId notNil',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2799' ],		#self : OmReference [ '2800' ],		#time : DateAndTime [ '2024-03-03T08:20:53.313-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #isConnected,			#protocol : #public,			#sourceCode : 'isConnected\r\r\tself webSocket ifNil: [ ^ false ].\r\t^ self webSocket isConnected',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2800' ],		#self : OmReference [ '2801' ],		#time : DateAndTime [ '2024-03-03T08:20:53.313-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #isListening,			#protocol : #public,			#sourceCode : 'isListening\r\r\t^ self server isListening',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2801' ],		#self : OmReference [ '2802' ],		#time : DateAndTime [ '2024-03-03T08:20:53.313-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #isServerStarted,			#protocol : #public,			#sourceCode : 'isServerStarted\r\r\t^ self server ifNil: [ false ] ifNotNil: [ :s | s isStarted ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2802' ],		#self : OmReference [ '2803' ],		#time : DateAndTime [ '2024-03-03T08:20:53.313-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #isServerStopped,			#protocol : #public,			#sourceCode : 'isServerStopped\r\r\t^ self server ifNil: [ true ] ifNotNil: [ self server isStarted not ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2803' ],		#self : OmReference [ '2804' ],		#time : DateAndTime [ '2024-03-03T08:20:53.313-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'jsGlobalAt:',			#protocol : #public,			#sourceCode : 'jsGlobalAt: globalID\r\r\t^ self evalJavascript: globalID',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2804' ],		#self : OmReference [ '2805' ],		#time : DateAndTime [ '2024-03-03T08:20:53.314-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'loadAllClasses:',			#protocol : #public,			#sourceCode : 'loadAllClasses: classes\r\r\t| javaScriptClassesDefinition |\r\tjavaScriptClassesDefinition := self exporter convertAllClassesToJs:\r\t\t                               classes.\r\tself evalJavascript: javaScriptClassesDefinition.\r\t^ classes',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2805' ],		#self : OmReference [ '2806' ],		#time : DateAndTime [ '2024-03-03T08:20:53.314-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'loadClass:',			#protocol : #public,			#sourceCode : 'loadClass: aClass\r\r\tself loadAllClasses: { aClass }.\r\t^ aClass',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2806' ],		#self : OmReference [ '2807' ],		#time : DateAndTime [ '2024-03-03T08:20:53.314-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #minimumStepDuration,			#protocol : #actions,			#sourceCode : 'minimumStepDuration\r\r\t^ 25 milliSeconds',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2807' ],		#self : OmReference [ '2808' ],		#time : DateAndTime [ '2024-03-03T08:20:53.314-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'openOn:',			#protocol : #actions,			#sourceCode : 'openOn: portNumber\r\r\tself openOn: portNumber title: \'PharoJS\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2808' ],		#self : OmReference [ '2809' ],		#time : DateAndTime [ '2024-03-03T08:20:53.314-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'openOn:test:',			#protocol : #actions,			#sourceCode : 'openOn: portNumber test: aTestCase\r\r\t^ self openOn: portNumber title: (self titleForTest: aTestCase)',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2809' ],		#self : OmReference [ '2810' ],		#time : DateAndTime [ '2024-03-03T08:20:53.314-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'openOn:title:',			#protocol : #actions,			#sourceCode : 'openOn: portNumber title: title\r\r\t| clientGenerator |\r\tclientGenerator := self client codeGenerator.\r\ttitle ifNotNil: [ clientGenerator titleString: title ].\r\tself port: portNumber',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2810' ],		#self : OmReference [ '2811' ],		#time : DateAndTime [ '2024-03-03T08:20:53.314-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #port,			#protocol : #accessing,			#sourceCode : 'port\r\r\t^ self server port',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2811' ],		#self : OmReference [ '2812' ],		#time : DateAndTime [ '2024-03-03T08:20:53.314-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'port:',			#protocol : #initialization,			#sourceCode : 'port: portNumber\r\r\tself server port: portNumber',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2812' ],		#self : OmReference [ '2813' ],		#time : DateAndTime [ '2024-03-03T08:20:53.314-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #proxies,			#protocol : #accessing,			#sourceCode : 'proxies\r\r\t^ proxies ifNil: [ proxies := WeakValueDictionary new ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2813' ],		#self : OmReference [ '2814' ],		#time : DateAndTime [ '2024-03-03T08:20:53.315-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #resetClient,			#protocol : #public,			#sourceCode : 'resetClient\r\r\t| oldWebSocket |\r\toldWebSocket := self webSocket.\r\tself client reset.\r\tself\r\t\twhen: [ self webSocket ~~ oldWebSocket ]\r\t\tdo: [ oldWebSocket isConnected\r\t\t\t\tifTrue: [ oldWebSocket close ] ]\r\t\tonTimeOutDo: [ self error: \'Client did NOT reconnect!\' ]\r\t\ttimeOutDuration: self client startTimeout.\r\tself waitForClientToStart',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2814' ],		#self : OmReference [ '2815' ],		#time : DateAndTime [ '2024-03-03T08:20:53.315-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #resetProxiesImmediately,			#protocol : #initialization,			#sourceCode : 'resetProxiesImmediately\r\t"Leaving this to garbage collection leads to inpredictable results,\r\tbecause finalizations might occur in a next (reloaded) client JS session"\r\r\tself proxies do: [ :v | \r\t\t(self finalizationRegistry remove: v ifAbsent: [ nil ]) ifNotNil: [ \r\t\t\t:finalizerItem | "finalizerItem finalizeValues""For now, NOT executing the finalizations (which sends delete proxy messages to the client), because of unknown problems.\r\t\t\t\t\tThis should be made synchronous anyway by waiting for acknowledgement from client.\r\t\t\t\t\tFor now, removing them (inactivating) is enough, we only execute this method when we no further need the client."\r\t\t\t ].\r\t\ttrue ].\r\tproxies := nil\r\t"Smalltalk garbageCollect. "',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2815' ],		#self : OmReference [ '2816' ],		#time : DateAndTime [ '2024-03-03T08:20:53.315-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #restart,			#protocol : #public,			#sourceCode : 'restart\r\r\tself\r\t\tstop;\r\t\tstart',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2816' ],		#self : OmReference [ '2817' ],		#time : DateAndTime [ '2024-03-03T08:20:53.315-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'sendMessage:',			#protocol : #actions,			#sourceCode : 'sendMessage: aMessage\r\r\t[ \r\tself webSocket ifNotNil: [ :ws | \r\t\tws sendMessage: aMessage asPhxJsonString.\r\t\tself server logSocketWritten: aMessage logDescription ] ]\r\t\ton: Error\r\t\tdo: [ :ex | ex return ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2817' ],		#self : OmReference [ '2818' ],		#time : DateAndTime [ '2024-03-03T08:20:53.315-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'sendMessageAndWaitForResponse:',			#protocol : #public,			#sourceCode : 'sendMessageAndWaitForResponse: msg\r\r\t| responseMsg resultForSentMessage |\r\tself sendMessage: msg.\r\tmonitor critical: [ \r\t\tmonitor waitUntil: [ \r\t\t\tresponseMsg := self incomingResponseMessageForSentMessage: msg.\r\t\t\tresponseMsg notNil ] ].\r\tresultForSentMessage := self valueFromResponseMessage: responseMsg.\r\tself executeCallbacksUntilDepletion.\r\t^ resultForSentMessage',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2818' ],		#self : OmReference [ '2819' ],		#time : DateAndTime [ '2024-03-03T08:20:53.315-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #server,			#protocol : #accessing,			#sourceCode : 'server\r\r\t^ server',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2819' ],		#self : OmReference [ '2820' ],		#time : DateAndTime [ '2024-03-03T08:20:53.315-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'server:',			#protocol : #accessing,			#sourceCode : 'server: aServer\r\r\tserver := aServer.\r\taServer ifNotNil: [ aServer bridge: self ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2820' ],		#self : OmReference [ '2821' ],		#time : DateAndTime [ '2024-03-03T08:20:53.315-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #serverAddress,			#protocol : #accessing,			#sourceCode : 'serverAddress\r\r\tself shouldBeImplemented',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2821' ],		#self : OmReference [ '2822' ],		#time : DateAndTime [ '2024-03-03T08:20:53.316-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #serverClass,			#protocol : #initialization,			#sourceCode : 'serverClass\r\r\t^ PjBridgeServer',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2822' ],		#self : OmReference [ '2823' ],		#time : DateAndTime [ '2024-03-03T08:20:53.316-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #serverUrl,			#protocol : #accessing,			#sourceCode : 'serverUrl\r\r\t^ self server url',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2823' ],		#self : OmReference [ '2824' ],		#time : DateAndTime [ '2024-03-03T08:20:53.316-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'serverUrl:',			#protocol : #accessing,			#sourceCode : 'serverUrl: aString\r\r\t^ self server serverUrl: aString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2824' ],		#self : OmReference [ '2825' ],		#time : DateAndTime [ '2024-03-03T08:20:53.316-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'setExtraBindings:',			#protocol : #public,			#sourceCode : 'setExtraBindings: aDictionary\r\r\t^ self exporter setExtraBindings: aDictionary',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2825' ],		#self : OmReference [ '2826' ],		#time : DateAndTime [ '2024-03-03T08:20:53.316-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #shouldStartJsInterpreter,			#protocol : #accessing,			#sourceCode : 'shouldStartJsInterpreter\r\r\t^ shouldStartJsInterpreter',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2826' ],		#self : OmReference [ '2827' ],		#time : DateAndTime [ '2024-03-03T08:20:53.316-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'shouldStartJsInterpreter:',			#protocol : #accessing,			#sourceCode : 'shouldStartJsInterpreter: aBoolean\r\r\tshouldStartJsInterpreter := aBoolean',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2827' ],		#self : OmReference [ '2828' ],		#time : DateAndTime [ '2024-03-03T08:20:53.316-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #start,			#protocol : #public,			#sourceCode : 'start\r\r\tself\r\t\tstartWithoutWaitingForClient;\r\t\twaitForClientToStart',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2828' ],		#self : OmReference [ '2829' ],		#time : DateAndTime [ '2024-03-03T08:20:53.317-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #startJsInterpreter,			#protocol : #public,			#sourceCode : 'startJsInterpreter\r\r\tself client startJsInterpreter.\r\tself waitForClientToStart',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2829' ],		#self : OmReference [ '2830' ],		#time : DateAndTime [ '2024-03-03T08:20:53.317-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'startOn:title:',			#protocol : #actions,			#sourceCode : 'startOn: portNumber title: title\r\r\tself\r\t\topenOn: portNumber title: title;\r\t\tstart',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2830' ],		#self : OmReference [ '2831' ],		#time : DateAndTime [ '2024-03-03T08:20:53.317-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #startWithoutWaitingForClient,			#protocol : #public,			#sourceCode : 'startWithoutWaitingForClient\r\r\tself server start.\r\tself client start',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2831' ],		#self : OmReference [ '2832' ],		#time : DateAndTime [ '2024-03-03T08:20:53.317-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #stop,			#protocol : #public,			#sourceCode : 'stop\r\r\tself client stop.\r\tself server ifNotNil: [ self server stop ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2832' ],		#self : OmReference [ '2833' ],		#time : DateAndTime [ '2024-03-03T08:20:53.317-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #takeNextCallbackFromIncomingMessages,			#protocol : #actions,			#sourceCode : 'takeNextCallbackFromIncomingMessages\r\r\tself incomingMessages\r\t\tdetect: [ :msg | msg isCallback ]\r\t\tifFound: [ :cb | \r\t\t\tself incomingMessages remove: cb.\r\t\t\t^ cb ]\r\t\tifNone: [ ^ nil ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2833' ],		#self : OmReference [ '2834' ],		#time : DateAndTime [ '2024-03-03T08:20:53.317-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #public,			#sourceCode : 'tearDown\r\r\tself stop.\r\tself server ifNotNil: [ \r\t\tself server tearDown.\r\t\tself server: nil ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2834' ],		#self : OmReference [ '2835' ],		#time : DateAndTime [ '2024-03-03T08:20:53.317-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #terminateClient,			#protocol : #public,			#sourceCode : 'terminateClient\r\r\tself isConnected ifFalse: [ ^ self ].\r\tself client stop.\r\tself webSocket close',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2835' ],		#self : OmReference [ '2836' ],		#time : DateAndTime [ '2024-03-03T08:20:53.317-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #timeout,			#protocol : #evaluating,			#sourceCode : 'timeout\r\r\t^ timeout ifNil: [ 10 seconds ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2836' ],		#self : OmReference [ '2837' ],		#time : DateAndTime [ '2024-03-03T08:20:53.317-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'timeout:',			#protocol : #evaluating,			#sourceCode : 'timeout: aDuration\r\r\ttimeout := (aDuration isKindOf: Duration)\r\t\t           ifTrue: [ aDuration ]\r\t\t           ifFalse: [ aDuration seconds ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2837' ],		#self : OmReference [ '2838' ],		#time : DateAndTime [ '2024-03-03T08:20:53.317-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'titleForTest:',			#protocol : #initialization,			#sourceCode : 'titleForTest: aTest\r\r\t^ aTest className , \'>>#\' , aTest selector',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2838' ],		#self : OmReference [ '2839' ],		#time : DateAndTime [ '2024-03-03T08:20:53.318-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #transpiler,			#protocol : #accessing,			#sourceCode : 'transpiler\r\r\t^ self exporter transpiler',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2839' ],		#self : OmReference [ '2840' ],		#time : DateAndTime [ '2024-03-03T08:20:53.318-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'valueFromResponseMessage:',			#protocol : #actions,			#sourceCode : 'valueFromResponseMessage: responseMsg\r\r\t| result |\r\tself incomingMessages remove: responseMsg.\r\tresult := responseMsg getValueWithBridge: self.\r\tresult := result isClosure\r\t\t          ifTrue: [ result value ]\r\t\t          ifFalse: [ result ].\r\t^ result',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2840' ],		#self : OmReference [ '2841' ],		#time : DateAndTime [ '2024-03-03T08:20:53.318-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #waitForClientToStart,			#protocol : #actions,			#sourceCode : 'waitForClientToStart\r\r\tself waitForClientToStartFor: self client startTimeout',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2841' ],		#self : OmReference [ '2842' ],		#time : DateAndTime [ '2024-03-03T08:20:53.318-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'waitForClientToStartFor:',			#protocol : #actions,			#sourceCode : 'waitForClientToStartFor: time\r\r\tmonitor critical: [ \r\t\tmonitor\r\t\t\twaitUntil: [ self isClientIdReceived ]\r\t\t\tmaxMilliseconds: time asMilliSeconds ].\r\tself isClientIdReceived ifFalse: [ \r\t\tself error: \'Javascript interpreter NOT available\' ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2842' ],		#self : OmReference [ '2843' ],		#time : DateAndTime [ '2024-03-03T08:20:53.318-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'waitForClientToStartFor:doing:',			#protocol : #actions,			#sourceCode : 'waitForClientToStartFor: time doing: aBlock\r\r\tself\r\t\twhen: [ \r\t\t\taBlock value.\r\t\t\tself isConnected ]\r\t\tdo: [ ^ self ]\r\t\tonTimeOutDo: [ self error: \'Javascript interpreter NOT available\' ]\r\t\ttimeOutDuration: time',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2843' ],		#self : OmReference [ '2844' ],		#time : DateAndTime [ '2024-03-03T08:20:53.318-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #webSocket,			#protocol : #accessing,			#sourceCode : 'webSocket\r\r\t^ self server webSocket',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2844' ],		#self : OmReference [ '2845' ],		#time : DateAndTime [ '2024-03-03T08:20:53.318-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #webSocketUrlTag,			#protocol : #accessing,			#sourceCode : 'webSocketUrlTag\r\r\t^ self server webSocketUrlTag',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2845' ],		#self : OmReference [ '2846' ],		#time : DateAndTime [ '2024-03-03T08:20:53.319-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #websocketDelegateClass,			#protocol : #initialization,			#sourceCode : 'websocketDelegateClass\r\r\t^ self client websocketDelegateClass',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2846' ],		#self : OmReference [ '2847' ],		#time : DateAndTime [ '2024-03-03T08:20:53.319-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #websocketDelegateClassName,			#protocol : #initialization,			#sourceCode : 'websocketDelegateClassName\r\r\t^ self client websocketDelegateClassName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2847' ],		#self : OmReference [ '2848' ],		#time : DateAndTime [ '2024-03-03T08:20:53.319-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'when:do:onTimeOutDo:timeOutDuration:',			#protocol : #actions,			#sourceCode : 'when: conditionBlock do: actionBlock onTimeOutDo: failureBlock timeOutDuration: maxWaitDuration\r\r\t| waitTime |\r\twaitTime := maxWaitDuration / 100.\r\twaitTime < self minimumStepDuration ifTrue: [ \r\t\twaitTime := self minimumStepDuration ].\r\t100 timesRepeat: [ \r\t\tconditionBlock value ifTrue: [ ^ actionBlock value ].\r\t\twaitTime wait ].\r\t^ failureBlock value',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2848' ],		#self : OmReference [ '2849' ],		#time : DateAndTime [ '2024-03-03T08:20:53.319-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridgeAppClassDecorator class',				#isMetaSide : true			},			#name : #'rawAppClass:',			#protocol : #'instance creation',			#sourceCode : 'rawAppClass: anAppClass\r\r\t^ self new\r\t\t  rawAppClass: anAppClass;\r\t\t  yourself',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2849' ],		#self : OmReference [ '2850' ],		#time : DateAndTime [ '2024-03-03T08:20:53.319-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridgeAppClassDecorator class',				#isMetaSide : true			},			#name : #websocketDelegateClass,			#protocol : #accessing,			#sourceCode : 'websocketDelegateClass\r\r\t^ PjEvaluatorWebsocketDelegate',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2850' ],		#self : OmReference [ '2851' ],		#time : DateAndTime [ '2024-03-03T08:20:53.32-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeAppClassDecorator,				#isMetaSide : false			},			#name : #afterExportApp,			#protocol : #exporting,			#sourceCode : 'afterExportApp\r\r\trawAppClass afterExportApp',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2851' ],		#self : OmReference [ '2852' ],		#time : DateAndTime [ '2024-03-03T08:20:53.32-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeAppClassDecorator,				#isMetaSide : false			},			#name : #appClasses,			#protocol : #accessing,			#sourceCode : 'appClasses\r\r\t^ self rawAppClass appClasses , self classesForBridgeClient',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2852' ],		#self : OmReference [ '2853' ],		#time : DateAndTime [ '2024-03-03T08:20:53.32-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeAppClassDecorator,				#isMetaSide : false			},			#name : #appLaunchBlock,			#protocol : #accessing,			#sourceCode : 'appLaunchBlock\r\r\t| appClass webSocketDelegateClass url |\r\tappClass := self rawAppClass.\r\twebSocketDelegateClass := self websocketDelegateClass.\r\turl := self bridgeWebSocketUrl.\r\t^ [ \r\t  appClass start.\r\t  webSocketDelegateClass connectDefaultToUrl: url ] asClosedBlock',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2853' ],		#self : OmReference [ '2854' ],		#time : DateAndTime [ '2024-03-03T08:20:53.32-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeAppClassDecorator,				#isMetaSide : false			},			#name : #appPackages,			#protocol : #accessing,			#sourceCode : 'appPackages\r\r\t^ self rawAppClass appPackages',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2854' ],		#self : OmReference [ '2855' ],		#time : DateAndTime [ '2024-03-03T08:20:53.32-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeAppClassDecorator,				#isMetaSide : false			},			#name : #beforeExportApp,			#protocol : #exporting,			#sourceCode : 'beforeExportApp \r\trawAppClass beforeExportApp',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2855' ],		#self : OmReference [ '2856' ],		#time : DateAndTime [ '2024-03-03T08:20:53.32-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeAppClassDecorator,				#isMetaSide : false			},			#name : #bridge,			#protocol : #accessing,			#sourceCode : 'bridge\r\r\t^ bridge',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2856' ],		#self : OmReference [ '2857' ],		#time : DateAndTime [ '2024-03-03T08:20:53.32-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeAppClassDecorator,				#isMetaSide : false			},			#name : #'bridge:',			#protocol : #accessing,			#sourceCode : 'bridge: anObject\r\r\tbridge := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2857' ],		#self : OmReference [ '2858' ],		#time : DateAndTime [ '2024-03-03T08:20:53.32-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeAppClassDecorator,				#isMetaSide : false			},			#name : #bridgeUrl,			#protocol : #accessing,			#sourceCode : 'bridgeUrl\r\r\t^ self bridge serverUrl',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2858' ],		#self : OmReference [ '2859' ],		#time : DateAndTime [ '2024-03-03T08:20:53.32-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeAppClassDecorator,				#isMetaSide : false			},			#name : #bridgeWebSocketUrl,			#protocol : #accessing,			#sourceCode : 'bridgeWebSocketUrl\r\r\t| rawUrl |\r\trawUrl := self bridgeUrl / self webSocketUrlTag.\r\t^ \'ws:\' , (rawUrl asString copyAfter: $:)',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2859' ],		#self : OmReference [ '2860' ],		#time : DateAndTime [ '2024-03-03T08:20:53.32-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeAppClassDecorator,				#isMetaSide : false			},			#name : #classesForBridgeClient,			#protocol : #accessing,			#sourceCode : 'classesForBridgeClient\r\r\t^ self websocketDelegateClass allSuperclasses',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2860' ],		#self : OmReference [ '2861' ],		#time : DateAndTime [ '2024-03-03T08:20:53.32-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeAppClassDecorator,				#isMetaSide : false			},			#name : #globalsPools,			#protocol : #polyfill,			#sourceCode : 'globalsPools\r\r\t^ self rawAppClass globalsPools',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2861' ],		#self : OmReference [ '2862' ],		#time : DateAndTime [ '2024-03-03T08:20:53.321-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeAppClassDecorator,				#isMetaSide : false			},			#name : #headerLine,			#protocol : #accessing,			#sourceCode : 'headerLine\r\r\t^ self rawAppClass headerLine',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2862' ],		#self : OmReference [ '2863' ],		#time : DateAndTime [ '2024-03-03T08:20:53.321-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeAppClassDecorator,				#isMetaSide : false			},			#name : #pharoJsSelectorPrefix,			#protocol : #accessing,			#sourceCode : 'pharoJsSelectorPrefix\r\t<pharoJsSkip>\r\t\r\t^ rawAppClass pharoJsSelectorPrefix',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2863' ],		#self : OmReference [ '2864' ],		#time : DateAndTime [ '2024-03-03T08:20:53.321-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeAppClassDecorator,				#isMetaSide : false			},			#name : #'polyfill:withTranspiler:unlessIn:',			#protocol : #polyfill,			#sourceCode : 'polyfill: aPolyfillClass withTranspiler: aTranspiler unlessIn: aSet\r\r\tself rawAppClass\r\t\tpolyfill: aPolyfillClass\r\t\twithTranspiler: aTranspiler\r\t\tunlessIn: aSet',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2864' ],		#self : OmReference [ '2865' ],		#time : DateAndTime [ '2024-03-03T08:20:53.321-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeAppClassDecorator,				#isMetaSide : false			},			#name : #rawAppClass,			#protocol : #accessing,			#sourceCode : 'rawAppClass\r\r\t^ rawAppClass',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2865' ],		#self : OmReference [ '2866' ],		#time : DateAndTime [ '2024-03-03T08:20:53.321-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeAppClassDecorator,				#isMetaSide : false			},			#name : #'rawAppClass:',			#protocol : #accessing,			#sourceCode : 'rawAppClass: anObject\r\r\trawAppClass := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2866' ],		#self : OmReference [ '2867' ],		#time : DateAndTime [ '2024-03-03T08:20:53.321-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeAppClassDecorator,				#isMetaSide : false			},			#name : #setupCode,			#protocol : #accessing,			#sourceCode : 'setupCode\r\r\t^ self rawAppClass setupCode',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2867' ],		#self : OmReference [ '2868' ],		#time : DateAndTime [ '2024-03-03T08:20:53.321-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeAppClassDecorator,				#isMetaSide : false			},			#name : #webSocketUrlTag,			#protocol : #accessing,			#sourceCode : 'webSocketUrlTag\r\r\t^ self bridge webSocketUrlTag',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2868' ],		#self : OmReference [ '2869' ],		#time : DateAndTime [ '2024-03-03T08:20:53.321-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeAppClassDecorator,				#isMetaSide : false			},			#name : #websocketDelegateClass,			#protocol : #accessing,			#sourceCode : 'websocketDelegateClass\r\r\t^ self class websocketDelegateClass',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2869' ],		#self : OmReference [ '2870' ],		#time : DateAndTime [ '2024-03-03T08:20:53.321-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjLoggingClientBridgeAppClassDecorator class',				#isMetaSide : true			},			#name : #websocketDelegateClass,			#protocol : #accessing,			#sourceCode : 'websocketDelegateClass\r\r\t^ PjLoggingEvaluatorWebsocketDelegate',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2870' ],		#self : OmReference [ '2871' ],		#time : DateAndTime [ '2024-03-03T08:20:53.322-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridgeClient class',				#isMetaSide : true			},			#name : #'newWithAppClass:',			#protocol : #'instance creation',			#sourceCode : 'newWithAppClass: pjAppClass\r\r\t^ self new\r\t\t  initializeWithAppClass: pjAppClass;\r\t\t  yourself',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2871' ],		#self : OmReference [ '2872' ],		#time : DateAndTime [ '2024-03-03T08:20:53.322-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #appClass,			#protocol : #accessing,			#sourceCode : 'appClass\r\r\t^ appClass ifNil: [ self defaultAppClass ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2872' ],		#self : OmReference [ '2873' ],		#time : DateAndTime [ '2024-03-03T08:20:53.322-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #bridge,			#protocol : #accessing,			#sourceCode : 'bridge\r\r\t^ bridge',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2873' ],		#self : OmReference [ '2874' ],		#time : DateAndTime [ '2024-03-03T08:20:53.322-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #clientId,			#protocol : #accessing,			#sourceCode : 'clientId\r\r\t^ clientId',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2874' ],		#self : OmReference [ '2875' ],		#time : DateAndTime [ '2024-03-03T08:20:53.322-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #'clientId:',			#protocol : #accessing,			#sourceCode : 'clientId: anObject\r\r\tclientId := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2875' ],		#self : OmReference [ '2876' ],		#time : DateAndTime [ '2024-03-03T08:20:53.322-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #codeGenerator,			#protocol : #accessing,			#sourceCode : 'codeGenerator\r\r\t^ codeGenerator',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2876' ],		#self : OmReference [ '2877' ],		#time : DateAndTime [ '2024-03-03T08:20:53.322-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #'codeGenerator:',			#protocol : #accessing,			#sourceCode : 'codeGenerator: aCodeGenerator\r\r\t| decoratedAppClass |\r\tcodeGenerator := aCodeGenerator.\r\tdecoratedAppClass := codeGenerator decorateAppClass: appClass.\r\texporter initializeWithAppClass: decoratedAppClass',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2877' ],		#self : OmReference [ '2878' ],		#time : DateAndTime [ '2024-03-03T08:20:53.322-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #codeGeneratorClass,			#protocol : #accessing,			#sourceCode : 'codeGeneratorClass\r\r\tself codeGenerator ifNil: [ ^ PjClientCodeGenerator ].\r\t^ self codeGenerator species\r\t"Allows keeping the behavior upon reseting the client in the bridge. See PjBridge>>#resetClient"',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2878' ],		#self : OmReference [ '2879' ],		#time : DateAndTime [ '2024-03-03T08:20:53.322-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #defaultAppClass,			#protocol : #'accessing - defaults',			#sourceCode : 'defaultAppClass\r\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2879' ],		#self : OmReference [ '2880' ],		#time : DateAndTime [ '2024-03-03T08:20:53.323-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #exporter,			#protocol : #accessing,			#sourceCode : 'exporter\r\r\t^ exporter',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2880' ],		#self : OmReference [ '2881' ],		#time : DateAndTime [ '2024-03-03T08:20:53.323-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #exporterClass,			#protocol : #accessing,			#sourceCode : 'exporterClass\r\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2881' ],		#self : OmReference [ '2882' ],		#time : DateAndTime [ '2024-03-03T08:20:53.323-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #'initializeWithAppClass:',			#protocol : #accessing,			#sourceCode : 'initializeWithAppClass: aPharoJsAppClass\r\r\tappClass := aPharoJsAppClass.\r\texporter := self exporterClass new.\r\tself codeGenerator: self codeGeneratorClass new',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2882' ],		#self : OmReference [ '2883' ],		#time : DateAndTime [ '2024-03-03T08:20:53.323-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #'initializeWithBridge:',			#protocol : #accessing,			#sourceCode : 'initializeWithBridge: aBridge\r\r\tbridge := aBridge.\r\tself codeGenerator bridge: self bridge',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2883' ],		#self : OmReference [ '2884' ],		#time : DateAndTime [ '2024-03-03T08:20:53.323-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #jsGlobalNames,			#protocol : #accessing,			#sourceCode : 'jsGlobalNames\r\r\t^ (self appClass allSharedPoolsRecursive select:\r\t\t   #isJavascriptGlobalsPool) flatCollectAsSet: #classVarNames',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2884' ],		#self : OmReference [ '2885' ],		#time : DateAndTime [ '2024-03-03T08:20:53.323-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #'openBrowserInBackground:',			#protocol : #accessing,			#sourceCode : 'openBrowserInBackground: aBoolean\r\t"Useful only for Browser apps"\r\r\t^ self',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2885' ],		#self : OmReference [ '2886' ],		#time : DateAndTime [ '2024-03-03T08:20:53.323-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #pharoJsSelectorPrefix,			#protocol : #accessing,			#sourceCode : 'pharoJsSelectorPrefix\r\r\t^ exporter transpiler pharoJsSelectorPrefix',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2886' ],		#self : OmReference [ '2887' ],		#time : DateAndTime [ '2024-03-03T08:20:53.323-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #reset,			#protocol : #initialization,			#sourceCode : 'reset\r\r\tself initializeWithAppClass: self appClass.\r\tself initializeWithBridge:  self bridge.\r\tself clientId: nil.\r\t"Ensure transpiler is reset correctly.\r\tTranspiler is driven by exporter"\r\tString streamContents: [ :aStream | self exporter writeJsCodeOn: aStream ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2887' ],		#self : OmReference [ '2888' ],		#time : DateAndTime [ '2024-03-03T08:20:53.323-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #resetProxiesImmediately,			#protocol : #initialization,			#sourceCode : 'resetProxiesImmediately\r\tself bridge resetProxiesImmediately',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2888' ],		#self : OmReference [ '2889' ],		#time : DateAndTime [ '2024-03-03T08:20:53.323-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #server,			#protocol : #accessing,			#sourceCode : 'server\r\r\t^ self bridge server',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2889' ],		#self : OmReference [ '2890' ],		#time : DateAndTime [ '2024-03-03T08:20:53.324-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #shouldStartJsInterpreter,			#protocol : #accessing,			#sourceCode : 'shouldStartJsInterpreter\r\r\t^ self bridge shouldStartJsInterpreter',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2890' ],		#self : OmReference [ '2891' ],		#time : DateAndTime [ '2024-03-03T08:20:53.324-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #start,			#protocol : #actions,			#sourceCode : 'start\r\r\tself shouldStartJsInterpreter ifTrue: [ self startJsInterpreter ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2891' ],		#self : OmReference [ '2892' ],		#time : DateAndTime [ '2024-03-03T08:20:53.324-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #startJsInterpreter,			#protocol : #actions,			#sourceCode : 'startJsInterpreter\r\t"start javascript interpreter"\r\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2892' ],		#self : OmReference [ '2893' ],		#time : DateAndTime [ '2024-03-03T08:20:53.324-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #startTimeout,			#protocol : #actions,			#sourceCode : 'startTimeout\r\r\t^ 2 seconds',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2893' ],		#self : OmReference [ '2894' ],		#time : DateAndTime [ '2024-03-03T08:20:53.324-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #stop,			#protocol : #actions,			#sourceCode : 'stop\r\t"stop javascript interpreter"\r\r\tself server ifNil: [ ^ self ].\r\tself server isWebSocketConnected ifFalse: [ ^ self ].\r\tself bridge websocketDelegateClassName ifNil: [ ^ self ].\r\t[ self bridge sendMessage: PjMessageTerminate new ]\r\t\ton: ConnectionTimedOut\r\t\tdo: [ " nothing: the socket\'s gone away " ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2894' ],		#self : OmReference [ '2895' ],		#time : DateAndTime [ '2024-03-03T08:20:53.324-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #title,			#protocol : #accessing,			#sourceCode : 'title\r\r\t^ self appClass title',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2895' ],		#self : OmReference [ '2896' ],		#time : DateAndTime [ '2024-03-03T08:20:53.324-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #websocketDelegateClass,			#protocol : #accessing,			#sourceCode : 'websocketDelegateClass\r\r\t^ self codeGenerator websocketDelegateClass',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2896' ],		#self : OmReference [ '2897' ],		#time : DateAndTime [ '2024-03-03T08:20:53.325-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #websocketDelegateClassName,			#protocol : #accessing,			#sourceCode : 'websocketDelegateClassName\r\r\t^ self codeGenerator websocketDelegateClassName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2897' ],		#self : OmReference [ '2898' ],		#time : DateAndTime [ '2024-03-03T08:20:53.325-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #withClientLogging,			#protocol : #accessing,			#sourceCode : 'withClientLogging\r\r\tself codeGenerator: self codeGenerator withClientLogging',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2898' ],		#self : OmReference [ '2899' ],		#time : DateAndTime [ '2024-03-03T08:20:53.325-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBrowserBridgeClient class',				#isMetaSide : true			},			#name : #defaultWebBrowserName,			#protocol : #'accessing - defaults',			#sourceCode : 'defaultWebBrowserName\r\r\t^ defaultWebBrowserName ifNil: [ \'default\' ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2899' ],		#self : OmReference [ '2900' ],		#time : DateAndTime [ '2024-03-03T08:20:53.325-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBrowserBridgeClient class',				#isMetaSide : true			},			#name : #'defaultWebBrowserName:',			#protocol : #'accessing - defaults',			#sourceCode : 'defaultWebBrowserName: aString\r\r\tdefaultWebBrowserName := aString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2900' ],		#self : OmReference [ '2901' ],		#time : DateAndTime [ '2024-03-03T08:20:53.325-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBrowserBridgeClient class',				#isMetaSide : true			},			#name : #firefox,			#protocol : #accessing,			#sourceCode : 'firefox\r\r\t^ #firefox',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2901' ],		#self : OmReference [ '2902' ],		#time : DateAndTime [ '2024-03-03T08:20:53.325-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBrowserBridgeClient class',				#isMetaSide : true			},			#name : #makeFirefoxDefaultWebBrowser,			#protocol : #utilities,			#sourceCode : 'makeFirefoxDefaultWebBrowser\r\t<script>\r\t\r\tself defaultWebBrowserName: self firefox',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2902' ],		#self : OmReference [ '2903' ],		#time : DateAndTime [ '2024-03-03T08:20:53.325-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBrowserBridgeClient class',				#isMetaSide : true			},			#name : #makeSafariDefaultWebBrowser,			#protocol : #utilities,			#sourceCode : 'makeSafariDefaultWebBrowser\r\t<script>\r\t\r\tself defaultWebBrowserName: self safari',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2903' ],		#self : OmReference [ '2904' ],		#time : DateAndTime [ '2024-03-03T08:20:53.325-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBrowserBridgeClient class',				#isMetaSide : true			},			#name : #safari,			#protocol : #accessing,			#sourceCode : 'safari\r\r\t^ #safari',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2904' ],		#self : OmReference [ '2905' ],		#time : DateAndTime [ '2024-03-03T08:20:53.326-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBrowserBridgeClient,				#isMetaSide : false			},			#name : #defaultAppClass,			#protocol : #initialization-release,			#sourceCode : 'defaultAppClass\r\r\t^ PjMinimalWebApplication',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2905' ],		#self : OmReference [ '2906' ],		#time : DateAndTime [ '2024-03-03T08:20:53.326-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBrowserBridgeClient,				#isMetaSide : false			},			#name : #exporterClass,			#protocol : #accessing,			#sourceCode : 'exporterClass\r\t^ PjExporter',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2906' ],		#self : OmReference [ '2907' ],		#time : DateAndTime [ '2024-03-03T08:20:53.326-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBrowserBridgeClient,				#isMetaSide : false			},			#name : #'initializeWithBridge:',			#protocol : #accessing,			#sourceCode : 'initializeWithBridge: aBridge\r\tsuper initializeWithBridge: aBridge.\r\tself codeGenerator resetHtmlGenerator.\r\tself server css: self codeGenerator css.\r\tself server favicon: self codeGenerator favicon.\r\tself server html: self codeGenerator html.',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2907' ],		#self : OmReference [ '2908' ],		#time : DateAndTime [ '2024-03-03T08:20:53.326-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBrowserBridgeClient,				#isMetaSide : false			},			#name : #serverUrl,			#protocol : #accessing,			#sourceCode : 'serverUrl\r\t^self server url',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2908' ],		#self : OmReference [ '2909' ],		#time : DateAndTime [ '2024-03-03T08:20:53.326-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBrowserBridgeClient,				#isMetaSide : false			},			#name : #start,			#protocol : #actions,			#sourceCode : 'start\r\tself bridge server\r\t\tjavascript:\r\t\t\t(String\r\t\t\t\tstreamContents: [ :aStream | self exporter writeJsCodeOn: aStream ]).\r\tsuper start',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2909' ],		#self : OmReference [ '2910' ],		#time : DateAndTime [ '2024-03-03T08:20:53.326-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBrowserBridgeClient,				#isMetaSide : false			},			#name : #urlString,			#protocol : #accessing,			#sourceCode : 'urlString\r\r\t^self server urlString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2910' ],		#self : OmReference [ '2911' ],		#time : DateAndTime [ '2024-03-03T08:20:53.326-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFileBasedBridgeClient,				#isMetaSide : false			},			#name : #appFolder,			#protocol : #'accessing - files',			#sourceCode : 'appFolder\r\r\t^ self appClass appFolder',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2911' ],		#self : OmReference [ '2912' ],		#time : DateAndTime [ '2024-03-03T08:20:53.327-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFileBasedBridgeClient,				#isMetaSide : false			},			#name : #exporterClass,			#protocol : #accessing,			#sourceCode : 'exporterClass\r\r\t^ PjFileExporter',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2912' ],		#self : OmReference [ '2913' ],		#time : DateAndTime [ '2024-03-03T08:20:53.327-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFileBasedBridgeClient,				#isMetaSide : false			},			#name : #fileName,			#protocol : #'accessing - files',			#sourceCode : 'fileName\r\r\t^ self appClass appFullJsFileName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2913' ],		#self : OmReference [ '2914' ],		#time : DateAndTime [ '2024-03-03T08:20:53.327-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFileBasedBridgeClient,				#isMetaSide : false			},			#name : #start,			#protocol : #actions,			#sourceCode : 'start\r\tself writeFiles.\r\tsuper start',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2914' ],		#self : OmReference [ '2915' ],		#time : DateAndTime [ '2024-03-03T08:20:53.327-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFileBasedBridgeClient,				#isMetaSide : false			},			#name : #writeFiles,			#protocol : #'accessing - files',			#sourceCode : 'writeFiles\r\r\texporter writeJavascriptFileNamed: self fileName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2915' ],		#self : OmReference [ '2916' ],		#time : DateAndTime [ '2024-03-03T08:20:53.327-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServedFileBasedBrowserBridgeClient,				#isMetaSide : false			},			#name : #appUrlPrefixString,			#protocol : #actions,			#sourceCode : 'appUrlPrefixString\r\t^self appClass name',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2916' ],		#self : OmReference [ '2917' ],		#time : DateAndTime [ '2024-03-03T08:20:53.327-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServedFileBasedBrowserBridgeClient,				#isMetaSide : false			},			#name : #'initializeWithBridge:',			#protocol : #accessing,			#sourceCode : 'initializeWithBridge: aBridge\r\r\t| staticFileDelegate |\r\tsuper initializeWithBridge: aBridge.\r\tstaticFileDelegate := ZnStaticFileServerDelegate new.\r\tstaticFileDelegate\r\t\tprefixFromString: self appUrlPrefixString;\r\t\tdirectory: self appClass appFullHtmlFolderPath asFileReference.\r\tself server delegate map: self appUrlPrefixString to: staticFileDelegate',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2917' ],		#self : OmReference [ '2918' ],		#time : DateAndTime [ '2024-03-03T08:20:53.33-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServedFileBasedBrowserBridgeClient,				#isMetaSide : false			},			#name : #url,			#protocol : #actions,			#sourceCode : 'url\r\r\t^ self server url / self appUrlPrefixString ',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2918' ],		#self : OmReference [ '2919' ],		#time : DateAndTime [ '2024-03-03T08:20:53.33-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServedFileBasedBrowserBridgeClient,				#isMetaSide : false			},			#name : #urlString,			#protocol : #accessing,			#sourceCode : 'urlString\r\r\t^ self url asString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2919' ],		#self : OmReference [ '2920' ],		#time : DateAndTime [ '2024-03-03T08:20:53.33-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFileBasedBrowserBridgeClient,				#isMetaSide : false			},			#name : #defaultAppClass,			#protocol : #'accessing - defaults',			#sourceCode : 'defaultAppClass\r\r\t^ PjMinimalFileBasedWebApp',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2920' ],		#self : OmReference [ '2921' ],		#time : DateAndTime [ '2024-03-03T08:20:53.331-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjFileBasedBrowserBridgeClient,				#isMetaSide : false			},			#name : #urlString,			#protocol : #accessing,			#sourceCode : 'urlString\r\r\t^ self appClass appHtmlUrlString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2921' ],		#self : OmReference [ '2922' ],		#time : DateAndTime [ '2024-03-03T08:20:53.331-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeBridgeClient,				#isMetaSide : false			},			#name : #defaultAppClass,			#protocol : #'accessing - defaults',			#sourceCode : 'defaultAppClass\r\r\t^ PjMinimalNodeApplication ',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2922' ],		#self : OmReference [ '2923' ],		#time : DateAndTime [ '2024-03-03T08:20:53.331-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeBridgeClient,				#isMetaSide : false			},			#name : #reset,			#protocol : #initialization,			#sourceCode : 'reset \r\tself stop.\r\tself resetProxiesImmediately.\r\tsuper reset.\r\tself startJsInterpreter',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2923' ],		#self : OmReference [ '2924' ],		#time : DateAndTime [ '2024-03-03T08:20:53.331-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeBridgeClient,				#isMetaSide : false			},			#name : #'runNodeOn:inFolder:',			#protocol : #actions,			#sourceCode : 'runNodeOn: aFileName inFolder: aFolder\r\r\tWebBrowser openTerminalWithNodeOn: aFileName inFolder: aFolder',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2924' ],		#self : OmReference [ '2925' ],		#time : DateAndTime [ '2024-03-03T08:20:53.331-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeBridgeClient,				#isMetaSide : false			},			#name : #startJsInterpreter,			#protocol : #actions,			#sourceCode : 'startJsInterpreter\r\r\tself\r\t\trunNodeOn: self fileName fullName\r\t\tinFolder: self appFolder fullName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2925' ],		#self : OmReference [ '2926' ],		#time : DateAndTime [ '2024-03-03T08:20:53.331-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebServedBridgeClient,				#isMetaSide : false			},			#name : #defaultAppClass,			#protocol : #'accessing - defaults',			#sourceCode : 'defaultAppClass\r\r\t^ PjMinimalWebApplication',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2926' ],		#self : OmReference [ '2927' ],		#time : DateAndTime [ '2024-03-03T08:20:53.331-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebServedBridgeClient,				#isMetaSide : false			},			#name : #urlString,			#protocol : #accessing,			#sourceCode : 'urlString\r\r\t^ urlString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2927' ],		#self : OmReference [ '2928' ],		#time : DateAndTime [ '2024-03-03T08:20:53.331-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebServedBridgeClient,				#isMetaSide : false			},			#name : #'urlString:',			#protocol : #accessing,			#sourceCode : 'urlString: anObject\r\r\turlString := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2928' ],		#self : OmReference [ '2929' ],		#time : DateAndTime [ '2024-03-03T08:20:53.332-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNullBridgeClient,				#isMetaSide : false			},			#name : #start,			#protocol : #actions,			#sourceCode : 'start\r\t"start interpreter"\r\r\t^ self',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2929' ],		#self : OmReference [ '2930' ],		#time : DateAndTime [ '2024-03-03T08:20:53.332-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNullBridgeClient,				#isMetaSide : false			},			#name : #stop,			#protocol : #actions,			#sourceCode : 'stop\r\r\t^ self',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2930' ],		#self : OmReference [ '2931' ],		#time : DateAndTime [ '2024-03-03T08:20:53.332-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridgeServer class',				#isMetaSide : true			},			#name : #currentUsablePortNumber,			#protocol : #accessing,			#sourceCode : 'currentUsablePortNumber\r\r\tCurrentUsablePortNumber ifNil: [ \r\t\tCurrentUsablePortNumber := self minPortNumber ].\r\t^ CurrentUsablePortNumber',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2931' ],		#self : OmReference [ '2932' ],		#time : DateAndTime [ '2024-03-03T08:20:53.332-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridgeServer class',				#isMetaSide : true			},			#name : #'currentUsablePortNumber:',			#protocol : #accessing,			#sourceCode : 'currentUsablePortNumber: aNumber\r\r\tCurrentUsablePortNumber := aNumber',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2932' ],		#self : OmReference [ '2933' ],		#time : DateAndTime [ '2024-03-03T08:20:53.332-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridgeServer class',				#isMetaSide : true			},			#name : #incrementCurrentUsablePortNumber,			#protocol : #accessing,			#sourceCode : 'incrementCurrentUsablePortNumber\r\r\t| p |\r\tp := self currentUsablePortNumber\r\t\t     ifNotNil: [ :cp | cp + 1 ]\r\t\t     ifNil: [ self minPortNumber ].\r\tp > self maxPortNumber ifTrue: [ p := self minPortNumber ].\r\tself currentUsablePortNumber: p',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2933' ],		#self : OmReference [ '2934' ],		#time : DateAndTime [ '2024-03-03T08:20:53.332-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridgeServer class',				#isMetaSide : true			},			#name : #maxPortNumber,			#protocol : #accessing,			#sourceCode : 'maxPortNumber\r\r\t^ 65535',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2934' ],		#self : OmReference [ '2935' ],		#time : DateAndTime [ '2024-03-03T08:20:53.332-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridgeServer class',				#isMetaSide : true			},			#name : #minPortNumber,			#protocol : #accessing,			#sourceCode : 'minPortNumber\r\r\t^ 1024',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2935' ],		#self : OmReference [ '2936' ],		#time : DateAndTime [ '2024-03-03T08:20:53.332-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridgeServer class',				#isMetaSide : true			},			#name : #webSocketUrlTag,			#protocol : #accessing,			#sourceCode : 'webSocketUrlTag\r\r\t^ \'javascript-bridge\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2936' ],		#self : OmReference [ '2937' ],		#time : DateAndTime [ '2024-03-03T08:20:53.333-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #bridge,			#protocol : #accessing,			#sourceCode : 'bridge\r\t^ bridge',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2937' ],		#self : OmReference [ '2938' ],		#time : DateAndTime [ '2024-03-03T08:20:53.333-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #'bridge:',			#protocol : #accessing,			#sourceCode : 'bridge: anObject\r\tbridge := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2938' ],		#self : OmReference [ '2939' ],		#time : DateAndTime [ '2024-03-03T08:20:53.333-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #css,			#protocol : #accessing,			#sourceCode : 'css\r\t^ css ifNil: [ \'\' ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2939' ],		#self : OmReference [ '2940' ],		#time : DateAndTime [ '2024-03-03T08:20:53.333-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #'css:',			#protocol : #accessing,			#sourceCode : 'css: anObject\r\tcss := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2940' ],		#self : OmReference [ '2941' ],		#time : DateAndTime [ '2024-03-03T08:20:53.333-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #defaultHTML,			#protocol : #accessing,			#sourceCode : 'defaultHTML\r\t^\'<!DOCTYPE html>\r<html>\r<head>\r    <title>PharoJS - Develop in Pharo, Run on JavaScript</title>\r    <style>\r        html, body {\r            height: 100%;\r            margin: 0;\r            display: flex;\r            align-items: center;\r            justify-content: center;\r            font-family: Arial, sans-serif;\r            background-color: #f5f5f5;\r        }\r\r        .container {\r            text-align: center;\r            padding: 20px;\r            background-color: #ffffff;\r            border-radius: 5px;\r            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r        }\r\r        h1 {\r            font-size: 28px;\r            color: #333333;\r        }\r\r        p {\r            font-size: 16px;\r            color: #666666;\r            margin-bottom: 20px;\r        }\r\r        a {\r            color: #0066cc;\r            text-decoration: none;\r        }\r    </style>\r</head>\r<body>\r    <div class="container">\r        <h1>PharoJS - Develop in Pharo, Run on JavaScript</h1>\r        <p>Thank you for being a part of the PharoJS community. We appreciate your dedication to developing in Pharo and running your applications on JavaScript.</p>\r        <p>PharoJS is open-source under the MIT License. You can find the source code on <a href="https://github.com/PharoJS/PharoJS" target="_blank">GitHub</a>.</p>\r        <p>Visit <a href="https://pharojs.org" target="_blank">PharoJS.org</a> to learn more and get started.</p>\r    </div>\r</body>\r</html>\r\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2941' ],		#self : OmReference [ '2942' ],		#time : DateAndTime [ '2024-03-03T08:20:53.333-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #delegate,			#protocol : #accessing,			#sourceCode : 'delegate\r\r\t^ znServer delegate',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2942' ],		#self : OmReference [ '2943' ],		#time : DateAndTime [ '2024-03-03T08:20:53.333-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #'delegate:',			#protocol : #accessing,			#sourceCode : 'delegate: znServerDelegate \r\tznServer delegate: znServerDelegate ',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2943' ],		#self : OmReference [ '2944' ],		#time : DateAndTime [ '2024-03-03T08:20:53.333-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #favicon,			#protocol : #accessing,			#sourceCode : 'favicon\r\t^ favicon',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2944' ],		#self : OmReference [ '2945' ],		#time : DateAndTime [ '2024-03-03T08:20:53.333-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #'favicon:',			#protocol : #accessing,			#sourceCode : 'favicon: anObject\r\tfavicon := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2945' ],		#self : OmReference [ '2946' ],		#time : DateAndTime [ '2024-03-03T08:20:53.333-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #fingerPrint,			#protocol : #accessing,			#sourceCode : 'fingerPrint\r\t^ fingerPrint',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2946' ],		#self : OmReference [ '2947' ],		#time : DateAndTime [ '2024-03-03T08:20:53.334-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #'fingerPrint:',			#protocol : #accessing,			#sourceCode : 'fingerPrint: anObject\r\tfingerPrint := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2947' ],		#self : OmReference [ '2948' ],		#time : DateAndTime [ '2024-03-03T08:20:53.334-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #'handleMessage:forSocket:',			#protocol : #websocket,			#sourceCode : 'handleMessage: rawSocketMessage forSocket: aWebSocket\r\t| msg |\r\tmsg := PhxJsonReader readFromString: rawSocketMessage.\r\tself bridge acceptIncomingMessageFromClient: msg.\r\tself logSocketRead: msg logDescription',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2948' ],		#self : OmReference [ '2949' ],		#time : DateAndTime [ '2024-03-03T08:20:53.334-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #html,			#protocol : #accessing,			#sourceCode : 'html\r\t^ html ifNil: [ self defaultHTML]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2949' ],		#self : OmReference [ '2950' ],		#time : DateAndTime [ '2024-03-03T08:20:53.334-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #'html:',			#protocol : #accessing,			#sourceCode : 'html: anObject\r\thtml := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2950' ],		#self : OmReference [ '2951' ],		#time : DateAndTime [ '2024-03-03T08:20:53.334-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #indexHtmlResponse,			#protocol : #initialization,			#sourceCode : 'indexHtmlResponse\r\t^ ZnResponse ok: (ZnEntity html: self html)',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2951' ],		#self : OmReference [ '2952' ],		#time : DateAndTime [ '2024-03-03T08:20:53.334-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsuper initialize.\r\tznServer := self newZincServer.\r\tfingerPrint := UUIDGenerator next asString.',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2952' ],		#self : OmReference [ '2953' ],		#time : DateAndTime [ '2024-03-03T08:20:53.334-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #isStarted,			#protocol : #testing,			#sourceCode : 'isStarted\r\t^ self znServer isRunning and: [ self isStartedCheckExternally ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2953' ],		#self : OmReference [ '2954' ],		#time : DateAndTime [ '2024-03-03T08:20:53.334-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #isStartedCheckExternally,			#protocol : #testing,			#sourceCode : 'isStartedCheckExternally\r\t^ (ZnClient new\r\t\ttimeout: 1;\r\t\tifFail: [ String new ];\r\t\tget:\r\t\t\t\'http://localhost:\' , self znServer port asString\r\t\t\t\t, \'/serverFingerPrint\') = self fingerPrint',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2954' ],		#self : OmReference [ '2955' ],		#time : DateAndTime [ '2024-03-03T08:20:53.334-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #isStartedWithinTimeout,			#protocol : #start,			#sourceCode : 'isStartedWithinTimeout\r\t| attempts |\r\tattempts := 1.\r\t[ self isStarted\r\t\tifTrue: [ ^ true ].\r\tattempts >= 10 ]\r\t\twhileFalse: [ 20 milliSeconds wait.\r\t\t\tattempts := attempts + 1 ].\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2955' ],		#self : OmReference [ '2956' ],		#time : DateAndTime [ '2024-03-03T08:20:53.335-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #isWebSocketConnected,			#protocol : #websocket,			#sourceCode : 'isWebSocketConnected\r\t^self webSocket notNil',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2956' ],		#self : OmReference [ '2957' ],		#time : DateAndTime [ '2024-03-03T08:20:53.335-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #javascript,			#protocol : #accessing,			#sourceCode : 'javascript\r\t^ javascript',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2957' ],		#self : OmReference [ '2958' ],		#time : DateAndTime [ '2024-03-03T08:20:53.335-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #'javascript:',			#protocol : #accessing,			#sourceCode : 'javascript: anObject\r\tjavascript := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2958' ],		#self : OmReference [ '2959' ],		#time : DateAndTime [ '2024-03-03T08:20:53.335-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #'logSocketRead:',			#protocol : #logging,			#sourceCode : 'logSocketRead: aString\r\t(self znServer newLogEvent: PjSocketLogEvent)\r\t\tdirection: \'read\';\r\t\tcontents: aString;\r\t\temit',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2959' ],		#self : OmReference [ '2960' ],		#time : DateAndTime [ '2024-03-03T08:20:53.335-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #'logSocketWritten:',			#protocol : #logging,			#sourceCode : 'logSocketWritten: aString\r\t(self znServer newLogEvent: PjSocketLogEvent)\r\t\tdirection: \'wrote\';\r\t\tcontents: aString;\r\t\temit',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2960' ],		#self : OmReference [ '2961' ],		#time : DateAndTime [ '2024-03-03T08:20:53.335-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #newServerDelegate,			#protocol : #initialization,			#sourceCode : 'newServerDelegate\r\r\t| newDelegate |\r\tnewDelegate := PjBridgeServerDelegate empty.\r\tnewDelegate map: \'/\' to: \'index.html\'.\r\tnewDelegate\r\t\tmap: \'index.html\'\r\t\tto: [ :request | ZnResponse ok: (ZnEntity html: self html) ].\r\tnewDelegate\r\t\tmap: \'index.js\'\r\t\tto: [ :request | \r\t\tZnResponse ok: (ZnEntity javascript: self javascript) ].\r\tnewDelegate\r\t\tmap: \'index.css\'\r\t\tto: [ :request | ZnResponse ok: (ZnEntity css: self css) ].\r\tnewDelegate map: \'favicon.ico\' to: [ :request | \r\t\tself favicon\r\t\t\tifNil: [ ZnResponse notFound: request uri ]\r\t\t\tifNotNil: [ ZnResponse ok: (ZnEntity favicon: self favicon) ] ].\r\tnewDelegate\r\t\tmap: \'serverFingerPrint\'\r\t\tto: [ :request | ZnResponse ok: (ZnEntity text: self fingerPrint) ].\r\tnewDelegate\r\t\tmap: self webSocketUrlTag\r\t\tto: (ZnWebSocketDelegate map: self webSocketUrlTag to: self).\r\t^ newDelegate',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2961' ],		#self : OmReference [ '2962' ],		#time : DateAndTime [ '2024-03-03T08:20:53.335-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #newZincServer,			#protocol : #initialization,			#sourceCode : 'newZincServer\r\r\t| srv |\r\tsrv := ZnMultiThreadedServer new.\r\tsrv delegate: self newServerDelegate.\r\t^ srv',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2962' ],		#self : OmReference [ '2963' ],		#time : DateAndTime [ '2024-03-03T08:20:53.335-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #port,			#protocol : #accessing,			#sourceCode : 'port\r\r\t^ self znServer port',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2963' ],		#self : OmReference [ '2964' ],		#time : DateAndTime [ '2024-03-03T08:20:53.336-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #'port:',			#protocol : #public,			#sourceCode : 'port: aPortNumber\r\r\tself znServer port: aPortNumber',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2964' ],		#self : OmReference [ '2965' ],		#time : DateAndTime [ '2024-03-03T08:20:53.336-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: ws\r\r\tsuper printOn: ws.\r\tws << \' --> \'.\r\tself znServer\r\t\tifNil: [ \'znServer missing???\' ]\r\t\tifNotNil: [ :znSrv | znSrv printOn: ws ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2965' ],		#self : OmReference [ '2966' ],		#time : DateAndTime [ '2024-03-03T08:20:53.336-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #'safelyHandleMessage:forSocket:',			#protocol : #websocket,			#sourceCode : 'safelyHandleMessage: aMessage forSocket: aWebSocket\r\r\t[ self handleMessage: aMessage forSocket: aWebSocket ]\r\t\ton: Error\r\t\tdo: [ :ex | \r\t\t\tself halt.\r\t\t\tex return ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2966' ],		#self : OmReference [ '2967' ],		#time : DateAndTime [ '2024-03-03T08:20:53.336-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #start,			#protocol : #start,			#sourceCode : 'start\r\r\t| attempts |\r\tself isStarted ifTrue: [ ^ self ].\r\tattempts := 1.\r\t[ \r\tself startOnCurrentUsablePortNumber.\r\tself isStartedWithinTimeout ] whileFalse: [ \r\t\tattempts := attempts + 1.\r\t\tself class incrementCurrentUsablePortNumber ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2967' ],		#self : OmReference [ '2968' ],		#time : DateAndTime [ '2024-03-03T08:20:53.337-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #startOnCurrentUsablePortNumber,			#protocol : #start,			#sourceCode : 'startOnCurrentUsablePortNumber\r\r\tself startOnPort: self class currentUsablePortNumber',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2968' ],		#self : OmReference [ '2969' ],		#time : DateAndTime [ '2024-03-03T08:20:53.337-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #'startOnPort:',			#protocol : #start,			#sourceCode : 'startOnPort: aPort\r\r\tself isStarted ifTrue: [ ^ self ].\r\tself stop.\r\tself znServer\r\t\tport: aPort;\r\t\tstart',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2969' ],		#self : OmReference [ '2970' ],		#time : DateAndTime [ '2024-03-03T08:20:53.337-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #stop,			#protocol : #stop,			#sourceCode : 'stop\r\r\tself znServer ifNotNil: [ :srv | srv stop ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2970' ],		#self : OmReference [ '2971' ],		#time : DateAndTime [ '2024-03-03T08:20:53.337-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #accessing,			#sourceCode : 'tearDown\r\r\tself stop.\r\tself bridge: nil',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2971' ],		#self : OmReference [ '2972' ],		#time : DateAndTime [ '2024-03-03T08:20:53.337-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #timing,			#protocol : #accessing,			#sourceCode : 'timing\r\r\tself halt.\r\t^ timing',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2972' ],		#self : OmReference [ '2973' ],		#time : DateAndTime [ '2024-03-03T08:20:53.337-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #'timing:',			#protocol : #accessing,			#sourceCode : 'timing: anObject\r\r\tself halt.\r\ttiming := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2973' ],		#self : OmReference [ '2974' ],		#time : DateAndTime [ '2024-03-03T08:20:53.337-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #url,			#protocol : #accessing,			#sourceCode : 'url\r\r\t^ self znServer url',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2974' ],		#self : OmReference [ '2975' ],		#time : DateAndTime [ '2024-03-03T08:20:53.337-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #urlString,			#protocol : #accessing,			#sourceCode : 'urlString\r\r\t^ self url asString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2975' ],		#self : OmReference [ '2976' ],		#time : DateAndTime [ '2024-03-03T08:20:53.337-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #'value:',			#protocol : #accessing,			#sourceCode : 'value: aWebSocket\r\r\t[ \r\tself webSocket: aWebSocket.\r\taWebSocket runWith: [ :aMessage | \r\t\tself safelyHandleMessage: aMessage forSocket: aWebSocket ] ]\r\t\ton: Error\r\t\tdo: [ ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2976' ],		#self : OmReference [ '2977' ],		#time : DateAndTime [ '2024-03-03T08:20:53.337-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #webSocket,			#protocol : #accessing,			#sourceCode : 'webSocket\r\r\t^ webSocket',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2977' ],		#self : OmReference [ '2978' ],		#time : DateAndTime [ '2024-03-03T08:20:53.338-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #'webSocket:',			#protocol : #accessing,			#sourceCode : 'webSocket: anObject\r\r\twebSocket := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2978' ],		#self : OmReference [ '2979' ],		#time : DateAndTime [ '2024-03-03T08:20:53.338-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #webSocketUrlTag,			#protocol : #accessing,			#sourceCode : 'webSocketUrlTag\r\r\t^ self class webSocketUrlTag',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2979' ],		#self : OmReference [ '2980' ],		#time : DateAndTime [ '2024-03-03T08:20:53.338-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #znServer,			#protocol : #accessing,			#sourceCode : 'znServer\r\r\t^ znServer',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2980' ],		#self : OmReference [ '2981' ],		#time : DateAndTime [ '2024-03-03T08:20:53.338-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeServer,				#isMetaSide : false			},			#name : #'znServer:',			#protocol : #accessing,			#sourceCode : 'znServer: anObject\r\r\tznServer := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2981' ],		#self : OmReference [ '2982' ],		#time : DateAndTime [ '2024-03-03T08:20:53.338-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClientCodeGenerator class',				#isMetaSide : true			},			#name : #bridgeAppClassDecoratorClass,			#protocol : #accessing,			#sourceCode : 'bridgeAppClassDecoratorClass\r\r\t^ PjBridgeAppClassDecorator',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2982' ],		#self : OmReference [ '2983' ],		#time : DateAndTime [ '2024-03-03T08:20:53.338-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClientCodeGenerator class',				#isMetaSide : true			},			#name : #html,			#protocol : #public,			#sourceCode : 'html\r\t^self new html',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2983' ],		#self : OmReference [ '2984' ],		#time : DateAndTime [ '2024-03-03T08:20:53.338-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjClientCodeGenerator class',				#isMetaSide : true			},			#name : #websocketDelegateClass,			#protocol : #generating,			#sourceCode : 'websocketDelegateClass\r\t^self bridgeAppClassDecoratorClass websocketDelegateClass',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2984' ],		#self : OmReference [ '2985' ],		#time : DateAndTime [ '2024-03-03T08:20:53.338-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClientCodeGenerator,				#isMetaSide : false			},			#name : #appClass,			#protocol : #accessing,			#sourceCode : 'appClass\r\r\t^ appClass',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2985' ],		#self : OmReference [ '2986' ],		#time : DateAndTime [ '2024-03-03T08:20:53.338-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClientCodeGenerator,				#isMetaSide : false			},			#name : #appClassDecorator,			#protocol : #accessing,			#sourceCode : 'appClassDecorator\r\r\t^ appClassDecorator',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2986' ],		#self : OmReference [ '2987' ],		#time : DateAndTime [ '2024-03-03T08:20:53.339-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClientCodeGenerator,				#isMetaSide : false			},			#name : #'bridge:',			#protocol : #accessing,			#sourceCode : 'bridge: aBridge\r\r\tappClassDecorator bridge: aBridge',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2987' ],		#self : OmReference [ '2988' ],		#time : DateAndTime [ '2024-03-03T08:20:53.339-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClientCodeGenerator,				#isMetaSide : false			},			#name : #bridgeAppClassDecoratorClass,			#protocol : #accessing,			#sourceCode : 'bridgeAppClassDecoratorClass\r\r\t^ self class bridgeAppClassDecoratorClass',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2988' ],		#self : OmReference [ '2989' ],		#time : DateAndTime [ '2024-03-03T08:20:53.339-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClientCodeGenerator,				#isMetaSide : false			},			#name : #css,			#protocol : #public,			#sourceCode : 'css\r\r\t^ self cssUsing: self htmlGenerator',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2989' ],		#self : OmReference [ '2990' ],		#time : DateAndTime [ '2024-03-03T08:20:53.339-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClientCodeGenerator,				#isMetaSide : false			},			#name : #'cssUsing:',			#protocol : #generating,			#sourceCode : 'cssUsing: aHtmlGenerator\r\r\t^ self appClass css ifNotNil: [ :css | \r\t\t  aHtmlGenerator addCssLink: \'index.css\'.\r\t\t  css ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2990' ],		#self : OmReference [ '2991' ],		#time : DateAndTime [ '2024-03-03T08:20:53.339-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClientCodeGenerator,				#isMetaSide : false			},			#name : #'decorateAppClass:',			#protocol : #generating,			#sourceCode : 'decorateAppClass: anAppClass\r\r\tappClass := anAppClass.\r\tappClassDecorator := self bridgeAppClassDecoratorClass rawAppClass: anAppClass.\r\t^ appClassDecorator',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2991' ],		#self : OmReference [ '2992' ],		#time : DateAndTime [ '2024-03-03T08:20:53.339-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClientCodeGenerator,				#isMetaSide : false			},			#name : #favicon,			#protocol : #generating,			#sourceCode : 'favicon\r\r\t^ self appClass favicon',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2992' ],		#self : OmReference [ '2993' ],		#time : DateAndTime [ '2024-03-03T08:20:53.339-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClientCodeGenerator,				#isMetaSide : false			},			#name : #'generateHtmlUsing:',			#protocol : #generating,			#sourceCode : 'generateHtmlUsing: aHtmlGenerator\r\r\t(self appClass generateHtmlUsing: aHtmlGenerator) ifFalse: [ \r\t\taHtmlGenerator title: \'PharoJS:\' , self titleString.\r\t\taHtmlGenerator\r\t\t\tadd: \'h1\'\r\t\t\tcontents: \'PharoJS: Develop in Pharo, run in JavaScript\'.\r\t\taHtmlGenerator add: \'h2\' contents: self titleString ].\r\taHtmlGenerator addScriptUrl: \'index.js\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2993' ],		#self : OmReference [ '2994' ],		#time : DateAndTime [ '2024-03-03T08:20:53.339-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClientCodeGenerator,				#isMetaSide : false			},			#name : #html,			#protocol : #public,			#sourceCode : 'html\r\r\tself generateHtmlUsing: self htmlGenerator.\r\t^ self htmlGenerator html',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2994' ],		#self : OmReference [ '2995' ],		#time : DateAndTime [ '2024-03-03T08:20:53.34-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClientCodeGenerator,				#isMetaSide : false			},			#name : #htmlGenerator,			#protocol : #generating,			#sourceCode : 'htmlGenerator\r\r\t^ htmlGenerator ifNil: [ htmlGenerator := PjHtmlGenerator new ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2995' ],		#self : OmReference [ '2996' ],		#time : DateAndTime [ '2024-03-03T08:20:53.34-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClientCodeGenerator,				#isMetaSide : false			},			#name : #resetHtmlGenerator,			#protocol : #generating,			#sourceCode : 'resetHtmlGenerator\r\r\thtmlGenerator := nil',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2996' ],		#self : OmReference [ '2997' ],		#time : DateAndTime [ '2024-03-03T08:20:53.34-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClientCodeGenerator,				#isMetaSide : false			},			#name : #titleString,			#protocol : #accessing,			#sourceCode : 'titleString\r\r\t^ titleString ifNil: [ \'\' ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2997' ],		#self : OmReference [ '2998' ],		#time : DateAndTime [ '2024-03-03T08:20:53.34-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClientCodeGenerator,				#isMetaSide : false			},			#name : #'titleString:',			#protocol : #accessing,			#sourceCode : 'titleString: aString\r\r\ttitleString := aString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2998' ],		#self : OmReference [ '2999' ],		#time : DateAndTime [ '2024-03-03T08:20:53.34-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClientCodeGenerator,				#isMetaSide : false			},			#name : #websocketDelegateClass,			#protocol : #accessing,			#sourceCode : 'websocketDelegateClass\r\r\t^ self class websocketDelegateClass',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2999' ],		#self : OmReference [ '3000' ],		#time : DateAndTime [ '2024-03-03T08:20:53.34-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClientCodeGenerator,				#isMetaSide : false			},			#name : #websocketDelegateClassName,			#protocol : #accessing,			#sourceCode : 'websocketDelegateClassName\r\r\t^ self websocketDelegateClass name',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3000' ],		#self : OmReference [ '3001' ],		#time : DateAndTime [ '2024-03-03T08:20:53.34-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClientCodeGenerator,				#isMetaSide : false			},			#name : #withClientLogging,			#protocol : #public,			#sourceCode : 'withClientLogging\r\r\t^ PjLoggingClientCodeGenerator new',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3001' ],		#self : OmReference [ '3002' ],		#time : DateAndTime [ '2024-03-03T08:20:53.34-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjLoggingClientCodeGenerator class',				#isMetaSide : true			},			#name : #bridgeAppClassDecoratorClass,			#protocol : #accessing,			#sourceCode : 'bridgeAppClassDecoratorClass\r\r\t^ PjLoggingClientBridgeAppClassDecorator',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3002' ],		#self : OmReference [ '3003' ],		#time : DateAndTime [ '2024-03-03T08:20:53.34-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoggingClientCodeGenerator,				#isMetaSide : false			},			#name : #'generateHtmlUsing:',			#protocol : #generating,			#sourceCode : 'generateHtmlUsing: aHtmlGenerator\r\r\tsuper generateHtmlUsing: aHtmlGenerator.\r\taHtmlGenerator addHtmlToBody: self logoHtmlString.\r\taHtmlGenerator cr',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3003' ],		#self : OmReference [ '3004' ],		#time : DateAndTime [ '2024-03-03T08:20:53.341-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoggingClientCodeGenerator,				#isMetaSide : false			},			#name : #htmlLogElementId,			#protocol : #generating,			#sourceCode : 'htmlLogElementId\r\r\t^ PjLoggingEvaluatorWebsocketDelegate logElementId',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3004' ],		#self : OmReference [ '3005' ],		#time : DateAndTime [ '2024-03-03T08:20:53.341-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoggingClientCodeGenerator,				#isMetaSide : false			},			#name : #logoHtmlString,			#protocol : #generating,			#sourceCode : 'logoHtmlString\r\r\t^ \'<div style="position:relative;width:100%;max-width:471px;">\r<img src="\' , self logoUrlString\r\t  , \'" alt="JavaScript Pharo Bridge" style="width:100%;"/><br/>\r</div>\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3005' ],		#self : OmReference [ '3006' ],		#time : DateAndTime [ '2024-03-03T08:20:53.341-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoggingClientCodeGenerator,				#isMetaSide : false			},			#name : #logoUrlString,			#protocol : #generating,			#sourceCode : 'logoUrlString\r\r\t^ \'http://car.mines-douai.fr/wp-content/uploads/2015/07/pharoJsLogo2015-07-14.png\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3006' ],		#self : OmReference [ '3007' ],		#time : DateAndTime [ '2024-03-03T08:20:53.341-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoggingClientCodeGenerator,				#isMetaSide : false			},			#name : #'printClientSmalltalkLaunchStringOn:',			#protocol : #generating,			#sourceCode : 'printClientSmalltalkLaunchStringOn: smalltalkWriteStream\r\r\tsmalltalkWriteStream\r\t\tnextPutAll: self websocketDelegateClass name;\r\t\tnextPutAll: \' logElementId: \';\r\t\tprint: self htmlLogElementId;\r\t\tnextPutAll: \' . \'.\r\tsuper printClientSmalltalkLaunchStringOn: smalltalkWriteStream',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3007' ],		#self : OmReference [ '3008' ],		#time : DateAndTime [ '2024-03-03T08:20:53.341-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'add:contents:',			#protocol : #public,			#sourceCode : 'add: tag contents: aString\r\r\tself add: tag do: [ bodyStream nextPutAll: aString ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3008' ],		#self : OmReference [ '3009' ],		#time : DateAndTime [ '2024-03-03T08:20:53.341-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'add:do:',			#protocol : #public,			#sourceCode : 'add: tag do: aBlock\r\r\tbodyStream\r\t\tcr;\r\t\tnextPut: $<;\r\t\tnextPutAll: tag;\r\t\tnextPut: $>.\r\taBlock value.\r\tbodyStream\r\t\tnextPutAll: \'</\';\r\t\tnextPutAll: tag;\r\t\tnextPut: $>',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3009' ],		#self : OmReference [ '3010' ],		#time : DateAndTime [ '2024-03-03T08:20:53.341-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'add:id:class:contents:',			#protocol : #public,			#sourceCode : 'add: tag id: id class: class contents: aString\r\r\tself\r\t\tadd: tag\r\t\tid: id\r\t\tclass: class\r\t\tdo: [ bodyStream nextPutAll: aString ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3010' ],		#self : OmReference [ '3011' ],		#time : DateAndTime [ '2024-03-03T08:20:53.341-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'add:id:class:do:',			#protocol : #public,			#sourceCode : 'add: tag id: id class: class do: aBlock\r\r\tbodyStream\r\t\tcr; \r\t\tnextPut: $<;\r\t\tnextPutAll: tag.\r\tid ifNotNil: [ bodyStream nextPutAll: \' id="\'; nextPutAll: id;nextPut:$"].\r\tclass ifNotNil: [ bodyStream nextPutAll: \' class="\'; nextPutAll: class;nextPut:$"].\r\tbodyStream\r\t\tnextPut: $>.\r\taBlock value.\r\tbodyStream\r\t\tnextPutAll: \'</\';\r\t\tnextPutAll: tag;\r\t\tnextPut: $>',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3011' ],		#self : OmReference [ '3012' ],		#time : DateAndTime [ '2024-03-03T08:20:53.341-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'add:id:contents:',			#protocol : #public,			#sourceCode : 'add: tag id: id contents: aString\r\r\tself \r\t\tadd: tag\r\t\tid: id\r\t\tdo: [ bodyStream nextPutAll: aString ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3012' ],		#self : OmReference [ '3013' ],		#time : DateAndTime [ '2024-03-03T08:20:53.342-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'add:id:do:',			#protocol : #public,			#sourceCode : 'add: tag id: id do: aBlock\r\r\tself add: tag id: id class: nil do: aBlock',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3013' ],		#self : OmReference [ '3014' ],		#time : DateAndTime [ '2024-03-03T08:20:53.342-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'addButton:onClickDo:',			#protocol : #public,			#sourceCode : 'addButton: buttonLabel onClickDo: javaScript\r\r\tbodyStream \r\t\tnextPutAll: \'<input type="button" value="\';\r\t\tnextPutAll: buttonLabel;\r\t\tnextPutAll: \'" onclick="\';\r\t\tnextPutAll: javaScript;\r\t\tnextPutAll: \'" />\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3014' ],		#self : OmReference [ '3015' ],		#time : DateAndTime [ '2024-03-03T08:20:53.342-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'addCssLink:',			#protocol : #public,			#sourceCode : 'addCssLink: aString\r\r\theaderStream \r\t\tnextPutAll: \'<link rel="stylesheet" type="text/css" href="\',aString,\'">\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3015' ],		#self : OmReference [ '3016' ],		#time : DateAndTime [ '2024-03-03T08:20:53.342-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'addDiv:contents:',			#protocol : #public,			#sourceCode : 'addDiv: id contents: aString\r\r\tself add: \'div\' id: id contents: aString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3016' ],		#self : OmReference [ '3017' ],		#time : DateAndTime [ '2024-03-03T08:20:53.342-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'addDiv:do:',			#protocol : #public,			#sourceCode : 'addDiv: id do: aBlock\r\r\tself add: \'div\' id: id do: aBlock',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3017' ],		#self : OmReference [ '3018' ],		#time : DateAndTime [ '2024-03-03T08:20:53.342-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'addHtmlToBody:',			#protocol : #public,			#sourceCode : 'addHtmlToBody: htmlString\r\tbodyStream nextPutAll: htmlString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3018' ],		#self : OmReference [ '3019' ],		#time : DateAndTime [ '2024-03-03T08:20:53.342-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'addImage:',			#protocol : #public,			#sourceCode : 'addImage: imageUrl\r\r\tbodyStream\r\t\tcr; \r\t\tnextPutAll: \'<img src="\';\r\t\tnextPutAll: imageUrl;\r\t\tnextPutAll: \'" style="width:window.width%;"/>\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3019' ],		#self : OmReference [ '3020' ],		#time : DateAndTime [ '2024-03-03T08:20:53.342-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'addScriptString:',			#protocol : #public,			#sourceCode : 'addScriptString: aString\r\r\tscriptsStream\r\t\tnextPutAll: \'<script language="javascript" type="text/javascript">\';\r\t\tnextPutAll: aString;\r\t\tnextPutAll: \'</script>\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3020' ],		#self : OmReference [ '3021' ],		#time : DateAndTime [ '2024-03-03T08:20:53.342-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'addScriptUrl:',			#protocol : #public,			#sourceCode : 'addScriptUrl: aString\r\r\tscriptsStream\r\t\tnextPutAll: \'<script language="javascript" type="text/javascript" src="\';\r\t\tnextPutAll: aString;\r\t\tnextPutAll: \'"></script>\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3021' ],		#self : OmReference [ '3022' ],		#time : DateAndTime [ '2024-03-03T08:20:53.343-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'addSpan:contents:',			#protocol : #public,			#sourceCode : 'addSpan: id contents: aString\r\r\tself add: \'span\' id: id contents: aString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3022' ],		#self : OmReference [ '3023' ],		#time : DateAndTime [ '2024-03-03T08:20:53.343-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'addSpan:do:',			#protocol : #public,			#sourceCode : 'addSpan: id do: aBlock\r\r\tself add: \'span\' id: id do: aBlock',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3023' ],		#self : OmReference [ '3024' ],		#time : DateAndTime [ '2024-03-03T08:20:53.343-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'addStyle:',			#protocol : #public,			#sourceCode : 'addStyle: aString\r\r\theaderStream\r\t\tnextPutAll: \'<style type="text/css">\';\r\t\tnextPutAll: aString;\r\t\tnextPutAll: \'</style>\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3024' ],		#self : OmReference [ '3025' ],		#time : DateAndTime [ '2024-03-03T08:20:53.343-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'addTextInput:hint:on:do:',			#protocol : #public,			#sourceCode : 'addTextInput: id hint: hintString on: eventName do: javaScript\r\t"eventName can take one of three values: keydown, keypress, keyup"\r\t"Not keypress event is sent for actual characters and not when keys such as CTL or ALT are pressed"\r\t\r\tbodyStream \r\t\tnextPutAll: \'<input type="text" id="\';\r\t\tnextPutAll: id;\r\t\tnextPutAll: \'" placeholder="\';\r\t\tnextPutAll: hintString;\r\t\tnextPutAll: \'" on\';\r\t\tnextPutAll: eventName;\r\t\tnextPutAll: \'="\';\r\t\tnextPutAll: javaScript;\r\t\tnextPutAll: \'" />\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3025' ],		#self : OmReference [ '3026' ],		#time : DateAndTime [ '2024-03-03T08:20:53.343-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'addTextInput:hint:onKeyDownDo:',			#protocol : #public,			#sourceCode : 'addTextInput: id hint: hintString onKeyDownDo: javaScript\r\r\tself addTextInput: id hint: hintString on: \'keydown\' do: javaScript',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3026' ],		#self : OmReference [ '3027' ],		#time : DateAndTime [ '2024-03-03T08:20:53.343-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'addTextInput:hint:onKeyPressDo:',			#protocol : #public,			#sourceCode : 'addTextInput: id hint: hintString onKeyPressDo: javaScript\r\r\tself addTextInput: id hint: hintString on: \'keypress\' do: javaScript',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3027' ],		#self : OmReference [ '3028' ],		#time : DateAndTime [ '2024-03-03T08:20:53.343-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'addTextInput:hint:onKeyUpDo:',			#protocol : #public,			#sourceCode : 'addTextInput: id hint: hintString onKeyUpDo: javaScript\r\r\tself addTextInput: id hint: hintString on: \'keyup\' do: javaScript',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3028' ],		#self : OmReference [ '3029' ],		#time : DateAndTime [ '2024-03-03T08:20:53.343-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #cr,			#protocol : #public,			#sourceCode : 'cr\r\r\tbodyStream nextPutAll: \'<br/>\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3029' ],		#self : OmReference [ '3030' ],		#time : DateAndTime [ '2024-03-03T08:20:53.343-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #html,			#protocol : #public,			#sourceCode : 'html\r\r\t| htmlStream |\r\thtmlStream := String new writeStream.\r\thtmlStream\r\t\tnextPutAll: \'<!DOCTYPE html>\';\r\t\tcr;\r\t\tnextPutAll: \'<meta charset="utf-8" />\';\r\t\tcr;\r\t\tnextPutAll: \'<head>\';\r\t\tcr;\r\t\tnextPutAll: headerStream contents;\r\t\tcr;\r\t\tnextPutAll: \'</head>\';\r\t\tcr;\r\t\tnextPutAll: \'<body\';\r\t\tnextPutAll: bodyAttributes contents;\r\t\tnextPut: $>;\r\t\tcr;\r\t\tnextPutAll: bodyStream contents;\r\t\tcr;\r\t\tnextPutAll: scriptsStream contents;\r\t\tcr;\r\t\tnextPutAll: \'</body>\';\r\t\tcr;\r\t\tnextPutAll: \'</html>\'.\r\t\t\r\t^htmlStream contents',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3030' ],		#self : OmReference [ '3031' ],		#time : DateAndTime [ '2024-03-03T08:20:53.344-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\r\tsuper initialize.\r\theaderStream := String new writeStream.\r\tbodyStream := String new writeStream.\r\tbodyAttributes := String new writeStream.\r\tscriptsStream := String new writeStream',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3031' ],		#self : OmReference [ '3032' ],		#time : DateAndTime [ '2024-03-03T08:20:53.344-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'loadFrom:',			#protocol : #public,			#sourceCode : 'loadFrom: aString\r\r\t| hStart hEnd bStart bAngle bEnd |\r\thStart := aString indexOfSubCollection: \'<head>\'.\r\thEnd := aString indexOfSubCollection: \'</head>\'.\r\t(hStart>0 and: [hEnd>hStart]) ifFalse: [\r\t\theaderStream nextPutAll: \'<!-- no head tag in file -->\'\r\t] ifTrue: [\r\t\theaderStream nextPutAll: (aString copyFrom: hStart+6 to: hEnd-1)].\r\tbStart := aString indexOfSubCollection: \'<body\'.\r\tbAngle := aString findString: \'>\' startingAt: bStart.\r\tbEnd := aString indexOfSubCollection: \'</body>\'.\r\t(bAngle>0 and: [(aString at: bStart+5)=$ ]) ifTrue: [ bodyAttributes nextPutAll: (aString copyFrom: bStart+5 to: bAngle-1)].\r\t(bAngle>0 and: [bEnd>bAngle]) ifFalse: [\r\t\tbodyStream nextPutAll: \'<!-- no body tag in file -->\'\r\t] ifTrue: [\r\t\tbodyStream nextPutAll: (aString copyFrom: bAngle+1 to: bEnd-1)]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3032' ],		#self : OmReference [ '3033' ],		#time : DateAndTime [ '2024-03-03T08:20:53.344-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGenerator,				#isMetaSide : false			},			#name : #'title:',			#protocol : #public,			#sourceCode : 'title: aString\r\r\theaderStream \r\t\tnextPutAll: \'<title>\';\r\t\tnextPutAll: aString;\r\t\tnextPutAll: \'</title>\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3033' ],		#self : OmReference [ '3034' ],		#time : DateAndTime [ '2024-03-03T08:20:53.344-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageContext,				#isMetaSide : false			},			#name : #websocketDelegate,			#protocol : #accessing,			#sourceCode : 'websocketDelegate\r\r\t^ websocketDelegate',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3034' ],		#self : OmReference [ '3035' ],		#time : DateAndTime [ '2024-03-03T08:20:53.344-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageContext,				#isMetaSide : false			},			#name : #'websocketDelegate:',			#protocol : #accessing,			#sourceCode : 'websocketDelegate: anObject\r\r\twebsocketDelegate := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3035' ],		#self : OmReference [ '3036' ],		#time : DateAndTime [ '2024-03-03T08:20:53.344-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjParametrizableServerDelegate class',				#isMetaSide : true			},			#name : #new,			#protocol : #instance-creation,			#sourceCode : 'new\r\t^ super new\r\t\tinitialize;\r\t\tyourself',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3036' ],		#self : OmReference [ '3037' ],		#time : DateAndTime [ '2024-03-03T08:20:53.344-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjParametrizableServerDelegate,				#isMetaSide : false			},			#name : #css,			#protocol : #accessing,			#sourceCode : 'css\r\r\t^ css',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3037' ],		#self : OmReference [ '3038' ],		#time : DateAndTime [ '2024-03-03T08:20:53.344-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjParametrizableServerDelegate,				#isMetaSide : false			},			#name : #'css:',			#protocol : #accessing,			#sourceCode : 'css: anObject\r\r\tcss := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3038' ],		#self : OmReference [ '3039' ],		#time : DateAndTime [ '2024-03-03T08:20:53.345-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjParametrizableServerDelegate,				#isMetaSide : false			},			#name : #favicon,			#protocol : #accessing,			#sourceCode : 'favicon\r\r\t^ favicon',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3039' ],		#self : OmReference [ '3040' ],		#time : DateAndTime [ '2024-03-03T08:20:53.345-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjParametrizableServerDelegate,				#isMetaSide : false			},			#name : #'favicon:',			#protocol : #accessing,			#sourceCode : 'favicon: anObject\r\r\tfavicon := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3040' ],		#self : OmReference [ '3041' ],		#time : DateAndTime [ '2024-03-03T08:20:53.345-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjParametrizableServerDelegate,				#isMetaSide : false			},			#name : #fingerPrint,			#protocol : #accessing,			#sourceCode : 'fingerPrint\r\r\t^ fingerPrint',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3041' ],		#self : OmReference [ '3042' ],		#time : DateAndTime [ '2024-03-03T08:20:53.345-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjParametrizableServerDelegate,				#isMetaSide : false			},			#name : #'fingerPrint:',			#protocol : #accessing,			#sourceCode : 'fingerPrint: anObject\r\r\tfingerPrint := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3042' ],		#self : OmReference [ '3043' ],		#time : DateAndTime [ '2024-03-03T08:20:53.345-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjParametrizableServerDelegate,				#isMetaSide : false			},			#name : #'handleRequest:',			#protocol : #handling,			#sourceCode : 'handleRequest: request\r\r\t| entity prefix |\r\tprefix := request uri isSlash\r\t\t          ifTrue: [ \'index.html\' ]\r\t\t          ifFalse: [ request uri firstPathSegment ].\r\t(\'index.html\' = prefix and: self html isEmptyOrNil not) ifTrue: [ \r\t\tentity := ZnEntity html: self html ].\r\t(\'index.js\' = prefix and: self javascript isEmptyOrNil not) ifTrue: [ \r\t\tentity := ZnEntity javascript: self javascript ].\r\t(\'index.css\' = prefix and: self css isEmptyOrNil not) ifTrue: [ \r\t\tentity := ZnEntity css: self css ].\r\t(\'favicon.ico\' = prefix and: self favicon isEmptyOrNil not) ifTrue: [ \r\t\tentity := ZnEntity favicon: self favicon ].\r\t\'serverFingerPrint\' = prefix ifTrue: [ \r\t\tentity := ZnEntity html: self fingerPrint ].\r\tentity ifNotNil: [ ^ ZnResponse ok: entity ].\r\t^ ZnResponse notFound: request uri',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3043' ],		#self : OmReference [ '3044' ],		#time : DateAndTime [ '2024-03-03T08:20:53.345-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjParametrizableServerDelegate,				#isMetaSide : false			},			#name : #html,			#protocol : #accessing,			#sourceCode : 'html\r\r\t^ html',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3044' ],		#self : OmReference [ '3045' ],		#time : DateAndTime [ '2024-03-03T08:20:53.345-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjParametrizableServerDelegate,				#isMetaSide : false			},			#name : #'html:',			#protocol : #accessing,			#sourceCode : 'html: aString\r\r\thtml := aString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3045' ],		#self : OmReference [ '3046' ],		#time : DateAndTime [ '2024-03-03T08:20:53.345-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjParametrizableServerDelegate,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\r\tsuper initialize.\r\tfingerPrint := UUIDGenerator next asString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3046' ],		#self : OmReference [ '3047' ],		#time : DateAndTime [ '2024-03-03T08:20:53.345-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjParametrizableServerDelegate,				#isMetaSide : false			},			#name : #javascript,			#protocol : #accessing,			#sourceCode : 'javascript\r\r\t^ javascript',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3047' ],		#self : OmReference [ '3048' ],		#time : DateAndTime [ '2024-03-03T08:20:53.346-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjParametrizableServerDelegate,				#isMetaSide : false			},			#name : #'javascript:',			#protocol : #accessing,			#sourceCode : 'javascript: anObject\r\r\tjavascript := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3048' ],		#self : OmReference [ '3049' ],		#time : DateAndTime [ '2024-03-03T08:20:53.346-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjProxy class',				#isMetaSide : true			},			#name : #'newProxyNamed:onBridge:oid:',			#protocol : #'instance creation',			#sourceCode : 'newProxyNamed: proxyName onBridge: aBridge oid: anOid\r\t^ ((proxyName beginsWith: \'$_\')\r\t\tifTrue: [ PjProxy ]\r\t\tifFalse: [ PjProxyForGlobal ]) new\r\t\tjsName: proxyName onBridge: aBridge oid: anOid;\r\t\tyourself',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3049' ],		#self : OmReference [ '3050' ],		#time : DateAndTime [ '2024-03-03T08:20:53.346-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjProxy class',				#isMetaSide : true			},			#name : #'proxyNamed:onBridge:',			#protocol : #'instance creation',			#sourceCode : 'proxyNamed: proxyName onBridge: aBridge\r\t"Useful for building proxies on JS globals"\r\t^ self proxyNamed: proxyName onBridge: aBridge oid: proxyName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3050' ],		#self : OmReference [ '3051' ],		#time : DateAndTime [ '2024-03-03T08:20:53.346-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjProxy class',				#isMetaSide : true			},			#name : #'proxyNamed:onBridge:oid:',			#protocol : #'instance creation',			#sourceCode : 'proxyNamed: proxyName onBridge: aBridge oid: anOid\r\t| proxy |\r\taBridge\r\t\tifNotNil: [ proxy := aBridge proxies\r\t\t\t\tdetect: [ :p | p oid = anOid ]\r\t\t\t\tifNone: [ nil ].\r\t\t\tproxy ifNotNil: [ ^ proxy ].\r\t\t\tproxy := aBridge proxies at: proxyName ifAbsent: [ nil ].\r\t\t\tproxy ifNotNil: [ ^ proxy ].\r\t\t\tproxy := PjProxy\r\t\t\t\tnewProxyNamed: proxyName\r\t\t\t\tonBridge: aBridge\r\t\t\t\toid: anOid.\r\t\t\t^ aBridge proxies at: proxyName put: proxy ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3051' ],		#self : OmReference [ '3052' ],		#time : DateAndTime [ '2024-03-03T08:20:53.346-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'=',			#protocol : #comparing,			#sourceCode : '= anObject\r\r\t| equalMessage |\r\tsuper == anObject ifTrue: [ ^ true ].\r\t(anObject isKindOf: PjProxy) ifFalse: [ ^ false ].\r\tproxySpecificBridge = anObject jsBridge ifFalse: [ ^ false ].\r\tequalMessage := Message selector: #= argument: anObject.\r\t^ self jsBridge: [ :bridge | \r\t\t  bridge evalMessage: equalMessage sentTo: jsName ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3052' ],		#self : OmReference [ '3053' ],		#time : DateAndTime [ '2024-03-03T08:20:53.346-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'addEventListener:block:',			#protocol : #'reflective operations',			#sourceCode : 'addEventListener: type block: aBlock\r\r\t^ self jsBridge: [ :bridge | \r\t\t  | bcProxyInfo msg |\r\t\t  bcProxyInfo := aBlock ifNotNil: [ \r\t\t\t                 (bridge ensureProxyForEventListenerBlock: aBlock)\r\t\t\t\t                 asProxyInfo ].\r\t\t  msg := PjMessageSetEventListener newWithId.\r\t\t  msg targetProxyInfo: self asProxyInfo.\r\t\t  msg listenerProxyInfo: bcProxyInfo.\r\t\t  msg eventName: type.\r\t\t  bridge sendMessageAndWaitForResponse: msg ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3053' ],		#self : OmReference [ '3054' ],		#time : DateAndTime [ '2024-03-03T08:20:53.346-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #asJSON,			#protocol : #converting,			#sourceCode : 'asJSON\r\r\t^ jsName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3054' ],		#self : OmReference [ '3055' ],		#time : DateAndTime [ '2024-03-03T08:20:53.347-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'asJsObjectUsing:',			#protocol : #converting,			#sourceCode : 'asJsObjectUsing: converter\r\r\t^ self',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3055' ],		#self : OmReference [ '3056' ],		#time : DateAndTime [ '2024-03-03T08:20:53.347-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #asLocalObject,			#protocol : #converting,			#sourceCode : 'asLocalObject\r\r\t| size |\r\tsize := self size.\r\t^ Array\r\t\t  new: size\r\t\t  streamContents: [ :s | \r\t\t  1 to: size do: [ :index | s nextPut: (self at: index) ] ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3056' ],		#self : OmReference [ '3057' ],		#time : DateAndTime [ '2024-03-03T08:20:53.347-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #asRawJSONString,			#protocol : #converting,			#sourceCode : 'asRawJSONString\r\r\t^ self jsBridge: [ :bridge | \r\t\t  bridge evalJavascript: \'JSON.stringify(\' , jsName , \')\' ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3057' ],		#self : OmReference [ '3058' ],		#time : DateAndTime [ '2024-03-03T08:20:53.347-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'at:',			#protocol : #'force proxy',			#sourceCode : 'at: index\r\r\t^ self doesNotUnderstand: (Message selector: #at: argument: index)',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3058' ],		#self : OmReference [ '3059' ],		#time : DateAndTime [ '2024-03-03T08:20:53.347-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'at:put:',			#protocol : #'force proxy',			#sourceCode : 'at: index put: anObject\r\r\t^ self doesNotUnderstand: (Message selector: #at:put: arguments: { \r\t\t\t\t   index.\r\t\t\t\t   anObject })',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3059' ],		#self : OmReference [ '3060' ],		#time : DateAndTime [ '2024-03-03T08:20:53.347-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'closure:',			#protocol : #'closure handling',			#sourceCode : 'closure: aBlockClosure\r\r\tclosure ifNotNil: [ \r\t\tself jsBridge: [ :bridge | bridge deleteBlockClosure: closure ] ].\r\tclosure := aBlockClosure',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3060' ],		#self : OmReference [ '3061' ],		#time : DateAndTime [ '2024-03-03T08:20:53.347-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'confirm:',			#protocol : #'force proxy',			#sourceCode : 'confirm: aString\r\r\t^ self doesNotUnderstand:\r\t\t  (Message selector: #confirm: argument: aString)',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3061' ],		#self : OmReference [ '3062' ],		#time : DateAndTime [ '2024-03-03T08:20:53.347-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'convertToJavascriptAstUsing:',			#protocol : #'reflective operations',			#sourceCode : 'convertToJavascriptAstUsing: aPjAstConverter\r\r\t^ PjGlobalNode identifier: jsName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3062' ],		#self : OmReference [ '3063' ],		#time : DateAndTime [ '2024-03-03T08:20:53.348-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'doesNotUnderstand:',			#protocol : #'reflective operations',			#sourceCode : 'doesNotUnderstand: aMessage\r\r\t^ self jsBridge: [ :bridge | \r\t\t  bridge evalMessage: aMessage sentTo: jsName ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3063' ],		#self : OmReference [ '3064' ],		#time : DateAndTime [ '2024-03-03T08:20:53.348-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #head,			#protocol : #'force proxy',			#sourceCode : 'head\r\r\t^ self doesNotUnderstand: (Message selector: #head)',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3064' ],		#self : OmReference [ '3065' ],		#time : DateAndTime [ '2024-03-03T08:20:53.348-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'instVarNamed:',			#protocol : #introspection,			#sourceCode : 'instVarNamed: aString\r\r\t^ self jsBridge: [ :bridge | \r\t\t  | selector |\r\t\t  selector := jsName , \'.\' , aString.\r\t\t  bridge evalJavascript: selector ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3065' ],		#self : OmReference [ '3066' ],		#time : DateAndTime [ '2024-03-03T08:20:53.348-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'instVarNamed:put:',			#protocol : #introspection,			#sourceCode : 'instVarNamed: aString put: aValue\r\r\t^ self jsBridge: [ :bridge | \r\t\t  bridge evalJavascriptWithDnuFrom: [ \r\t\t\t  jsName , \'.\' , aString , \'=\' , (bridge convertToJs: aValue) ] ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3066' ],		#self : OmReference [ '3067' ],		#time : DateAndTime [ '2024-03-03T08:20:53.348-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #isLiteralJavascriptValue,			#protocol : #testing,			#sourceCode : 'isLiteralJavascriptValue\r\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3067' ],		#self : OmReference [ '3068' ],		#time : DateAndTime [ '2024-03-03T08:20:53.348-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #isPjProxyNil,			#protocol : #testing,			#sourceCode : 'isPjProxyNil\r\r\tjsName = \'undefined\' ifTrue: [ ^ true ].\r\tjsName = \'null\' ifTrue: [ ^ true ].\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3068' ],		#self : OmReference [ '3069' ],		#time : DateAndTime [ '2024-03-03T08:20:53.349-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #isPjProxyOrNil,			#protocol : #testing,			#sourceCode : 'isPjProxyOrNil\r\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3069' ],		#self : OmReference [ '3070' ],		#time : DateAndTime [ '2024-03-03T08:20:53.349-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #javascriptName,			#protocol : #'javascript generation',			#sourceCode : 'javascriptName\r\r\t^ jsName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3070' ],		#self : OmReference [ '3071' ],		#time : DateAndTime [ '2024-03-03T08:20:53.349-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #javascriptValid,			#protocol : #'javascript generation',			#sourceCode : 'javascriptValid\r\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3071' ],		#self : OmReference [ '3072' ],		#time : DateAndTime [ '2024-03-03T08:20:53.349-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'join:',			#protocol : #'force proxy',			#sourceCode : 'join: aCollection\r\r\t^ self doesNotUnderstand:\r\t\t  (Message selector: #join: argument: aCollection)',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3072' ],		#self : OmReference [ '3073' ],		#time : DateAndTime [ '2024-03-03T08:20:53.349-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #jsBridge,			#protocol : #accessing,			#sourceCode : 'jsBridge\r\r\t^ proxySpecificBridge',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3073' ],		#self : OmReference [ '3074' ],		#time : DateAndTime [ '2024-03-03T08:20:53.349-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'jsBridge:',			#protocol : #accessing,			#sourceCode : 'jsBridge: aBlock\r\r\tproxySpecificBridge ifNotNil: [ :bridge | ^ aBlock value: bridge ].\r\tPjBridge soleBridge ifNotNil: [ :bridge | ^ aBlock value: bridge ].\r\tself error: \'no bridge for proxy: \' , jsName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3074' ],		#self : OmReference [ '3075' ],		#time : DateAndTime [ '2024-03-03T08:20:53.349-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'jsName:onBridge:oid:',			#protocol : #initialize-release,			#sourceCode : 'jsName: aString onBridge: aBridge oid: anOid\r\r\tjsName := aString asSymbol.\r\toid := anOid asSymbol.\r\taBridge ifNotNil: [ \r\t\t| finalizer |\r\t\tfinalizer := PjProxyFinalizationHandler\r\t\t\t             finalizerForProxyNamed: jsName\r\t\t\t             onBridge: aBridge.\r\t\tself finalizationRegistry add: self executor: finalizer ].\r\tproxySpecificBridge := aBridge',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3075' ],		#self : OmReference [ '3076' ],		#time : DateAndTime [ '2024-03-03T08:20:53.349-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'log:',			#protocol : #'force proxy',			#sourceCode : 'log: aString\r\r\t^ self doesNotUnderstand: (Message selector: #log: argument: aString)',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3076' ],		#self : OmReference [ '3077' ],		#time : DateAndTime [ '2024-03-03T08:20:53.35-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #name,			#protocol : #'force proxy',			#sourceCode : 'name\r\r\t^ self doesNotUnderstand: (Message selector: #name)',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3077' ],		#self : OmReference [ '3078' ],		#time : DateAndTime [ '2024-03-03T08:20:53.35-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #oid,			#protocol : #accessing,			#sourceCode : 'oid\r\r\t^ oid',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3078' ],		#self : OmReference [ '3079' ],		#time : DateAndTime [ '2024-03-03T08:20:53.35-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'oid:',			#protocol : #accessing,			#sourceCode : 'oid: anObject\r\r\toid := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3079' ],		#self : OmReference [ '3080' ],		#time : DateAndTime [ '2024-03-03T08:20:53.35-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'printJsOn:',			#protocol : #'javascript generation',			#sourceCode : 'printJsOn: aStream\r\r\taStream nextPutAll: jsName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3080' ],		#self : OmReference [ '3081' ],		#time : DateAndTime [ '2024-03-03T08:20:53.35-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: ws\r\r\tsuper printOn: ws.\r\tws << \' (oid: \'.\r\tself oid ifNil: [ ws << \'-\' ] ifNotNil: [ ws << self oid ].\r\tws << \')\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3081' ],		#self : OmReference [ '3082' ],		#time : DateAndTime [ '2024-03-03T08:20:53.35-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'removeEventListener:',			#protocol : #'reflective operations',			#sourceCode : 'removeEventListener: type\r\r\t^ self addEventListener: type block: nil',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3082' ],		#self : OmReference [ '3083' ],		#time : DateAndTime [ '2024-03-03T08:20:53.35-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'runBlockClosure:with:',			#protocol : #'closure handling',			#sourceCode : 'runBlockClosure: ev with: this\r\r\tclosure ifNotNil: [ closure cull: ev cull: this ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3083' ],		#self : OmReference [ '3084' ],		#time : DateAndTime [ '2024-03-03T08:20:53.35-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #size,			#protocol : #'force proxy',			#sourceCode : 'size\r\r\t^ self doesNotUnderstand: (Message selector: #size)',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3084' ],		#self : OmReference [ '3085' ],		#time : DateAndTime [ '2024-03-03T08:20:53.351-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #value,			#protocol : #'force proxy',			#sourceCode : 'value\r\r\t^ self doesNotUnderstand: (Message selector: #value)',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3085' ],		#self : OmReference [ '3086' ],		#time : DateAndTime [ '2024-03-03T08:20:53.351-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'value:',			#protocol : #'force proxy',			#sourceCode : 'value: anObject\r\r\t^ self doesNotUnderstand:\r\t\t  (Message selector: #value: argument: anObject)',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3086' ],		#self : OmReference [ '3087' ],		#time : DateAndTime [ '2024-03-03T08:20:53.351-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjProxyForGlobal class',				#isMetaSide : true			},			#name : #allJavascriptGlobals,			#protocol : #accessing,			#sourceCode : 'allJavascriptGlobals\r\t^ self withAllSubclasses flatCollectAsSet: [: class |\r\t\tclass allInstances collect: #asJSON]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3087' ],		#self : OmReference [ '3088' ],		#time : DateAndTime [ '2024-03-03T08:20:53.351-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjProxyForGlobal class',				#isMetaSide : true			},			#name : #'newProxyNamed:',			#protocol : #'instance creation',			#sourceCode : 'newProxyNamed: globalName\r\t^ self newProxyNamed: globalName onBridge: nil oid: globalName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3088' ],		#self : OmReference [ '3089' ],		#time : DateAndTime [ '2024-03-03T08:20:53.351-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyForGlobal,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\r\taStream\r\t\tnextPutAll: \'a Proxy for \';\r\t\tnextPutAll: jsName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3089' ],		#self : OmReference [ '3090' ],		#time : DateAndTime [ '2024-03-03T08:20:53.351-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjProxyFinalizationHandler class',				#isMetaSide : true			},			#name : #'finalizerForProxyNamed:onBridge:',			#protocol : #'finalization support',			#sourceCode : 'finalizerForProxyNamed: aString onBridge: aBridge\r\t| instance |\r\tinstance := self new\r\t\tproxyJsName: aString;\r\t\tbridge: aBridge;\r\t\tyourself.\r\t^ instance finalizer',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3090' ],		#self : OmReference [ '3091' ],		#time : DateAndTime [ '2024-03-03T08:20:53.351-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyFinalizationHandler,				#isMetaSide : false			},			#name : #bridge,			#protocol : #accessing,			#sourceCode : 'bridge\r\r\t^ weakBridgeArray at: 1',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3091' ],		#self : OmReference [ '3092' ],		#time : DateAndTime [ '2024-03-03T08:20:53.351-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyFinalizationHandler,				#isMetaSide : false			},			#name : #'bridge:',			#protocol : #accessing,			#sourceCode : 'bridge: aBridge\r\r\tweakBridgeArray at: 1 put: aBridge',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3092' ],		#self : OmReference [ '3093' ],		#time : DateAndTime [ '2024-03-03T08:20:53.352-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyFinalizationHandler,				#isMetaSide : false			},			#name : #cleanUpJsSide,			#protocol : #finalization,			#sourceCode : 'cleanUpJsSide\r\r\tself bridge ifNotNil: [ :br | \r\t\tbr isServerStopped ifFalse: [ br deleteJsValue: self proxyJsName ] ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3093' ],		#self : OmReference [ '3094' ],		#time : DateAndTime [ '2024-03-03T08:20:53.352-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyFinalizationHandler,				#isMetaSide : false			},			#name : #finalizer,			#protocol : #accessing,			#sourceCode : 'finalizer\r\r\t^ ObjectFinalizer new\r\t\t  receiver: self;\r\t\t  selector: #cleanUpJsSide yourself',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3094' ],		#self : OmReference [ '3095' ],		#time : DateAndTime [ '2024-03-03T08:20:53.352-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyFinalizationHandler,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\r\tsuper initialize.\r\tweakBridgeArray := WeakArray new: 1',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3095' ],		#self : OmReference [ '3096' ],		#time : DateAndTime [ '2024-03-03T08:20:53.352-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyFinalizationHandler,				#isMetaSide : false			},			#name : #proxyJsName,			#protocol : #accessing,			#sourceCode : 'proxyJsName\r\r\t^ proxyJsName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3096' ],		#self : OmReference [ '3097' ],		#time : DateAndTime [ '2024-03-03T08:20:53.352-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyFinalizationHandler,				#isMetaSide : false			},			#name : #'proxyJsName:',			#protocol : #accessing,			#sourceCode : 'proxyJsName: anObject\r\r\tproxyJsName := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3097' ],		#self : OmReference [ '3098' ],		#time : DateAndTime [ '2024-03-03T08:20:53.352-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjSinkObject class',				#isMetaSide : true			},			#name : #default,			#protocol : #'default instance',			#sourceCode : 'default\r\t^default ifNil: [ default := self new ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3098' ],		#self : OmReference [ '3099' ],		#time : DateAndTime [ '2024-03-03T08:20:53.352-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjSinkObject class',				#isMetaSide : true			},			#name : #'doesNotUnderstand:',			#protocol : #'reflective operations',			#sourceCode : 'doesNotUnderstand: aMessage\r\t^self',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3099' ],		#self : OmReference [ '3100' ],		#time : DateAndTime [ '2024-03-03T08:20:53.352-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjSinkObject class',				#isMetaSide : true			},			#name : #resetDefault,			#protocol : #'default instance',			#sourceCode : 'resetDefault\r\t"self resetDefault"\r\tdefault := nil',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3100' ],		#self : OmReference [ '3101' ],		#time : DateAndTime [ '2024-03-03T08:20:53.353-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSinkObject,				#isMetaSide : false			},			#name : #'doesNotUnderstand:',			#protocol : #'reflective operations',			#sourceCode : 'doesNotUnderstand: aMessage\r\r\t^ self',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3101' ],		#self : OmReference [ '3102' ],		#time : DateAndTime [ '2024-03-03T08:20:53.354-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnEntity class',				#isMetaSide : true			},			#name : #'css:',			#protocol : #'*PharoJs-Base-Bridge-Exporter',			#sourceCode : 'css: css\r\r\t^ self stringEntityClass css: css',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3102' ],		#self : OmReference [ '3103' ],		#time : DateAndTime [ '2024-03-03T08:20:53.354-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnEntity class',				#isMetaSide : true			},			#name : #'favicon:',			#protocol : #'*PharoJs-Base-Bridge-Exporter',			#sourceCode : 'favicon: favicon\r\r\t^ ZnByteArrayEntity favicon: favicon',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3103' ],		#self : OmReference [ '3104' ],		#time : DateAndTime [ '2024-03-03T08:20:53.355-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnEntity class',				#isMetaSide : true			},			#name : #'javascript:',			#protocol : #'*PharoJs-Base-Bridge-Exporter',			#sourceCode : 'javascript: javascript\r\r\t^ self stringEntityClass javascript: javascript',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3104' ],		#self : OmReference [ '3105' ],		#time : DateAndTime [ '2024-03-03T08:20:53.355-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestPharoJsBaseBridge class',				#isMetaSide : true			},			#name : #ruleBadMessageRule2V1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleBadMessageRule2V1FalsePositive\r\t^ #(#(#(#RGMethodDefinition #(#PjBridge #timeout: #false)) #\'2022-02-02T08:50:25.026526+01:00\') )',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3105' ],		#self : OmReference [ '3106' ],		#time : DateAndTime [ '2024-03-03T08:20:53.355-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstConverter,				#isMetaSide : false			},			#name : #'convertJavascriptMessage:',			#protocol : #'*PharoJs-Base-Bridge',			#sourceCode : 'convertJavascriptMessage: aJavascriptMessage\r\r\t| args |\r\targs := aJavascriptMessage arguments collect: [ :each | \r\t\t        each asJsAstUsing: self ].\r\tself discoveredMessage: aJavascriptMessage selector.\r\t^ PjApplyNode\r\t\t  func: (PjFieldNode\r\t\t\t\t   target:\r\t\t\t\t   (PjGlobalNode identifier: aJavascriptMessage receiverId)\r\t\t\t\t   selectorNode:\r\t\t\t\t   (PjMessageSelectorNode identifier: aJavascriptMessage selector)\r\t\t\t\t   isNonNil: true)\r\t\t  args: args',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3106' ],		#self : OmReference [ '3107' ],		#time : DateAndTime [ '2024-03-03T08:20:53.356-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'convertToJs:',			#protocol : #'*PharoJs-Base-Bridge',			#sourceCode : 'convertToJs: anObject\r\r\tself transpiler enableWriteDnuDuring: [ \r\t\t^ self transpiler convertToJs: anObject ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3107' ],		#self : OmReference [ '3108' ],		#time : DateAndTime [ '2024-03-03T08:20:53.356-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'invalidateClass:',			#protocol : #'*PharoJs-Base-Bridge',			#sourceCode : 'invalidateClass: aClass\r\r\tself transpiler invalidateClass: aClass',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3108' ],		#self : OmReference [ '3109' ],		#time : DateAndTime [ '2024-03-03T08:20:53.356-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporter,				#isMetaSide : false			},			#name : #'setExtraBindings:',			#protocol : #'*PharoJs-Base-Bridge',			#sourceCode : 'setExtraBindings: aDictionary\r\r\t^ self transpiler setExtraBindings: aDictionary',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3109' ],		#self : OmReference [ '3110' ],		#time : DateAndTime [ '2024-03-03T08:20:53.357-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnStringEntity class',				#isMetaSide : true			},			#name : #'css:',			#protocol : #'*PharoJs-Base-Bridge-Exporter',			#sourceCode : 'css: string\r\r\t^ (self type: ZnMimeType textCss)\r\t\t  string: string;\r\t\t  yourself',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3110' ],		#self : OmReference [ '3111' ],		#time : DateAndTime [ '2024-03-03T08:20:53.358-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnStringEntity class',				#isMetaSide : true			},			#name : #'javascript:',			#protocol : #'*PharoJs-Base-Bridge-Exporter',			#sourceCode : 'javascript: string\r\r\t^ (self type: ZnMimeType textJavascript)\r\t\t  string: string;\r\t\t  yourself',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3111' ],		#self : OmReference [ '3112' ],		#time : DateAndTime [ '2024-03-03T08:20:53.358-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'WBMacWebBrowser class',				#isMetaSide : true			},			#name : #'openBrowser:on:inBackground:',			#protocol : #'*PharoJs-Base-Bridge',			#sourceCode : 'openBrowser: browserName on: urlString inBackground: backgroundFlag\r\r\t"Open the webbrowser on the given URL\r\tself openBrowser: \'Firefox\' on: \'http://pharojs.org\' inBackground: false.\r\tif the browserName is nil, open the default browser.\r\tself openBrowser: nil on: \'http://pharojs.org\' inBackground: false.\r\r\tThe backgroundFlag is true when the window of the browser should open behind the Pharo window.\r\t"\r\r\t| openScriptPath backgroundCommand browserCommandName command |\r\tbackgroundCommand := backgroundFlag\r\t\t                     ifTrue: [ \'background\' ]\r\t\t                     ifFalse: [ \'\' ].\r\tbrowserCommandName := browserName ifNil: [ \'default\' ].\r\topenScriptPath := PjApplication repositoryPath / \'Tools\' / \'MacOsX\'\r\t                  / \'openUrl\'.\r\tcommand := String streamContents: [ :str | \r\t\t           str\r\t\t\t           << openScriptPath pathString;\r\t\t\t           space;\r\t\t\t\t\t\t<<$";\r\t\t\t           << urlString;\r\t\t\t\t\t\t<<$";\r\t\t\t           space;\r\t\t\t           << browserCommandName;\r\t\t\t           space;\r\t\t\t           << backgroundCommand ].\r\tself system: command',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3112' ],		#self : OmReference [ '3113' ],		#time : DateAndTime [ '2024-03-03T08:20:53.358-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'WBMacWebBrowser class',				#isMetaSide : true			},			#name : #'openTerminalWithNodeOn:inFolder:',			#protocol : #'*PharoJs-Base-Bridge',			#sourceCode : 'openTerminalWithNodeOn: theFileName inFolder: theFolder\r\r\t| cd |\r\tcd := theFolder ifNil: [ \'\' ] ifNotNil: [ \'cd \' , theFolder , \'; \' ].\r\tself system: \'osascript -e \'\'\r  tell application "Terminal"\r    activate\r    set newTab to do script("\' , cd , \'exec node \' , theFileName\r\t\t, \'")\r    set current settings of selected tab of window 1 to settings set "PharoNode"\r  end tell\'\'\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3113' ],		#self : OmReference [ '3114' ],		#time : DateAndTime [ '2024-03-03T08:20:53.359-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ZnByteArrayEntity class',				#isMetaSide : true			},			#name : #'favicon:',			#protocol : #'*PharoJs-Base-Bridge-Exporter',			#sourceCode : 'favicon: byteArray\r\r\t^ (self type: (ZnMimeType main: \'image\' sub: \'vnd.microsoft.icon\'))\r\t\t  bytes: byteArray;\r\t\t  yourself',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3114' ],		#self : OmReference [ '3115' ],		#time : DateAndTime [ '2024-03-03T08:20:53.359-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSocketLogEvent,				#isMetaSide : false			},			#name : #'contents:',			#protocol : #accessing,			#sourceCode : 'contents: anObject\r\r\tcontents := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3115' ],		#self : OmReference [ '3116' ],		#time : DateAndTime [ '2024-03-03T08:20:53.359-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSocketLogEvent,				#isMetaSide : false			},			#name : #'direction:',			#protocol : #accessing,			#sourceCode : 'direction: anObject\r\r\tdirection := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3116' ],		#self : OmReference [ '3117' ],		#time : DateAndTime [ '2024-03-03T08:20:53.359-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSocketLogEvent,				#isMetaSide : false			},			#name : #'printContentsOn:',			#protocol : #printing,			#sourceCode : 'printContentsOn: stream\r\r\t| limitedString |\r\tlimitedString := String\r\t\t                 streamContents: [ :s | s nextPutAll: contents ]\r\t\t                 limitedTo: 20.\r\tstream\r\t\tnextPutAll: \' socket \';\r\t\tnextPutAll: direction asString;\r\t\tnextPut: $:;\r\t\tspace;\r\t\tnextPutAll: limitedString.\r\tlimitedString size < contents size ifTrue: [ \r\t\tstream\r\t\t\tnextPutAll: \'... \';\r\t\t\tprint: contents size;\r\t\t\tnextPut: $B ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3117' ],		#self : OmReference [ '3118' ],		#time : DateAndTime [ '2024-03-03T08:20:53.362-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjWebApplication class',				#isMetaSide : true			},			#name : #bridgeClientClass,			#protocol : #'*PharoJs-Base-Bridge-App',			#sourceCode : 'bridgeClientClass\r\t<pharoJsSkip>\r\t^ PjBrowserBridgeClient',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3118' ],		#self : OmReference [ '3119' ],		#time : DateAndTime [ '2024-03-03T08:20:53.363-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNodeApplication class',				#isMetaSide : true			},			#name : #bridgeClientClass,			#protocol : #'*PharoJs-Base-Bridge-App',			#sourceCode : 'bridgeClientClass\r\t<pharoJsSkip>\r\t\r\t^ PjNodeBridgeClient',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3119' ],		#self : OmReference [ '3120' ],		#time : DateAndTime [ '2024-03-03T08:20:53.363-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyInfo,				#isMetaSide : false			},			#name : #getJsObject,			#protocol : #public,			#sourceCode : 'getJsObject\r\r\t^ global instVarNamed: self globalName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3120' ],		#self : OmReference [ '3121' ],		#time : DateAndTime [ '2024-03-03T08:20:53.363-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyInfo,				#isMetaSide : false			},			#name : #globalName,			#protocol : #accessing,			#sourceCode : 'globalName\r\r\t^ globalName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3121' ],		#self : OmReference [ '3122' ],		#time : DateAndTime [ '2024-03-03T08:20:53.363-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyInfo,				#isMetaSide : false			},			#name : #'globalName:',			#protocol : #accessing,			#sourceCode : 'globalName: anObject\r\r\tglobalName := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3122' ],		#self : OmReference [ '3123' ],		#time : DateAndTime [ '2024-03-03T08:20:53.363-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyInfo,				#isMetaSide : false			},			#name : #logDescription,			#protocol : #printing,			#sourceCode : 'logDescription\r\r\t^ String streamContents: [ :ws | \r\t\t  ws nextPutAll: \'Proxy \'.\r\t\t  ws nextPutAll: \' oid: \'.\r\t\t  ws nextPutAll: self oid.\r\t\t  ws nextPutAll: \' globalName: \'.\r\t\t  ws nextPutAll: self globalName.\r\t\t  ws nextPutAll: \' remove: \'.\r\t\t  ws nextPutAll: (self remove == true\r\t\t\t\t   ifTrue: [ \'true\' ]\r\t\t\t\t   ifFalse: [ \'false\' ]) ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3123' ],		#self : OmReference [ '3124' ],		#time : DateAndTime [ '2024-03-03T08:20:53.363-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyInfo,				#isMetaSide : false			},			#name : #oid,			#protocol : #accessing,			#sourceCode : 'oid\r\r\t^ oid',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3124' ],		#self : OmReference [ '3125' ],		#time : DateAndTime [ '2024-03-03T08:20:53.364-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyInfo,				#isMetaSide : false			},			#name : #'oid:',			#protocol : #accessing,			#sourceCode : 'oid: anObject\r\r\toid := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3125' ],		#self : OmReference [ '3126' ],		#time : DateAndTime [ '2024-03-03T08:20:53.364-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyInfo,				#isMetaSide : false			},			#name : #'proxyForBridge:',			#protocol : #public,			#sourceCode : 'proxyForBridge: aBridge\r\r\t"jsName globalRef"\r\r\t<pharoJsSkip>\r\t| proxy |\r\tself globalName = #undefined ifTrue: [ ^ nil ].\r\tself globalName = #null ifTrue: [ ^ nil ].\r\tself remove == true ifTrue: [ \r\t\taBridge proxies detect: [ :p | p oid = self oid ] ifFound: [ :p | \r\t\t\tp closure: nil.\r\t\t\t^ true ].\r\t\taBridge proxies\r\t\t\tdetect: [ :p | p jsName = self globalName ]\r\t\t\tifFound: [ :p | \r\t\t\t\tp closure: nil.\r\t\t\t\t^ true ].\r\t\tself error: \'proxy to be removed not found\' ].\r\tproxy := PjProxy\r\t\t         proxyNamed: self globalName asSymbol\r\t\t         onBridge: aBridge\r\t\t         oid: self oid asSymbol.\r\t^ proxy',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3126' ],		#self : OmReference [ '3127' ],		#time : DateAndTime [ '2024-03-03T08:20:53.364-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyInfo,				#isMetaSide : false			},			#name : #remove,			#protocol : #accessing,			#sourceCode : 'remove\r\r\t^ remove',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3127' ],		#self : OmReference [ '3128' ],		#time : DateAndTime [ '2024-03-03T08:20:53.364-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyInfo,				#isMetaSide : false			},			#name : #'remove:',			#protocol : #accessing,			#sourceCode : 'remove: anObject\r\r\tremove := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3128' ],		#self : OmReference [ '3129' ],		#time : DateAndTime [ '2024-03-03T08:20:53.364-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjProxyManager class',				#isMetaSide : true			},			#name : #'atGlobalVarName:put:',			#protocol : #'instance creation',			#sourceCode : 'atGlobalVarName: globalId put: anObject\r\r\tglobal at: globalId put: anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3129' ],		#self : OmReference [ '3130' ],		#time : DateAndTime [ '2024-03-03T08:20:53.364-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjProxyManager class',				#isMetaSide : true			},			#name : #'deleteGlobalVarNamed:',			#protocol : #'default instance',			#sourceCode : 'deleteGlobalVarNamed: globalId\r\r\tglobalId ifNil: [ ^ self ].\r\tglobalId isEmpty ifTrue: [ ^ self ].\r\t(global instVarNamed: globalId) ifNotNil: [ :obj | \r\t\tobj ifNotNil: [ global removeKey: globalId ] ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3130' ],		#self : OmReference [ '3131' ],		#time : DateAndTime [ '2024-03-03T08:20:53.364-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjProxyManager class',				#isMetaSide : true			},			#name : #'ensureObjectRegistered:',			#protocol : #'instance creation',			#sourceCode : 'ensureObjectRegistered: anObject\r\r\t| oid globalId |\r\toid := self ensureOidOnObject: anObject.\r\tglobalId := PjProxyManager nextGlobalVarName.\r\tself atGlobalVarName: globalId put: anObject.\r\t^ oid -> globalId',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3131' ],		#self : OmReference [ '3132' ],		#time : DateAndTime [ '2024-03-03T08:20:53.364-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjProxyManager class',				#isMetaSide : true			},			#name : #'ensureOidOnObject:',			#protocol : #'instance creation',			#sourceCode : 'ensureOidOnObject: anObject\r\r\t^ (self getOidFrom: anObject) ifNil: [ \r\t\t  | oid |\r\t\t  oid := PjProxyManager nextOid.\r\t\t  self setOid: oid on: anObject.\r\t\t  oid ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3132' ],		#self : OmReference [ '3133' ],		#time : DateAndTime [ '2024-03-03T08:20:53.364-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjProxyManager class',				#isMetaSide : true			},			#name : #'getOidFrom:',			#protocol : #'instance creation',			#sourceCode : 'getOidFrom: anObject\r\r\t^ anObject instVarNamed: self oidInstVarName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3133' ],		#self : OmReference [ '3134' ],		#time : DateAndTime [ '2024-03-03T08:20:53.364-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjProxyManager class',				#isMetaSide : true			},			#name : #'makeBlockClosureProxy:stopPropagation:for:',			#protocol : #'instance creation',			#sourceCode : 'makeBlockClosureProxy: withThis stopPropagation: stop for: webSocketDelegate\r\r\t| blockClosure oid |\r\toid := PjProxyManager nextOid.\r\tblockClosure := [ :ev | \r\t| target msg |\r\tstop\r\t\tifTrue: [ ev stopPropagation ].\r\ttarget := withThis\r\t\tifFalse: [ nil ]\r\t\tifTrue: [ ev target ifNil: [ ev sourceElement ] ].\r\tmsg := PjMessageCallback newWithId.\r\tmsg receiverProxyInfo: blockClosure proxyResponse.\r\tmsg eventProxyInfo: ev proxyResponse.\r\tmsg eventTargetProxyInfo: target proxyResponse.\r\twebSocketDelegate tryToSendMessage: msg.\r\ttrue ].\r\tblockClosure instVarNamed: \'$PjRefCount\' put: 0.\r\tself setOid: oid on: blockClosure.\r\tself atGlobalVarName: oid put: blockClosure.\r\t^ blockClosure proxyResponse',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3134' ],		#self : OmReference [ '3135' ],		#time : DateAndTime [ '2024-03-03T08:20:53.364-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjProxyManager class',				#isMetaSide : true			},			#name : #nextGlobalVarName,			#protocol : #'instance creation',			#sourceCode : 'nextGlobalVarName\r\r\t^ \'$_\' , self nextIdNumber asString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3135' ],		#self : OmReference [ '3136' ],		#time : DateAndTime [ '2024-03-03T08:20:53.364-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjProxyManager class',				#isMetaSide : true			},			#name : #nextIdNumber,			#protocol : #'instance creation',			#sourceCode : 'nextIdNumber\r\r\tcurrentId := currentId ifNil: [ 1 ] ifNotNil: [ :id | id + 1 ].\r\t^ currentId',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3136' ],		#self : OmReference [ '3137' ],		#time : DateAndTime [ '2024-03-03T08:20:53.364-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjProxyManager class',				#isMetaSide : true			},			#name : #nextOid,			#protocol : #'instance creation',			#sourceCode : 'nextOid\r\r\t^ \'$_\' , self nextIdNumber asString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3137' ],		#self : OmReference [ '3138' ],		#time : DateAndTime [ '2024-03-03T08:20:53.364-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjProxyManager class',				#isMetaSide : true			},			#name : #oidInstVarName,			#protocol : #'default instance',			#sourceCode : 'oidInstVarName\r\r\t^ \'$_oid\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3138' ],		#self : OmReference [ '3139' ],		#time : DateAndTime [ '2024-03-03T08:20:53.364-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjProxyManager class',				#isMetaSide : true			},			#name : #'setOid:on:',			#protocol : #'instance creation',			#sourceCode : 'setOid: anOid on: anObject\r\r\tanObject instVarNamed: self oidInstVarName putHidden: anOid',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3139' ],		#self : OmReference [ '3140' ],		#time : DateAndTime [ '2024-03-03T08:20:53.364-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjEvaluatorWebsocketDelegate class',				#isMetaSide : true			},			#name : #closeDefault,			#protocol : #'defaut instance',			#sourceCode : 'closeDefault\r\r\tself default close',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3140' ],		#self : OmReference [ '3141' ],		#time : DateAndTime [ '2024-03-03T08:20:53.366-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjEvaluatorWebsocketDelegate class',				#isMetaSide : true			},			#name : #'connectDefaultToTag:',			#protocol : #'defaut instance',			#sourceCode : 'connectDefaultToTag: tagString\r\r\t| newInstance |\r\tnewInstance := self connectToTag: tagString.\r\tself default: newInstance',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3141' ],		#self : OmReference [ '3142' ],		#time : DateAndTime [ '2024-03-03T08:20:53.366-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjEvaluatorWebsocketDelegate class',				#isMetaSide : true			},			#name : #'connectDefaultToUrl:',			#protocol : #'defaut instance',			#sourceCode : 'connectDefaultToUrl: urlString\r\r\t| newInstance |\r\tnewInstance := self connectToUrl: urlString.\r\tself default: newInstance',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3142' ],		#self : OmReference [ '3143' ],		#time : DateAndTime [ '2024-03-03T08:20:53.366-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjEvaluatorWebsocketDelegate class',				#isMetaSide : true			},			#name : #default,			#protocol : #'defaut instance',			#sourceCode : 'default\r\r\t^ default',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3143' ],		#self : OmReference [ '3144' ],		#time : DateAndTime [ '2024-03-03T08:20:53.366-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjEvaluatorWebsocketDelegate class',				#isMetaSide : true			},			#name : #'default:',			#protocol : #'defaut instance',			#sourceCode : 'default: newInstance\r\r\tdefault := newInstance',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3144' ],		#self : OmReference [ '3145' ],		#time : DateAndTime [ '2024-03-03T08:20:53.366-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjEvaluatorWebsocketDelegate class',				#isMetaSide : true			},			#name : #includeClasses,			#protocol : #constants,			#sourceCode : 'includeClasses\r\r\t^ { \r\t\t  PhxJsonReader.\r\t\t  PjMessageDeleteGlobalVar.\r\t\t  PjMessageEvaluateJavascript.\r\t\t  PjMessageGetKeys.\r\t\t  PjMessageReload.\r\t\t  PjMessageTerminate.\r\t\t  PjMessageSetEventListener.\r\t\t  PjMessageMakeBlockClosureProxy }',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3145' ],		#self : OmReference [ '3146' ],		#time : DateAndTime [ '2024-03-03T08:20:53.366-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjEvaluatorWebsocketDelegate class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'class initialization',			#sourceCode : 'initialize\r\r\tSmalltalk at: #PjBridge ifPresent: [ ^ self ].\r\t#( JSON Math WebSocket console global document history location\r\t   navigator screen window localStorage module process require ) do: [ \r\t\t:each | \r\t\t(global at: each) ifNotNil: [ :obj | \r\t\t\tobj instVarNamed: PjProxyManager oidInstVarName putHidden: each ] ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3146' ],		#self : OmReference [ '3147' ],		#time : DateAndTime [ '2024-03-03T08:20:53.367-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjEvaluatorWebsocketDelegate class',				#isMetaSide : true			},			#name : #initializePrivate,			#protocol : #'class initialization',			#sourceCode : 'initializePrivate\r\r\t#( JSON Math WebSocket console global document history location\r\t   navigator screen window localStorage module process require ) do: [ \r\t\t:each | \r\t\t(global at: each) ifNotNil: [ :obj | \r\t\t\tobj instVarNamed: PjProxyManager oidInstVarName putHidden: each ] ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3147' ],		#self : OmReference [ '3148' ],		#time : DateAndTime [ '2024-03-03T08:20:53.367-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjEvaluatorWebsocketDelegate class',				#isMetaSide : true			},			#name : #reload,			#protocol : #'defaut instance',			#sourceCode : 'reload\r\r\tself reload: true',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3148' ],		#self : OmReference [ '3149' ],		#time : DateAndTime [ '2024-03-03T08:20:53.367-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjEvaluatorWebsocketDelegate class',				#isMetaSide : true			},			#name : #'reload:',			#protocol : #'defaut instance',			#sourceCode : 'reload: aBoolean\r\tself closeDefault.\r\t"Reload parameter specifies the type of reloading:\rfalse - Default. Reloads the current page from the cache.\rtrue - Reloads the current page from the server."\r\tlocation reload: aBoolean.',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3149' ],		#self : OmReference [ '3150' ],		#time : DateAndTime [ '2024-03-03T08:20:53.367-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjEvaluatorWebsocketDelegate class',				#isMetaSide : true			},			#name : #terminate,			#protocol : #'defaut instance',			#sourceCode : 'terminate\r\r\t[ self closeDefault ]\r\t\ton: Error\r\t\tdo: [  ].\r\t[ process exit ]\r\t\ton: Error\r\t\tdo: [  ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3150' ],		#self : OmReference [ '3151' ],		#time : DateAndTime [ '2024-03-03T08:20:53.367-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #close,			#protocol : #connecting,			#sourceCode : 'close\r\tshouldRetryToConnectToServer := false.\r\tsuper close',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3151' ],		#self : OmReference [ '3152' ],		#time : DateAndTime [ '2024-03-03T08:20:53.367-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #'connectTo:',			#protocol : #connecting,			#sourceCode : 'connectTo: urlString\r\tshouldRetryToConnectToServer := true.\r\tbridgeUrlString := urlString.\r\tsuper connectTo: urlString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3152' ],		#self : OmReference [ '3153' ],		#time : DateAndTime [ '2024-03-03T08:20:53.367-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tsuper initialize.\r\tObject prototype instVarNamed: PjCore pharoJsSelectorPrefix, \'inspect\' putHidden: self makeInspect.',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3153' ],		#self : OmReference [ '3154' ],		#time : DateAndTime [ '2024-03-03T08:20:53.368-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #'logReceived:',			#protocol : #'socket behavior',			#sourceCode : 'logReceived: aString\r\tconsole log: \'Received: \',aString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3154' ],		#self : OmReference [ '3155' ],		#time : DateAndTime [ '2024-03-03T08:20:53.368-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #'logSent:',			#protocol : #'socket behavior',			#sourceCode : 'logSent: aString\r\tconsole log: \'Sent: \',aString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3155' ],		#self : OmReference [ '3156' ],		#time : DateAndTime [ '2024-03-03T08:20:53.368-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #makeInspect,			#protocol : #initialize-release,			#sourceCode : 'makeInspect\r\t^ self\r\t\tpassJsThisArgumentToBlock: [ :this | \r\t\t\tself\r\t\t\t\ttryToSendMessage:\r\t\t\t\t\t(PjMessageInspect newWithId\r\t\t\t\t\t\tsubjectProxyInfo: this proxyResponse;\r\t\t\t\t\t\tyourself) ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3156' ],		#self : OmReference [ '3157' ],		#time : DateAndTime [ '2024-03-03T08:20:53.368-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #'onClose:',			#protocol : #connecting,			#sourceCode : 'onClose: event\r\tself reconnect',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3157' ],		#self : OmReference [ '3158' ],		#time : DateAndTime [ '2024-03-03T08:20:53.368-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #'onError:',			#protocol : #connecting,			#sourceCode : 'onError: event\r\tself reconnect',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3158' ],		#self : OmReference [ '3159' ],		#time : DateAndTime [ '2024-03-03T08:20:53.368-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #'onMessage:',			#protocol : #'socket behavior',			#sourceCode : 'onMessage: event\r\t| jsonString msg |\r\tjsonString := event data.\r\tmsg := PhxJsonReader readFromString: jsonString.\r\tself logReceived: msg logDescription.\r\tmsg evaluateInContext: self newMessageContext',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3159' ],		#self : OmReference [ '3160' ],		#time : DateAndTime [ '2024-03-03T08:20:53.369-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #'onOpen:',			#protocol : #'socket behavior',			#sourceCode : 'onOpen: event\r\tsuper onOpen: event.\r\tself\r\t\ttryToSendMessage:\r\t\t\t(PjMessageSetClientId newWithId\r\t\t\t\tclientId: self id;\r\t\t\t\tyourself)',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3160' ],		#self : OmReference [ '3161' ],		#time : DateAndTime [ '2024-03-03T08:20:53.369-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #'passJsThisArgumentToBlock:',			#protocol : #initialize-release,			#sourceCode : 'passJsThisArgumentToBlock: aBlock\r\t<PjTodo: \'Maybe this method should be moved to PjCore?\'>\r\t<javascript: \'return function(){aBlock(this)}\'>',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3161' ],		#self : OmReference [ '3162' ],		#time : DateAndTime [ '2024-03-03T08:20:53.369-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #reconnect,			#protocol : #connecting,			#sourceCode : 'reconnect\r\tshouldRetryToConnectToServer ifFalse: [^ self ].\r\tsuper connectTo: bridgeUrlString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3162' ],		#self : OmReference [ '3163' ],		#time : DateAndTime [ '2024-03-03T08:20:53.369-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #'tryToSendMessage:',			#protocol : #'socket behavior',			#sourceCode : 'tryToSendMessage: aMessage\r\tself isClosed\r\t\tifTrue: [ self logSent: \'Failed to send (websocket closed): \' , aMessage logDescription ]\r\t\tifFalse: [ webSocket send: aMessage asPhxJsonString.\r\t\t\tself logSent: aMessage logDescription ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3163' ],		#self : OmReference [ '3164' ],		#time : DateAndTime [ '2024-03-03T08:20:53.369-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjLoggingEvaluatorWebsocketDelegate class',				#isMetaSide : true			},			#name : #logElementId,			#protocol : #accessing,			#sourceCode : 'logElementId\r\t^ logElementId ifNil: [ \'webSocketLog\' ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3164' ],		#self : OmReference [ '3165' ],		#time : DateAndTime [ '2024-03-03T08:20:53.369-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjLoggingEvaluatorWebsocketDelegate class',				#isMetaSide : true			},			#name : #'logElementId:',			#protocol : #accessing,			#sourceCode : 'logElementId: aString\r\tlogElementId := aString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3165' ],		#self : OmReference [ '3166' ],		#time : DateAndTime [ '2024-03-03T08:20:53.369-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoggingEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #'log:',			#protocol : #logging,			#sourceCode : 'log: aString\r\t| logElement br text |\r \t[\r\t\tbr := document createElement: \'BR\'.\r\t\ttext := document createTextNode: aString.\r\t\tlogElement := self logElement.\r\t\tlogElement\r\t\t\t\tinsertBefore: br node: logElement firstChild;\r\t\t\t\tinsertBefore: text node: logElement firstChild\r\t] on: Error do: [\r\t\tconsole log: aString\r\t]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3166' ],		#self : OmReference [ '3167' ],		#time : DateAndTime [ '2024-03-03T08:20:53.369-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoggingEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #logElement,			#protocol : #logging,			#sourceCode : 'logElement\r\t| logElement |\r\tlogElement := document getElementById: self logElementId.\r\tlogElement ifNil: [\r\t\t| enclosing |\r\t\tlogElement := document createElement: \'DIV\'.\r\t\tlogElement\r\t\t\tappendChild: (document createElement: \'BR\');\r\t\t\tid: self logElementId.\r\t\tenclosing := document createElement: \'DIV\'.\r\t\tenclosing style\r\t\t\tbackgroundColor: \'#EEF\';\r\t\t\tborder: \'thin solid\';\r\t\t\tpadding: \'1em\'.\r\t\tenclosing\r\t\t\tappendChild: ((document createElement: \'H1\')\r\t\t\t\t\t\t\t\t\tappendChild: (document createTextNode: \'Log of communications\');\r\t\t\t\t\t\t\t\t\tyourself);\r\t\t\tappendChild: logElement.\r\t\tdocument body appendChild: enclosing\r\t].\r\t^ logElement',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3167' ],		#self : OmReference [ '3168' ],		#time : DateAndTime [ '2024-03-03T08:20:53.369-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoggingEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #logElementId,			#protocol : #logging,			#sourceCode : 'logElementId\r\t^ logElementId ifNil: [ logElementId := self class logElementId ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3168' ],		#self : OmReference [ '3169' ],		#time : DateAndTime [ '2024-03-03T08:20:53.369-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoggingEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #'logElementId:',			#protocol : #logging,			#sourceCode : 'logElementId: anObject\r\tlogElementId := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3169' ],		#self : OmReference [ '3170' ],		#time : DateAndTime [ '2024-03-03T08:20:53.369-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoggingEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #'logReceived:',			#protocol : #'socket - behavior',			#sourceCode : 'logReceived: aString\r\tself log: \'Received: \', aString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3170' ],		#self : OmReference [ '3171' ],		#time : DateAndTime [ '2024-03-03T08:20:53.369-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoggingEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #'logSent:',			#protocol : #'socket - behavior',			#sourceCode : 'logSent: aString\r\tself log: \'Sent: \', aString.\r\t^ aString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3171' ],		#self : OmReference [ '3172' ],		#time : DateAndTime [ '2024-03-03T08:20:53.369-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoggingEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #'onClose:',			#protocol : #'socket - event handling',			#sourceCode : 'onClose: event\r\tsuper onClose: event.\r\tself log: \'Closed.\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3172' ],		#self : OmReference [ '3173' ],		#time : DateAndTime [ '2024-03-03T08:20:53.371-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoggingEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #'onError:',			#protocol : #'socket - event handling',			#sourceCode : 'onError: event\r\r\tsuper onError: event.\r\tself log: \'Error: \' , event message',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3173' ],		#self : OmReference [ '3174' ],		#time : DateAndTime [ '2024-03-03T08:20:53.371-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoggingEvaluatorWebsocketDelegate,				#isMetaSide : false			},			#name : #'onOpen:',			#protocol : #'socket - event handling',			#sourceCode : 'onOpen: event\r\tsuper onOpen: event.\r\tself log: \'Open (id: \' , self id , \')\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3174' ],		#self : OmReference [ '3175' ],		#time : DateAndTime [ '2024-03-03T08:20:53.371-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjWebsocketDelegate class',				#isMetaSide : true			},			#name : #'connectToTag:',			#protocol : #'instance creation',			#sourceCode : 'connectToTag: tagString\r\r\t^ self connectToUrl: \'ws://\' , location host , \'/\' , tagString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3175' ],		#self : OmReference [ '3176' ],		#time : DateAndTime [ '2024-03-03T08:20:53.371-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjWebsocketDelegate class',				#isMetaSide : true			},			#name : #'connectToUrl:',			#protocol : #'instance creation',			#sourceCode : 'connectToUrl: urlString\r\r\t| newInstance |\r\tnewInstance := self new.\r\tnewInstance connectTo: urlString.\r\t^ newInstance',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3176' ],		#self : OmReference [ '3177' ],		#time : DateAndTime [ '2024-03-03T08:20:53.371-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjWebsocketDelegate class',				#isMetaSide : true			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new\r\r\t^ super new\r\t\t  id: self randomIdForNewInstance;\r\t\t  yourself',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3177' ],		#self : OmReference [ '3178' ],		#time : DateAndTime [ '2024-03-03T08:20:53.371-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjWebsocketDelegate class',				#isMetaSide : true			},			#name : #randomIdForNewInstance,			#protocol : #'instance creation',			#sourceCode : 'randomIdForNewInstance\r\r\t| charPool id size |\r\tcharPool := \'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\'.\r\tsize := charPool size.\r\tid := \'\'.\r\t10 timesRepeat: [ \r\t\t| rndIdx |\r\t\trndIdx := (Math floor: Math random * size) + 1.\r\t\tid := id , (charPool at: rndIdx) ].\r\t^ id',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3178' ],		#self : OmReference [ '3179' ],		#time : DateAndTime [ '2024-03-03T08:20:53.371-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebsocketDelegate,				#isMetaSide : false			},			#name : #close,			#protocol : #connecting,			#sourceCode : 'close\r\twebSocket close',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3179' ],		#self : OmReference [ '3180' ],		#time : DateAndTime [ '2024-03-03T08:20:53.372-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebsocketDelegate,				#isMetaSide : false			},			#name : #'connectTo:',			#protocol : #connecting,			#sourceCode : 'connectTo: urlString\r\twebSocket := WebSocket new: urlString.\r\tself initWebSocket',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3180' ],		#self : OmReference [ '3181' ],		#time : DateAndTime [ '2024-03-03T08:20:53.372-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebsocketDelegate,				#isMetaSide : false			},			#name : #id,			#protocol : #accessing,			#sourceCode : 'id\r\t^ id',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3181' ],		#self : OmReference [ '3182' ],		#time : DateAndTime [ '2024-03-03T08:20:53.372-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebsocketDelegate,				#isMetaSide : false			},			#name : #'id:',			#protocol : #accessing,			#sourceCode : 'id: anObject\r\tid := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3182' ],		#self : OmReference [ '3183' ],		#time : DateAndTime [ '2024-03-03T08:20:53.372-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebsocketDelegate,				#isMetaSide : false			},			#name : #initWebSocket,			#protocol : #connecting,			#sourceCode : 'initWebSocket\r\twebSocket instVarNamed:#onopen put: [: event | self onOpen: event].\r\twebSocket instVarNamed:#onmessage put: [: event | self onMessage: event]..\r\twebSocket instVarNamed:#onclose put: [: event | self onClose: event].\r\twebSocket instVarNamed:#onerror put: [: event | self onError: event].',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3183' ],		#self : OmReference [ '3184' ],		#time : DateAndTime [ '2024-03-03T08:20:53.372-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebsocketDelegate,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tsuper initialize.\r\tid := self class randomIdForNewInstance.',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3184' ],		#self : OmReference [ '3185' ],		#time : DateAndTime [ '2024-03-03T08:20:53.372-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebsocketDelegate,				#isMetaSide : false			},			#name : #isClosed,			#protocol : #testing,			#sourceCode : 'isClosed\r\twebSocket ifNil: [ ^true ].\r\t^ webSocket readyState == WebSocket CLOSED',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3185' ],		#self : OmReference [ '3186' ],		#time : DateAndTime [ '2024-03-03T08:20:53.373-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebsocketDelegate,				#isMetaSide : false			},			#name : #isConnected,			#protocol : #testing,			#sourceCode : 'isConnected\r\twebSocket ifNil: [ ^false ].\r\t^webSocket readyState == WebSocket OPEN',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3186' ],		#self : OmReference [ '3187' ],		#time : DateAndTime [ '2024-03-03T08:20:53.373-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebsocketDelegate,				#isMetaSide : false			},			#name : #newMessageContext,			#protocol : #private,			#sourceCode : 'newMessageContext\r\t| mc |\r\tmc := PjMessageContext new.\r\tmc websocketDelegate: self.\r\t^mc',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3187' ],		#self : OmReference [ '3188' ],		#time : DateAndTime [ '2024-03-03T08:20:53.373-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebsocketDelegate,				#isMetaSide : false			},			#name : #'onClose:',			#protocol : #'socket behavior',			#sourceCode : 'onClose: event\r\t^self',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3188' ],		#self : OmReference [ '3189' ],		#time : DateAndTime [ '2024-03-03T08:20:53.373-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebsocketDelegate,				#isMetaSide : false			},			#name : #'onError:',			#protocol : #'socket behavior',			#sourceCode : 'onError: event\r\t^self',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3189' ],		#self : OmReference [ '3190' ],		#time : DateAndTime [ '2024-03-03T08:20:53.373-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebsocketDelegate,				#isMetaSide : false			},			#name : #'onMessage:',			#protocol : #'socket behavior',			#sourceCode : 'onMessage: event\r\t^self',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3190' ],		#self : OmReference [ '3191' ],		#time : DateAndTime [ '2024-03-03T08:20:53.373-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebsocketDelegate,				#isMetaSide : false			},			#name : #'onOpen:',			#protocol : #'socket behavior',			#sourceCode : 'onOpen: event\r\t^self',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3191' ],		#self : OmReference [ '3192' ],		#time : DateAndTime [ '2024-03-03T08:20:53.374-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjMessage class',				#isMetaSide : true			},			#name : #'newWithContents:',			#protocol : #'instance creation',			#sourceCode : 'newWithContents: contents\r\r\t^ self newWithId\r\t\t  contents: contents;\r\t\t  yourself',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3192' ],		#self : OmReference [ '3193' ],		#time : DateAndTime [ '2024-03-03T08:20:53.374-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjMessage class',				#isMetaSide : true			},			#name : #newWithId,			#protocol : #'instance creation',			#sourceCode : 'newWithId\r\r\t^ self new\r\t\t  id: self nextMessageId;\r\t\t  yourself',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3193' ],		#self : OmReference [ '3194' ],		#time : DateAndTime [ '2024-03-03T08:20:53.374-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjMessage class',				#isMetaSide : true			},			#name : #nextMessageId,			#protocol : #'instance creation',			#sourceCode : 'nextMessageId\r\r\tcurrentId := currentId ifNil: [ 1 ] ifNotNil: [ :id | id + 1 ].\r\t^ currentId',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3194' ],		#self : OmReference [ '3195' ],		#time : DateAndTime [ '2024-03-03T08:20:53.374-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessage,				#isMetaSide : false			},			#name : #contents,			#protocol : #accessing,			#sourceCode : 'contents\r\r\t^ contents',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3195' ],		#self : OmReference [ '3196' ],		#time : DateAndTime [ '2024-03-03T08:20:53.374-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessage,				#isMetaSide : false			},			#name : #'contents:',			#protocol : #accessing,			#sourceCode : 'contents: anObject\r\r\tcontents := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3196' ],		#self : OmReference [ '3197' ],		#time : DateAndTime [ '2024-03-03T08:20:53.374-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessage,				#isMetaSide : false			},			#name : #id,			#protocol : #accessing,			#sourceCode : 'id\r\r\t^ id',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3197' ],		#self : OmReference [ '3198' ],		#time : DateAndTime [ '2024-03-03T08:20:53.374-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessage,				#isMetaSide : false			},			#name : #'id:',			#protocol : #accessing,			#sourceCode : 'id: anObject\r\r\tid := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3198' ],		#self : OmReference [ '3199' ],		#time : DateAndTime [ '2024-03-03T08:20:53.375-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessage,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\r\tsuper initialize',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3199' ],		#self : OmReference [ '3200' ],		#time : DateAndTime [ '2024-03-03T08:20:53.375-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessage,				#isMetaSide : false			},			#name : #logDescription,			#protocol : #printing,			#sourceCode : 'logDescription\r\t^ String\r\t\tstreamContents: [ :ws | \r\t\t\tws nextPutAll: self class name.\r\t\t\tws nextPutAll: \' id: \'.\r\t\t\tws nextPutAll: self id printString.\r\t\t\tself contents\r\t\t\t\tifNotNil: [ :c | \r\t\t\t\t\tws nextPutAll: \' contents: \'.\r\t\t\t\t\tws nextPutAll: c ] ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3200' ],		#self : OmReference [ '3201' ],		#time : DateAndTime [ '2024-03-03T08:20:53.375-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessage,				#isMetaSide : false			},			#name : #needsToBeQueued,			#protocol : #testing,			#sourceCode : 'needsToBeQueued\r\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3201' ],		#self : OmReference [ '3202' ],		#time : DateAndTime [ '2024-03-03T08:20:53.375-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessage,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: ws\r\t<pharoJsSkip>\r\r\tsuper printOn: ws.\r\tws space.\r\tws << \'id:\'.\r\tws << self id',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3202' ],		#self : OmReference [ '3203' ],		#time : DateAndTime [ '2024-03-03T08:20:53.375-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageC2s,				#isMetaSide : false			},			#name : #'evaluateInContext:',			#protocol : #public,			#sourceCode : 'evaluateInContext: aMessageContext\r\t"self subclassResponsibility "',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3203' ],		#self : OmReference [ '3204' ],		#time : DateAndTime [ '2024-03-03T08:20:53.376-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageC2s,				#isMetaSide : false			},			#name : #inResponseToId,			#protocol : #accessing,			#sourceCode : 'inResponseToId\r\r\t^ nil',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3204' ],		#self : OmReference [ '3205' ],		#time : DateAndTime [ '2024-03-03T08:20:53.376-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageC2s,				#isMetaSide : false			},			#name : #isCallback,			#protocol : #testing,			#sourceCode : 'isCallback\r\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3205' ],		#self : OmReference [ '3206' ],		#time : DateAndTime [ '2024-03-03T08:20:53.376-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageC2s,				#isMetaSide : false			},			#name : #shouldEvaluateImmediately,			#protocol : #testing,			#sourceCode : 'shouldEvaluateImmediately\r\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3206' ],		#self : OmReference [ '3207' ],		#time : DateAndTime [ '2024-03-03T08:20:53.376-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageC2sInResponseTo,				#isMetaSide : false			},			#name : #inResponseToId,			#protocol : #accessing,			#sourceCode : 'inResponseToId\r\r\t^ inResponseToId',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3207' ],		#self : OmReference [ '3208' ],		#time : DateAndTime [ '2024-03-03T08:20:53.376-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageC2sInResponseTo,				#isMetaSide : false			},			#name : #'inResponseToId:',			#protocol : #accessing,			#sourceCode : 'inResponseToId: anObject\r\r\tinResponseToId := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3208' ],		#self : OmReference [ '3209' ],		#time : DateAndTime [ '2024-03-03T08:20:53.376-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageErrorResponse,				#isMetaSide : false			},			#name : #'getValueWithBridge:',			#protocol : #accessing,			#sourceCode : 'getValueWithBridge: aBridge\r\r\tPjJavascriptError signal: self contents',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3209' ],		#self : OmReference [ '3210' ],		#time : DateAndTime [ '2024-03-03T08:20:53.376-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageEvaluationResponse,				#isMetaSide : false			},			#name : #contentsDescription,			#protocol : #printing,			#sourceCode : 'contentsDescription\r\t<javascript: \'return JSON.stringify(this.contents)\'>\r\t\r\t^ contents displayString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3210' ],		#self : OmReference [ '3211' ],		#time : DateAndTime [ '2024-03-03T08:20:53.377-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageEvaluationResponse,				#isMetaSide : false			},			#name : #contentsObject,			#protocol : #public,			#sourceCode : 'contentsObject\r\t<pharoJsSkip>\r\t\r\t^ self contents isString\r\t\t  ifTrue: [ PjSTONReader from: self contents ]\r\t\t  ifFalse: [ self contents ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3211' ],		#self : OmReference [ '3212' ],		#time : DateAndTime [ '2024-03-03T08:20:53.377-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageEvaluationResponse,				#isMetaSide : false			},			#name : #'getValueWithBridge:',			#protocol : #public,			#sourceCode : 'getValueWithBridge: aBridge\r\t<PjTodo: \'Too much testing going here, further refactoring needed\'>\r\t\r\t| value |\r\tvalue := self contentsObject.\r\tvalue isLiteral ifTrue: [ ^ value ].\r\tvalue isNumber ifTrue: [ ^ value ].\r\tvalue isDictionary ifTrue: [ value isEmpty ifTrue: [ ^ nil ] ].\r\t(value isKindOf: PjProxyInfo) ifTrue: [ \r\t\t^ value proxyForBridge: aBridge ].\r\tError signal: \'unrecognized response from browser:\' , contents',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3212' ],		#self : OmReference [ '3213' ],		#time : DateAndTime [ '2024-03-03T08:20:53.377-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageEvaluationResponse,				#isMetaSide : false			},			#name : #logDescription,			#protocol : #printing,			#sourceCode : 'logDescription\r\r\t^ String streamContents: [ :ws | \r\t\t  ws nextPutAll: self class name.\r\t\t  ws nextPutAll: \' id: \'.\r\t\t  ws nextPutAll: self id asString.\r\t\t  ws nextPutAll: \' inResponseToId: \'.\r\t\t  ws nextPutAll: (self inResponseToId\r\t\t\t\t   ifNotNil: [ :aNumber | aNumber asString ]\r\t\t\t\t   ifNil: [ \'-\' ]).\r\t\t  ws nextPutAll: \' contents: \'.\r\t\t  ws nextPutAll: self contentsDescription ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3213' ],		#self : OmReference [ '3214' ],		#time : DateAndTime [ '2024-03-03T08:20:53.377-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageEvaluationResponse,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: ws\r\t<pharoJsSkip>\r\t\r\tsuper printOn: ws.\r\tws space.\r\tws << \'ir2id: \'.\r\tws << (self inResponseToId ifNil: [ \'-\' ]).\r\tws << \'contents: \'.\r\tws << self contentsDescription',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3214' ],		#self : OmReference [ '3215' ],		#time : DateAndTime [ '2024-03-03T08:20:53.377-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageGetKeysResponse,				#isMetaSide : false			},			#name : #'getValueWithBridge:',			#protocol : #public,			#sourceCode : 'getValueWithBridge: aBridge\r\r\t^ self contents',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3215' ],		#self : OmReference [ '3216' ],		#time : DateAndTime [ '2024-03-03T08:20:53.378-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageGetKeysResponse,				#isMetaSide : false			},			#name : #logDescription,			#protocol : #printing,			#sourceCode : 'logDescription\r\r\t^ String streamContents: [ :ws | \r\t\t  ws\r\t\t\t  nextPutAll: self class name;\r\t\t\t  nextPutAll: \' id: \';\r\t\t\t  nextPutAll: self id asString;\r\t\t\t  nextPutAll: \' inResponseToId: \';\r\t\t\t  nextPutAll: (self inResponseToId\r\t\t\t\t\t   ifNotNil: [ :aNumber | aNumber asString ]\r\t\t\t\t\t   ifNil: [ \'-\' ]);\r\t\t\t  nextPutAll: \' contents: \';\r\t\t\t  nextPutAll: self contents size asString;\r\t\t\t  nextPutAll: \' key-value pairs\' ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3216' ],		#self : OmReference [ '3217' ],		#time : DateAndTime [ '2024-03-03T08:20:53.378-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageGetKeysResponse,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: ws\r\t<pharoJsSkip>\r\t\r\tsuper printOn: ws.\r\tws space.\r\tws << \'ir2id: \'.\r\tws << (self inResponseToId ifNil: [ \'-\' ]).\r\tws space.\r\tws << self contents',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3217' ],		#self : OmReference [ '3218' ],		#time : DateAndTime [ '2024-03-03T08:20:53.378-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageCallback,				#isMetaSide : false			},			#name : #eventProxyInfo,			#protocol : #accessing,			#sourceCode : 'eventProxyInfo\r\r\t^ eventProxyInfo',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3218' ],		#self : OmReference [ '3219' ],		#time : DateAndTime [ '2024-03-03T08:20:53.378-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageCallback,				#isMetaSide : false			},			#name : #'eventProxyInfo:',			#protocol : #accessing,			#sourceCode : 'eventProxyInfo: anObject\r\r\teventProxyInfo := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3219' ],		#self : OmReference [ '3220' ],		#time : DateAndTime [ '2024-03-03T08:20:53.378-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageCallback,				#isMetaSide : false			},			#name : #eventTargetProxyInfo,			#protocol : #accessing,			#sourceCode : 'eventTargetProxyInfo\r\r\t^ eventTargetProxyInfo',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3220' ],		#self : OmReference [ '3221' ],		#time : DateAndTime [ '2024-03-03T08:20:53.378-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageCallback,				#isMetaSide : false			},			#name : #'eventTargetProxyInfo:',			#protocol : #accessing,			#sourceCode : 'eventTargetProxyInfo: anObject\r\r\teventTargetProxyInfo := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3221' ],		#self : OmReference [ '3222' ],		#time : DateAndTime [ '2024-03-03T08:20:53.378-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageCallback,				#isMetaSide : false			},			#name : #isCallback,			#protocol : #testing,			#sourceCode : 'isCallback\r\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3222' ],		#self : OmReference [ '3223' ],		#time : DateAndTime [ '2024-03-03T08:20:53.379-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageCallback,				#isMetaSide : false			},			#name : #logDescription,			#protocol : #printing,			#sourceCode : 'logDescription\r\r\t^ String streamContents: [ :ws | \r\t\t  ws nextPutAll: self class name.\r\t\t  ws nextPutAll: \' id: \'.\r\t\t  ws nextPutAll: self id asString.\r\t\t  ws nextPutAll: \' \'.\r\t\t  self printDetailsOn: ws ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3223' ],		#self : OmReference [ '3224' ],		#time : DateAndTime [ '2024-03-03T08:20:53.379-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageCallback,				#isMetaSide : false			},			#name : #'printDetailsOn:',			#protocol : #printing,			#sourceCode : 'printDetailsOn: ws\r\r\tws nextPutAll: \' rcvr: \'.\r\tws nextPutAll: (self receiverProxyInfo\r\t\t\t ifNotNil: [ :pi | pi logDescription ]\r\t\t\t ifNil: [ \'-\' ]).\r\tws nextPutAll: \' event: \'.\r\tws nextPutAll: (self eventProxyInfo\r\t\t\t ifNotNil: [ :pi | pi logDescription ]\r\t\t\t ifNil: [ \'-\' ])',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3224' ],		#self : OmReference [ '3225' ],		#time : DateAndTime [ '2024-03-03T08:20:53.379-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageCallback,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: ws\r\t<pharoJsSkip>\r\t\r\tsuper printOn: ws.\r\tws space.\r\tself printDetailsOn: ws',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3225' ],		#self : OmReference [ '3226' ],		#time : DateAndTime [ '2024-03-03T08:20:53.379-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageCallback,				#isMetaSide : false			},			#name : #'processCallbackWithBridge:',			#protocol : #public,			#sourceCode : 'processCallbackWithBridge: aBridge\r\t<pharoJsSkip>\r\t\r\t| proxy eventProxy eventTargetProxy |\r\tproxy := self receiverProxyInfo proxyForBridge: aBridge.\r\teventProxy := self eventProxyInfo proxyForBridge: aBridge.\r\teventTargetProxy := self eventTargetProxyInfo ifNotNil: [ :pi | \r\t\t                    pi proxyForBridge: aBridge ].\r\tproxy runBlockClosure: eventProxy with: eventTargetProxy',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3226' ],		#self : OmReference [ '3227' ],		#time : DateAndTime [ '2024-03-03T08:20:53.379-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageCallback,				#isMetaSide : false			},			#name : #receiverProxyInfo,			#protocol : #accessing,			#sourceCode : 'receiverProxyInfo\r\r\t^ receiverProxyInfo',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3227' ],		#self : OmReference [ '3228' ],		#time : DateAndTime [ '2024-03-03T08:20:53.379-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageCallback,				#isMetaSide : false			},			#name : #'receiverProxyInfo:',			#protocol : #accessing,			#sourceCode : 'receiverProxyInfo: anObject\r\r\treceiverProxyInfo := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3228' ],		#self : OmReference [ '3229' ],		#time : DateAndTime [ '2024-03-03T08:20:53.38-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageInspect,				#isMetaSide : false			},			#name : #isCallback,			#protocol : #testing,			#sourceCode : 'isCallback\r\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3229' ],		#self : OmReference [ '3230' ],		#time : DateAndTime [ '2024-03-03T08:20:53.38-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageInspect,				#isMetaSide : false			},			#name : #'processCallbackWithBridge:',			#protocol : #public,			#sourceCode : 'processCallbackWithBridge: aBridge\r\t<pharoJsSkip>\r\t\r\t(self serverObjectForSubjectWithBridge: aBridge) inspect',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3230' ],		#self : OmReference [ '3231' ],		#time : DateAndTime [ '2024-03-03T08:20:53.38-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageInspect,				#isMetaSide : false			},			#name : #'serverObjectForSubjectWithBridge:',			#protocol : #public,			#sourceCode : 'serverObjectForSubjectWithBridge: aBridge\r\t<pharoJsSkip>\r\t\r\tsubjectProxyInfo isLiteral ifTrue: [ ^ subjectProxyInfo ].\r\tsubjectProxyInfo isNumber ifTrue: [ ^ subjectProxyInfo ].\r\t^ subjectProxyInfo proxyForBridge: aBridge',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3231' ],		#self : OmReference [ '3232' ],		#time : DateAndTime [ '2024-03-03T08:20:53.381-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageInspect,				#isMetaSide : false			},			#name : #subjectProxyInfo,			#protocol : #accessing,			#sourceCode : 'subjectProxyInfo\r\r\t^ subjectProxyInfo',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3232' ],		#self : OmReference [ '3233' ],		#time : DateAndTime [ '2024-03-03T08:20:53.381-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageInspect,				#isMetaSide : false			},			#name : #'subjectProxyInfo:',			#protocol : #accessing,			#sourceCode : 'subjectProxyInfo: anObject\r\r\tsubjectProxyInfo := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3233' ],		#self : OmReference [ '3234' ],		#time : DateAndTime [ '2024-03-03T08:20:53.381-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageSetClientId,				#isMetaSide : false			},			#name : #clientId,			#protocol : #accessing,			#sourceCode : 'clientId\r\r\t^ clientId',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3234' ],		#self : OmReference [ '3235' ],		#time : DateAndTime [ '2024-03-03T08:20:53.381-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageSetClientId,				#isMetaSide : false			},			#name : #'clientId:',			#protocol : #accessing,			#sourceCode : 'clientId: anObject\r\r\tclientId := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3235' ],		#self : OmReference [ '3236' ],		#time : DateAndTime [ '2024-03-03T08:20:53.381-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageSetClientId,				#isMetaSide : false			},			#name : #isCallback,			#protocol : #testing,			#sourceCode : 'isCallback\r\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3236' ],		#self : OmReference [ '3237' ],		#time : DateAndTime [ '2024-03-03T08:20:53.381-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageSetClientId,				#isMetaSide : false			},			#name : #logDescription,			#protocol : #printing,			#sourceCode : 'logDescription\r\r\t^ String streamContents: [ :ws | \r\t\t  ws nextPutAll: self class name.\r\t\t  ws nextPutAll: \' id: \'.\r\t\t  ws nextPutAll: self id asString.\r\t\t  ws nextPutAll: \' clientId: \'.\r\t\t  ws nextPutAll: self clientId ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3237' ],		#self : OmReference [ '3238' ],		#time : DateAndTime [ '2024-03-03T08:20:53.382-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageSetClientId,				#isMetaSide : false			},			#name : #needsToBeQueued,			#protocol : #testing,			#sourceCode : 'needsToBeQueued\r\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3238' ],		#self : OmReference [ '3239' ],		#time : DateAndTime [ '2024-03-03T08:20:53.382-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageSetClientId,				#isMetaSide : false			},			#name : #'processWithBridge:',			#protocol : #testing,			#sourceCode : 'processWithBridge: aBridge\r\r\taBridge client clientId: self clientId',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3239' ],		#self : OmReference [ '3240' ],		#time : DateAndTime [ '2024-03-03T08:20:53.382-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageSetClientId,				#isMetaSide : false			},			#name : #shouldEvaluateImmediately,			#protocol : #testing,			#sourceCode : 'shouldEvaluateImmediately\r\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3240' ],		#self : OmReference [ '3241' ],		#time : DateAndTime [ '2024-03-03T08:20:53.382-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjMessageDeleteGlobalVar class',				#isMetaSide : true			},			#name : #'newForVarName:',			#protocol : #'instance creation',			#sourceCode : 'newForVarName: jsName\r\r\t^ self new\r\t\t  varName: jsName;\r\t\t  yourself',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3241' ],		#self : OmReference [ '3242' ],		#time : DateAndTime [ '2024-03-03T08:20:53.382-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageDeleteGlobalVar,				#isMetaSide : false			},			#name : #'evaluateInContext:',			#protocol : #public,			#sourceCode : 'evaluateInContext: aMessageContext\r\t<PjTodo: \'should use PjProxyInfo\'>\r\t\r\tPjProxyManager deleteGlobalVarNamed: self varName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3242' ],		#self : OmReference [ '3243' ],		#time : DateAndTime [ '2024-03-03T08:20:53.382-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageDeleteGlobalVar,				#isMetaSide : false			},			#name : #logDescription,			#protocol : #public,			#sourceCode : 'logDescription\r\r\t^ String streamContents: [ :ws | \r\t\t  ws nextPutAll: self class name.\r\t\t  ws nextPutAll: \' id: \'.\r\t\t  ws nextPutAll:\r\t\t\t  (self id ifNil: [ \'-\' ] ifNotNil: [ self id printString ]).\r\t\t  ws nextPutAll: \' varName: \'.\r\t\t  ws nextPutAll: self varName ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3243' ],		#self : OmReference [ '3244' ],		#time : DateAndTime [ '2024-03-03T08:20:53.383-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageDeleteGlobalVar,				#isMetaSide : false			},			#name : #varName,			#protocol : #accessing,			#sourceCode : 'varName\r\r\t^ varName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3244' ],		#self : OmReference [ '3245' ],		#time : DateAndTime [ '2024-03-03T08:20:53.383-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageDeleteGlobalVar,				#isMetaSide : false			},			#name : #'varName:',			#protocol : #accessing,			#sourceCode : 'varName: anObject\r\r\tvarName := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3245' ],		#self : OmReference [ '3246' ],		#time : DateAndTime [ '2024-03-03T08:20:53.383-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageEvaluateJavascript,				#isMetaSide : false			},			#name : #'evaluateInContext:',			#protocol : #public,			#sourceCode : 'evaluateInContext: aMessageContext\r\r\tself\r\t\tsetTimeout: [ self evaluateInContextPrivate: aMessageContext ]\r\t\tafterMilliseconds: 0',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3246' ],		#self : OmReference [ '3247' ],		#time : DateAndTime [ '2024-03-03T08:20:53.383-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageEvaluateJavascript,				#isMetaSide : false			},			#name : #'evaluateInContextPrivate:',			#protocol : #private,			#sourceCode : 'evaluateInContextPrivate: aMessageContext\r\r\t| responseMsg |\r\tresponseMsg := [ \r\t               PjMessageEvaluationResponse newWithContents:\r\t\t               (self evaluateJsString: contents) ]\r\t\t               on: Error\r\t\t               do: [ :ex | \r\t\t               PjMessageErrorResponse newWithContents: ex message ].\r\tresponseMsg inResponseToId: self id.\r\taMessageContext websocketDelegate tryToSendMessage: responseMsg',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3247' ],		#self : OmReference [ '3248' ],		#time : DateAndTime [ '2024-03-03T08:20:53.383-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageEvaluateJavascript,				#isMetaSide : false			},			#name : #'evaluateJsString:',			#protocol : #public,			#sourceCode : 'evaluateJsString: aString\r\r\t| resultObject resultString |\r\tresultObject := (global eval: aString) ifNotNil: [ :result | \r\t\t                result proxyResponse ].\r\tresultObject class == PjProxyInfo ifTrue: [ ^ resultObject ].\r\tresultString := JSON stringify: resultObject.\r\tresultObject ifNotNil: [ \r\t\tresultString = \'null\' ifTrue: [ \r\t\t\tresultString := resultObject toString ] ].\r\tresultString ifNil: [ resultString := \'null\' ].\r\t^ resultString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3248' ],		#self : OmReference [ '3249' ],		#time : DateAndTime [ '2024-03-03T08:20:53.383-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageGetKeys,				#isMetaSide : false			},			#name : #'evaluateInContext:',			#protocol : #public,			#sourceCode : 'evaluateInContext: aMessageContext\r\r\t| wsd responseMsg jsObject assocs |\r\twsd := aMessageContext websocketDelegate.\r\tresponseMsg := PjMessageGetKeysResponse newWithId.\r\tjsObject := global instVarNamed: self proxyInfo globalName.\r\tconsole log: \'get keys object:\' with: jsObject.\r\tassocs := self keyValuePairsOf: jsObject.\r\tconsole log: \'get keys assocs:\' with: assocs.\r\tresponseMsg contents: assocs.\r\tresponseMsg inResponseToId: self id.\r\twsd tryToSendMessage: responseMsg',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3249' ],		#self : OmReference [ '3250' ],		#time : DateAndTime [ '2024-03-03T08:20:53.384-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageGetKeys,				#isMetaSide : false			},			#name : #'keyValuePairsOf:',			#protocol : #public,			#sourceCode : 'keyValuePairsOf: anObject\r\r\t| results |\r\tresults := OrderedCollection new.\r\tanObject allEnumeratableKeysDo: [ :key | \r\t\t| value |\r\t\tvalue := anObject instVarNamed: key.\r\t\tresults add: key -> (JSON stringify: value) ].\r\t^ results',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3250' ],		#self : OmReference [ '3251' ],		#time : DateAndTime [ '2024-03-03T08:20:53.384-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageGetKeys,				#isMetaSide : false			},			#name : #logDescription,			#protocol : #printing,			#sourceCode : 'logDescription\r\r\t^ String streamContents: [ :ws | \r\t\t  ws nextPutAll: self class name.\r\t\t  ws nextPutAll: \' id: \'.\r\t\t  ws nextPutAll: self id printString.\r\t\t  self proxyInfo ifNotNil: [ :pi | \r\t\t\t  ws nextPutAll: \' proxyInfo: \'.\r\t\t\t  ws nextPutAll: pi logDescription ] ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3251' ],		#self : OmReference [ '3252' ],		#time : DateAndTime [ '2024-03-03T08:20:53.384-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageGetKeys,				#isMetaSide : false			},			#name : #proxyInfo,			#protocol : #accessing,			#sourceCode : 'proxyInfo\r\r\t^ proxyInfo',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3252' ],		#self : OmReference [ '3253' ],		#time : DateAndTime [ '2024-03-03T08:20:53.384-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageGetKeys,				#isMetaSide : false			},			#name : #'proxyInfo:',			#protocol : #accessing,			#sourceCode : 'proxyInfo: anObject\r\r\tproxyInfo := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3253' ],		#self : OmReference [ '3254' ],		#time : DateAndTime [ '2024-03-03T08:20:53.384-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageMakeBlockClosureProxy,				#isMetaSide : false			},			#name : #'evaluateInContext:',			#protocol : #public,			#sourceCode : 'evaluateInContext: aMessageContext\r\r\t| aProxyInfo responseMsg |\r\taProxyInfo := PjProxyManager\r\t\t              makeBlockClosureProxy: self includeEventTarget\r\t\t              stopPropagation: self stopPropagation\r\t\t              for: aMessageContext websocketDelegate.\r\tresponseMsg := PjMessageEvaluationResponse newWithContents:\r\t\t               aProxyInfo.\r\tresponseMsg inResponseToId: self id.\r\taMessageContext websocketDelegate tryToSendMessage: responseMsg',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3254' ],		#self : OmReference [ '3255' ],		#time : DateAndTime [ '2024-03-03T08:20:53.384-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageMakeBlockClosureProxy,				#isMetaSide : false			},			#name : #includeEventTarget,			#protocol : #accessing,			#sourceCode : 'includeEventTarget\r\r\t^ includeEventTarget',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3255' ],		#self : OmReference [ '3256' ],		#time : DateAndTime [ '2024-03-03T08:20:53.384-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageMakeBlockClosureProxy,				#isMetaSide : false			},			#name : #'includeEventTarget:',			#protocol : #accessing,			#sourceCode : 'includeEventTarget: anObject\r\r\tincludeEventTarget := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3256' ],		#self : OmReference [ '3257' ],		#time : DateAndTime [ '2024-03-03T08:20:53.384-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageMakeBlockClosureProxy,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\r\tsuper initialize.\r\tstopPropagation := true.\r\tincludeEventTarget := false',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3257' ],		#self : OmReference [ '3258' ],		#time : DateAndTime [ '2024-03-03T08:20:53.384-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageMakeBlockClosureProxy,				#isMetaSide : false			},			#name : #stopPropagation,			#protocol : #accessing,			#sourceCode : 'stopPropagation\r\t^ stopPropagation',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3258' ],		#self : OmReference [ '3259' ],		#time : DateAndTime [ '2024-03-03T08:20:53.384-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageMakeBlockClosureProxy,				#isMetaSide : false			},			#name : #'stopPropagation:',			#protocol : #accessing,			#sourceCode : 'stopPropagation: anObject\r\tstopPropagation := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3259' ],		#self : OmReference [ '3260' ],		#time : DateAndTime [ '2024-03-03T08:20:53.384-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageReload,				#isMetaSide : false			},			#name : #'evaluateInContext:',			#protocol : #public,			#sourceCode : 'evaluateInContext: aMessageContext\r\r\taMessageContext websocketDelegate class reload',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3260' ],		#self : OmReference [ '3261' ],		#time : DateAndTime [ '2024-03-03T08:20:53.384-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageS2c,				#isMetaSide : false			},			#name : #'evaluateInContext:',			#protocol : #public,			#sourceCode : 'evaluateInContext: aMessageContext\r\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3261' ],		#self : OmReference [ '3262' ],		#time : DateAndTime [ '2024-03-03T08:20:53.384-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageSetEventListener,				#isMetaSide : false			},			#name : #'evaluateInContext:',			#protocol : #public,			#sourceCode : 'evaluateInContext: aMessageContext\r\r\t| result responseMsg |\r\tresult := self evaluateInContextPrivate: aMessageContext.\r\tresponseMsg := PjMessageEvaluationResponse newWithContents:\r\t\t               result proxyResponse.\r\tresponseMsg inResponseToId: self id.\r\taMessageContext websocketDelegate tryToSendMessage: responseMsg',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3262' ],		#self : OmReference [ '3263' ],		#time : DateAndTime [ '2024-03-03T08:20:53.385-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageSetEventListener,				#isMetaSide : false			},			#name : #'evaluateInContextPrivate:',			#protocol : #public,			#sourceCode : 'evaluateInContextPrivate: aMessageContext\r\r\t| targetObject listener fullTriggerName oldlistener |\r\tfullTriggerName := \'on\' , self eventName.\r\ttargetObject := self targetProxyInfo getJsObject.\r\tlistener := self listenerProxyInfo ifNotNil: [ :pi | pi getJsObject ].\r\toldlistener := targetObject instVarNamed: fullTriggerName.\r\ttargetObject instVarNamed: fullTriggerName put: listener.\r\tlistener ifNotNil: [ \r\t\t(listener hasOwnProperty: \'$PjRefCount\') ifTrue: [ \r\t\t\t| currRefCnt |\r\t\t\tcurrRefCnt := listener instVarNamed: \'$PjRefCount\'.\r\t\t\tlistener instVarNamed: \'$PjRefCount\' put: currRefCnt + 1 ] ].\r\toldlistener ifNotNil: [ \r\t\t| currRefCnt |\r\t\tcurrRefCnt := oldlistener instVarNamed: \'$PjRefCount\'.\r\t\tcurrRefCnt > 0 ifTrue: [ \r\t\t\toldlistener instVarNamed: \'$PjRefCount\' put: currRefCnt - 1.\r\t\t\t(oldlistener instVarNamed: \'$PjRefCount\') == 0 ifTrue: [ \r\t\t\t\toldlistener instVarNamed: \'$PjProxyRemove\' put: true.\r\t\t\t\t^ oldlistener ] ] ].\r\t^ \'true\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3263' ],		#self : OmReference [ '3264' ],		#time : DateAndTime [ '2024-03-03T08:20:53.385-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageSetEventListener,				#isMetaSide : false			},			#name : #eventName,			#protocol : #accessing,			#sourceCode : 'eventName\r\r\t^ eventName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3264' ],		#self : OmReference [ '3265' ],		#time : DateAndTime [ '2024-03-03T08:20:53.385-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageSetEventListener,				#isMetaSide : false			},			#name : #'eventName:',			#protocol : #accessing,			#sourceCode : 'eventName: anObject\r\r\teventName := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3265' ],		#self : OmReference [ '3266' ],		#time : DateAndTime [ '2024-03-03T08:20:53.385-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageSetEventListener,				#isMetaSide : false			},			#name : #listenerProxyInfo,			#protocol : #accessing,			#sourceCode : 'listenerProxyInfo\r\r\t^ listenerProxyInfo',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3266' ],		#self : OmReference [ '3267' ],		#time : DateAndTime [ '2024-03-03T08:20:53.385-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageSetEventListener,				#isMetaSide : false			},			#name : #'listenerProxyInfo:',			#protocol : #accessing,			#sourceCode : 'listenerProxyInfo: anObject\r\r\tlistenerProxyInfo := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3267' ],		#self : OmReference [ '3268' ],		#time : DateAndTime [ '2024-03-03T08:20:53.387-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageSetEventListener,				#isMetaSide : false			},			#name : #targetProxyInfo,			#protocol : #accessing,			#sourceCode : 'targetProxyInfo\r\r\t^ targetProxyInfo',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3268' ],		#self : OmReference [ '3269' ],		#time : DateAndTime [ '2024-03-03T08:20:53.387-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageSetEventListener,				#isMetaSide : false			},			#name : #'targetProxyInfo:',			#protocol : #accessing,			#sourceCode : 'targetProxyInfo: anObject\r\r\ttargetProxyInfo := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3269' ],		#self : OmReference [ '3270' ],		#time : DateAndTime [ '2024-03-03T08:20:53.387-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMessageTerminate,				#isMetaSide : false			},			#name : #'evaluateInContext:',			#protocol : #public,			#sourceCode : 'evaluateInContext: aMessageContext\r\r\taMessageContext websocketDelegate class terminate',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3270' ],		#self : OmReference [ '3271' ],		#time : DateAndTime [ '2024-03-03T08:20:53.387-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'WBWindowsWebBrowser class',				#isMetaSide : true			},			#name : #'openBrowser:on:inBackground:',			#protocol : #'*PharoJs-Base-Bridge',			#sourceCode : 'openBrowser: browserName on: anURLString inBackground: backgroundFlag\r\r\t"Open the webbrowser on the given URL\r\tself openBrowser: \'Firefox\' on: \'http://pharojs.org\' inBackground: false.\r\tif the browserName is nil, open the default browser.\r\tself openBrowser: nil on: \'http://pharojs.org\' inBackground: false.\r\r\tThe backgroundFlag is true when the window of the browser should open behind the Pharo window.\r\t"\r\r\t(browserName isNil or: [ backgroundFlag not ]) ifTrue: [ \r\t\t^ WebBrowser openOn: anURLString ].\r\t^ self\r\t\t  shellExecute: \'open\'\r\t\t  file: browserName asLowercase\r\t\t  parameters: anURLString\r\t\t  directory: \'\'\r\t\t  show: 5 "SW_SHOW"',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3271' ],		#self : OmReference [ '3272' ],		#time : DateAndTime [ '2024-03-03T08:20:53.387-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'WBWindowsWebBrowser class',				#isMetaSide : true			},			#name : #'openTerminalWithNodeOn:inFolder:',			#protocol : #'*PharoJs-Base-Bridge',			#sourceCode : 'openTerminalWithNodeOn: theFileName inFolder: anObject\r\r\tself\r\t\tshellExecute: \'open\'\r\t\tfile: \'node\'\r\t\tparameters: theFileName\r\t\tdirectory: \'\'\r\t\tshow: 5 "SW_SHOW"',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3272' ],		#self : OmReference [ '3273' ],		#time : DateAndTime [ '2024-03-03T08:20:53.388-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #bridge,			#protocol : #'*PharoJs-Base-Bridge-App',			#sourceCode : 'bridge\r\t<pharoJsSkip>\r\t^ PjBridge bridgeForAppClass: self',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3273' ],		#self : OmReference [ '3274' ],		#time : DateAndTime [ '2024-03-03T08:20:53.388-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #bridgeAddress,			#protocol : #'*PharoJs-Base-Bridge-App',			#sourceCode : 'bridgeAddress\r\t<pharoJsSkip>\r\t^ \'127.0.0.1\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3274' ],		#self : OmReference [ '3275' ],		#time : DateAndTime [ '2024-03-03T08:20:53.388-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #bridgeClass,			#protocol : #'*PharoJs-Base-Bridge-App',			#sourceCode : 'bridgeClass\r\t<pharoJsSkip>\r\t^ PjBridge',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3275' ],		#self : OmReference [ '3276' ],		#time : DateAndTime [ '2024-03-03T08:20:53.389-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #bridgeClientClass,			#protocol : #'*PharoJs-Base-Bridge-App',			#sourceCode : 'bridgeClientClass\r\t<pharoJsSkip>\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3276' ],		#self : OmReference [ '3277' ],		#time : DateAndTime [ '2024-03-03T08:20:53.39-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #bridgeForDebug,			#protocol : #'*PharoJs-Base-Bridge-App',			#sourceCode : 'bridgeForDebug\r\t<pharoJsSkip>\r\t^ self bridge enableClientLogging',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3277' ],		#self : OmReference [ '3278' ],		#time : DateAndTime [ '2024-03-03T08:20:53.39-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #newBridgeClient,			#protocol : #'*PharoJs-Base-Bridge-App',			#sourceCode : 'newBridgeClient\r\t<pharoJsSkip>\r\t^self bridgeClientClass newWithAppClass: self',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3278' ],		#self : OmReference [ '3279' ],		#time : DateAndTime [ '2024-03-03T08:20:53.39-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjServer class',				#isMetaSide : true			},			#name : #portsCurrentlyInUse,			#protocol : #accessing,			#sourceCode : 'portsCurrentlyInUse\r\t^(self allInstances select: #isRunning thenCollect: #port) asSet',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3279' ],		#self : OmReference [ '3280' ],		#time : DateAndTime [ '2024-03-03T08:20:53.39-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjServer class',				#isMetaSide : true			},			#name : #webSocketUrlTag,			#protocol : #accessing,			#sourceCode : 'webSocketUrlTag\r\t^\'javascript-bridge\'',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3280' ],		#self : OmReference [ '3281' ],		#time : DateAndTime [ '2024-03-03T08:20:53.39-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #'basicExecutePlainRequest:sendResponseThrough:',			#protocol : #'request handling',			#sourceCode : 'basicExecutePlainRequest: request sendResponseThrough: stream\r\r\t| response |\r\tZnCurrentServer value: self during: [ \r\t\tresponse := self handleRequest: request timing: timing.\r\t\tresponse setConnectionClose.\r\t\tself writeResponse: response on: stream timing: timing ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3281' ],		#self : OmReference [ '3282' ],		#time : DateAndTime [ '2024-03-03T08:20:53.391-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #css,			#protocol : #accessing,			#sourceCode : 'css\r\t^self delegate css',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3282' ],		#self : OmReference [ '3283' ],		#time : DateAndTime [ '2024-03-03T08:20:53.391-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #'css:',			#protocol : #accessing,			#sourceCode : 'css: jsString\r\tself delegate css: jsString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3283' ],		#self : OmReference [ '3284' ],		#time : DateAndTime [ '2024-03-03T08:20:53.391-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #delegateClass,			#protocol : #initialization,			#sourceCode : 'delegateClass\r\r\t^ PjParametrizableServerDelegate',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3284' ],		#self : OmReference [ '3285' ],		#time : DateAndTime [ '2024-03-03T08:20:53.391-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #ensureProcessAlive,			#protocol : #public,			#sourceCode : 'ensureProcessAlive\r\r\tself isProcessDead ifFalse: [ ^ self ].\r\tsuper start',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3285' ],		#self : OmReference [ '3286' ],		#time : DateAndTime [ '2024-03-03T08:20:53.391-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #'executePlainRequest:sendReponseThrough:and:',			#protocol : #'request handling',			#sourceCode : 'executePlainRequest: request sendReponseThrough: stream and: socket\r\r\t[ \r\t[ self basicExecutePlainRequest: request sendResponseThrough: stream ] \r\t\tensure: [ \r\t\t\tself logConnectionClosed: stream.\r\t\t\tstream close ] ] ifCurtailed: [ \r\t\tself logServerGeneric: \'Destroying socket\'.\r\t\tsocket destroy ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3286' ],		#self : OmReference [ '3287' ],		#time : DateAndTime [ '2024-03-03T08:20:53.391-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #favicon,			#protocol : #accessing,			#sourceCode : 'favicon\r\t^self delegate favicon',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3287' ],		#self : OmReference [ '3288' ],		#time : DateAndTime [ '2024-03-03T08:20:53.391-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #'favicon:',			#protocol : #accessing,			#sourceCode : 'favicon: jsString\r\tself delegate favicon: jsString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3288' ],		#self : OmReference [ '3289' ],		#time : DateAndTime [ '2024-03-03T08:20:53.391-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #fingerPrint,			#protocol : #accessing,			#sourceCode : 'fingerPrint\r\t^self delegate fingerPrint',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3289' ],		#self : OmReference [ '3290' ],		#time : DateAndTime [ '2024-03-03T08:20:53.391-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #'handleRequest:forWebSocketOn:',			#protocol : #'request handling',			#sourceCode : 'handleRequest: request forWebSocketOn: stream\r\r\t| acceptKey response |\r\tacceptKey := ZnWebSocketUtils handshake:\r\t\t             (request headers at: \'Sec-WebSocket-Key\').\r\tresponse := ZnWebSocketResponse new\r\t\t            statusLine: (ZnStatusLine code: 101);\r\t\t            headers: (self responseHeadersForKey: acceptKey);\r\t\t            continuation: [ :aWebSocket | webSocket := aWebSocket ].\r\tself augmentResponse: response forRequest: request.\r\tself writeResponse: response on: stream timing: timing.\r\tresponse useConnection: stream',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3290' ],		#self : OmReference [ '3291' ],		#time : DateAndTime [ '2024-03-03T08:20:53.391-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #html,			#protocol : #accessing,			#sourceCode : 'html\r\t^self delegate html',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3291' ],		#self : OmReference [ '3292' ],		#time : DateAndTime [ '2024-03-03T08:20:53.392-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #'html:',			#protocol : #accessing,			#sourceCode : 'html: htmlString\r\tself delegate html: htmlString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3292' ],		#self : OmReference [ '3293' ],		#time : DateAndTime [ '2024-03-03T08:20:53.392-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\r\tsuper initialize.\r\tself delegate: self delegateClass new',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3293' ],		#self : OmReference [ '3294' ],		#time : DateAndTime [ '2024-03-03T08:20:53.392-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #isProcessDead,			#protocol : #testing,			#sourceCode : 'isProcessDead\r\r\t^ self process isNil or: [ \r\t\t  self process isTerminating or: [ self process isTerminated ] ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3294' ],		#self : OmReference [ '3295' ],		#time : DateAndTime [ '2024-03-03T08:20:53.392-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #isWebSocketConnected,			#protocol : #initialization,			#sourceCode : 'isWebSocketConnected\r\r\tself webSocket ifNil: [ ^ false ].\r\t^ self webSocket isConnected',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3295' ],		#self : OmReference [ '3296' ],		#time : DateAndTime [ '2024-03-03T08:20:53.392-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #javascript,			#protocol : #accessing,			#sourceCode : 'javascript\r\t^self delegate javascript',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3296' ],		#self : OmReference [ '3297' ],		#time : DateAndTime [ '2024-03-03T08:20:53.392-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #'javascript:',			#protocol : #accessing,			#sourceCode : 'javascript: jsString\r\tself delegate javascript: jsString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3297' ],		#self : OmReference [ '3298' ],		#time : DateAndTime [ '2024-03-03T08:20:53.392-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #'logSocketRead:',			#protocol : #logging,			#sourceCode : 'logSocketRead: aString\r\r\tlogLevel < 4 ifTrue: [ ^ self ].\r\t(self newLogEvent: PjSocketLogEvent)\r\t\tdirection: \'read\';\r\t\tcontents: aString;\r\t\temit',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3298' ],		#self : OmReference [ '3299' ],		#time : DateAndTime [ '2024-03-03T08:20:53.392-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #'logSocketWritten:',			#protocol : #logging,			#sourceCode : 'logSocketWritten: aString\r\r\tlogLevel < 4 ifTrue: [ ^ self ].\r\t(self newLogEvent: PjSocketLogEvent)\r\t\tdirection: \'wrote\';\r\t\tcontents: aString;\r\t\temit',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3299' ],		#self : OmReference [ '3300' ],		#time : DateAndTime [ '2024-03-03T08:20:53.392-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #loggingOn,			#protocol : #logging,			#sourceCode : 'loggingOn\r\r\tlogLevel := 4 " extended for websocket tracking "',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3300' ],		#self : OmReference [ '3301' ],		#time : DateAndTime [ '2024-03-03T08:20:53.392-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #maxPortNumber,			#protocol : #accessing,			#sourceCode : 'maxPortNumber\r\t^65535',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3301' ],		#self : OmReference [ '3302' ],		#time : DateAndTime [ '2024-03-03T08:20:53.393-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #minPortNumber,			#protocol : #accessing,			#sourceCode : 'minPortNumber\r\t^1024',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3302' ],		#self : OmReference [ '3303' ],		#time : DateAndTime [ '2024-03-03T08:20:53.393-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #nextPortNumber,			#protocol : #accessing,			#sourceCode : 'nextPortNumber\r\tLastUsedPort ifNil: [ ^LastUsedPort := self minPortNumber ].\r\tLastUsedPort = self maxPortNumber ifTrue: [^LastUsedPort := self minPortNumber].\r\tLastUsedPort := LastUsedPort + 1.\r\t^LastUsedPort',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3303' ],		#self : OmReference [ '3304' ],		#time : DateAndTime [ '2024-03-03T08:20:53.393-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #'responseHeadersForKey:',			#protocol : #'request handling',			#sourceCode : 'responseHeadersForKey: key\r\r\t"Return the headers for a WebSocket setup response, given key"\r\r\t^ ZnHeaders defaultResponseHeaders\r\t\t  at: \'Upgrade\' put: \'websocket\';\r\t\t  at: \'Connection\' put: \'Upgrade\';\r\t\t  at: \'Sec-WebSocket-Accept\' put: key;\r\t\t  yourself',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3304' ],		#self : OmReference [ '3305' ],		#time : DateAndTime [ '2024-03-03T08:20:53.393-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #'serveConnectionOn:',			#protocol : #'request handling',			#sourceCode : 'serveConnectionOn: listeningSocket\r\t"We wait up to acceptWaitTimeout seconds for an incoming connection.\r\tIf we get one we wrap it in a SocketStream and #executeOneRequestResponseOn: on it.\r\tWe do not fork a worker thread/process but stay in the current one for just one request/response cycle."\r\r\t| socket stream request |\r\tsocket := listeningSocket waitForAcceptFor: self acceptWaitTimeout.\r\tsocket ifNil: [ ^ self noteAcceptWaitTimedOut ].\r\tstream := self socketStreamOn: socket.\r\ttiming := ZnServerTransactionTiming new.\r\trequest := self readRequest: stream timing: timing.\r\t(request relativeUrl path endsWith: self webSocketUrlTag) ifTrue: [ \r\t\t^ self handleRequest: request forWebSocketOn: stream ].\r\tself\r\t\texecutePlainRequest: request\r\t\tsendReponseThrough: stream\r\t\tand: socket',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3305' ],		#self : OmReference [ '3306' ],		#time : DateAndTime [ '2024-03-03T08:20:53.393-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #start,			#protocol : #public,			#sourceCode : 'start\r\r\t| candidatePort usedPorts |\r\tusedPorts := self class portsCurrentlyInUse.\r\t[ \r\tcandidatePort := self nextPortNumber.\r\tusedPorts includes: candidatePort ] whileTrue.\r\tself startOnPort: candidatePort',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3306' ],		#self : OmReference [ '3307' ],		#time : DateAndTime [ '2024-03-03T08:20:53.393-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #'startOnPort:',			#protocol : #public,			#sourceCode : 'startOnPort: aPort\r\r\tself port: aPort.\r\tsuper start',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3307' ],		#self : OmReference [ '3308' ],		#time : DateAndTime [ '2024-03-03T08:20:53.393-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #stop,			#protocol : #public,			#sourceCode : 'stop\r\r\tself stopWebSocket.\r\tsuper stop',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3308' ],		#self : OmReference [ '3309' ],		#time : DateAndTime [ '2024-03-03T08:20:53.393-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #stopWebSocket,			#protocol : #initialization,			#sourceCode : 'stopWebSocket\r\r\tself webSocket ifNil: [ ^ self ].\r\tself webSocket isConnected ifFalse: [ ^ self ].\r\t[ self webSocket close ]\r\t\ton: ConnectionTimedOut\r\t\tdo: [ " nothing: the socket\'s gone away " ]',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3309' ],		#self : OmReference [ '3310' ],		#time : DateAndTime [ '2024-03-03T08:20:53.393-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #urlString,			#protocol : #accessing,			#sourceCode : 'urlString\r\t^self url asString',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3310' ],		#self : OmReference [ '3311' ],		#time : DateAndTime [ '2024-03-03T08:20:53.393-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #webSocket,			#protocol : #accessing,			#sourceCode : 'webSocket\r\t^webSocket',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3311' ],		#self : OmReference [ '3312' ],		#time : DateAndTime [ '2024-03-03T08:20:53.394-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjServer,				#isMetaSide : false			},			#name : #webSocketUrlTag,			#protocol : #accessing,			#sourceCode : 'webSocketUrlTag\r\t^self class webSocketUrlTag',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3312' ],		#self : OmReference [ '3313' ],		#time : DateAndTime [ '2024-03-03T08:20:53.394-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjSTONReader class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: readStreamOrString\r\r\t^ self new\r\t\t  on: readStreamOrString readStream;\r\t\t  next',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3313' ],		#self : OmReference [ '3314' ],		#time : DateAndTime [ '2024-03-03T08:20:53.394-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSTONReader,				#isMetaSide : false			},			#name : #'isClassStartChar:',			#protocol : #private,			#sourceCode : 'isClassStartChar: char\r\r\t^ false',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3314' ],		#self : OmReference [ '3315' ],		#time : DateAndTime [ '2024-03-03T08:20:53.394-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSTONReader,				#isMetaSide : false			},			#name : #'parseConstantDo:',			#protocol : #parsing-internal,			#sourceCode : 'parseConstantDo: block\r\r\treadStream peek = $I ifTrue: [ \r\t\t^ self match: \'Infinity\' do: [ block value: Float infinity ] ].\r\treadStream peek = $- ifTrue: [ \r\t\t^ self\r\t\t\t  match: \'-Infinity\'\r\t\t\t  do: [ block value: Float infinity negated ] ].\r\treadStream peek = $N ifTrue: [ \r\t\t^ self match: \'NaN\' do: [ block value: Float nan ] ].\r\tsuper parseConstantDo: block',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3315' ],		#self : OmReference [ '3316' ],		#time : DateAndTime [ '2024-03-03T08:20:53.394-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSTONReader,				#isMetaSide : false			},			#name : #parseNumberInteger,			#protocol : #parsing-internal,			#sourceCode : 'parseNumberInteger\r\r\treadStream peek = $I ifTrue: [ \r\t\tself parseConstantDo: [ :val | ^ val ] ].\r\t^ super parseNumberInteger',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3316' ],		#self : OmReference [ '3317' ],		#time : DateAndTime [ '2024-03-03T08:20:53.394-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'WBUnixWebBrowser class',				#isMetaSide : true			},			#name : #'openBrowser:on:inBackground:',			#protocol : #'*PharoJs-Base-Bridge',			#sourceCode : 'openBrowser: browserName on: anURLString inBackground: backgroundFlag\r\t"Open the webbrowser on the given URL\r\tself openBrowser: \'Firefox\' on: \'http://pharojs.org\' inBackground: false.\r\tif the browserName is nil, open the default browser.\r\tself openBrowser: nil on: \'http://pharojs.org\' inBackground: false.\r\r\tThe backgroundFlag is true when the window of the browser should open behind the Pharo window.\r\t"\r\r\t| openCommand |\r\t(browserName isNil or: [ backgroundFlag not ])\r\t\tifTrue: [ ^ WebBrowser openOn: anURLString ].\r\topenCommand := \'{1} {2} &\'\r\t\tformat:\r\t\t\t{browserName asLowercase.\r\t\t\tanURLString}.\r\tself system: openCommand',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3317' ],		#self : OmReference [ '3318' ],		#time : DateAndTime [ '2024-03-03T08:20:53.397-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'WBUnixWebBrowser class',				#isMetaSide : true			},			#name : #'openTerminalWithNodeOn:inFolder:',			#protocol : #'*PharoJs-Base-Bridge',			#sourceCode : 'openTerminalWithNodeOn: theFileName inFolder: anObject\r\r\tself system: (\'node {1} &\' format: { theFileName })',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3318' ],		#self : OmReference [ '3319' ],		#time : DateAndTime [ '2024-03-03T08:20:53.398-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'WebBrowser class',				#isMetaSide : true			},			#name : #'openBrowser:on:inBackground:',			#protocol : #'*PharoJs-Base-Bridge',			#sourceCode : 'openBrowser: browserName on: anURLString inBackground: backgroundFlag\r\t"Open the webbrowser on the given URL\r\tself openBrowser: \'Firefox\' on: \'http://pharojs.org\' inBackground: false.\r\tif the browserName is nil, open the default browser.\r\tself openBrowser: nil on: \'http://pharojs.org\' inBackground: false.\r\r\tThe backgroundFlag is true when the window of the browser should open behind the Pharo window.\r\t"\r\t^ self webbrowserClassForPlatform\r\t\topenBrowser: browserName\r\t\ton: anURLString\r\t\tinBackground: backgroundFlag',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3319' ],		#self : OmReference [ '3320' ],		#time : DateAndTime [ '2024-03-03T08:20:53.398-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'WebBrowser class',				#isMetaSide : true			},			#name : #'openInBackgroundUrl:',			#protocol : #'*PharoJs-Base-Bridge',			#sourceCode : 'openInBackgroundUrl: anURLString\r\r\t^ self openOn: anURLString inBackground: true',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3320' ],		#self : OmReference [ '3321' ],		#time : DateAndTime [ '2024-03-03T08:20:53.398-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'WebBrowser class',				#isMetaSide : true			},			#name : #'openOn:inBackground:',			#protocol : #'*PharoJs-Base-Bridge',			#sourceCode : 'openOn: anURLString inBackground: backgroundFlag\r\t"Open the webbrowser on the given URL\r\tself openOn: \'http://pharojs.org\' inBackground: false.\r\tThe backgroundFlag is true when the window of the browser should open behind the Pharo window.\r\t"\r\r\tself openBrowser: nil on: anURLString inBackground: backgroundFlag',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3321' ],		#self : OmReference [ '3322' ],		#time : DateAndTime [ '2024-03-03T08:20:53.398-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'WebBrowser class',				#isMetaSide : true			},			#name : #'openTerminalWithNodeOn:inFolder:',			#protocol : #'*PharoJs-Base-Bridge',			#sourceCode : 'openTerminalWithNodeOn: theFileName inFolder: theFolder\r\t"Open a terminal with node running on the given file"\r\r\t^ self webbrowserClassForPlatform\r\t\topenTerminalWithNodeOn: theFileName\r\t\tinFolder: theFolder',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3322' ],		#self : OmReference [ '3323' ],		#time : DateAndTime [ '2024-03-03T08:20:53.399-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDOMApplication class',				#isMetaSide : true			},			#name : #css,			#protocol : #'*PharoJs-Base-Bridge-App',			#sourceCode : 'css\t\r\t" might want to override with:\r\t^ self cssFromFile\r\t"\r\t<pharoJsSkip>\r\t\r\t^ nil',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3323' ],		#self : OmReference [ '3324' ],		#time : DateAndTime [ '2024-03-03T08:20:53.4-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDOMApplication class',				#isMetaSide : true			},			#name : #'cssFile:',			#protocol : #'*PharoJs-Base-Bridge-App',			#sourceCode : 'cssFile: anObject\r\t<pharoJsSkip>\r\t\r\tcssFile := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3324' ],		#self : OmReference [ '3325' ],		#time : DateAndTime [ '2024-03-03T08:20:53.4-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDOMApplication class',				#isMetaSide : true			},			#name : #favicon,			#protocol : #'*PharoJs-Base-Bridge-App',			#sourceCode : 'favicon\r\t<pharoJsSkip>\r\t\r\t^ nil',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3325' ],		#self : OmReference [ '3326' ],		#time : DateAndTime [ '2024-03-03T08:20:53.401-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDOMApplication class',				#isMetaSide : true			},			#name : #'generateHtmlUsing:',			#protocol : #'*PharoJs-Base-Bridge-App',			#sourceCode : 'generateHtmlUsing: aPjHtmlGenerator\r\t<pharoJsSkip>\r\t\r\t^ false\r\t" consider overriding with \'^ self generateHtmlFromFileUsing: aPjHtmlGenerator\' "',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3326' ],		#self : OmReference [ '3327' ],		#time : DateAndTime [ '2024-03-03T08:20:53.402-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDOMApplication class',				#isMetaSide : true			},			#name : #'htmlFile:',			#protocol : #'*PharoJs-Base-Bridge-App',			#sourceCode : 'htmlFile: anObject\r\t<pharoJsSkip>\r\t\r\thtmlFile := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3327' ],		#self : OmReference [ '3328' ],		#time : DateAndTime [ '2024-03-03T08:20:53.402-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjJavascriptMessage class',				#isMetaSide : true			},			#name : #'receiverId:selector:arguments:',			#protocol : #'instance creation',			#sourceCode : 'receiverId: receiverId selector: selector arguments: arguments\r\r\t^ (self selector: selector arguments: arguments)\r\t\t  receiverId: receiverId;\r\t\t  yourself',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3328' ],		#self : OmReference [ '3329' ],		#time : DateAndTime [ '2024-03-03T08:20:53.402-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptMessage,				#isMetaSide : false			},			#name : #'asJsAstUsing:',			#protocol : #converting,			#sourceCode : 'asJsAstUsing: aConverter\r\r\t^ aConverter convertJavascriptMessage: self',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3329' ],		#self : OmReference [ '3330' ],		#time : DateAndTime [ '2024-03-03T08:20:53.402-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptMessage,				#isMetaSide : false			},			#name : #'convertToJsUsing:',			#protocol : #converting,			#sourceCode : 'convertToJsUsing: aTranspiler\r\r\taTranspiler convertJavascriptMessage: self',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3330' ],		#self : OmReference [ '3331' ],		#time : DateAndTime [ '2024-03-03T08:20:53.402-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptMessage,				#isMetaSide : false			},			#name : #receiverId,			#protocol : #accessing,			#sourceCode : 'receiverId\r\r\t^ receiverId',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3331' ],		#self : OmReference [ '3332' ],		#time : DateAndTime [ '2024-03-03T08:20:53.402-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjJavascriptMessage,				#isMetaSide : false			},			#name : #'receiverId:',			#protocol : #accessing,			#sourceCode : 'receiverId: anObject\r\r\treceiverId := anObject',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3332' ],		#self : OmReference [ '3333' ],		#time : DateAndTime [ '2024-03-03T08:20:53.402-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjJavascriptGlobals class',				#isMetaSide : true			},			#name : #'ensureProxyForGlobal:',			#protocol : #'*PharoJs-Base-Bridge',			#sourceCode : 'ensureProxyForGlobal: varName\r\r\t| binding |\r\tbinding := super localBindingOf: varName.\r\tbinding value ifNotNil: [ ^ binding ].\r\tself initProxyForGlobal: varName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3333' ],		#self : OmReference [ '3334' ],		#time : DateAndTime [ '2024-03-03T08:20:53.403-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjJavascriptGlobals class',				#isMetaSide : true			},			#name : #'initProxyForGlobal:',			#protocol : #'*PharoJs-Base-Bridge',			#sourceCode : 'initProxyForGlobal: varName\r\r\t| newProxy |\r\t(self classVarNames includes: varName) ifFalse: [ ^ self ].\r\tnewProxy := PjProxyForGlobal newProxyNamed: varName.\r\tself classVarNamed: varName put: newProxy',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3334' ],		#self : OmReference [ '3335' ],		#time : DateAndTime [ '2024-03-03T08:20:53.403-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjJavascriptGlobals class',				#isMetaSide : true			},			#name : #'localBindingOf:',			#protocol : #'*PharoJs-Base-Bridge',			#sourceCode : 'localBindingOf: varName\r\r\tself ensureProxyForGlobal: varName.\r\t^ super localBindingOf: varName',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3335' ],		#self : OmReference [ '3336' ],		#time : DateAndTime [ '2024-03-03T08:20:53.403-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTranspiler,				#isMetaSide : false			},			#name : #'convertJavascriptMessage:',			#protocol : #'*PharoJs-Base-Bridge',			#sourceCode : 'convertJavascriptMessage: aJavascriptMessage\r\r\t| jsAst |\r\tjsAst := converter convertJavascriptMessage: aJavascriptMessage.\r\tself generateCodeStringFrom: jsAst',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3336' ],		#self : OmReference [ '3337' ],		#time : DateAndTime [ '2024-03-03T08:20:53.404-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjFileBasedWebApp class',				#isMetaSide : true			},			#name : #bridgeClientClass,			#protocol : #'*PharoJs-Base-Bridge-App',			#sourceCode : 'bridgeClientClass\r\t<pharoJsSkip>\r\t\r\t^ PjFileBasedBrowserBridgeClient',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3337' ],		#self : OmReference [ '3338' ],		#time : DateAndTime [ '2024-03-03T08:20:53.404-05:00' ],		#trigger : OmReference [ '2666' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #String,				#isMetaSide : false			},			#name : #asRawJSONString,			#protocol : #'*PharoJs-Base-Bridge',			#sourceCode : 'asRawJSONString\r\r\t^ self',			#stamp : '',			#package : #PharoJs-Base-Bridge		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:53.765-05:00' ],		#prior : OmReference [ '3338' ],		#self : OmReference [ '3339' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-TestFramework-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3339' ],		#self : OmReference [ '3340' ],		#time : DateAndTime [ '2024-03-03T08:20:53.802-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-TestFramework-Kernel,		#affectedPackageName : #PharoJs-TestFramework	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3340' ],		#self : OmReference [ '3341' ],		#time : DateAndTime [ '2024-03-03T08:20:53.804-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTAppFolderSharingSubclass\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-TestFramework-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTAppFolderSharingSubclass,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTAppFolderSharingSubclass classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTAppFolderSharingSubclass classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTAppFolderSharingSubclass,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-TestFramework-Kernel,			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3341' ],		#self : OmReference [ '3342' ],		#time : DateAndTime [ '2024-03-03T08:20:53.807-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTAppFolderSharingSubclass\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-TestFramework-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTAppFolderSharingSubclass,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTAppFolderSharingSubclass classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTAppFolderSharingSubclass classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTAppFolderSharingSubclass,					#isMetaSide : false				},				#parent : @8,				#content : 'This trait is useful when defining a hierarchy of classes that rely on the same HTML and related files (CSS, third party JS, ...). The JS is exported in the same folder as its superclass.\r\rThis is useful for example for  test purpose. A subclass  can be defined for enabling tests using mocks,\rAnother use is when defining variants of  the  same app, typically for experiment purpose.',				#stamp : ''			},			#category : #PharoJs-TestFramework-Kernel,			#package : #PharoJs-TestFramework		},		#oldComment : '',		#newComment : 'This trait is useful when defining a hierarchy of classes that rely on the same HTML and related files (CSS, third party JS, ...). The JS is exported in the same folder as its superclass.\r\rThis is useful for example for  test purpose. A subclass  can be defined for enabling tests using mocks,\rAnother use is when defining variants of  the  same app, typically for experiment purpose.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3342' ],		#self : OmReference [ '3343' ],		#time : DateAndTime [ '2024-03-03T08:20:53.815-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTAppRunsInJS\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-TestFramework-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTAppRunsInJS,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTAppRunsInJS classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTAppRunsInJS classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTAppRunsInJS,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-TestFramework-Kernel,			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3343' ],		#self : OmReference [ '3344' ],		#time : DateAndTime [ '2024-03-03T08:20:53.816-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTAppRunsInJS\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-TestFramework-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTAppRunsInJS,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTAppRunsInJS classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTAppRunsInJS classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTAppRunsInJS,					#isMetaSide : false				},				#parent : @8,				#content : 'This trait makes a test case export the app under test to JS and control it remotely on the JS interpreter.\r\r',				#stamp : ''			},			#category : #PharoJs-TestFramework-Kernel,			#package : #PharoJs-TestFramework		},		#oldComment : '',		#newComment : 'This trait makes a test case export the app under test to JS and control it remotely on the JS interpreter.\r\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3344' ],		#self : OmReference [ '3345' ],		#time : DateAndTime [ '2024-03-03T08:20:53.824-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTAppRunsInPharo\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-TestFramework-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTAppRunsInPharo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTAppRunsInPharo classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTAppRunsInPharo classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTAppRunsInPharo,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-TestFramework-Kernel,			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3345' ],		#self : OmReference [ '3346' ],		#time : DateAndTime [ '2024-03-03T08:20:53.825-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTAppRunsInPharo\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-TestFramework-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTAppRunsInPharo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTAppRunsInPharo classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTAppRunsInPharo classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTAppRunsInPharo,					#isMetaSide : false				},				#parent : @8,				#content : 'This trait makes a test case run the app under test on the Pharo VM. Only third party JS code and DOM objects are run on the JS interpreter\r',				#stamp : ''			},			#category : #PharoJs-TestFramework-Kernel,			#package : #PharoJs-TestFramework		},		#oldComment : '',		#newComment : 'This trait makes a test case run the app under test on the Pharo VM. Only third party JS code and DOM objects are run on the JS interpreter\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3346' ],		#self : OmReference [ '3347' ],		#time : DateAndTime [ '2024-03-03T08:20:53.832-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTWaitUntilReady\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-TestFramework-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTWaitUntilReady,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTWaitUntilReady classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTWaitUntilReady classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTWaitUntilReady,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-TestFramework-Kernel,			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3347' ],		#self : OmReference [ '3348' ],		#time : DateAndTime [ '2024-03-03T08:20:53.839-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTWebAppTestCase\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-TestFramework-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTWebAppTestCase,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTWebAppTestCase classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTWebAppTestCase classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTWebAppTestCase,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-TestFramework-Kernel,			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3348' ],		#self : OmReference [ '3349' ],		#time : DateAndTime [ '2024-03-03T08:20:53.857-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTWebClientAppTestCase\r\tinstanceVariableNames: \'\'\r\tpackage: \'PharoJs-TestFramework-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTWebClientAppTestCase,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTWebClientAppTestCase classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTWebClientAppTestCase classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTWebClientAppTestCase,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-TestFramework-Kernel,			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3349' ],		#self : OmReference [ '3350' ],		#time : DateAndTime [ '2024-03-03T08:20:53.867-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpTraitAddition {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Trait named: #PjTWebServerApiTestCase\r\tinstanceVariableNames: \'rootUrlString\'\r\tpackage: \'PharoJs-TestFramework-Kernel\'',				#superclassName : #Trait,				#traitCompositionSource : '{}'			},			#name : #PjTWebServerApiTestCase,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTWebServerApiTestCase classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTWebServerApiTestCase classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTWebServerApiTestCase,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #PharoJs-TestFramework-Kernel,			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3350' ],		#self : OmReference [ '3351' ],		#time : DateAndTime [ '2024-03-03T08:20:53.869-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-TestFramework-Test,		#affectedPackageName : #PharoJs-TestFramework	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3351' ],		#self : OmReference [ '3352' ],		#time : DateAndTime [ '2024-03-03T08:20:53.871-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjAppTestCaseTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-TestFramework-Test\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PjAppTestCaseTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAppTestCaseTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAppTestCaseTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAppTestCaseTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-TestFramework-Test,			#package : #PharoJs-TestFramework,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3352' ],		#self : OmReference [ '3353' ],		#time : DateAndTime [ '2024-03-03T08:20:53.882-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'ParametrizedTestCase subclass: #PjAppTestCase\r\tuses: PjTWaitUntilReady + PjTAppRunsInPharo\r\tinstanceVariableNames: \'app bridgeResourceClass\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjUniversalGlobals\'\r\tpackage: \'PharoJs-TestFramework-Kernel\'',				#superclassName : 'ParametrizedTestCase',				#traitCompositionSource : 'PjTWaitUntilReady + PjTAppRunsInPharo'			},			#name : #PjAppTestCase,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAppTestCase,						#isMetaSide : false					},					#name : #app,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAppTestCase,						#isMetaSide : false					},					#name : #bridgeResourceClass,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAppTestCase class\r\tuses: PjTWaitUntilReady classTrait + PjTAppRunsInPharo classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTWaitUntilReady classTrait + PjTAppRunsInPharo classTrait'				},				#name : #'PjAppTestCase class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAppTestCase,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-TestFramework-Kernel,			#package : #PharoJs-TestFramework,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAppTestCase,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3353' ],		#self : OmReference [ '3354' ],		#time : DateAndTime [ '2024-03-03T08:20:53.885-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjAppTestCase subclass: #PjWebAppTestCase\r\tuses: PjTWebAppTestCase\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjBrowserGlobals\'\r\tpackage: \'PharoJs-TestFramework-Kernel\'',				#superclassName : 'PjAppTestCase',				#traitCompositionSource : 'PjTWebAppTestCase'			},			#name : #PjWebAppTestCase,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjWebAppTestCase class\r\tuses: PjTWebAppTestCase classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTWebAppTestCase classTrait'				},				#name : #'PjWebAppTestCase class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjWebAppTestCase,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-TestFramework-Kernel,			#package : #PharoJs-TestFramework,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWebAppTestCase,						#isMetaSide : false					},					#name : #PjBrowserGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3354' ],		#self : OmReference [ '3355' ],		#time : DateAndTime [ '2024-03-03T08:20:53.887-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebAppTestCase subclass: #PjMinimalFileBasedWebAppTest\r\tuses: PjTAppRunsInJS\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-TestFramework-Test\'',				#superclassName : 'PjWebAppTestCase',				#traitCompositionSource : 'PjTAppRunsInJS'			},			#name : #PjMinimalFileBasedWebAppTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMinimalFileBasedWebAppTest class\r\tuses: PjTAppRunsInJS classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTAppRunsInJS classTrait'				},				#name : #'PjMinimalFileBasedWebAppTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMinimalFileBasedWebAppTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-TestFramework-Test,			#package : #PharoJs-TestFramework,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3355' ],		#self : OmReference [ '3356' ],		#time : DateAndTime [ '2024-03-03T08:20:53.888-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebAppTestCase subclass: #PjNonMinmialAppRunningOnPharoTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-TestFramework-Test\'',				#superclassName : 'PjWebAppTestCase',				#traitCompositionSource : '{}'			},			#name : #PjNonMinmialAppRunningOnPharoTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNonMinmialAppRunningOnPharoTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNonMinmialAppRunningOnPharoTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNonMinmialAppRunningOnPharoTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-TestFramework-Test,			#package : #PharoJs-TestFramework,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3356' ],		#self : OmReference [ '3357' ],		#time : DateAndTime [ '2024-03-03T08:20:53.89-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjNonMinmialAppRunningOnPharoTest subclass: #PjNonMinmialAppRunningOnJsTest\r\tuses: PjTAppRunsInJS\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-TestFramework-Test\'',				#superclassName : 'PjNonMinmialAppRunningOnPharoTest',				#traitCompositionSource : 'PjTAppRunsInJS'			},			#name : #PjNonMinmialAppRunningOnJsTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNonMinmialAppRunningOnJsTest class\r\tuses: PjTAppRunsInJS classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTAppRunsInJS classTrait'				},				#name : #'PjNonMinmialAppRunningOnJsTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNonMinmialAppRunningOnJsTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-TestFramework-Test,			#package : #PharoJs-TestFramework,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3357' ],		#self : OmReference [ '3358' ],		#time : DateAndTime [ '2024-03-03T08:20:53.892-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjAppTestCase subclass: #PjWebServerAppTestCase\r\tuses: PjTAppRunsInJS + PjTWebServerApiTestCase\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-TestFramework-Kernel\'',				#superclassName : 'PjAppTestCase',				#traitCompositionSource : 'PjTAppRunsInJS + PjTWebServerApiTestCase'			},			#name : #PjWebServerAppTestCase,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWebServerAppTestCase,						#isMetaSide : false					},					#name : #rootUrlString,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjWebServerAppTestCase class\r\tuses: PjTAppRunsInJS classTrait + PjTWebServerApiTestCase classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTAppRunsInJS classTrait + PjTWebServerApiTestCase classTrait'				},				#name : #'PjWebServerAppTestCase class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjWebServerAppTestCase,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-TestFramework-Kernel,			#package : #PharoJs-TestFramework,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3358' ],		#self : OmReference [ '3359' ],		#time : DateAndTime [ '2024-03-03T08:20:53.893-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestResource subclass: #PjBridgeTestResource\r\tinstanceVariableNames: \'bridge appClass execEnv\'\r\tclassVariableNames: \'OpenWebBrowserInBackground\'\r\tpackage: \'PharoJs-TestFramework-Kernel\'',				#superclassName : 'TestResource',				#traitCompositionSource : '{}'			},			#name : #PjBridgeTestResource,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeTestResource,						#isMetaSide : false					},					#name : #bridge,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeTestResource,						#isMetaSide : false					},					#name : #appClass,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeTestResource,						#isMetaSide : false					},					#name : #execEnv,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBridgeTestResource class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBridgeTestResource class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBridgeTestResource,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeTestResource,						#isMetaSide : false					},					#name : #OpenWebBrowserInBackground,					#parent : @8				}			],			#category : #PharoJs-TestFramework-Kernel,			#package : #PharoJs-TestFramework,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3359' ],		#self : OmReference [ '3360' ],		#time : DateAndTime [ '2024-03-03T08:20:53.894-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestResource subclass: #PjDebugBridgeTestResource\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-TestFramework-Kernel\'',				#superclassName : 'PjBridgeTestResource',				#traitCompositionSource : '{}'			},			#name : #PjDebugBridgeTestResource,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDebugBridgeTestResource class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDebugBridgeTestResource class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDebugBridgeTestResource,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-TestFramework-Kernel,			#package : #PharoJs-TestFramework,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3360' ],		#self : OmReference [ '3361' ],		#time : DateAndTime [ '2024-03-03T08:20:53.896-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestResource subclass: #PjWebClientAppBridgeTestResource\r\tinstanceVariableNames: \'serverBridge serverClassName urlPathString\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-TestFramework-Kernel\'',				#superclassName : 'PjBridgeTestResource',				#traitCompositionSource : '{}'			},			#name : #PjWebClientAppBridgeTestResource,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWebClientAppBridgeTestResource,						#isMetaSide : false					},					#name : #serverBridge,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWebClientAppBridgeTestResource,						#isMetaSide : false					},					#name : #serverClassName,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjWebClientAppBridgeTestResource,						#isMetaSide : false					},					#name : #urlPathString,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjWebClientAppBridgeTestResource class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjWebClientAppBridgeTestResource class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjWebClientAppBridgeTestResource,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-TestFramework-Kernel,			#package : #PharoJs-TestFramework,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3361' ],		#self : OmReference [ '3362' ],		#time : DateAndTime [ '2024-03-03T08:20:53.899-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjAppWrapperForRunningInPharo\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-TestFramework-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjAppWrapperForRunningInPharo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAppWrapperForRunningInPharo class\r\tinstanceVariableNames: \'currentAppClass\'',					#traitCompositionSource : '{}'				},				#name : #'PjAppWrapperForRunningInPharo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjAppWrapperForRunningInPharo class'						},						#name : #currentAppClass,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAppWrapperForRunningInPharo,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-TestFramework-Kernel,			#package : #PharoJs-TestFramework,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3362' ],		#self : OmReference [ '3363' ],		#time : DateAndTime [ '2024-03-03T08:20:53.901-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjAppWrapperForRunningInPharo\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-TestFramework-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjAppWrapperForRunningInPharo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAppWrapperForRunningInPharo class\r\tinstanceVariableNames: \'currentAppClass\'',					#traitCompositionSource : '{}'				},				#name : #'PjAppWrapperForRunningInPharo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjAppWrapperForRunningInPharo class'						},						#name : #currentAppClass,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAppWrapperForRunningInPharo,					#isMetaSide : false				},				#parent : @8,				#content : 'It is important to have the behavior at the class side because the transpiler relies on the AST global node for classes.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-TestFramework-Kernel,			#package : #PharoJs-TestFramework,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'It is important to have the behavior at the class side because the transpiler relies on the AST global node for classes.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3363' ],		#self : OmReference [ '3364' ],		#time : DateAndTime [ '2024-03-03T08:20:53.914-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedWebApp subclass: #PjMinimalFileBasedWebApp\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-TestFramework-Test\'',				#superclassName : 'PjFileBasedWebApp',				#traitCompositionSource : '{}'			},			#name : #PjMinimalFileBasedWebApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMinimalFileBasedWebApp class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMinimalFileBasedWebApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMinimalFileBasedWebApp,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-TestFramework-Test,			#package : #PharoJs-TestFramework,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3364' ],		#self : OmReference [ '3365' ],		#time : DateAndTime [ '2024-03-03T08:20:54.212-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTAppFolderSharingSubclass classTrait',				#isMetaSide : true			},			#name : #appFolder,			#protocol : #exporting,			#sourceCode : 'appFolder\r\t<pharoJsSkip>\r\t^self superclass appFolder',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3365' ],		#self : OmReference [ '3366' ],		#time : DateAndTime [ '2024-03-03T08:20:54.213-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTAppRunsInJS,				#isMetaSide : false			},			#name : #appClassToExport,			#protocol : #accessing,			#sourceCode : 'appClassToExport\r\t^self appClass',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3366' ],		#self : OmReference [ '3367' ],		#time : DateAndTime [ '2024-03-03T08:20:54.213-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTAppRunsInJS,				#isMetaSide : false			},			#name : #currentApp,			#protocol : #accessing,			#sourceCode : 'currentApp\r\r\t^ self bridge\r\t\t  evalSelector: #currentInstance\r\t\t  sentTo: self appClass name',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3367' ],		#self : OmReference [ '3368' ],		#time : DateAndTime [ '2024-03-03T08:20:54.213-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTAppRunsInPharo,				#isMetaSide : false			},			#name : #appClassToExport,			#protocol : #accessing,			#sourceCode : 'appClassToExport\r\t^PjAppWrapperForRunningInPharo on: self appClass',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3368' ],		#self : OmReference [ '3369' ],		#time : DateAndTime [ '2024-03-03T08:20:54.214-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTAppRunsInPharo,				#isMetaSide : false			},			#name : #currentApp,			#protocol : #accessing,			#sourceCode : 'currentApp\r\t^self appClass\r\t\tstart; \r\t\tcurrentInstance.',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3369' ],		#self : OmReference [ '3370' ],		#time : DateAndTime [ '2024-03-03T08:20:54.214-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWaitUntilReady,				#isMetaSide : false			},			#name : #defaultTimeOutActionBlock,			#protocol : #waiting,			#sourceCode : 'defaultTimeOutActionBlock\r\t^[ self fail ]',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3370' ],		#self : OmReference [ '3371' ],		#time : DateAndTime [ '2024-03-03T08:20:54.214-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWaitUntilReady,				#isMetaSide : false			},			#name : #defaultWaitTimeOutDuration,			#protocol : #waiting,			#sourceCode : 'defaultWaitTimeOutDuration \r\t^2 seconds',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3371' ],		#self : OmReference [ '3372' ],		#time : DateAndTime [ '2024-03-03T08:20:54.214-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWaitUntilReady,				#isMetaSide : false			},			#name : #stepDuration,			#protocol : #waiting,			#sourceCode : 'stepDuration\r\t^100 milliSeconds',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3372' ],		#self : OmReference [ '3373' ],		#time : DateAndTime [ '2024-03-03T08:20:54.214-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWaitUntilReady,				#isMetaSide : false			},			#name : #'waitUntil:',			#protocol : #waiting,			#sourceCode : 'waitUntil: conditionBlock\r\tself waitUntil: conditionBlock timeOut: self defaultWaitTimeOutDuration',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3373' ],		#self : OmReference [ '3374' ],		#time : DateAndTime [ '2024-03-03T08:20:54.215-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWaitUntilReady,				#isMetaSide : false			},			#name : #'waitUntil:timeOut:',			#protocol : #waiting,			#sourceCode : 'waitUntil: conditionBlock timeOut: maxToWait \r\tself\r\t\twaitUntil: conditionBlock \r\t\ttimeOut: maxToWait \r\t\tifTimeOutDo: self defaultTimeOutActionBlock',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3374' ],		#self : OmReference [ '3375' ],		#time : DateAndTime [ '2024-03-03T08:20:54.215-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWaitUntilReady,				#isMetaSide : false			},			#name : #'waitUntil:timeOut:ifTimeOutDo:',			#protocol : #waiting,			#sourceCode : 'waitUntil: conditionBlock timeOut: maxToWait ifTimeOutDo: timeOutBlock\r\tself\r\t\twaitWhile: [conditionBlock value not] \r\t\ttimeOut: maxToWait \r\t\tifTimeOutDo: timeOutBlock',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3375' ],		#self : OmReference [ '3376' ],		#time : DateAndTime [ '2024-03-03T08:20:54.215-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWaitUntilReady,				#isMetaSide : false			},			#name : #'waitWhile:',			#protocol : #waiting,			#sourceCode : 'waitWhile: conditionBlock\r\tself waitWhile: conditionBlock timeOut: self defaultWaitTimeOutDuration',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3376' ],		#self : OmReference [ '3377' ],		#time : DateAndTime [ '2024-03-03T08:20:54.215-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWaitUntilReady,				#isMetaSide : false			},			#name : #'waitWhile:timeOut:',			#protocol : #waiting,			#sourceCode : 'waitWhile: conditionBlock timeOut: maxToWait \r\tself\r\t\twaitWhile: conditionBlock \r\t\ttimeOut: maxToWait \r\t\tifTimeOutDo: self defaultTimeOutActionBlock',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3377' ],		#self : OmReference [ '3378' ],		#time : DateAndTime [ '2024-03-03T08:20:54.215-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWaitUntilReady,				#isMetaSide : false			},			#name : #'waitWhile:timeOut:ifTimeOutDo:',			#protocol : #waiting,			#sourceCode : 'waitWhile: conditionBlock timeOut: maxToWait ifTimeOutDo: timeOutBlock\r\t| totalWaited |\r\ttotalWaited := 0 second.\r\t[totalWaited < maxToWait and: conditionBlock] whileTrue: [\r\t\tself stepDuration wait.\r\t\ttotalWaited := totalWaited + self stepDuration].\r\ttotalWaited >= maxToWait ifTrue: timeOutBlock',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3378' ],		#self : OmReference [ '3379' ],		#time : DateAndTime [ '2024-03-03T08:20:54.216-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebAppTestCase,				#isMetaSide : false			},			#name : #'assertInnerHtmlOfElement:equals:',			#protocol : #asserting,			#sourceCode : 'assertInnerHtmlOfElement: domElement equals: expectedValue\r\tself assert: domElement innerHTML equals: expectedValue',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3379' ],		#self : OmReference [ '3380' ],		#time : DateAndTime [ '2024-03-03T08:20:54.216-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebAppTestCase,				#isMetaSide : false			},			#name : #'assertInnerHtmlOfElementById:equals:',			#protocol : #asserting,			#sourceCode : 'assertInnerHtmlOfElementById: id equals: expectedValue\r\r\tself\r\t\tassertInnerHtmlOfElement: (self document getElementById: id)\r\t\tequals: expectedValue',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3380' ],		#self : OmReference [ '3381' ],		#time : DateAndTime [ '2024-03-03T08:20:54.216-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebAppTestCase,				#isMetaSide : false			},			#name : #'assertValueOfElement:equals:',			#protocol : #asserting,			#sourceCode : 'assertValueOfElement: domElement equals: expectedValue\r\tself assert: domElement value equals: expectedValue',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3381' ],		#self : OmReference [ '3382' ],		#time : DateAndTime [ '2024-03-03T08:20:54.216-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebAppTestCase,				#isMetaSide : false			},			#name : #'assertValueOfElementById:equals:',			#protocol : #asserting,			#sourceCode : 'assertValueOfElementById: id equals: expectedValue\r\r\tself\r\t\tassertValueOfElement: (self document getElementById: id)\r\t\tequals: expectedValue',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3382' ],		#self : OmReference [ '3383' ],		#time : DateAndTime [ '2024-03-03T08:20:54.216-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebAppTestCase,				#isMetaSide : false			},			#name : #'changeElement:value:',			#protocol : #'UI handling',			#sourceCode : 'changeElement: domElement value: newValue\r\tdomElement value: newValue.\r\tself dispatchEvent: #change to: domElement.',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3383' ],		#self : OmReference [ '3384' ],		#time : DateAndTime [ '2024-03-03T08:20:54.216-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebAppTestCase,				#isMetaSide : false			},			#name : #'changeElementById:value:',			#protocol : #'UI handling',			#sourceCode : 'changeElementById: anId value: newValue\r\r\tself changeElement: (self document getElementById: anId) value: newValue',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3384' ],		#self : OmReference [ '3385' ],		#time : DateAndTime [ '2024-03-03T08:20:54.216-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebAppTestCase,				#isMetaSide : false			},			#name : #'clickElement:',			#protocol : #'UI handling',			#sourceCode : 'clickElement: domElement \r\tself dispatchEvent: #click to: domElement.',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3385' ],		#self : OmReference [ '3386' ],		#time : DateAndTime [ '2024-03-03T08:20:54.217-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebAppTestCase,				#isMetaSide : false			},			#name : #'clickElementById:',			#protocol : #'UI handling',			#sourceCode : 'clickElementById: aString\r\r\tself clickElement: (self document getElementById: aString)',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3386' ],		#self : OmReference [ '3387' ],		#time : DateAndTime [ '2024-03-03T08:20:54.217-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebAppTestCase,				#isMetaSide : false			},			#name : #'dispatchEvent:to:',			#protocol : #'UI handling',			#sourceCode : 'dispatchEvent: eventName to: htmlElement\r\thtmlElement dispatchEvent: (self newEvent: eventName)',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3387' ],		#self : OmReference [ '3388' ],		#time : DateAndTime [ '2024-03-03T08:20:54.217-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebAppTestCase,				#isMetaSide : false			},			#name : #document,			#protocol : #accessing,			#sourceCode : 'document\r\tself explicitRequirement ',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3388' ],		#self : OmReference [ '3389' ],		#time : DateAndTime [ '2024-03-03T08:20:54.217-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebAppTestCase,				#isMetaSide : false			},			#name : #'newEvent:',			#protocol : #'UI handling',			#sourceCode : 'newEvent: eventName\r\r\t| event |\r\tevent := self document createEvent: #HTMLEvents.\r\tevent initEvent: eventName with: true with: true.\r\t^ event',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3389' ],		#self : OmReference [ '3390' ],		#time : DateAndTime [ '2024-03-03T08:20:54.217-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebClientAppTestCase,				#isMetaSide : false			},			#name : #debugBridgeResourceClass,			#protocol : #running,			#sourceCode : 'debugBridgeResourceClass\r\r\t^ self\r\tdefaultBridgeResourceClass\r',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3390' ],		#self : OmReference [ '3391' ],		#time : DateAndTime [ '2024-03-03T08:20:54.217-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebClientAppTestCase,				#isMetaSide : false			},			#name : #defaultBridgeResourceClass,			#protocol : #accessing,			#sourceCode : 'defaultBridgeResourceClass\r\r\t^ PjWebClientAppBridgeTestResource',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3391' ],		#self : OmReference [ '3392' ],		#time : DateAndTime [ '2024-03-03T08:20:54.217-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebClientAppTestCase,				#isMetaSide : false			},			#name : #serverAppClass,			#protocol : #initialization,			#sourceCode : 'serverAppClass\r\r\t^ self appClass serverAppClass',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3392' ],		#self : OmReference [ '3393' ],		#time : DateAndTime [ '2024-03-03T08:20:54.217-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebClientAppTestCase,				#isMetaSide : false			},			#name : #urlPathString,			#protocol : #initialization,			#sourceCode : 'urlPathString\r\tself explicitRequirement ',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3393' ],		#self : OmReference [ '3394' ],		#time : DateAndTime [ '2024-03-03T08:20:54.218-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebServerApiTestCase,				#isMetaSide : false			},			#name : #'get:',			#protocol : #tests,			#sourceCode : 'get: pathString\r\r\t^ ZnEasy get: self rootUrlString , pathString',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3394' ],		#self : OmReference [ '3395' ],		#time : DateAndTime [ '2024-03-03T08:20:54.218-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebServerApiTestCase,				#isMetaSide : false			},			#name : #port,			#protocol : #tests,			#sourceCode : 'port\r\t^self app port',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3395' ],		#self : OmReference [ '3396' ],		#time : DateAndTime [ '2024-03-03T08:20:54.218-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebServerApiTestCase,				#isMetaSide : false			},			#name : #'post:text:',			#protocol : #tests,			#sourceCode : 'post: pathString text: aString\r\r\t^ ZnEasy\r\t\t  post: self rootUrlString , pathString\r\t\t  data: (ZnEntity text: aString)',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3396' ],		#self : OmReference [ '3397' ],		#time : DateAndTime [ '2024-03-03T08:20:54.218-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTWebServerApiTestCase,				#isMetaSide : false			},			#name : #rootUrlString,			#protocol : #tests,			#sourceCode : 'rootUrlString\r\r\t^rootUrlString ifNil: [rootUrlString := \'http://localhost:\' , self port asString]',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3397' ],		#self : OmReference [ '3398' ],		#time : DateAndTime [ '2024-03-03T08:20:54.218-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCaseTest,				#isMetaSide : false			},			#name : #'assertHasArrayAPI:',			#protocol : #assertions,			#sourceCode : 'assertHasArrayAPI: jsArrayLikeClass\r\tself assert: (jsArrayLikeClass prototype js_hasOwnProperty: \'_first\')',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3398' ],		#self : OmReference [ '3399' ],		#time : DateAndTime [ '2024-03-03T08:20:54.219-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCaseTest,				#isMetaSide : false			},			#name : #resetBridgeTestResources,			#protocol : #private,			#sourceCode : 'resetBridgeTestResources\r\t{PjBridgeTestResource. PjDebugBridgeTestResource} do: [ : resourceClass |\r\t\tresourceClass reset.\r\t\tresourceClass allInstancesDo: [: subInstance | subInstance tearDown]\r\t]',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3399' ],		#self : OmReference [ '3400' ],		#time : DateAndTime [ '2024-03-03T08:20:54.219-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCaseTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\tself resetBridgeTestResources',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3400' ],		#self : OmReference [ '3401' ],		#time : DateAndTime [ '2024-03-03T08:20:54.219-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCaseTest,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #running,			#sourceCode : 'tearDown\r\tsuper tearDown.\r\tself resetBridgeTestResources',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3401' ],		#self : OmReference [ '3402' ],		#time : DateAndTime [ '2024-03-03T08:20:54.22-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCaseTest,				#isMetaSide : false			},			#name : #testDebug,			#protocol : #tests,			#sourceCode : 'testDebug\r\t| suite |\r\t3 timesRepeat: [\r\t\tsuite := PjMinimalFileBasedWebAppTest buildSuite.\r\t\tsuite debug.\r\t\tsuite tests do: [: test | self assert: test bridgeResourceClass == PjDebugBridgeTestResource].\r\t\tself assert: PjDebugBridgeTestResource current bridge isNil.\r\t\tself assert: PjBridgeTestResource current bridge isNil.\r\t].',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3402' ],		#self : OmReference [ '3403' ],		#time : DateAndTime [ '2024-03-03T08:20:54.22-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCaseTest,				#isMetaSide : false			},			#name : #testExportedCodeOfAppRunningJsSideIsComplete,			#protocol : #tests,			#sourceCode : 'testExportedCodeOfAppRunningJsSideIsComplete\r\t| remoteAppClass bridge jsMessage |\r\tPjBridgeTestResource availableFor: PjNonMinmialAppRunningOnJsTest suite tests anyOne.\r\tbridge := PjBridgeTestResource current bridge.\r\tself assert: PjNonMinmialAppRunningOnJsTest appClass == PjHtmlGeneratingCounterApp.\r\tjsMessage := PjJavascriptMessage receiverId: #Smalltalk selector: #at: arguments: {PjNonMinmialAppRunningOnJsTest appClass name}.\r\tremoteAppClass := bridge evalMessage: jsMessage.\r\tself deny: remoteAppClass isNil.\r\tself deny: remoteAppClass currentInstance isNil',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3403' ],		#self : OmReference [ '3404' ],		#time : DateAndTime [ '2024-03-03T08:20:54.22-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCaseTest,				#isMetaSide : false			},			#name : #testExportedCodeOfAppRunningPharoSideIsMinimal,			#protocol : #tests,			#sourceCode : 'testExportedCodeOfAppRunningPharoSideIsMinimal\r\t| bridge jsMessage jsSystemDict |\r\tPjBridgeTestResource\r\t\tavailableFor: PjNonMinmialAppRunningOnPharoTest suite tests anyOne.\r\tbridge := PjBridgeTestResource current bridge.\r\tself assert: PjNonMinmialAppRunningOnPharoTest appClass equals: PjHtmlGeneratingCounterApp.\r\tjsMessage := PjJavascriptMessage\r\t\treceiverId: #Smalltalk\r\t\tselector: #yourself\r\t\targuments: #().\r\tjsSystemDict := bridge evalMessage: jsMessage.\r\tself\r\t\tassert: (jsSystemDict at: PjNonMinmialAppRunningOnJsTest appClass name) isNil.\r\t#(Array NodeList HTMLCollection)\r\t\tdo: [ :jsArrayLikeClassName | \r\t\t\t| jsArrayLikeClass |\r\t\t\tjsArrayLikeClass := jsSystemDict at: jsArrayLikeClassName.\r\t\t\tself assertHasArrayAPI: jsArrayLikeClass ]',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3404' ],		#self : OmReference [ '3405' ],		#time : DateAndTime [ '2024-03-03T08:20:54.22-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCaseTest,				#isMetaSide : false			},			#name : #testPlainRun,			#protocol : #tests,			#sourceCode : 'testPlainRun\r\t| result suite |\r\t3 timesRepeat: [\r\t\tsuite := PjMinimalFileBasedWebAppTest buildSuite.\r\t\tresult := suite run.\r\t\tself assert: result hasPassed.\r\t\tsuite tests do: [: test | self assert: test bridgeResourceClass == PjBridgeTestResource].\r\t\tself assert: PjDebugBridgeTestResource current bridge isNil.\r\t\tself assert: PjBridgeTestResource current bridge isNil.\r\t]',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3405' ],		#self : OmReference [ '3406' ],		#time : DateAndTime [ '2024-03-03T08:20:54.22-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestCase,				#isMetaSide : false			},			#name : #asTestSuite,			#protocol : #'*PharoJs-TestFramework',			#sourceCode : 'asTestSuite\r\t^(self suiteClass named: self name asString)\r\t\t\t\taddTest: self;\r\t\t\t\tyourself',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3406' ],		#self : OmReference [ '3407' ],		#time : DateAndTime [ '2024-03-03T08:20:54.221-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestCase,				#isMetaSide : false			},			#name : #shallowCopy,			#protocol : #'*PharoJs-TestFramework',			#sourceCode : 'shallowCopy\r\t^ self class selector: testSelector',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3407' ],		#self : OmReference [ '3408' ],		#time : DateAndTime [ '2024-03-03T08:20:54.221-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestCase,				#isMetaSide : false			},			#name : #suiteClass,			#protocol : #'*PharoJs-TestFramework',			#sourceCode : 'suiteClass\r\t^self class suiteClass.',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3408' ],		#self : OmReference [ '3409' ],		#time : DateAndTime [ '2024-03-03T08:20:54.221-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAppTestCase class',				#isMetaSide : true			},			#name : #appClass,			#protocol : #'suite parameters',			#sourceCode : 'appClass\r\t^self subclassResponsibility',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3409' ],		#self : OmReference [ '3410' ],		#time : DateAndTime [ '2024-03-03T08:20:54.221-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAppTestCase class',				#isMetaSide : true			},			#name : #isAbstract,			#protocol : #testing,			#sourceCode : 'isAbstract\r\t^self == PjAppTestCase or: [\r\t\t#(currentApp appClassToExport) anySatisfy: [: selector |\r\t\t\t(self canUnderstand: selector) not] ].',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3410' ],		#self : OmReference [ '3411' ],		#time : DateAndTime [ '2024-03-03T08:20:54.221-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCase,				#isMetaSide : false			},			#name : #app,			#protocol : #accessing,			#sourceCode : 'app\r\t^app',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3411' ],		#self : OmReference [ '3412' ],		#time : DateAndTime [ '2024-03-03T08:20:54.222-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCase,				#isMetaSide : false			},			#name : #appClass,			#protocol : #accessing,			#sourceCode : 'appClass\r\t^self class appClass',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3412' ],		#self : OmReference [ '3413' ],		#time : DateAndTime [ '2024-03-03T08:20:54.222-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCase,				#isMetaSide : false			},			#name : #'assert:evaluatesTo:',			#protocol : #testing,			#sourceCode : 'assert: aBlock evaluatesTo: expectedResult\r\t| actualResult |\r\tactualResult := self evalBlock: aBlock.\r\tself assert: actualResult equals: expectedResult.',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3413' ],		#self : OmReference [ '3414' ],		#time : DateAndTime [ '2024-03-03T08:20:54.222-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCase,				#isMetaSide : false			},			#name : #'assertBlock:',			#protocol : #testing,			#sourceCode : 'assertBlock: aBlock \r\tself assert: aBlock evaluatesTo: true',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3414' ],		#self : OmReference [ '3415' ],		#time : DateAndTime [ '2024-03-03T08:20:54.222-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCase,				#isMetaSide : false			},			#name : #'assertSmalltalk:resultsInto:',			#protocol : #testing,			#sourceCode : 'assertSmalltalk: smalltalkExpressionString resultsInto: expected\r\t| actual | \r\tactual := self eval: smalltalkExpressionString.\r\tself assert: actual equals: expected.',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3415' ],		#self : OmReference [ '3416' ],		#time : DateAndTime [ '2024-03-03T08:20:54.222-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCase,				#isMetaSide : false			},			#name : #bridge,			#protocol : #accessing,			#sourceCode : 'bridge\r\t^self bridgeResource bridge',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3416' ],		#self : OmReference [ '3417' ],		#time : DateAndTime [ '2024-03-03T08:20:54.222-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCase,				#isMetaSide : false			},			#name : #bridgeResource,			#protocol : #accessing,			#sourceCode : 'bridgeResource\r\t^ self bridgeResourceClass current',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3417' ],		#self : OmReference [ '3418' ],		#time : DateAndTime [ '2024-03-03T08:20:54.223-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCase,				#isMetaSide : false			},			#name : #bridgeResourceClass,			#protocol : #accessing,			#sourceCode : 'bridgeResourceClass\r\t^bridgeResourceClass ifNil: [ self defaultBridgeResourceClass ]',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3418' ],		#self : OmReference [ '3419' ],		#time : DateAndTime [ '2024-03-03T08:20:54.223-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCase,				#isMetaSide : false			},			#name : #cleanUpInstanceVariables,			#protocol : #private,			#sourceCode : 'cleanUpInstanceVariables\r\t| ivsToReset |\r\tivsToReset := self class allInstVarNames copyWithoutAll: #(testSelector bridgeResourceClass).\r\tivsToReset do: [ :name |\r\t\tself instVarNamed: name put: nil ]',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3419' ],		#self : OmReference [ '3420' ],		#time : DateAndTime [ '2024-03-03T08:20:54.223-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCase,				#isMetaSide : false			},			#name : #debug,			#protocol : #running,			#sourceCode : 'debug\r\tbridgeResourceClass := self debugBridgeResourceClass.\r\t^super debug',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3420' ],		#self : OmReference [ '3421' ],		#time : DateAndTime [ '2024-03-03T08:20:54.223-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCase,				#isMetaSide : false			},			#name : #debugBridgeResourceClass,			#protocol : #running,			#sourceCode : 'debugBridgeResourceClass\r\t^PjDebugBridgeTestResource',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3421' ],		#self : OmReference [ '3422' ],		#time : DateAndTime [ '2024-03-03T08:20:54.223-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCase,				#isMetaSide : false			},			#name : #defaultBridgeResourceClass,			#protocol : #accessing,			#sourceCode : 'defaultBridgeResourceClass\r\t^PjBridgeTestResource',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3422' ],		#self : OmReference [ '3423' ],		#time : DateAndTime [ '2024-03-03T08:20:54.223-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCase,				#isMetaSide : false			},			#name : #'evalBlock:',			#protocol : #testing,			#sourceCode : 'evalBlock: aBlock\r\t^self bridge evalBlock: aBlock',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3423' ],		#self : OmReference [ '3424' ],		#time : DateAndTime [ '2024-03-03T08:20:54.223-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCase,				#isMetaSide : false			},			#name : #resetApp,			#protocol : #testing,			#sourceCode : 'resetApp\r\tself bridge resetClient.\r\tself resetInstanceVariables',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3424' ],		#self : OmReference [ '3425' ],		#time : DateAndTime [ '2024-03-03T08:20:54.223-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCase,				#isMetaSide : false			},			#name : #resetInstanceVariables,			#protocol : #testing,			#sourceCode : 'resetInstanceVariables\r\tapp := self currentApp.',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3425' ],		#self : OmReference [ '3426' ],		#time : DateAndTime [ '2024-03-03T08:20:54.224-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCase,				#isMetaSide : false			},			#name : #resources,			#protocol : #accessing,			#sourceCode : 'resources\r\t^super resources, {self bridgeResourceClass}',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3426' ],		#self : OmReference [ '3427' ],		#time : DateAndTime [ '2024-03-03T08:20:54.224-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCase,				#isMetaSide : false			},			#name : #'runCaseAsFailure:',			#protocol : #running,			#sourceCode : 'runCaseAsFailure: aSemaphore\r\t"Used for debug purpose. See TestCase>>#debugAsFailure"\r\tbridgeResourceClass := self debugBridgeResourceClass.\r\tsuper runCaseAsFailure: aSemaphore',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3427' ],		#self : OmReference [ '3428' ],		#time : DateAndTime [ '2024-03-03T08:20:54.224-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCase,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\r\tsuper setUp.\r\tself waitWhile: [ self currentApp isNil ] timeOut: self timeOutForAppStartUp.\r\tself resetInstanceVariables.\r',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3428' ],		#self : OmReference [ '3429' ],		#time : DateAndTime [ '2024-03-03T08:20:54.224-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCase,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #running,			#sourceCode : 'tearDown\r\tsuper tearDown.\r\tself appClass resetCurrentInstance.\r\tself bridge resetProxiesImmediately.\r\t"bridgeResourceClass := nil"',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3429' ],		#self : OmReference [ '3430' ],		#time : DateAndTime [ '2024-03-03T08:20:54.224-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppTestCase,				#isMetaSide : false			},			#name : #timeOutForAppStartUp,			#protocol : #testing,			#sourceCode : 'timeOutForAppStartUp\r\t^ 20 seconds',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3430' ],		#self : OmReference [ '3431' ],		#time : DateAndTime [ '2024-03-03T08:20:54.224-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjMinimalFileBasedWebAppTest class',				#isMetaSide : true			},			#name : #appClass,			#protocol : #'suite parameters',			#sourceCode : 'appClass\r\t^PjMinimalFileBasedWebApp.',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3431' ],		#self : OmReference [ '3432' ],		#time : DateAndTime [ '2024-03-03T08:20:54.225-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMinimalFileBasedWebAppTest,				#isMetaSide : false			},			#name : #testAppReady,			#protocol : #tests,			#sourceCode : 'testAppReady\r\tself assert: [1+2] evaluatesTo: 3',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3432' ],		#self : OmReference [ '3433' ],		#time : DateAndTime [ '2024-03-03T08:20:54.225-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMinimalFileBasedWebAppTest,				#isMetaSide : false			},			#name : #testCounter,			#protocol : #tests,			#sourceCode : 'testCounter\r\t| jsCounter |\r\tjsCounter := self evalBlock: [PjCounter new].\r\t3 timesRepeat: [jsCounter increment].\r\tself assert: jsCounter count equals: 3',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3433' ],		#self : OmReference [ '3434' ],		#time : DateAndTime [ '2024-03-03T08:20:54.225-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMinimalFileBasedWebAppTest,				#isMetaSide : false			},			#name : #testCounterWithEvent,			#protocol : #tests,			#sourceCode : 'testCounterWithEvent\r\t| counter button |\r\tcounter := PjCounter new.\r\tbutton := document createElement: \'button\'.\r\tbutton textContent: \'increment\'.\r\tbutton addEventListener: #click block: [ counter increment ].\r\t3 timesRepeat: [button click].\r\tself assert: counter count equals: 3',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3434' ],		#self : OmReference [ '3435' ],		#time : DateAndTime [ '2024-03-03T08:20:54.225-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMinimalFileBasedWebAppTest,				#isMetaSide : false			},			#name : #testCounterWithSerialization,			#protocol : #tests,			#sourceCode : 'testCounterWithSerialization\r\t| counter serializedCounter jsCounter |\r\tcounter := PjCounter new.\r\t3 timesRepeat: [counter increment].\r\tserializedCounter := counter asPhxJsonString.\r\tself bridge loadClass: PjCounter.\r\tjsCounter := self evalBlock: [PhxJsonReader readFromString: serializedCounter].\r\t3 timesRepeat: [jsCounter increment].\r\tself assert: counter count equals: 3.\r\tself assert: jsCounter count equals: 6',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3435' ],		#self : OmReference [ '3436' ],		#time : DateAndTime [ '2024-03-03T08:20:54.225-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMinimalFileBasedWebAppTest,				#isMetaSide : false			},			#name : #testResetApp,			#protocol : #tests,			#sourceCode : 'testResetApp\r\tself evalBlock: [window instVarNamed:#forTest put: 3].\r\tself assert: [window instVarNamed:#forTest] evaluatesTo: 3.\r\tself resetApp.\r\tself assert: [window instVarNamed:#forTest] evaluatesTo: nil.',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3436' ],		#self : OmReference [ '3437' ],		#time : DateAndTime [ '2024-03-03T08:20:54.225-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNonMinmialAppRunningOnPharoTest class',				#isMetaSide : true			},			#name : #appClass,			#protocol : #'suite parameters',			#sourceCode : 'appClass\r\t^PjHtmlGeneratingCounterApp',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3437' ],		#self : OmReference [ '3438' ],		#time : DateAndTime [ '2024-03-03T08:20:54.225-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNonMinmialAppRunningOnPharoTest,				#isMetaSide : false			},			#name : #testAlwaysSucceed,			#protocol : #testing,			#sourceCode : 'testAlwaysSucceed\r\tself assert: true',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3438' ],		#self : OmReference [ '3439' ],		#time : DateAndTime [ '2024-03-03T08:20:54.226-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebAppTestCase,				#isMetaSide : false			},			#name : #document,			#protocol : #accessing,			#sourceCode : 'document \t\r\t^document',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3439' ],		#self : OmReference [ '3440' ],		#time : DateAndTime [ '2024-03-03T08:20:54.226-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridgeTestResource class',				#isMetaSide : true			},			#name : #'appClassToExportFor:',			#protocol : #running,			#sourceCode : 'appClassToExportFor: aTestAsserter\r\t^aTestAsserter appClassToExport ',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3440' ],		#self : OmReference [ '3441' ],		#time : DateAndTime [ '2024-03-03T08:20:54.226-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridgeTestResource class',				#isMetaSide : true			},			#name : #'availableFor:',			#protocol : #running,			#sourceCode : 'availableFor: aTestAsserter\r\r\tsuper availableFor: aTestAsserter.\r\tself ensureAppClassFor: aTestAsserter.\r\tself current ensureFreshClient',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3441' ],		#self : OmReference [ '3442' ],		#time : DateAndTime [ '2024-03-03T08:20:54.226-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridgeTestResource class',				#isMetaSide : true			},			#name : #'ensureAppClassFor:',			#protocol : #running,			#sourceCode : 'ensureAppClassFor: aTestAsserter\r\r\tself current appClass == aTestAsserter appClassToExport ifTrue: [ \r\t\t^ self ].\r\tcurrent := self new.\r\tcurrent initFrom: aTestAsserter',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3442' ],		#self : OmReference [ '3443' ],		#time : DateAndTime [ '2024-03-03T08:20:54.226-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridgeTestResource class',				#isMetaSide : true			},			#name : #isClientBrowserOpenedInBackground,			#protocol : #accessing,			#sourceCode : 'isClientBrowserOpenedInBackground\r\t^OpenWebBrowserInBackground ifNil: [ false ]',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3443' ],		#self : OmReference [ '3444' ],		#time : DateAndTime [ '2024-03-03T08:20:54.226-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridgeTestResource class',				#isMetaSide : true			},			#name : #'isClientBrowserOpenedInBackground:',			#protocol : #accessing,			#sourceCode : 'isClientBrowserOpenedInBackground: aBoolean\r\t^OpenWebBrowserInBackground := aBoolean ',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3444' ],		#self : OmReference [ '3445' ],		#time : DateAndTime [ '2024-03-03T08:20:54.226-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridgeTestResource class',				#isMetaSide : true			},			#name : #setWebBrowserOpenedInBackground,			#protocol : #accessing,			#sourceCode : 'setWebBrowserOpenedInBackground\r\r\t<script>\r\tself isClientBrowserOpenedInBackground: true',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3445' ],		#self : OmReference [ '3446' ],		#time : DateAndTime [ '2024-03-03T08:20:54.226-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridgeTestResource class',				#isMetaSide : true			},			#name : #setWebBrowserOpenedInForeground,			#protocol : #accessing,			#sourceCode : 'setWebBrowserOpenedInForeground\r\r\t<script>\r\tself isClientBrowserOpenedInBackground: false',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3446' ],		#self : OmReference [ '3447' ],		#time : DateAndTime [ '2024-03-03T08:20:54.226-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestResource,				#isMetaSide : false			},			#name : #appClass,			#protocol : #accessing,			#sourceCode : 'appClass\r\t^appClass',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3447' ],		#self : OmReference [ '3448' ],		#time : DateAndTime [ '2024-03-03T08:20:54.227-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestResource,				#isMetaSide : false			},			#name : #bridge,			#protocol : #accessing,			#sourceCode : 'bridge\r\t^ bridge',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3448' ],		#self : OmReference [ '3449' ],		#time : DateAndTime [ '2024-03-03T08:20:54.227-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestResource,				#isMetaSide : false			},			#name : #'bridge:',			#protocol : #accessing,			#sourceCode : 'bridge: aBridge\r\tbridge := aBridge.',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3449' ],		#self : OmReference [ '3450' ],		#time : DateAndTime [ '2024-03-03T08:20:54.227-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestResource,				#isMetaSide : false			},			#name : #bridgeForAppClass,			#protocol : #accessing,			#sourceCode : 'bridgeForAppClass\r\r\t^ appClass bridge',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3450' ],		#self : OmReference [ '3451' ],		#time : DateAndTime [ '2024-03-03T08:20:54.227-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestResource,				#isMetaSide : false			},			#name : #ensureFreshClient,			#protocol : #running,			#sourceCode : 'ensureFreshClient\r\r\tself bridge isConnected ifTrue: [ ^ self resetClient ].\r\tself startJsInterpreter',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3451' ],		#self : OmReference [ '3452' ],		#time : DateAndTime [ '2024-03-03T08:20:54.227-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestResource,				#isMetaSide : false			},			#name : #initBridge,			#protocol : #initialization,			#sourceCode : 'initBridge\r\r\tself bridge: self bridgeForAppClass.\r\tPjBridge soleBridge: self bridge',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3452' ],		#self : OmReference [ '3453' ],		#time : DateAndTime [ '2024-03-03T08:20:54.228-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestResource,				#isMetaSide : false			},			#name : #'initFrom:',			#protocol : #initialization,			#sourceCode : 'initFrom: aTestAsserter\r\r\tappClass := aTestAsserter appClassToExport.\r\tappClass resetAppFolder.\r\tself initBridge.\r\tself bridge shouldStartJsInterpreter: false.\r\tself setUpClient.\r\tself startBridge: \r\t\tself bridge ',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3453' ],		#self : OmReference [ '3454' ],		#time : DateAndTime [ '2024-03-03T08:20:54.228-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestResource,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself description: \'I manage a bridge dedicated to testing a PharoJS app\'.\r\tself name: \'PharoJS Bridge TestResource\'.',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3454' ],		#self : OmReference [ '3455' ],		#time : DateAndTime [ '2024-03-03T08:20:54.228-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestResource,				#isMetaSide : false			},			#name : #isClientBrowserOpenedInBackground,			#protocol : #running,			#sourceCode : 'isClientBrowserOpenedInBackground\r\t^self class isClientBrowserOpenedInBackground',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3455' ],		#self : OmReference [ '3456' ],		#time : DateAndTime [ '2024-03-03T08:20:54.228-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestResource,				#isMetaSide : false			},			#name : #resetClient,			#protocol : #running,			#sourceCode : 'resetClient\r\tself bridge resetClient',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3456' ],		#self : OmReference [ '3457' ],		#time : DateAndTime [ '2024-03-03T08:20:54.228-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestResource,				#isMetaSide : false			},			#name : #setUpClient,			#protocol : #running,			#sourceCode : 'setUpClient\r\t^self bridge client openBrowserInBackground: self isClientBrowserOpenedInBackground',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3457' ],		#self : OmReference [ '3458' ],		#time : DateAndTime [ '2024-03-03T08:20:54.228-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestResource,				#isMetaSide : false			},			#name : #'startBridge:',			#protocol : #running,			#sourceCode : 'startBridge: aBridge\r\r\t"Avoid bridge resource process being killed by test runner.\r\tSo, we force DefaultExecutionEnvironment  instead of the implicit TestExecutionEnvironment "\r\r\tDefaultExecutionEnvironment beActiveDuring: [ \r\t\taBridge startWithoutWaitingForClient ]',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3458' ],		#self : OmReference [ '3459' ],		#time : DateAndTime [ '2024-03-03T08:20:54.228-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestResource,				#isMetaSide : false			},			#name : #startJsInterpreter,			#protocol : #running,			#sourceCode : 'startJsInterpreter\r\tself bridge startJsInterpreter\r\t',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3459' ],		#self : OmReference [ '3460' ],		#time : DateAndTime [ '2024-03-03T08:20:54.228-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestResource,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #running,			#sourceCode : 'tearDown\r\tsuper tearDown.\r\tself bridge\r\t\tifNotNil: [ self bridge tearDown.\r\t\t\tPjBridge soleBridge: nil ].\r\tSmalltalk garbageCollect',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3460' ],		#self : OmReference [ '3461' ],		#time : DateAndTime [ '2024-03-03T08:20:54.228-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDebugBridgeTestResource,				#isMetaSide : false			},			#name : #ensureFreshClient,			#protocol : #running,			#sourceCode : 'ensureFreshClient\r\r\tself startJsInterpreter',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3461' ],		#self : OmReference [ '3462' ],		#time : DateAndTime [ '2024-03-03T08:20:54.228-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDebugBridgeTestResource,				#isMetaSide : false			},			#name : #resetClient,			#protocol : #running,			#sourceCode : 'resetClient\r\tself bridge resetClient',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3462' ],		#self : OmReference [ '3463' ],		#time : DateAndTime [ '2024-03-03T08:20:54.229-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDebugBridgeTestResource,				#isMetaSide : false			},			#name : #setUpClient,			#protocol : #running,			#sourceCode : 'setUpClient\r\tsuper setUpClient.\r\tself bridge enableClientLogging',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3463' ],		#self : OmReference [ '3464' ],		#time : DateAndTime [ '2024-03-03T08:20:54.229-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebClientAppBridgeTestResource,				#isMetaSide : false			},			#name : #bridgeForAppClass,			#protocol : #accessing,			#sourceCode : 'bridgeForAppClass\r\t| bridgeClient |\r\tbridgeClient := PjWebServedBridgeClient \r\t\t                      newWithAppClass: self appClass.\r\t^PjBridge\r\t\t                bridgeForAppClass: self appClass\r\t\t                client: bridgeClient.\r\t',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3464' ],		#self : OmReference [ '3465' ],		#time : DateAndTime [ '2024-03-03T08:20:54.229-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebClientAppBridgeTestResource,				#isMetaSide : false			},			#name : #initBridgeClientUrl,			#protocol : #initialization,			#sourceCode : 'initBridgeClientUrl\r\r\t| serverApp serverPort |\r\tserverApp := serverBridge\r\t\t             evalSelector: #currentInstance\r\t\t             sentTo: serverClassName.\r\tserverPort := serverApp port.\r\tself bridge client urlString:\r\t\t\'http://127.0.0.1:\' , serverPort asString , urlPathString',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3465' ],		#self : OmReference [ '3466' ],		#time : DateAndTime [ '2024-03-03T08:20:54.229-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebClientAppBridgeTestResource,				#isMetaSide : false			},			#name : #'initFrom:',			#protocol : #initialization,			#sourceCode : 'initFrom: aTestAsserter\r\r\tserverBridge := aTestAsserter serverAppClass bridge.\r\tserverClassName := aTestAsserter serverAppClass name.\r\turlPathString := aTestAsserter urlPathString.\r\tserverBridge shouldStartJsInterpreter: false.\r\tself startBridge: serverBridge.\r\tsuper initFrom: aTestAsserter',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3466' ],		#self : OmReference [ '3467' ],		#time : DateAndTime [ '2024-03-03T08:20:54.229-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebClientAppBridgeTestResource,				#isMetaSide : false			},			#name : #resetClient,			#protocol : #running,			#sourceCode : 'resetClient\r\r\tsuper resetClient.\r\tserverBridge resetClient.\r',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3467' ],		#self : OmReference [ '3468' ],		#time : DateAndTime [ '2024-03-03T08:20:54.229-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebClientAppBridgeTestResource,				#isMetaSide : false			},			#name : #startJsInterpreter,			#protocol : #running,			#sourceCode : 'startJsInterpreter\r\r\tserverBridge startJsInterpreter.\r\tself initBridgeClientUrl.\r\tsuper startJsInterpreter',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3468' ],		#self : OmReference [ '3469' ],		#time : DateAndTime [ '2024-03-03T08:20:54.229-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjWebClientAppBridgeTestResource,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #running,			#sourceCode : 'tearDown\r\tserverBridge stop.\r\tsuper tearDown.\r\t',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3469' ],		#self : OmReference [ '3470' ],		#time : DateAndTime [ '2024-03-03T08:20:54.229-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAppWrapperForRunningInPharo class',				#isMetaSide : true			},			#name : #appClass,			#protocol : #description,			#sourceCode : 'appClass\r\t<pharoJsSkip>\r\t^self',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3470' ],		#self : OmReference [ '3471' ],		#time : DateAndTime [ '2024-03-03T08:20:54.229-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAppWrapperForRunningInPharo class',				#isMetaSide : true			},			#name : #appClasses,			#protocol : #description,			#sourceCode : 'appClasses\r\t<pharoJsSkip>\r\t^currentAppClass appClasses copyWithout: currentAppClass.',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3471' ],		#self : OmReference [ '3472' ],		#time : DateAndTime [ '2024-03-03T08:20:54.229-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAppWrapperForRunningInPharo class',				#isMetaSide : true			},			#name : #appLaunchBlock,			#protocol : #description,			#sourceCode : 'appLaunchBlock\r\t<pharoJsSkip>\r\t^[]',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3472' ],		#self : OmReference [ '3473' ],		#time : DateAndTime [ '2024-03-03T08:20:54.23-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAppWrapperForRunningInPharo class',				#isMetaSide : true			},			#name : #appPackages,			#protocol : #description,			#sourceCode : 'appPackages\r\t<pharoJsSkip>\r\t^#()',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3473' ],		#self : OmReference [ '3474' ],		#time : DateAndTime [ '2024-03-03T08:20:54.23-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAppWrapperForRunningInPharo class',				#isMetaSide : true			},			#name : #bridge,			#protocol : #'bridge handling',			#sourceCode : 'bridge\r\t<pharoJsSkip>\r\t^ PjBridge bridgeForAppClass: self',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3474' ],		#self : OmReference [ '3475' ],		#time : DateAndTime [ '2024-03-03T08:20:54.23-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAppWrapperForRunningInPharo class',				#isMetaSide : true			},			#name : #'doesNotUnderstand:',			#protocol : #'reflective operations',			#sourceCode : 'doesNotUnderstand: aMessage\r\t<pharoJsSkip>\r\t^aMessage sendTo: currentAppClass',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3475' ],		#self : OmReference [ '3476' ],		#time : DateAndTime [ '2024-03-03T08:20:54.23-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAppWrapperForRunningInPharo class',				#isMetaSide : true			},			#name : #newBridgeClient,			#protocol : #'bridge handling',			#sourceCode : 'newBridgeClient\r\t<pharoJsSkip>\r\t^self bridgeClientClass newWithAppClass: self',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3476' ],		#self : OmReference [ '3477' ],		#time : DateAndTime [ '2024-03-03T08:20:54.23-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAppWrapperForRunningInPharo class',				#isMetaSide : true			},			#name : #'on:',			#protocol : #'initialize - release',			#sourceCode : 'on: appClass\r\t<pharoJsSkip>\r\tcurrentAppClass := appClass',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3477' ],		#self : OmReference [ '3478' ],		#time : DateAndTime [ '2024-03-03T08:20:54.23-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAppWrapperForRunningInPharo class',				#isMetaSide : true			},			#name : #start,			#protocol : #start-stop,			#sourceCode : 'start\r\t^self',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3478' ],		#self : OmReference [ '3479' ],		#time : DateAndTime [ '2024-03-03T08:20:54.23-05:00' ],		#trigger : OmReference [ '3339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAppWrapperForRunningInPharo class',				#isMetaSide : true			},			#name : #stop,			#protocol : #start-stop,			#sourceCode : 'stop\r\t^self',			#stamp : '',			#package : #PharoJs-TestFramework		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:54.443-05:00' ],		#prior : OmReference [ '3479' ],		#self : OmReference [ '3480' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-Base-Bridge-Tests-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3480' ],		#self : OmReference [ '3481' ],		#time : DateAndTime [ '2024-03-03T08:20:54.474-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Bridge-Tests-Support,		#affectedPackageName : #PharoJs-Base-Bridge-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3481' ],		#self : OmReference [ '3482' ],		#time : DateAndTime [ '2024-03-03T08:20:54.476-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjASuperClass\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjASuperClass,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjASuperClass class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjASuperClass class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjASuperClass,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Support,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3482' ],		#self : OmReference [ '3483' ],		#time : DateAndTime [ '2024-03-03T08:20:54.48-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjASuperClass subclass: #PjBSubClassOfA\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Support\'',				#superclassName : 'PjASuperClass',				#traitCompositionSource : '{}'			},			#name : #PjBSubClassOfA,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBSubClassOfA class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBSubClassOfA class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBSubClassOfA,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Support,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3483' ],		#self : OmReference [ '3484' ],		#time : DateAndTime [ '2024-03-03T08:20:54.482-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjASuperClass subclass: #PjCSubClassOfA\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Support\'',				#superclassName : 'PjASuperClass',				#traitCompositionSource : '{}'			},			#name : #PjCSubClassOfA,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjCSubClassOfA class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjCSubClassOfA class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjCSubClassOfA,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Support,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3484' ],		#self : OmReference [ '3485' ],		#time : DateAndTime [ '2024-03-03T08:20:54.483-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjArrayClassExtensionForTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjArrayClassExtensionForTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjArrayClassExtensionForTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjArrayClassExtensionForTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjArrayClassExtensionForTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Support,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3485' ],		#self : OmReference [ '3486' ],		#time : DateAndTime [ '2024-03-03T08:20:54.487-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjEmptyClassExtensionOfASuperClass\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjEmptyClassExtensionOfASuperClass,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjEmptyClassExtensionOfASuperClass class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjEmptyClassExtensionOfASuperClass class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjEmptyClassExtensionOfASuperClass,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Support,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3486' ],		#self : OmReference [ '3487' ],		#time : DateAndTime [ '2024-03-03T08:20:54.489-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjExtensionOfBSubClassOfA\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjExtensionOfBSubClassOfA,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjExtensionOfBSubClassOfA class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjExtensionOfBSubClassOfA class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjExtensionOfBSubClassOfA,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Support,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3487' ],		#self : OmReference [ '3488' ],		#time : DateAndTime [ '2024-03-03T08:20:54.491-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjLoadForTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'X Y Z\'\r\tpoolDictionaries: \'PjUniversalGlobals\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjLoadForTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjLoadForTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjLoadForTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjLoadForTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjLoadForTest,						#isMetaSide : false					},					#name : #X,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjLoadForTest,						#isMetaSide : false					},					#name : #Y,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjLoadForTest,						#isMetaSide : false					},					#name : #Z,					#parent : @8				}			],			#category : #PharoJs-Base-Bridge-Tests-Support,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjLoadForTest,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3488' ],		#self : OmReference [ '3489' ],		#time : DateAndTime [ '2024-03-03T08:20:54.492-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjLoadForTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'X Y Z\'\r\tpoolDictionaries: \'PjUniversalGlobals\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjLoadForTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjLoadForTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjLoadForTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjLoadForTest,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a small, non-app class used in some interactive, manual, tests',				#stamp : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjLoadForTest,						#isMetaSide : false					},					#name : #X,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjLoadForTest,						#isMetaSide : false					},					#name : #Y,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjLoadForTest,						#isMetaSide : false					},					#name : #Z,					#parent : @8				}			],			#category : #PharoJs-Base-Bridge-Tests-Support,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjLoadForTest,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'I am a small, non-app class used in some interactive, manual, tests',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3489' ],		#self : OmReference [ '3490' ],		#time : DateAndTime [ '2024-03-03T08:20:54.494-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedWebApp subclass: #PjAppWithFolderNameIncludesSpace\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Support\'',				#superclassName : 'PjFileBasedWebApp',				#traitCompositionSource : '{}'			},			#name : #PjAppWithFolderNameIncludesSpace,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAppWithFolderNameIncludesSpace class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAppWithFolderNameIncludesSpace class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAppWithFolderNameIncludesSpace,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Support,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3490' ],		#self : OmReference [ '3491' ],		#time : DateAndTime [ '2024-03-03T08:20:54.496-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Bridge-Tests-Manifest,		#affectedPackageName : #PharoJs-Base-Bridge-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3491' ],		#self : OmReference [ '3492' ],		#time : DateAndTime [ '2024-03-03T08:20:54.497-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PackageManifest subclass: #ManifestPharoJsBaseBridgeTests\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Manifest\'',				#superclassName : 'PackageManifest',				#traitCompositionSource : '{}'			},			#name : #ManifestPharoJsBaseBridgeTests,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ManifestPharoJsBaseBridgeTests class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ManifestPharoJsBaseBridgeTests class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestPharoJsBaseBridgeTests,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Manifest,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3492' ],		#self : OmReference [ '3493' ],		#time : DateAndTime [ '2024-03-03T08:20:54.498-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PackageManifest subclass: #ManifestPharoJsBaseBridgeTests\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Manifest\'',				#superclassName : 'PackageManifest',				#traitCompositionSource : '{}'			},			#name : #ManifestPharoJsBaseBridgeTests,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ManifestPharoJsBaseBridgeTests class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ManifestPharoJsBaseBridgeTests class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestPharoJsBaseBridgeTests,					#isMetaSide : false				},				#parent : @8,				#content : 'I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Manifest,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3493' ],		#self : OmReference [ '3494' ],		#time : DateAndTime [ '2024-03-03T08:20:54.5-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridge subclass: #PjTestBridge\r\tinstanceVariableNames: \'lastJavascript\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Support\'',				#superclassName : 'PjBridge',				#traitCompositionSource : '{}'			},			#name : #PjTestBridge,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTestBridge,						#isMetaSide : false					},					#name : #lastJavascript,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTestBridge class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTestBridge class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTestBridge,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Support,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3494' ],		#self : OmReference [ '3495' ],		#time : DateAndTime [ '2024-03-03T08:20:54.501-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridge subclass: #PjTestBridge\r\tinstanceVariableNames: \'lastJavascript\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Support\'',				#superclassName : 'PjBridge',				#traitCompositionSource : '{}'			},			#name : #PjTestBridge,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTestBridge,						#isMetaSide : false					},					#name : #lastJavascript,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTestBridge class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTestBridge class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTestBridge,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a bridge that doesn\'t actually communicate.\r\rI can be used to test the incremental code generation that goes with normal bridge operations.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Support,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a bridge that doesn\'t actually communicate.\r\rI can be used to test the incremental code generation that goes with normal bridge operations.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3495' ],		#self : OmReference [ '3496' ],		#time : DateAndTime [ '2024-03-03T08:20:54.505-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Bridge-Tests-Tests,		#affectedPackageName : #PharoJs-Base-Bridge-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3496' ],		#self : OmReference [ '3497' ],		#time : DateAndTime [ '2024-03-03T08:20:54.507-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebAppTestCase subclass: #PjAppFolderNameIncludesSpaceTest\r\tuses: PjTAppRunsInJS\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Tests\'',				#superclassName : 'PjWebAppTestCase',				#traitCompositionSource : 'PjTAppRunsInJS'			},			#name : #PjAppFolderNameIncludesSpaceTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAppFolderNameIncludesSpaceTest class\r\tuses: PjTAppRunsInJS classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTAppRunsInJS classTrait'				},				#name : #'PjAppFolderNameIncludesSpaceTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAppFolderNameIncludesSpaceTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Tests,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3497' ],		#self : OmReference [ '3498' ],		#time : DateAndTime [ '2024-03-03T08:20:54.509-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjHtmlGeneratorTest\r\tinstanceVariableNames: \'generator\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PjHtmlGeneratorTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjHtmlGeneratorTest,						#isMetaSide : false					},					#name : #generator,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjHtmlGeneratorTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjHtmlGeneratorTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjHtmlGeneratorTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Tests,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3498' ],		#self : OmReference [ '3499' ],		#time : DateAndTime [ '2024-03-03T08:20:54.521-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjIncrementalJavascriptTest\r\tinstanceVariableNames: \'bridge\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PjIncrementalJavascriptTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjIncrementalJavascriptTest,						#isMetaSide : false					},					#name : #bridge,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIncrementalJavascriptTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIncrementalJavascriptTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIncrementalJavascriptTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Tests,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3499' ],		#self : OmReference [ '3500' ],		#time : DateAndTime [ '2024-03-03T08:20:54.524-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjProxyForGlobalsTest\r\tinstanceVariableNames: \'classFactory authorInitialName\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PjProxyForGlobalsTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxyForGlobalsTest,						#isMetaSide : false					},					#name : #classFactory,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxyForGlobalsTest,						#isMetaSide : false					},					#name : #authorInitialName,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjProxyForGlobalsTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjProxyForGlobalsTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjProxyForGlobalsTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Tests,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3500' ],		#self : OmReference [ '3501' ],		#time : DateAndTime [ '2024-03-03T08:20:54.526-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjSTONReaderTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PjSTONReaderTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSTONReaderTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSTONReaderTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSTONReaderTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Tests,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3501' ],		#self : OmReference [ '3502' ],		#time : DateAndTime [ '2024-03-03T08:20:54.529-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjAppTestCase subclass: #PjBridgeTestCase\r\tuses: PjTAppRunsInJS\r\tinstanceVariableNames: \'classFactory authorInitialName\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjDomGlobals PjUniversalGlobals\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Tests\'',				#superclassName : 'PjAppTestCase',				#traitCompositionSource : 'PjTAppRunsInJS'			},			#name : #PjBridgeTestCase,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeTestCase,						#isMetaSide : false					},					#name : #classFactory,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeTestCase,						#isMetaSide : false					},					#name : #authorInitialName,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBridgeTestCase class\r\tuses: PjTAppRunsInJS classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTAppRunsInJS classTrait'				},				#name : #'PjBridgeTestCase class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBridgeTestCase,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Tests,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeTestCase,						#isMetaSide : false					},					#name : #PjDomGlobals,					#parent : @8				},				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeTestCase,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3502' ],		#self : OmReference [ '3503' ],		#time : DateAndTime [ '2024-03-03T08:20:54.531-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjAppTestCase subclass: #PjBridgeTestCase\r\tuses: PjTAppRunsInJS\r\tinstanceVariableNames: \'classFactory authorInitialName\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjDomGlobals PjUniversalGlobals\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Tests\'',				#superclassName : 'PjAppTestCase',				#traitCompositionSource : 'PjTAppRunsInJS'			},			#name : #PjBridgeTestCase,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeTestCase,						#isMetaSide : false					},					#name : #classFactory,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeTestCase,						#isMetaSide : false					},					#name : #authorInitialName,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBridgeTestCase class\r\tuses: PjTAppRunsInJS classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTAppRunsInJS classTrait'				},				#name : #'PjBridgeTestCase class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBridgeTestCase,					#isMetaSide : false				},				#parent : @8,				#content : 'Start the browser with a minimal web page, then if debugging, give a version with a debugging log of the WebSocket traffic.\r\rNote that closing a web page doesn\'t work under Firefox unless you go, in the browser, to: \r\tabout:config\rand change the field\r\tdom.allow_scripts_to_close_windows\rto true.\r\rOtherwise it will create over 100 windows if you run all the tests.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Tests,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeTestCase,						#isMetaSide : false					},					#name : #PjDomGlobals,					#parent : @8				},				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBridgeTestCase,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'Start the browser with a minimal web page, then if debugging, give a version with a debugging log of the WebSocket traffic.\r\rNote that closing a web page doesn\'t work under Firefox unless you go, in the browser, to: \r\tabout:config\rand change the field\r\tdom.allow_scripts_to_close_windows\rto true.\r\rOtherwise it will create over 100 windows if you run all the tests.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3503' ],		#self : OmReference [ '3504' ],		#time : DateAndTime [ '2024-03-03T08:20:54.532-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjAliasTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Tests\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjAliasTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAliasTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAliasTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAliasTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Tests,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3504' ],		#self : OmReference [ '3505' ],		#time : DateAndTime [ '2024-03-03T08:20:54.534-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjBasicTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Tests\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjBasicTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBasicTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBasicTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBasicTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Tests,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3505' ],		#self : OmReference [ '3506' ],		#time : DateAndTime [ '2024-03-03T08:20:54.536-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjClassExtensionTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Tests\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjClassExtensionTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjClassExtensionTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjClassExtensionTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjClassExtensionTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Tests,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3506' ],		#self : OmReference [ '3507' ],		#time : DateAndTime [ '2024-03-03T08:20:54.538-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjInfrastructureTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Tests\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjInfrastructureTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjInfrastructureTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjInfrastructureTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjInfrastructureTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Tests,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3507' ],		#self : OmReference [ '3508' ],		#time : DateAndTime [ '2024-03-03T08:20:54.54-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjLoadingTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjBrowserGlobals\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Tests\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjLoadingTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjLoadingTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjLoadingTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjLoadingTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Tests,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjLoadingTest,						#isMetaSide : false					},					#name : #PjBrowserGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3508' ],		#self : OmReference [ '3509' ],		#time : DateAndTime [ '2024-03-03T08:20:54.542-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjPerformTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Tests\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjPerformTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjPerformTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjPerformTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjPerformTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Tests,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3509' ],		#self : OmReference [ '3510' ],		#time : DateAndTime [ '2024-03-03T08:20:54.544-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjProxyTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjDomGlobals PjUniversalGlobals\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Tests\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjProxyTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjProxyTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjProxyTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjProxyTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Tests,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxyTest,						#isMetaSide : false					},					#name : #PjDomGlobals,					#parent : @8				},				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxyTest,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3510' ],		#self : OmReference [ '3511' ],		#time : DateAndTime [ '2024-03-03T08:20:54.546-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjReflectionTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Bridge-Tests-Tests\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjReflectionTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjReflectionTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjReflectionTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjReflectionTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Bridge-Tests-Tests,			#package : #PharoJs-Base-Bridge-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3511' ],		#self : OmReference [ '3512' ],		#time : DateAndTime [ '2024-03-03T08:20:54.945-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjASuperClass class',				#isMetaSide : true			},			#name : #someString,			#protocol : #accessing,			#sourceCode : 'someString\r\t^\'Ultimate\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3512' ],		#self : OmReference [ '3513' ],		#time : DateAndTime [ '2024-03-03T08:20:55.201-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjASuperClass,				#isMetaSide : false			},			#name : #someNumber,			#protocol : #accessing,			#sourceCode : 'someNumber\r\r\t^ 40',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3513' ],		#self : OmReference [ '3514' ],		#time : DateAndTime [ '2024-03-03T08:20:55.204-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjArrayClassExtensionForTest class',				#isMetaSide : true			},			#name : #javascriptName,			#protocol : #'pharoJs support',			#sourceCode : 'javascriptName \r\t<pharoJsSkip>\r\t^#Array',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3514' ],		#self : OmReference [ '3515' ],		#time : DateAndTime [ '2024-03-03T08:20:55.205-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjEmptyClassExtensionOfASuperClass class',				#isMetaSide : true			},			#name : #isJsClassPlaceholder,			#protocol : #'pharoJs support',			#sourceCode : 'isJsClassPlaceholder\r\r\t<pharoJsSkip>\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3515' ],		#self : OmReference [ '3516' ],		#time : DateAndTime [ '2024-03-03T08:20:55.205-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjEmptyClassExtensionOfASuperClass class',				#isMetaSide : true			},			#name : #javascriptName,			#protocol : #'pharoJs support',			#sourceCode : 'javascriptName\r\r\t<pharoJsSkip>\r\t^ PjASuperClass name',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3516' ],		#self : OmReference [ '3517' ],		#time : DateAndTime [ '2024-03-03T08:20:55.205-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExtensionOfBSubClassOfA class',				#isMetaSide : true			},			#name : #isJsClassPlaceholder,			#protocol : #'pharoJs support',			#sourceCode : 'isJsClassPlaceholder \r\r\t<pharoJsSkip>\r\t^ true',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3517' ],		#self : OmReference [ '3518' ],		#time : DateAndTime [ '2024-03-03T08:20:55.205-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExtensionOfBSubClassOfA class',				#isMetaSide : true			},			#name : #javascriptName,			#protocol : #'pharoJs support',			#sourceCode : 'javascriptName\r\r\t<pharoJsSkip>\r\t^ PjBSubClassOfA name',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3518' ],		#self : OmReference [ '3519' ],		#time : DateAndTime [ '2024-03-03T08:20:55.205-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExtensionOfBSubClassOfA class',				#isMetaSide : true			},			#name : #someString,			#protocol : #accessing,			#sourceCode : 'someString\r\r\t<jsAlias: #someStringAlias>\r\t^ super someString , \' Answer\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3519' ],		#self : OmReference [ '3520' ],		#time : DateAndTime [ '2024-03-03T08:20:55.206-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExtensionOfBSubClassOfA,				#isMetaSide : false			},			#name : #someNumber,			#protocol : #accessing,			#sourceCode : 'someNumber\r\r\t\t<jsAlias: #someNumberAlias>\r\t^ super someNumber + 2',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3520' ],		#self : OmReference [ '3521' ],		#time : DateAndTime [ '2024-03-03T08:20:55.206-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjLoadForTest class',				#isMetaSide : true			},			#name : #fortyTwo,			#protocol : #any,			#sourceCode : 'fortyTwo\r\r\t^ X ifNil: [ X := 42 ]',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3521' ],		#self : OmReference [ '3522' ],		#time : DateAndTime [ '2024-03-03T08:20:55.206-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjLoadForTest class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #any,			#sourceCode : 'initialize\r\r\tY := \'Y original\'.\r\tZ := \'Z original\'.\r\tX := nil',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3522' ],		#self : OmReference [ '3523' ],		#time : DateAndTime [ '2024-03-03T08:20:55.206-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjLoadForTest class',				#isMetaSide : true			},			#name : #literal,			#protocol : #any,			#sourceCode : 'literal\r\t<jsLiteralGenerator>\r\t\r\t^ \'abc\',\'def\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3523' ],		#self : OmReference [ '3524' ],		#time : DateAndTime [ '2024-03-03T08:20:55.206-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjLoadForTest class',				#isMetaSide : true			},			#name : #reset,			#protocol : #any,			#sourceCode : 'reset\r\t<pharoJsSkip>\r\t\r\tself initialize',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3524' ],		#self : OmReference [ '3525' ],		#time : DateAndTime [ '2024-03-03T08:20:55.206-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjLoadForTest class',				#isMetaSide : true			},			#name : #setupClassVars,			#protocol : #any,			#sourceCode : 'setupClassVars\r\r\tself classVarNames do: [ :key | \r\t\tself classVarNamed: key put: key , \' value\' ]',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3525' ],		#self : OmReference [ '3526' ],		#time : DateAndTime [ '2024-03-03T08:20:55.206-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjLoadForTest class',				#isMetaSide : true			},			#name : #y,			#protocol : #any,			#sourceCode : 'y\r\r\t^ Y',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3526' ],		#self : OmReference [ '3527' ],		#time : DateAndTime [ '2024-03-03T08:20:55.207-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoadForTest,				#isMetaSide : false			},			#name : #literal,			#protocol : #any,			#sourceCode : 'literal\r\t<jsLiteralGenerator>\r\t^ 3 + 4',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3527' ],		#self : OmReference [ '3528' ],		#time : DateAndTime [ '2024-03-03T08:20:55.207-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoadForTest,				#isMetaSide : false			},			#name : #seventeen,			#protocol : #any,			#sourceCode : 'seventeen\r\r\t^ X',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3528' ],		#self : OmReference [ '3529' ],		#time : DateAndTime [ '2024-03-03T08:20:55.207-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoadForTest,				#isMetaSide : false			},			#name : #'subtract:',			#protocol : #any,			#sourceCode : 'subtract: n\r\r\t^ X := X - n',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3529' ],		#self : OmReference [ '3530' ],		#time : DateAndTime [ '2024-03-03T08:20:55.207-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoadForTest,				#isMetaSide : false			},			#name : #z,			#protocol : #any,			#sourceCode : 'z\r\r\t^ Z',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3530' ],		#self : OmReference [ '3531' ],		#time : DateAndTime [ '2024-03-03T08:20:55.207-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAppWithFolderNameIncludesSpace class',				#isMetaSide : true			},			#name : #defaultAppFolderName,			#protocol : #exporting,			#sourceCode : 'defaultAppFolderName\r\t<pharoJsSkip>\r\t\r\t^ \'Folder Name With Space\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3531' ],		#self : OmReference [ '3532' ],		#time : DateAndTime [ '2024-03-03T08:20:55.207-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestPharoJsBaseBridgeTests class',				#isMetaSide : true			},			#name : #ruleRBEqualNilRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBEqualNilRuleV1FalsePositive\r\t^ #(#(#(#RGMethodDefinition #(#\'PjLoadForTest class\' #initialize #true)) #\'2020-01-28T09:11:41.906215-05:00\') )',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3532' ],		#self : OmReference [ '3533' ],		#time : DateAndTime [ '2024-03-03T08:20:55.207-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestPharoJsBaseBridgeTests class',				#isMetaSide : true			},			#name : #ruleRBLongMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBLongMethodsRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#PjBasicTest)) #\'2019-10-18T16:58:01.056766-04:00\') )',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3533' ],		#self : OmReference [ '3534' ],		#time : DateAndTime [ '2024-03-03T08:20:55.207-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestPharoJsBaseBridgeTests class',				#isMetaSide : true			},			#name : #ruleRBStringConcatenationRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBStringConcatenationRuleV1FalsePositive\r\t^ #(#(#(#RGMethodDefinition #(#\'PjLoadForTest class\' #initialize #true)) #\'2020-01-28T09:11:47.308527-05:00\') )',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3534' ],		#self : OmReference [ '3535' ],		#time : DateAndTime [ '2024-03-03T08:20:55.207-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTestBridge,				#isMetaSide : false			},			#name : #'evalJavascript:',			#protocol : #public,			#sourceCode : 'evalJavascript: javaScriptString\r\r\t^ lastJavascript := javaScriptString',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3535' ],		#self : OmReference [ '3536' ],		#time : DateAndTime [ '2024-03-03T08:20:55.208-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTestBridge,				#isMetaSide : false			},			#name : #lastJavascript,			#protocol : #accessing,			#sourceCode : 'lastJavascript\r\r\t^ lastJavascript',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3536' ],		#self : OmReference [ '3537' ],		#time : DateAndTime [ '2024-03-03T08:20:55.208-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAppFolderNameIncludesSpaceTest class',				#isMetaSide : true			},			#name : #appClass,			#protocol : #'suite parameters',			#sourceCode : 'appClass\r\r\t^ PjAppWithFolderNameIncludesSpace',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3537' ],		#self : OmReference [ '3538' ],		#time : DateAndTime [ '2024-03-03T08:20:55.208-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppFolderNameIncludesSpaceTest,				#isMetaSide : false			},			#name : #testConnectionEstablished,			#protocol : #tests,			#sourceCode : 'testConnectionEstablished\r\r\tself assert: self bridge isConnected',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3538' ],		#self : OmReference [ '3539' ],		#time : DateAndTime [ '2024-03-03T08:20:55.208-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGeneratorTest,				#isMetaSide : false			},			#name : #'assert:equalsIgnoringLineEndings:',			#protocol : #asserting,			#sourceCode : 'assert: aString equalsIgnoringLineEndings: aString2\r\r\tself\r\t\tassert: (aString withLineEndings: \'\')\r\t\tequals: (aString2 withLineEndings: \'\')',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3539' ],		#self : OmReference [ '3540' ],		#time : DateAndTime [ '2024-03-03T08:20:55.208-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGeneratorTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\r\tsuper setUp.\r\tgenerator := PjHtmlGenerator new',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3540' ],		#self : OmReference [ '3541' ],		#time : DateAndTime [ '2024-03-03T08:20:55.208-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGeneratorTest,				#isMetaSide : false			},			#name : #testAttributedLoadFrom,			#protocol : #tests,			#sourceCode : 'testAttributedLoadFrom\r\r\tgenerator loadFrom: \'<head>the head</head>blah<body att="foo">the body</body>\'.\r\tself assert: generator html equalsIgnoringLineEndings: \'<!DOCTYPE html>\r<meta charset="utf-8" />\r<head>\rthe head\r</head>\r<body att="foo">\rthe body\r\r</body>\r</html>\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3541' ],		#self : OmReference [ '3542' ],		#time : DateAndTime [ '2024-03-03T08:20:55.208-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGeneratorTest,				#isMetaSide : false			},			#name : #testAugmentedLoadFrom,			#protocol : #tests,			#sourceCode : 'testAugmentedLoadFrom\r\r\tgenerator loadFrom: \'<head>the head</head>blah<body>the body</body>\'.\r\tgenerator addCssLink: \'foo.css\'.\r\tgenerator addScriptUrl: \'foo.js\'.\r\tself assert: generator html equalsIgnoringLineEndings: \'<!DOCTYPE html>\r<meta charset="utf-8" />\r<head>\rthe head\r<link rel="stylesheet" type="text/css" href="foo.css">\r</head>\r<body>\rthe body\r<script language="javascript" type="text/javascript" src="foo.js"></script>\r</body>\r</html>\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3542' ],		#self : OmReference [ '3543' ],		#time : DateAndTime [ '2024-03-03T08:20:55.209-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGeneratorTest,				#isMetaSide : false			},			#name : #testNoBodyLoadFrom,			#protocol : #tests,			#sourceCode : 'testNoBodyLoadFrom\r\r\tgenerator loadFrom: \'blah<head>the head</head>\'.\r\tself assert: generator html equalsIgnoringLineEndings: \'<!DOCTYPE html>\r<meta charset="utf-8" />\r<head>\rthe head\r</head>\r<body>\r<!-- no body tag in file -->\r\r</body>\r</html>\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3543' ],		#self : OmReference [ '3544' ],		#time : DateAndTime [ '2024-03-03T08:20:55.209-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGeneratorTest,				#isMetaSide : false			},			#name : #testNoHeadLoadFrom,			#protocol : #tests,			#sourceCode : 'testNoHeadLoadFrom\r\r\tgenerator loadFrom: \'blah<body>the body</body>\'.\r\tself assert: generator html equalsIgnoringLineEndings: \'<!DOCTYPE html>\r<meta charset="utf-8" />\r<head>\r<!-- no head tag in file -->\r</head>\r<body>\rthe body\r\r</body>\r</html>\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3544' ],		#self : OmReference [ '3545' ],		#time : DateAndTime [ '2024-03-03T08:20:55.209-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGeneratorTest,				#isMetaSide : false			},			#name : #testSimpleLoadFrom,			#protocol : #tests,			#sourceCode : 'testSimpleLoadFrom\r\r\tgenerator loadFrom: \'<head>the head</head>blah<body>the body</body>\'.\r\tself assert: generator html equalsIgnoringLineEndings: \'<!DOCTYPE html>\r<meta charset="utf-8" />\r<head>\rthe head\r</head>\r<body>\rthe body\r\r</body>\r</html>\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3545' ],		#self : OmReference [ '3546' ],		#time : DateAndTime [ '2024-03-03T08:20:55.209-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIncrementalJavascriptTest,				#isMetaSide : false			},			#name : #testPolyfillLoad,			#protocol : #tests,			#sourceCode : 'testPolyfillLoad\r\r\t| contents |\r\tbridge := PjTestBridge bridgeForAppClass: PjMinimalNodeApplication.\r\tbridge loadAllClasses: #().\r\tcontents := bridge lastJavascript.\r\tself assert: (contents includesSubstring: \' WebSocket=Smalltalk.require("ws")\').\r\tbridge loadClass: PjMinimalNodeApplication.\r\tcontents := bridge lastJavascript.\r\tself deny: (contents includesSubstring: \' WebSocket=Smalltalk.require("ws")\').',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3546' ],		#self : OmReference [ '3547' ],		#time : DateAndTime [ '2024-03-03T08:20:55.209-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyForGlobalsTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\r\tsuper setUp.\r\tauthorInitialName := Author uniqueInstance fullNamePerSe.\r\tAuthor uniqueInstance fullName: \'PharoJS\'.\r\tclassFactory := ClassFactoryForTestCase new',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3547' ],		#self : OmReference [ '3548' ],		#time : DateAndTime [ '2024-03-03T08:20:55.209-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyForGlobalsTest,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #running,			#sourceCode : 'tearDown\r\r\tsuper tearDown.\r\tclassFactory ifNotNil: [ classFactory cleanUp ].\r\tAuthor uniqueInstance fullName: authorInitialName.',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3548' ],		#self : OmReference [ '3549' ],		#time : DateAndTime [ '2024-03-03T08:20:55.209-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyForGlobalsTest,				#isMetaSide : false			},			#name : #testProxyForNewGlobalsCreated,			#protocol : #tests,			#sourceCode : 'testProxyForNewGlobalsCreated\r\r\t| globalsPool userClass |\r\tglobalsPool := classFactory silentlyNewSubclassOf: PjJavascriptGlobals instanceVariableNames: \'\' classVariableNames: \'A B\'.\r\tuserClass := classFactory newSubclassOf: Object uses: #() instanceVariableNames: \'\' classVariableNames: \'\' poolDictionaries: globalsPool name category: classFactory defaultCategory.\r\tuserClass class \r\t\tcompile: \'globals\r\t\t^{A. B}\'.\r\tuserClass globals do: [ : each |\r\t\tself assert: (each isKindOf: PjProxy) ]',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3549' ],		#self : OmReference [ '3550' ],		#time : DateAndTime [ '2024-03-03T08:20:55.209-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSTONReaderTest,				#isMetaSide : false			},			#name : #'materialize:',			#protocol : #private,			#sourceCode : 'materialize: string\r\r\t^ PjSTONReader from: string',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3550' ],		#self : OmReference [ '3551' ],		#time : DateAndTime [ '2024-03-03T08:20:55.209-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSTONReaderTest,				#isMetaSide : false			},			#name : #testInfinity,			#protocol : #tests,			#sourceCode : 'testInfinity\r\r\tself assert: (self materialize: \'Infinity\') equals: Float infinity',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3551' ],		#self : OmReference [ '3552' ],		#time : DateAndTime [ '2024-03-03T08:20:55.21-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSTONReaderTest,				#isMetaSide : false			},			#name : #testNaN,			#protocol : #tests,			#sourceCode : 'testNaN\r\r\tself assert: (self materialize: \'NaN\') isNaN',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3552' ],		#self : OmReference [ '3553' ],		#time : DateAndTime [ '2024-03-03T08:20:55.21-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSTONReaderTest,				#isMetaSide : false			},			#name : #testNegativeInfinity,			#protocol : #tests,			#sourceCode : 'testNegativeInfinity\r\r\tself assert: (self materialize: \'-Infinity\') equals: Float infinity negated',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3553' ],		#self : OmReference [ '3554' ],		#time : DateAndTime [ '2024-03-03T08:20:55.21-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAliasTest,				#isMetaSide : false			},			#name : #'loadClass:',			#protocol : #running,			#sourceCode : 'loadClass: aClass\r\tself bridge loadClass: aClass',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3554' ],		#self : OmReference [ '3555' ],		#time : DateAndTime [ '2024-03-03T08:20:55.21-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAliasTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\r\tsuper setUp.\r\tself bridge loadClass: PjClassForTranspilationTest',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3555' ],		#self : OmReference [ '3556' ],		#time : DateAndTime [ '2024-03-03T08:20:55.21-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAliasTest,				#isMetaSide : false			},			#name : #testAlias2Methods0Arg,			#protocol : #tests,			#sourceCode : 'testAlias2Methods0Arg\r\r\tself\r\t\tassert: [ PjClassForTranspilationTest new alias2 ]\r\t\tevaluatesTo: 21.\r\tself\r\t\tassert: [ PjClassForTranspilationTest new alias2Caller ]\r\t\tevaluatesTo: 42',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3556' ],		#self : OmReference [ '3557' ],		#time : DateAndTime [ '2024-03-03T08:20:55.21-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAliasTest,				#isMetaSide : false			},			#name : #testAliasMethod0Args,			#protocol : #tests,			#sourceCode : 'testAliasMethod0Args\r\r\tself assert:\t [ PjClassForTranspilationTest new aliasCaller ] evaluatesTo: 42.\r\tself assert:\t [ PjClassForTranspilationTest new alias ] evaluatesTo: 42.\r\tself assert:\t [ PjClassForTranspilationTest new aliasSpecialNameCaller ] evaluatesTo: 42.\r\tself assert:\t [ PjClassForTranspilationTest new aliasSpecialName ] evaluatesTo: 42.',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3557' ],		#self : OmReference [ '3558' ],		#time : DateAndTime [ '2024-03-03T08:20:55.21-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAliasTest,				#isMetaSide : false			},			#name : #testAliasMethod1Arg,			#protocol : #tests,			#sourceCode : 'testAliasMethod1Arg\r\r\tself assert:\t [ PjClassForTranspilationTest new alias1Caller: 41 ] evaluatesTo: 42.\r\tself assert:\t [ PjClassForTranspilationTest new alias1: 41 ] evaluatesTo: 42',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3558' ],		#self : OmReference [ '3559' ],		#time : DateAndTime [ '2024-03-03T08:20:55.211-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAliasTest,				#isMetaSide : false			},			#name : #testClassMethod1AliasInExtensionClass,			#protocol : #tests,			#sourceCode : 'testClassMethod1AliasInExtensionClass\r\r\tself loadClass: PjExtensionClassForAliasTest.\r\tself assert: [ Object classM1 ] evaluatesTo: \'classM1\'.\r\tself assert: [ Object js_classM1alias ] evaluatesTo: \'classM1\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3559' ],		#self : OmReference [ '3560' ],		#time : DateAndTime [ '2024-03-03T08:20:55.211-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAliasTest,				#isMetaSide : false			},			#name : #testClassMethod2AliasesInExtensionClass,			#protocol : #tests,			#sourceCode : 'testClassMethod2AliasesInExtensionClass\r\r\tself loadClass: PjExtensionClassForAliasTest.\r\tself assert: [ Object classM2 ] evaluatesTo: \'classM2\'.\r\tself assert: [ Object js_classM2alias1 ] evaluatesTo: \'classM2\'.\r\tself assert: [ Object js_classM2alias2 ] evaluatesTo: \'classM2\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3560' ],		#self : OmReference [ '3561' ],		#time : DateAndTime [ '2024-03-03T08:20:55.211-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAliasTest,				#isMetaSide : false			},			#name : #testInstanceMethod1AliasInExtensionClass,			#protocol : #tests,			#sourceCode : 'testInstanceMethod1AliasInExtensionClass\r\r\tself loadClass: PjExtensionClassForAliasTest.\r\tself assert: [ Object new m1 ] evaluatesTo: \'instanceM1\'.\r\tself assert: [ Object new js_m1alias ] evaluatesTo: \'instanceM1\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3561' ],		#self : OmReference [ '3562' ],		#time : DateAndTime [ '2024-03-03T08:20:55.211-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAliasTest,				#isMetaSide : false			},			#name : #testInstanceMethod3AliasesInExtensionClass,			#protocol : #tests,			#sourceCode : 'testInstanceMethod3AliasesInExtensionClass\r\r\tself loadClass: PjExtensionClassForAliasTest.\r\tself assert: [ Object new m2 ] evaluatesTo: \'instanceM2\'.\r\tself assert: [ Object new js_m2alias1 ] evaluatesTo: \'instanceM2\'.\r\tself assert: [ Object new js_m2alias2 ] evaluatesTo: \'instanceM2\'.\r\tself assert: [ Object new js_m2alias3 ] evaluatesTo: \'instanceM2\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3562' ],		#self : OmReference [ '3563' ],		#time : DateAndTime [ '2024-03-03T08:20:55.211-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAliasTest,				#isMetaSide : false			},			#name : #testTwoAliasPragma,			#protocol : #tests,			#sourceCode : 'testTwoAliasPragma\r\r\tself\r\t\tassert: [ PjClassForTranspilationTest new twoPragmaWithAliases ]\r\t\tevaluatesTo: 200.\r\tself\r\t\tassert: [ PjClassForTranspilationTest new js_firstAlias ]\r\t\tevaluatesTo: 200.\r\tself\r\t\tassert: [ PjClassForTranspilationTest new js_secondAlias ]\r\t\tevaluatesTo: 200',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3563' ],		#self : OmReference [ '3564' ],		#time : DateAndTime [ '2024-03-03T08:20:55.211-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAliasTest,				#isMetaSide : false			},			#name : #testTwoAliasPragmaExtension,			#protocol : #tests,			#sourceCode : 'testTwoAliasPragmaExtension\r\r\tself loadClass: PjExtensionClassForAliasTest.\r\tself assert: [ Object new twoPragmaWithAliases ] evaluatesTo: 200.\r\tself assert: [ Object new js_firstAlias ] evaluatesTo: 200.\r\tself assert: [ Object new js_secondAlias ] evaluatesTo: 200',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3564' ],		#self : OmReference [ '3565' ],		#time : DateAndTime [ '2024-03-03T08:20:55.211-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testBasicEquality,			#protocol : #tests,			#sourceCode : 'testBasicEquality\r\r\tself assertBlock: [ 312 ] equalsBlock: [ 312 ].\r\tself denyBlock: [ 312 ] equalsBlock: [ 5 ].\r\tself assertBlock: [ \'one two three\' ] equalsBlock: [ \'one two three\' ].\r\tself assertBlock: [ \'one two three\' ] equalsBlock: [ \'one \', \'two\', \' three\' ].\r\tself denyBlock: [ \'one two three\' ] equalsBlock: [ \'one three\' ].',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3565' ],		#self : OmReference [ '3566' ],		#time : DateAndTime [ '2024-03-03T08:20:55.212-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testBooleanMethods,			#protocol : #tests,			#sourceCode : 'testBooleanMethods\r\r\tself assertEquivalent: [ true asBit ].\r\tself assertEquivalent: [ false asBit ]',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3566' ],		#self : OmReference [ '3567' ],		#time : DateAndTime [ '2024-03-03T08:20:55.212-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testCallingNewOnAJsConstructorViaFullProxy,			#protocol : #tests,			#sourceCode : 'testCallingNewOnAJsConstructorViaFullProxy\r\r\t| o1 o2 |\r\tself bridge evalJavascript: \'window.MyClass = class MyClass{\r\t\tx(){\r\t\t\treturn this.x;\r\t\t}\r\t\ty(){\r\t\t\treturn this.y;\r\t\t}\r\t\tz(){\r\t\t\treturn this.z;\r\t\t}\r\t\tconstructor(a, b, c){\r\t\t\tthis.x = a;\r\t\t\tthis.y = b;\r\t\t\tthis.z = c;\r\t\t}\r\t}\'.\r\to1 := (window instVarNamed: #MyClass) new: 1 with: 2 with: 3.\r\tself assert: o1 x equals: 1.\r\tself assert: o1 y equals: 2.\r\tself assert: o1 z equals: 3.\r\to2 := (window instVarNamed: #MyClass) new: 77 with: 88 with: 99.\r\tself assert: o2 x equals: 77.\r\tself assert: o2 y equals: 88.\r\tself assert: o2 z equals: 99',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3567' ],		#self : OmReference [ '3568' ],		#time : DateAndTime [ '2024-03-03T08:20:55.212-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testClosedBlocks,			#protocol : #tests,			#sourceCode : 'testClosedBlocks\r\t<expectedFailure>\r\t\r\t| x |\r\tself fail: \'Fix error\'.\r\tx := 3.\r\tself assertEquivalent: [ [ x + 39 ] value ] asClosedBlock.\r\tx := 5.\r\tself assertEquivalent: [ x + 39 ] asClosedBlock',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3568' ],		#self : OmReference [ '3569' ],		#time : DateAndTime [ '2024-03-03T08:20:55.212-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testClosure,			#protocol : #tests,			#sourceCode : 'testClosure\r\r\tself assertEquivalent: [| tot coll |\r\t\ttot := 0.\r\t\tcoll := OrderedCollection new.\r\t\t1 to: 5 do: [ : each | coll add: [ each ] ].\r\t\tcoll do: [  : each | tot := tot + each value ].\r\t\ttot\r\t].',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3569' ],		#self : OmReference [ '3570' ],		#time : DateAndTime [ '2024-03-03T08:20:55.212-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testDifferentIdentities,			#protocol : #tests,			#sourceCode : 'testDifferentIdentities\r\r\tself assertEquivalent: [false ~~ true].',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3570' ],		#self : OmReference [ '3571' ],		#time : DateAndTime [ '2024-03-03T08:20:55.212-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testEqualityAndDifferenceWithNil,			#protocol : #tests,			#sourceCode : 'testEqualityAndDifferenceWithNil\r\r\tself assertEquivalent: [ 0 = nil ].\r\tself assertEquivalent: [ 0 ~= nil ].\r\tself assertEquivalent: [ nil = 0 ].\r\tself assertEquivalent: [ nil ~= 0 ]',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3571' ],		#self : OmReference [ '3572' ],		#time : DateAndTime [ '2024-03-03T08:20:55.212-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testEvalResult,			#protocol : #tests,			#sourceCode : 'testEvalResult\r\r\tself checkBasic: 42.\r\tself checkBasic: true.\r\tself checkBasic: false.\r\tself checkBasic: \'abc\'.\r\tself checkBasic: \'a\\b\'\'c"d\'.\r\tself checkProxy: nil.\r\tself\r\t\tshould: [ \r\t\t\t(PjMessageErrorResponse newWithContents: \'a Javascript error\') \r\t\t\t\tgetValueWithBridge: self bridge ]\r\t\traise: PjJavascriptError',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3572' ],		#self : OmReference [ '3573' ],		#time : DateAndTime [ '2024-03-03T08:20:55.213-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testExceptionHandling,			#protocol : #tests,			#sourceCode : 'testExceptionHandling\r\r\tself assert: [|exceptionSignaled|\r\t\t\texceptionSignaled := false.\r\t\t\t[Error signal]on: Error do: [exceptionSignaled := true].\r\t\t\texceptionSignaled]\r\t  evaluatesTo: true.\r\tself assert: [|exceptionSignaled|\r\t\t\texceptionSignaled := false.\r\t\t\t[3+4]on: Error do: [exceptionSignaled := true].\r\t\t\texceptionSignaled]\r\t  evaluatesTo: false.',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3573' ],		#self : OmReference [ '3574' ],		#time : DateAndTime [ '2024-03-03T08:20:55.213-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testHash,			#protocol : #tests,			#sourceCode : 'testHash\r\r\tself assertEquivalent: [nil hash].\r\tself assertEquivalent: [0 hash].\r\tself assertEquivalent: [ 1234 hash].\r\tself assertEquivalent: [true hash].\r\tself assertEquivalent: [false hash].\r\tself assert: [\'abc\' hash ] evaluatesTo: 135459374. " not the same as on Pharo, but uses same code with different initialization "\r\tself assertEquivalent: [|x| x:= Object new. x hash = x hash].\r\tself assertEquivalent: [|x y| x:= Object new. y:= Object new. x hash ~= y hash].',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3574' ],		#self : OmReference [ '3575' ],		#time : DateAndTime [ '2024-03-03T08:20:55.213-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testIdentity,			#protocol : #tests,			#sourceCode : 'testIdentity\r\r\tself assertEquivalent: [ false == false ]',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3575' ],		#self : OmReference [ '3576' ],		#time : DateAndTime [ '2024-03-03T08:20:55.213-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testIfNilIfNotNil,			#protocol : #tests,			#sourceCode : 'testIfNilIfNotNil\r\r\tself assertEquivalent: [ nil ifNil: [ 1 ] ].\r\tself assertEquivalent: [ false ifNotNil: [ 2 ] ].\r\tself assertEquivalent: [ nil ifNil: [ 1 ] ifNotNil: [ 2 ] ].\r\tself assertEquivalent: [ false ifNil: [ 1 ] ifNotNil: [ 2 ] ].\r\tself\r\t\tassert: [ \r\t\t\t(document getElementById: #notInTheDocument)\r\t\t\t\tifNil: [ 1 ]\r\t\t\t\tifNotNil: [ 2 ] ]\r\t\tevaluatesTo: 1',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3576' ],		#self : OmReference [ '3577' ],		#time : DateAndTime [ '2024-03-03T08:20:55.213-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testIfTrueIfFalse,			#protocol : #tests,			#sourceCode : 'testIfTrueIfFalse\r\r\tself assertEquivalent: [ true ifTrue: [1] ] .\r\tself assertEquivalent: [ false ifFalse: [2] ].\r\tself assertEquivalent: [ false ifTrue: [1] ] .\r\tself assertEquivalent: [ true ifFalse: [2] ].\r\tself assertEquivalent: [ true ifTrue: [1] ifFalse: [2] ].\r\tself assertEquivalent: [ false ifTrue: [1] ifFalse: [2] ].\r\tself assertEquivalent: [ true ifFalse: [2] ifTrue: [1] ].\r\tself assertEquivalent: [ false ifFalse: [2] ifTrue: [1] ] ',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3577' ],		#self : OmReference [ '3578' ],		#time : DateAndTime [ '2024-03-03T08:20:55.213-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testJsGlobalAccess,			#protocol : #tests,			#sourceCode : 'testJsGlobalAccess\r\r\tself\r\t\tassert: (self bridge evalBlock: [ Date ])\r\t\tequals: (self bridge jsGlobalAt: #Date).\r\tself assert: (self bridge evalBlock: [ Object ]) equals: (self bridge jsGlobalAt: #Object)',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3578' ],		#self : OmReference [ '3579' ],		#time : DateAndTime [ '2024-03-03T08:20:55.213-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testMethodsForBitManipulation,			#protocol : #tests,			#sourceCode : 'testMethodsForBitManipulation\r\r\tself assertEquivalent: [ -257 bitShift: -4 ].\r\tself assertEquivalent: [ 257 bitShift: -4 ].\r\tself assertEquivalent: [ -257 bitShift: 4 ].\r\tself assertEquivalent: [ 257 bitShift: 4 ].\r\tself assertEquivalent: [ -5 bitAnd: -11 ].\r\tself assertEquivalent: [ 5 bitAnd: 11 ].\r\tself assertEquivalent: [ -5 bitAnd: 11 ].\r\tself assertEquivalent: [ 5 bitAnd: 11 ].\r\tself assertEquivalent: [ -5 bitOr: -11 ].\r\tself assertEquivalent: [ 5 bitOr: 11 ].\r\tself assertEquivalent: [ -5 bitOr: 11 ].\r\tself assertEquivalent: [ 5 bitOr: 11 ].\r\tself assertEquivalent: [ -5 bitXor: -11 ].\r\tself assertEquivalent: [ 5 bitXor: 11 ].\r\tself assertEquivalent: [ -5 bitXor: 11 ].\r\tself assertEquivalent: [ 5 bitXor: 11 ].\r\tself assertEquivalent: [ 1234567 highBit ].\r\tself assertEquivalent: [ 12300000 lowBit ].\r\tself assertEquivalent: [ -12300000 lowBit ].',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3579' ],		#self : OmReference [ '3580' ],		#time : DateAndTime [ '2024-03-03T08:20:55.214-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testMethodsForNumbers,			#protocol : #tests,			#sourceCode : 'testMethodsForNumbers\r\r\tself assertEquivalent: [ -3 abs ].\r\tself assertEquivalent: [ 0 abs ].\r\tself assertEquivalent: [ 3 abs ].\r\tself assertEquivalent: [ 0 sign ].\r\tself assertEquivalent: [ 4 sign ].\r\tself assertEquivalent: [ -25 sign ].\r\tself assertEquivalent: [ 30 degreesToRadians ].\r\tself assertEquivalent: [ 1.78 radiansToDegrees ].',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3580' ],		#self : OmReference [ '3581' ],		#time : DateAndTime [ '2024-03-03T08:20:55.214-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testMultilineConstants,			#protocol : #tests,			#sourceCode : 'testMultilineConstants\r\r\tself assertEquivalent: [ \r\t\t\'this\r\t\t\tand that\' size ].\r\tself assertEquivalent: [ #( 1 2 3 4 5 6 ) size ]',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3581' ],		#self : OmReference [ '3582' ],		#time : DateAndTime [ '2024-03-03T08:20:55.214-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testNumber,			#protocol : #tests,			#sourceCode : 'testNumber\r\r\t| x |\r\tself assertEquivalent: [ 1 ].\r\tself assertEquivalent: [ 2 asInteger ].\r\tself assertEquivalent: [ 2.5 asInteger ].\r\tself assertEquivalent: [ 2 asFloat ].\r\tself assertEquivalent: [ 2.5 asFloat ].\r\tself assertEquivalent: [ 2 asNumber ].\r\tself assertEquivalent: [ 2.5 asNumber ].\r\tself assertEquivalent: [ \'2\' asNumber ].\r\tself assertEquivalent: [ \'2.5\' asNumber ].\r\tself assertEquivalent: [ [ 3 / 1 ] on: ZeroDivide do: [ 42 ] ].\r\tself assertEquivalent: [ [ 3 / 0 ] on: ZeroDivide do: [ 42 ] ].\r\tself assertEquivalent: [ [ 3.0 / 0 ] on: ZeroDivide do: [ 42 ] ].\r\tself assertEquivalent: [ [ 3.0 / 2 ] on: ZeroDivide do: [ 42 ] ].\r\tself assertEquivalent: [ [ 3 // 0 ] on: ZeroDivide do: [ 42 ] ].\r\tself assertEquivalent: [ [ 3 // 1 ] on: ZeroDivide do: [ 42 ] ].\r\tself assertEquivalent: [ [ 3.0 // 0 ] on: ZeroDivide do: [ 42 ] ].\r\tself assertEquivalent: [ [ 3.0 // 2 ] on: ZeroDivide do: [ 42 ] ].\r\tx := 1.5e300.\r\tself assertEquivalent: [ x * x  ]. " Infinity "\r\tself assertEquivalent: [ x negated * x ]. " -Infinity "\r\tself assertEquivalent: [ x * x * 0 ]. " NaN "\r\tself assertEquivalent: [ (x * x * 0) isNaN ]. " NaN "',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3582' ],		#self : OmReference [ '3583' ],		#time : DateAndTime [ '2024-03-03T08:20:55.214-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testResettingTheApp,			#protocol : #tests,			#sourceCode : 'testResettingTheApp\r\r\tself resetApp.\r\tself assert: app identicalTo: self currentApp.',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3583' ],		#self : OmReference [ '3584' ],		#time : DateAndTime [ '2024-03-03T08:20:55.214-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testResettingTheClient,			#protocol : #tests,			#sourceCode : 'testResettingTheClient\r\r\tself bridge resetClient.\r\tself assert: self bridge isConnected',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3584' ],		#self : OmReference [ '3585' ],		#time : DateAndTime [ '2024-03-03T08:20:55.214-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testSignalingExceptionFromJavaScript,			#protocol : #tests,			#sourceCode : 'testSignalingExceptionFromJavaScript\r\r\tself\r\t\tshould: [ \r\t\t\tself bridge evalBlock: [ \r\t\t\t\tObject new testSignalingExceptionFromJavaScript ] ]\r\t\traise: PjJavascriptError',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3585' ],		#self : OmReference [ '3586' ],		#time : DateAndTime [ '2024-03-03T08:20:55.214-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testSimpleMathOperations,			#protocol : #tests,			#sourceCode : 'testSimpleMathOperations\r\r\tself assertEquivalent: [ 1+2 ].\r\tself assertEquivalent: [ 6*7 ].\r\tself assertEquivalent: [ (2 + 4) * (3 + 4) ].\r\tself assertEquivalent: [ 2 + 4 * 7 ].\r\tself assertEquivalent: [ 2 + 4 * (3 + 4) ].\r\tself assertEquivalent: [ (3 + 4) odd ].\r\tself assertEquivalent: [ (3 * 4) odd ].\r\tself assertEquivalent: [ (3 + 4) even ].\r\tself assertEquivalent: [ (3 * 4) even ].',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3586' ],		#self : OmReference [ '3587' ],		#time : DateAndTime [ '2024-03-03T08:20:55.215-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testTimesRepeat,			#protocol : #tests,			#sourceCode : 'testTimesRepeat\r\r\tself\r\t\tassertEquivalent: [|counter|\r\t\t\tcounter := 0.\r\t\t\t5 timesRepeat: [counter := counter + 1].\r\t\t\tcounter].',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3587' ],		#self : OmReference [ '3588' ],		#time : DateAndTime [ '2024-03-03T08:20:55.215-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testToDoBy,			#protocol : #tests,			#sourceCode : 'testToDoBy\r\r\tself assertEquivalent: [ \r\t\t| tot |\r\t\ttot := 0.\r\t\t1 to: 2 by: 1 do: [ :i | tot := tot + 1 ].\r\t\ttot ].\r\tself assertEquivalent: [ \r\t\t| tot |\r\t\ttot := 0.\r\t\t2 to: 1 by: 1 do: [ :i | tot := tot + 1 ].\r\t\ttot ].\r\tself assertEquivalent: [ \r\t\t| tot |\r\t\ttot := 0.\r\t\t2 to: 1 by: -1 do: [ :i | tot := tot + 1 ].\r\t\ttot ]',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3588' ],		#self : OmReference [ '3589' ],		#time : DateAndTime [ '2024-03-03T08:20:55.215-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testUnicode,			#protocol : #tests,			#sourceCode : 'testUnicode\r\r\tself assert: $€ asJSON equals: \'"\\u20AC"\'.\r\tself assert: \'ab€cd\' asJSON equals: \'"ab\\u20ACcd"\'.\r\tself checkBasic: \'ab€cd\'.',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3589' ],		#self : OmReference [ '3590' ],		#time : DateAndTime [ '2024-03-03T08:20:55.215-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testValueBlock0Arg,			#protocol : #tests,			#sourceCode : 'testValueBlock0Arg\r\r\tself assertEquivalent: [ [1+2] value ]',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3590' ],		#self : OmReference [ '3591' ],		#time : DateAndTime [ '2024-03-03T08:20:55.215-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testValueBlock1Arg,			#protocol : #tests,			#sourceCode : 'testValueBlock1Arg\r\r\tself assertEquivalent: [ [ : x | x + 2] value: 1 ]',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3591' ],		#self : OmReference [ '3592' ],		#time : DateAndTime [ '2024-03-03T08:20:55.215-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBasicTest,				#isMetaSide : false			},			#name : #testValues,			#protocol : #tests,			#sourceCode : 'testValues\r\r\tself assertEquivalent: [ 42 value ].\r\tself assertEquivalent: [ true value ].\r\tself assertEquivalent: [ false value ].\r\tself assertEquivalent: [ \'abc\' value ]',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3592' ],		#self : OmReference [ '3593' ],		#time : DateAndTime [ '2024-03-03T08:20:55.216-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBridgeTestCase class',				#isMetaSide : true			},			#name : #appClass,			#protocol : #'suite parameters',			#sourceCode : 'appClass\r\r\t^ PjMinimalWebApplication',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3593' ],		#self : OmReference [ '3594' ],		#time : DateAndTime [ '2024-03-03T08:20:55.216-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestCase,				#isMetaSide : false			},			#name : #'addToDOM:',			#protocol : #'test support',			#sourceCode : 'addToDOM: html\r\r\tself bridge evalBlock: [ \r\t\t| div |\r\t\tdiv := document createElement: \'div\'.\r\t\tdiv innerHTML: html.\r\t\tdocument body appendChild: div ]',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3594' ],		#self : OmReference [ '3595' ],		#time : DateAndTime [ '2024-03-03T08:20:55.216-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestCase,				#isMetaSide : false			},			#name : #'assert:evaluatesTo:',			#protocol : #asserting,			#sourceCode : 'assert: aBlock evaluatesTo: expectedResult\r\r\t| actualResult |\r\tactualResult := (self bridge evalBlock: aBlock) asLocalObject.\r\texpectedResult isNumber ifTrue: [ \r\t\texpectedResult isNaN ifTrue: [ ^ self assert: actualResult isNaN ] ].\r\tself assert: actualResult equals: expectedResult',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3595' ],		#self : OmReference [ '3596' ],		#time : DateAndTime [ '2024-03-03T08:20:55.216-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestCase,				#isMetaSide : false			},			#name : #'assert:evaluatesToRaw:',			#protocol : #asserting,			#sourceCode : 'assert: aBlock evaluatesToRaw: expectedJsonString\r\r\t| actualResult |\r\tactualResult := self bridge evalBlock: aBlock.\r\tself assert: actualResult asRawJSONString equals: expectedJsonString',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3596' ],		#self : OmReference [ '3597' ],		#time : DateAndTime [ '2024-03-03T08:20:55.216-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestCase,				#isMetaSide : false			},			#name : #'assertBlock:',			#protocol : #asserting,			#sourceCode : 'assertBlock: aBlock\r\r\tself assert: aBlock evaluatesTo: true',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3597' ],		#self : OmReference [ '3598' ],		#time : DateAndTime [ '2024-03-03T08:20:55.216-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestCase,				#isMetaSide : false			},			#name : #'assertBlock:equalsBlock:',			#protocol : #asserting,			#sourceCode : 'assertBlock: block1 equalsBlock: block2\r\r\t| result1 result2 |\r\tresult1 := self evalBlock: block1.\r\tresult2 := self evalBlock: block2.\r\tself assert: result1 = result2',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3598' ],		#self : OmReference [ '3599' ],		#time : DateAndTime [ '2024-03-03T08:20:55.217-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestCase,				#isMetaSide : false			},			#name : #'assertEquivalent:',			#protocol : #asserting,			#sourceCode : 'assertEquivalent: aBlock\r\r\tself assert: aBlock evaluatesTo: aBlock value',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3599' ],		#self : OmReference [ '3600' ],		#time : DateAndTime [ '2024-03-03T08:20:55.217-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestCase,				#isMetaSide : false			},			#name : #'assertJavascript:evaluatesTo:',			#protocol : #asserting,			#sourceCode : 'assertJavascript: expressionString evaluatesTo: expectedResultString\r\r\tself\r\t\tassert: (self bridge evalJavascript: expressionString)\r\t\tequals: expectedResultString',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3600' ],		#self : OmReference [ '3601' ],		#time : DateAndTime [ '2024-03-03T08:20:55.217-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestCase,				#isMetaSide : false			},			#name : #'checkBasic:',			#protocol : #'test support',			#sourceCode : 'checkBasic: value\r\r\tself\r\t\tassert:\r\t\t\t((PjMessageEvaluationResponse newWithContents: value asJSON) \r\t\t\t\t getValueWithBridge: self bridge)\r\t\tequals: value',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3601' ],		#self : OmReference [ '3602' ],		#time : DateAndTime [ '2024-03-03T08:20:55.217-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestCase,				#isMetaSide : false			},			#name : #'checkProxy:',			#protocol : #'test support',			#sourceCode : 'checkProxy: value\r\r\tself\r\t\tassert:\r\t\t\t((PjMessageEvaluationResponse newWithContents: (PjProxyInfo new\r\t\t\t\t\t   globalName: value asJSON;\r\t\t\t\t\t   yourself)) getValueWithBridge: self bridge)\r\t\tequals: value',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3602' ],		#self : OmReference [ '3603' ],		#time : DateAndTime [ '2024-03-03T08:20:55.217-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestCase,				#isMetaSide : false			},			#name : #'denyBlock:equalsBlock:',			#protocol : #asserting,			#sourceCode : 'denyBlock: block1 equalsBlock: block2\r\r\t| result1 result2 |\r\tresult1 := self evalBlock: block1.\r\tresult2 := self evalBlock: block2.\r\tself deny: result1 equals: result2',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3603' ],		#self : OmReference [ '3604' ],		#time : DateAndTime [ '2024-03-03T08:20:55.217-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestCase,				#isMetaSide : false			},			#name : #'evalBlock:',			#protocol : #'test support',			#sourceCode : 'evalBlock: aBlock\r\r\t^ self bridge evalBlock: aBlock',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3604' ],		#self : OmReference [ '3605' ],		#time : DateAndTime [ '2024-03-03T08:20:55.217-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestCase,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\r\tsuper setUp.\r\tauthorInitialName := Author uniqueInstance fullNamePerSe.\r\tAuthor uniqueInstance fullName: \'PharoJS\'.\r\tclassFactory := ClassFactoryForTestCase new',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3605' ],		#self : OmReference [ '3606' ],		#time : DateAndTime [ '2024-03-03T08:20:55.218-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestCase,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #running,			#sourceCode : 'tearDown\r\r\tsuper tearDown.\r\tclassFactory ifNotNil: [ classFactory cleanUp ].\r\tAuthor uniqueInstance fullName: authorInitialName',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3606' ],		#self : OmReference [ '3607' ],		#time : DateAndTime [ '2024-03-03T08:20:55.218-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeTestCase,				#isMetaSide : false			},			#name : #'transpileMethod:',			#protocol : #'test support',			#sourceCode : 'transpileMethod: aMethod\r\r\t^ self bridge transpiler transpileMethodToString: aMethod',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3607' ],		#self : OmReference [ '3608' ],		#time : DateAndTime [ '2024-03-03T08:20:55.218-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassExtensionTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #tests,			#sourceCode : 'setUp\r\r\tsuper setUp.\r\tself bridge loadAllClasses: { \r\t\t\tPjASuperClass.\r\t\t\tPjBSubClassOfA }.\r\tself bridge loadClass: PjExtensionOfBSubClassOfA.\r',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3608' ],		#self : OmReference [ '3609' ],		#time : DateAndTime [ '2024-03-03T08:20:55.218-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassExtensionTest,				#isMetaSide : false			},			#name : #testClassMessageToSuper,			#protocol : #tests,			#sourceCode : 'testClassMessageToSuper\r\r\tself\r\t\tassert: [ PjBSubClassOfA someString ]\r\t\tevaluatesTo: \'Ultimate Answer\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3609' ],		#self : OmReference [ '3610' ],		#time : DateAndTime [ '2024-03-03T08:20:55.218-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassExtensionTest,				#isMetaSide : false			},			#name : #testClassMethodAlias,			#protocol : #tests,			#sourceCode : 'testClassMethodAlias\r\r\tself\r\t\tassert: [ PjBSubClassOfA someString ]\r\t\tevaluatesTo: \'Ultimate Answer\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3610' ],		#self : OmReference [ '3611' ],		#time : DateAndTime [ '2024-03-03T08:20:55.219-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassExtensionTest,				#isMetaSide : false			},			#name : #testEmptyClassExtension,			#protocol : #tests,			#sourceCode : 'testEmptyClassExtension\r\r\tself bridge loadClass: PjEmptyClassExtensionOfASuperClass.\r\tself assertEquivalent: [ PjASuperClass someString ].\r\tself assertEquivalent: [ PjASuperClass new someNumber ]',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3611' ],		#self : OmReference [ '3612' ],		#time : DateAndTime [ '2024-03-03T08:20:55.219-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassExtensionTest,				#isMetaSide : false			},			#name : #testInstanceMessageToSuper,			#protocol : #tests,			#sourceCode : 'testInstanceMessageToSuper\r\r\tself assert: [ PjBSubClassOfA new someNumber ] evaluatesTo: 42',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3612' ],		#self : OmReference [ '3613' ],		#time : DateAndTime [ '2024-03-03T08:20:55.219-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjClassExtensionTest,				#isMetaSide : false			},			#name : #testInstanceMethodAlias,			#protocol : #tests,			#sourceCode : 'testInstanceMethodAlias\r\r\tself assert: [ PjBSubClassOfA new someNumberAlias ] evaluatesTo: 42',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3613' ],		#self : OmReference [ '3614' ],		#time : DateAndTime [ '2024-03-03T08:20:55.219-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjInfrastructureTest,				#isMetaSide : false			},			#name : #testBridgePort,			#protocol : #tests,			#sourceCode : 'testBridgePort\r\r\tself assert: self bridge port equals: self bridge server port',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3614' ],		#self : OmReference [ '3615' ],		#time : DateAndTime [ '2024-03-03T08:20:55.219-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjInfrastructureTest,				#isMetaSide : false			},			#name : #testCallGetsTrampolined,			#protocol : #tests,			#sourceCode : 'testCallGetsTrampolined\r\r\tself assert: (self bridge evalBlock: [ \r\t\t\t nil ~= (document getElementsByTagName: \'script\') ])',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3615' ],		#self : OmReference [ '3616' ],		#time : DateAndTime [ '2024-03-03T08:20:55.219-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjInfrastructureTest,				#isMetaSide : false			},			#name : #testDNUSetup,			#protocol : #tests,			#sourceCode : 'testDNUSetup\r\r\t| prefix |\r\tprefix := self bridge exporter transpiler pharoJsSelectorPrefix.\r\tself\r\t\tassert: (self bridge evalJavascript: \'undefined === document.\', prefix, \'children\').\r\tself assert: (self bridge evalBlock: [ document children ~= nil ]).\r\tself\r\t\tassert:\r\t\t\t(self bridge evalJavascript: \'window.\', prefix, \'children !== document.\', prefix, \'children\').\r\tself\r\t\tassert: (self bridge evalJavascript: \'window.\', prefix, \'children !== undefined\').\r\tself\r\t\tassert: (self bridge evalJavascript: \'window.\', prefix, \'children === console.\', prefix, \'children\').\r\tself\r\t\tassert:\r\t\t\t(self bridge\r\t\t\t\tevalJavascript: \'HTMLDocument.prototype.\', prefix, \'children === document.\', prefix, \'children\')',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3616' ],		#self : OmReference [ '3617' ],		#time : DateAndTime [ '2024-03-03T08:20:55.22-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjInfrastructureTest,				#isMetaSide : false			},			#name : #testGetterGetsTrampolined,			#protocol : #tests,			#sourceCode : 'testGetterGetsTrampolined\r\r\tself assert: (self bridge evalBlock: [ document body ~= nil ])',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3617' ],		#self : OmReference [ '3618' ],		#time : DateAndTime [ '2024-03-03T08:20:55.22-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjInfrastructureTest,				#isMetaSide : false			},			#name : #testIs,			#protocol : #tests,			#sourceCode : 'testIs\r\r\tself assertEquivalent: [ Object isBlock ].\r\tself assertEquivalent: [ Object new isBlock ].\r\tself assertEquivalent: [ Object isBlock ].\r\tself assertEquivalent: [ [] isBlock ].\r\tself assertEquivalent: [ Object new isClass ].\r\tself assertEquivalent: [ [] isClass ].\r\tself assertEquivalent: [ Object isBehavior ].\r\tself assertEquivalent: [ Object isClass ]',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3618' ],		#self : OmReference [ '3619' ],		#time : DateAndTime [ '2024-03-03T08:20:55.22-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjInfrastructureTest,				#isMetaSide : false			},			#name : #testJSSelector,			#protocol : #tests,			#sourceCode : 'testJSSelector\r\r\t|prefix|\r\tprefix := self bridge exporter transpiler pharoJsSelectorPrefix.\r\tself assert: [PjCore makePharoJsSelector: #foo] evaluatesTo: prefix, \'foo\'.\r\tself assert: [PjCore makePharoJsSelector: #foo:] evaluatesTo: prefix, \'foo_\'.\r\tself assert: [PjCore makePharoJsSelector: \',\'] evaluatesTo: prefix, \'44_\'.\r\tself assert: [PjCore makePharoJsSelector: prefix, \'44_\'] evaluatesTo: prefix, \'44_\'.\r\tself assert: [PjCore makePharoJsSelector: prefix, \'foo\'] evaluatesTo: prefix, \'foo\'.\r\tself assert: [PjCore makePharoJsSelector: prefix, \'foo_\'] evaluatesTo: prefix, \'foo_\'.\r\tself assert: [PjCore makePharoJsSelector: #\'$foo:\'] evaluatesTo: prefix, \'$foo_\'.',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3619' ],		#self : OmReference [ '3620' ],		#time : DateAndTime [ '2024-03-03T08:20:55.22-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjInfrastructureTest,				#isMetaSide : false			},			#name : #testOpenUrlWithParameters,			#protocol : #tests,			#sourceCode : 'testOpenUrlWithParameters\r\r\t| clientUrl |\r\tclientUrl := self bridge server url ? (#paramA -> #valueA)\r\t             & (#paramB -> #valueB).\r\tself bridge client stop.\r\tself bridge resetProxiesImmediately.\r\tself waitWhile: [ self bridge isConnected ] timeOut: 2 seconds.\r\tself bridge client openWebBrowserOn: clientUrl asString.\r\tself waitUntil: [ self bridge isConnected ] timeOut: 2 seconds.\r\tself waitWhile: [ (app := self currentApp) isNil ] timeOut: 2 seconds.\r\tself assert: location search equals: \'?paramA=valueA&paramB=valueB\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3620' ],		#self : OmReference [ '3621' ],		#time : DateAndTime [ '2024-03-03T08:20:55.22-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjInfrastructureTest,				#isMetaSide : false			},			#name : #testSTSelector,			#protocol : #tests,			#sourceCode : 'testSTSelector\r\r\tself assert: [ PjCore makeSmalltalkSelector: #foo ] evaluatesTo: \'foo\'.\r\tself assert: [ PjCore makeSmalltalkSelector: #foo: ] evaluatesTo: \'foo:\'.\r\tself assert: [ PjCore makeSmalltalkSelector: #, ] evaluatesTo: \',\'.\r\tself assert: [ PjCore makeSmalltalkSelector: PjCore pharoJsSelectorPrefix, \'44_\' ] evaluatesTo: \',\'.\r\tself assert: [ PjCore makeSmalltalkSelector: PjCore pharoJsSelectorPrefix, \'foo\' ] evaluatesTo: \'foo\'.\r\tself assert: [ PjCore makeSmalltalkSelector: PjCore pharoJsSelectorPrefix, \'foo_\' ] evaluatesTo: \'foo:\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3621' ],		#self : OmReference [ '3622' ],		#time : DateAndTime [ '2024-03-03T08:20:55.22-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjInfrastructureTest,				#isMetaSide : false			},			#name : #testSetterGetsTrampolined,			#protocol : #tests,			#sourceCode : 'testSetterGetsTrampolined\r\r\tself bridge evalBlock: [ document js_at: \'foo\' put: 17 ].\r\tself bridge evalBlock: [ document foo: 42 ].\r\tself assert: (self bridge evalBlock: [ document foo = 42 ])',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3622' ],		#self : OmReference [ '3623' ],		#time : DateAndTime [ '2024-03-03T08:20:55.22-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjInfrastructureTest,				#isMetaSide : false			},			#name : #testValueNonInterference,			#protocol : #tests,			#sourceCode : 'testValueNonInterference\r\r\tself addToDOM: \'<input id="theInput" type="text" value="Name:">\'.\r\tself assert: [|t| t := document getElementById: #theInput.t value=t defaultValue] evaluatesTo: true.\r\tself assert: [|t| t := document getElementById: #theInput.t value: \'addr\'] evaluatesTo: \'addr\'.\r\tself assert: [|t| t := document getElementById: #theInput.t value] evaluatesTo: \'addr\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3623' ],		#self : OmReference [ '3624' ],		#time : DateAndTime [ '2024-03-03T08:20:55.221-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoadingTest,				#isMetaSide : false			},			#name : #testEvalBlock,			#protocol : #tests,			#sourceCode : 'testEvalBlock\r\tPjLoadForTest reset.\r\tself bridge evalBlock: [ window js_at: #valueForEvalTest put: 42 ].\r\tself\r\t\tassert: (self bridge evalBlock: [ window js_at: #valueForEvalTest ])\r\t\tequals: 42.\r\tself\r\t\tshould: [ self bridge evalBlock: [ window aMethodThatDoesntExist ] ]\r\t\traise: PjJavascriptError.\r\tself\r\t\tassert: (self bridge evalBlock: [ PjLoadForTest fortyTwo ])\r\t\tequals: PjLoadForTest fortyTwo.\r\tself\r\t\tassert: (self bridge evalBlock: [ PjLoadForTest new subtract: 25 ])\r\t\tequals: (PjLoadForTest new subtract: 25).\r\tself\r\t\tassert: (self bridge evalBlock: [ PjLoadForTest new seventeen ])\r\t\tequals: PjLoadForTest new seventeen.\r\tself\r\t\tassert: (self bridge evalBlock: [ PjLoadForTest y ])\r\t\tequals: PjLoadForTest y.\r\tself\r\t\tassert: (self bridge evalBlock: [ PjLoadForTest new z ])\r\t\tequals: PjLoadForTest new z.\r\tself\r\t\tassert: (self bridge evalBlock: [ PjLoadForTest classVarNames size ])\r\t\tequals: PjLoadForTest classVarNames size.\r\tself\r\t\tbridge evalBlock: [ PjLoadForTest setupClassVars ].\r\tself\r\t\tassert: (self bridge evalBlock: [ PjLoadForTest y ])\r\t\tequals: \'Y value\'.\r\tself\r\t\tassert: (self bridge evalBlock: [ PjLoadForTest new z ])\r\t\tequals: \'Z value\'.',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3624' ],		#self : OmReference [ '3625' ],		#time : DateAndTime [ '2024-03-03T08:20:55.221-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoadingTest,				#isMetaSide : false			},			#name : #testLiteralGeneration,			#protocol : #tests,			#sourceCode : 'testLiteralGeneration\r\r\tself assertEquivalent: [ PjLoadForTest literal ].\r\tself assertEquivalent: [ PjLoadForTest new literal ]',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3625' ],		#self : OmReference [ '3626' ],		#time : DateAndTime [ '2024-03-03T08:20:55.221-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoadingTest,				#isMetaSide : false			},			#name : #testLoadClass,			#protocol : #tests,			#sourceCode : 'testLoadClass\r\r\tPjLoadForTest reset.\r\tself bridge loadClass: PjLoadForTest.\r\tself\r\t\tassert: (self bridge evalBlock: [ PjLoadForTest fortyTwo ])\r\t\tequals: PjLoadForTest fortyTwo.\r\tself\r\t\tassert: (self bridge evalBlock: [ PjLoadForTest new subtract: 25 ])\r\t\tequals: (PjLoadForTest new subtract: 25).\r\tself\r\t\tassert: (self bridge evalBlock: [ PjLoadForTest new seventeen ])\r\t\tequals: PjLoadForTest new seventeen',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3626' ],		#self : OmReference [ '3627' ],		#time : DateAndTime [ '2024-03-03T08:20:55.221-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjLoadingTest,				#isMetaSide : false			},			#name : #testLoadClassContents,			#protocol : #tests,			#sourceCode : 'testLoadClassContents\r\r\t| first firstBlock second secondBlock className third pjPrefix|\r\tpjPrefix := self bridge exporter transpiler pharoJsSelectorPrefix.\r\tclassName := PjLoadForTest nameToUseForJsConversion.\r\tPjLoadForTest reset.\r\tfirst := self bridge convertToJs: PjLoadForTest.\r\tself assert: (first beginsWith: \'Smalltalk.installClass(class \', className,\' extends Object\' ).\r\tself assert: (first trim endsWith: className , \'.\', pjPrefix, \'initialize();\').\r\tfirstBlock := self bridge\r\t\tconvertToJs: [ PjLoadForTest fortyTwo ] asValuedBlock.\r\tself assert: (\'*registerDnuForAll*\' match: firstBlock).\r\tsecondBlock := self bridge\r\t\tconvertToJs: [ PjLoadForTest fortyTwo ] asValuedBlock.\r\tself deny: (\'*registerDnuForAll*\' match: secondBlock).\r\tsecond := self bridge convertToJs: PjLoadForTest.\r\tself assert: second equals: \'\'.\r\tself bridge exporter invalidateClass: PjLoadForTest.\r\tthird := self bridge convertToJs: PjLoadForTest.\r\tself deny: third = \'\'.\r\tself deny: (third beginsWith: \'function \' , className).\r\tself deny: (third endsWith: className , \'.\', pjPrefix, \'initialize();\')',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3627' ],		#self : OmReference [ '3628' ],		#time : DateAndTime [ '2024-03-03T08:20:55.221-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPerformTest,				#isMetaSide : false			},			#name : #testPerform,			#protocol : #tests,			#sourceCode : 'testPerform\r\r\tself assertEquivalent: [ 3 perform: #negated ]',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3628' ],		#self : OmReference [ '3629' ],		#time : DateAndTime [ '2024-03-03T08:20:55.221-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPerformTest,				#isMetaSide : false			},			#name : #testPerformWith,			#protocol : #tests,			#sourceCode : 'testPerformWith\r\r\tself assertEquivalent: [3 perform: #* with: 14]',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3629' ],		#self : OmReference [ '3630' ],		#time : DateAndTime [ '2024-03-03T08:20:55.222-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPerformTest,				#isMetaSide : false			},			#name : #testPerformWithArguments,			#protocol : #tests,			#sourceCode : 'testPerformWithArguments\r\r\tself assertEquivalent: [3 perform: #* withArguments: #(14)]',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3630' ],		#self : OmReference [ '3631' ],		#time : DateAndTime [ '2024-03-03T08:20:55.222-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyTest,				#isMetaSide : false			},			#name : #testArrayEquality,			#protocol : #tests,			#sourceCode : 'testArrayEquality\r\r\tself assertBlock: [ #() ] equalsBlock: [ #() ].\r\tself denyBlock: [ #() ] equalsBlock: [ #(1 2 3) ].\r\tself assertBlock: [ #(1 2 3) ] equalsBlock: [ #(1 2 3) ].\r\tself denyBlock: [ #(1 2) ] equalsBlock: [ #(1 2 3) ].\r\tself denyBlock: [ #(1 3 2) ] equalsBlock: [ #(1 2 3) ].\r\tself assertBlock: [ #(one two three) ] equalsBlock: [ #(one two three) ].\r\tself assertBlock: [ {true. \'two\'. nil. 3.14.}] equalsBlock: [ {true. \'two\'. nil. 3.14.} ].\r\tself assertBlock: [ {{true. \'two\'}. nil. 3.14.}] equalsBlock: [ {{true. \'two\'}. nil. 3.14.} ].\r\tself denyBlock: [ {{true. \'two\'}. nil. 3.14.}] equalsBlock: [ {{false. \'abc\'}. nil. 3.14.} ].',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3631' ],		#self : OmReference [ '3632' ],		#time : DateAndTime [ '2024-03-03T08:20:55.222-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyTest,				#isMetaSide : false			},			#name : #testAsJson,			#protocol : #tests,			#sourceCode : 'testAsJson\r\r\tself assert: 42 asJSON equals: \'42\'.\r\tself assert: \'a\\b"c\' asJSON equals: \'"a\\\\b\\"c"\'.\r\tself assert: nil asJSON equals: \'null\'.',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3632' ],		#self : OmReference [ '3633' ],		#time : DateAndTime [ '2024-03-03T08:20:55.222-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyTest,				#isMetaSide : false			},			#name : #testBlockClosures,			#protocol : #tests,			#sourceCode : 'testBlockClosures\r\r\tdocument body addEventListener: \'click\' block: [ 42 ].\r\tself\r\t\tshould: [ document body addEventListener: \'click\' block: 42 ]\r\t\traise: Error.\r\tself\r\t\tshould: [ document body addEventListener: \'click\' block: [ :ev | ^ 42 ] ]\r\t\traise: Error.\r\tself\r\t\tassert: (document body addEventListener: \'click\' block: [ :ev | 17 ])\r\t\tequals: true.\r\tself assert: self bridge blockClosures size equals: 1.\r\tself\r\t\tassert: (document body addEventListener: \'click\' block: [ :ev | 42 ])\r\t\tequals: true.\r\tself assert: self bridge blockClosures size equals: 1.\r\tdocument body removeEventListener: \'click\'.\r\tself assert:\r\t\tself bridge blockClosures size equals: 0.',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3633' ],		#self : OmReference [ '3634' ],		#time : DateAndTime [ '2024-03-03T08:20:55.222-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyTest,				#isMetaSide : false			},			#name : #testBrowser,			#protocol : #tests,			#sourceCode : 'testBrowser\r\r\tself assert: (window hasOwnProperty: \'document\') description: \'window properies\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3634' ],		#self : OmReference [ '3635' ],		#time : DateAndTime [ '2024-03-03T08:20:55.222-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyTest,				#isMetaSide : false			},			#name : #testChildren,			#protocol : #tests,			#sourceCode : 'testChildren\r\r\t| rectangle other |\r\trectangle := document createElement: \'span\'.\r\trectangle id: \'grn\'.\r\tdocument body\r\t\tappendChild: rectangle.\r\tself assert: (document getElementById: \'grn\') children size equals: 0.\r\tother := document createElement: \'span\'.\r\tother id: \'other\'.\r\trectangle appendChild: other.\r\tSmalltalk garbageCollect.\r\tself assert: (document getElementById: \'grn\') children size equals: 1.\r\tself assert: (document getElementsByTagName: \'span\') size equals: 2.\r\tself assert: ((document getElementsByTagName: \'span\') at: 1) id equals: \'grn\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3635' ],		#self : OmReference [ '3636' ],		#time : DateAndTime [ '2024-03-03T08:20:55.222-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyTest,				#isMetaSide : false			},			#name : #testClick,			#protocol : #tests,			#sourceCode : 'testClick\r\r\t| rectangle count |\r\tcount := 0.\r\trectangle := document createElement: \'div\'.\r\trectangle id: \'grn\'.\r\trectangle instVarNamed: #count put: 0.\t" need to use instVarNamed:put: to force creation of slot "\r\tSmalltalk garbageCollect.\r\tdocument body appendChild: rectangle.\r\trectangle\r\t\taddEventListener: \'click\'\r\t\tblock: [ :xev | \r\t\t\tcount := count + 1.\r\t\t\trectangle count: rectangle count + 1 ].\r\tself bridge\r\t\tevalJavascript:\r\t\t\t\'(\' , rectangle asJSON , \'.click(false),\' , rectangle asJSON\r\t\t\t\t, \'.click(true),false)\'.\r\tSmalltalk garbageCollect.\r\trectangle dispatchEvent: (window MouseEvent new: #click).\r\trectangle dispatchEvent: (window MouseEvent new: #click).\r\tself assert: (document getElementById: \'grn\') count equals: 4.\r\tSmalltalk garbageCollect.\r\tself assert: (document getElementById: \'grn\') count equals: 4.\r\trectangle dispatchEvent: (window MouseEvent new: #click).\r\trectangle dispatchEvent: (window MouseEvent new: #click).\r\tSmalltalk garbageCollect.\r\tself assert: (document getElementById: \'grn\') count equals: 6.\r\tself assert: count = 6',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3636' ],		#self : OmReference [ '3637' ],		#time : DateAndTime [ '2024-03-03T08:20:55.223-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyTest,				#isMetaSide : false			},			#name : #testClickWithEventTarget,			#protocol : #tests,			#sourceCode : 'testClickWithEventTarget\r\r\t| rectangle1 rectangle2 lastClickedRectangle count listenerBlock |\r\tcount := 0.\r\trectangle1 := document createElement: \'div\'.\r\trectangle1 id: \'rect1\'.\r\trectangle1 instVarNamed: #count put: 0.\r\trectangle2 := document createElement: \'div\'.\r\trectangle2 id: \'rect2\'.\r\trectangle2 instVarNamed: #count put: 0.\r\tSmalltalk garbageCollect.\r\tdocument body appendChild: rectangle1.\r\tdocument body appendChild: rectangle2.\r\tlistenerBlock := [ :xev :this | \r\t| alsoRectangle |\r\talsoRectangle := this.\r\tlastClickedRectangle := alsoRectangle.\r\tcount := count + 1.\r\talsoRectangle count: alsoRectangle count + 1 ].\r\trectangle1 addEventListener: \'click\' block: listenerBlock.\r\trectangle2 addEventListener: \'click\' block: listenerBlock.\r\trectangle1 dispatchEvent: (window MouseEvent new: #click).\r\tself assert: (document getElementById: \'rect1\') count equals: 1.\r\tself assert: rectangle1 equals: lastClickedRectangle.\r\tself assert: (document getElementById: \'rect2\') count equals: 0.\r\tself assert: count = 1.\r\trectangle2 dispatchEvent: (window MouseEvent new: #click).\r\tSmalltalk garbageCollect.\r\tself assert: rectangle2 equals: lastClickedRectangle.\r\tself assert: (document getElementById: \'rect1\') count equals: 1.\r\tself assert: (document getElementById: \'rect2\') count equals: 1.\r\tself assert: count = 2',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3637' ],		#self : OmReference [ '3638' ],		#time : DateAndTime [ '2024-03-03T08:20:55.223-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyTest,				#isMetaSide : false			},			#name : #testGetElementById,			#protocol : #tests,			#sourceCode : 'testGetElementById\r\r\t| rectangle |\r\trectangle := document createElement: \'div\'.\r\trectangle id: \'grn\'.\r\tdocument body\r\t\tappendChild: rectangle.\r\tself assert: (document getElementById: \'grn\') id equals: \'grn\'.\r\tself assert: (document js_getElementById: \'grn\') id equals: \'grn\'',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3638' ],		#self : OmReference [ '3639' ],		#time : DateAndTime [ '2024-03-03T08:20:55.223-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyTest,				#isMetaSide : false			},			#name : #testIterateOverChildren,			#protocol : #tests,			#sourceCode : 'testIterateOverChildren\r\r\t| container newChild |\r\tcontainer := document createElement: \'div\'.\r\t10 timesRepeat: [\r\t\tnewChild := document createElement: \'span\'.\r\t\tcontainer appendChild: newChild].\r\tself assert: container children size equals: 10.\r\tcontainer children withIndexDo: [ : each : index | \r\t\teach textContent: index].',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3639' ],		#self : OmReference [ '3640' ],		#time : DateAndTime [ '2024-03-03T08:20:55.223-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyTest,				#isMetaSide : false			},			#name : #testProxyGarbageCollection,			#protocol : #tests,			#sourceCode : 'testProxyGarbageCollection\r\r\t| b jsName |\r\tb := document body.\r\tjsName := b javascriptName.\r\tself deny: jsName isNil.\r\t\r\t"Following lines to mimic the effect of garbage collection in a deteministic way."\r\t(self finalizationRegistry remove: b ifAbsent: [ nil ])\r\t\tifNotNil: [ :finalizerItem | finalizerItem finalizeValues ].\r\tb := nil.\r\t\r\tself deny: (global includesKey: jsName)',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3640' ],		#self : OmReference [ '3641' ],		#time : DateAndTime [ '2024-03-03T08:20:55.223-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyTest,				#isMetaSide : false			},			#name : #testProxyMissingError,			#protocol : #tests,			#sourceCode : 'testProxyMissingError\r\r\t1 to: 10 do: [ :num | \r\t\tdocument body children.\r\t\tnum milliSeconds wait ]',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3641' ],		#self : OmReference [ '3642' ],		#time : DateAndTime [ '2024-03-03T08:20:55.223-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyTest,				#isMetaSide : false			},			#name : #testValueNonInterference,			#protocol : #tests,			#sourceCode : 'testValueNonInterference\r\r\t| theInput |\r\tself\r\t\taddToDOM: \'<input id="testValueNonInterference" type="text" value="Name:">\'.\r\ttheInput := self bridge\r\t\tevalBlock: [ document getElementById: #testValueNonInterference ].\r\tself assert: theInput value equals: theInput defaultValue',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3642' ],		#self : OmReference [ '3643' ],		#time : DateAndTime [ '2024-03-03T08:20:55.223-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReflectionTest,				#isMetaSide : false			},			#name : #testClassName,			#protocol : #tests,			#sourceCode : 'testClassName\r\r\t| class |\r\tclass := classFactory\r\t\tsilentlyNewSubclassOf: PjObject\r\t\tinstanceVariableNames: \'x y\'\r\t\tclassVariableNames: \'\'.\r\tself bridge loadClass: class.\r\tself assert: [ class name ] evaluatesTo: class name asString.\r\tself assert: [ class new className ] evaluatesTo: class name asString',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3643' ],		#self : OmReference [ '3644' ],		#time : DateAndTime [ '2024-03-03T08:20:55.224-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReflectionTest,				#isMetaSide : false			},			#name : #testDirectSubclasses,			#protocol : #tests,			#sourceCode : 'testDirectSubclasses\r\r\t| objectInitialSubclassesSize objectNewSubclassesSize |\r\tobjectInitialSubclassesSize := self evalBlock: [ Object subclasses size  ].\t\r\tself assertBlock: [Object subclasses includesAll: { PjFunction. PjArray. PjNumber. PjBoolean } ].\t\r\tself assert: objectInitialSubclassesSize > 4.\r\tself bridge loadClass: PjArrayClassExtensionForTest.\r\tself assertBlock: [ Object subclasses size = objectInitialSubclassesSize].\t\r\tself assertBlock: [PjFunction subclasses size = 1 ].\r\tself assertBlock: [PjFunction subclasses includes: PjClass ].\r\tself bridge loadAllClasses: { PjBSubClassOfA . PjCSubClassOfA  }.\r\tobjectNewSubclassesSize := self evalBlock: [ Object subclasses size  ].\t\r\tself assert: objectNewSubclassesSize equals: objectInitialSubclassesSize + 1.\r\tself assertBlock: [PjASuperClass subclasses size = 2 ].\r\tself assertBlock: [PjASuperClass subclasses includes: PjBSubClassOfA].\r\tself assertBlock: [PjASuperClass subclasses includes: PjCSubClassOfA].\r\tself assertBlock: [PjBSubClassOfA subclasses isEmpty ].\r\tself assertBlock: [PjCSubClassOfA subclasses isEmpty ].\r\t\r',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3644' ],		#self : OmReference [ '3645' ],		#time : DateAndTime [ '2024-03-03T08:20:55.224-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReflectionTest,				#isMetaSide : false			},			#name : #testDirectSuperclass,			#protocol : #tests,			#sourceCode : 'testDirectSuperclass\r\t\r\tself assertBlock: [PjClass superclass == PjFunction ].\r\tself assertBlock: [PjFunction superclass == Object ].\r\tself assertBlock: [Object superclass isNil ].\r\tself assertBlock: [PjArray superclass == Object ].\r\tself bridge loadAllClasses: { PjBSubClassOfA . PjCSubClassOfA  }.\r\tself assertBlock: [PjASuperClass superclass == Object ].\r\tself assertBlock: [PjBSubClassOfA superclass == PjASuperClass ].\r\tself assertBlock: [PjCSubClassOfA superclass == PjASuperClass ].\r\t\r',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3645' ],		#self : OmReference [ '3646' ],		#time : DateAndTime [ '2024-03-03T08:20:55.224-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReflectionTest,				#isMetaSide : false			},			#name : #testMetaclassLink,			#protocol : #tests,			#sourceCode : 'testMetaclassLink\r\t\r\tself assertBlock: [( Object getPrototypeOf: PjClass prototype) == PjFunction prototype ].\r\tself assertBlock: [( Object getPrototypeOf: PjClass) == PjFunction ].\r\tself assertBlock: [( Object getPrototypeOf: PjFunction) == Object ].\r\tself assertBlock: [( Object getPrototypeOf: PjArray) == Object ].\r\tself assertBlock: [( Object getPrototypeOf: PjBoolean ) == Object ].\r\tself assertBlock: [( Object getPrototypeOf: PjDate ) == Object ].\r\tself assertBlock: [( Object getPrototypeOf: PjNumber) == Object ].\r\tself assertBlock: [( Object getPrototypeOf: PjString) == Object ].\r',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3646' ],		#self : OmReference [ '3647' ],		#time : DateAndTime [ '2024-03-03T08:20:55.224-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReflectionTest,				#isMetaSide : false			},			#name : #testNestedRepeats,			#protocol : #tests,			#sourceCode : 'testNestedRepeats\r\r\t| class tryNestedRepeatsSelector tryNestedRepeatsMethod |\r\tclass := classFactory\r\t\tsilentlyNewSubclassOf: PjObject\r\t\tinstanceVariableNames: \'x y\'\r\t\tclassVariableNames: \'\'.\r\ttryNestedRepeatsSelector := #tryNestedRepeats.\r\ttryNestedRepeatsMethod := self class compiledMethodAt: tryNestedRepeatsSelector.\r\tclass compile: tryNestedRepeatsMethod sourceCode.\r\tself bridge loadClass: class.\r\tself\r\t\tassert: [ class new tryNestedRepeats ]\r\t\tevaluatesTo: self tryNestedRepeats',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3647' ],		#self : OmReference [ '3648' ],		#time : DateAndTime [ '2024-03-03T08:20:55.224-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReflectionTest,				#isMetaSide : false			},			#name : #testReflection,			#protocol : #tests,			#sourceCode : 'testReflection\r\r\tself assertEquivalent: [ Number inheritsFrom: Object ].\r\tself assertEquivalent: [ Number canUnderstand: #isNil ].\r\tself assertEquivalent: [ Number canUnderstand: #someSelectorThatDoesntExist ].\r\tself assertEquivalent: [ Number canUnderstand: #ifTrue: ].\r\tself assertEquivalent: [ 42 respondsTo: #ifTrue: ].\r\tself assertEquivalent: [ 42 respondsTo: #abs ].\r\tself assertEquivalent: [ true respondsTo: #ifTrue: ].\r\tself assertEquivalent: [ Object new respondsTo: #neverDefined ].\r\tself assert: [ document respondsTo: #neverDefined ] evaluatesTo: false.\r\tself assertEquivalent: [ 3 isKindOf: Number ].\r\tself assertEquivalent: [ 3 isKindOf: Object ].\r\tself assertEquivalent: [ 3 isMemberOf: SmallInteger ].\r\tself assertEquivalent: [ 3 isMemberOf: Object ].\r\tself assertEquivalent: [ true respondsTo: #not ].\r\tself assertEquivalent: [ true respondsTo: #ifTrue: ].\r\tself assertEquivalent: [ 42 respondsTo: #<= ].',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3648' ],		#self : OmReference [ '3649' ],		#time : DateAndTime [ '2024-03-03T08:20:55.224-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReflectionTest,				#isMetaSide : false			},			#name : #testTemporaries,			#protocol : #tests,			#sourceCode : 'testTemporaries\r\t| class tryTemporariesSelector tryTemporariesMethod |\r\tclass := classFactory\r\t\tsilentlyNewSubclassOf: PjObject\r\t\tinstanceVariableNames: \'x y\'\r\t\tclassVariableNames: \'\'.\r\ttryTemporariesSelector := #tryTemporaries.\r\ttryTemporariesMethod := self class compiledMethodAt: tryTemporariesSelector.\r\tclass compile: tryTemporariesMethod sourceCode.\r\tself bridge loadClass: class.\r\tself\r\t\tassert: [ class new tryTemporaries ]\r\t\tevaluatesTo: self tryTemporaries',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3649' ],		#self : OmReference [ '3650' ],		#time : DateAndTime [ '2024-03-03T08:20:55.225-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReflectionTest,				#isMetaSide : false			},			#name : #tryNestedRepeats,			#protocol : #'test support',			#sourceCode : 'tryNestedRepeats\r\t\t| x |\r\t\tx := 1.\r\t\t5 timesRepeat: [| w |\r\t\t\tw := w ifNil: [ x ].\r\t\t\t10 timesRepeat: [\r\t\t\t\tx := x + 1].\r\t\t\tx := x + w].\r\t\t^ x',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3650' ],		#self : OmReference [ '3651' ],		#time : DateAndTime [ '2024-03-03T08:20:55.225-05:00' ],		#trigger : OmReference [ '3480' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjReflectionTest,				#isMetaSide : false			},			#name : #tryTemporaries,			#protocol : #'test support',			#sourceCode : 'tryTemporaries \r\t\t| x b |\r\t\tb := [ : a | | y |\r\t\t\t11 timesRepeat: [ | w |\r\t\t\t\tw := (w ifNil: [ 0 ])+(a*100).\r\t\t\t\ty := (y ifNil: [ 0 ])+w.\r\t\t\t].\r\t\t\tb isNil ifFalse: [ | z |\r\t\t\t\tz := (z ifNil: [ 0 ])+a.\r\t\t\t\ty := (y ifNil: [ 0 ])+(a*10).\r\t\t\t\tx := (x ifNil: [ 0 ])+(a*100000)+y+z]].\r\t\tb value: 1.\r\t\tb value: 4.\r\t\t^ x',			#stamp : '',			#package : #PharoJs-Base-Bridge-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:55.449-05:00' ],		#prior : OmReference [ '3651' ],		#self : OmReference [ '3652' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-Base-Transpiler-Optimizations-Tests-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3652' ],		#self : OmReference [ '3653' ],		#time : DateAndTime [ '2024-03-03T08:20:55.478-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Transpiler-Optimizations-Tests-Tests,		#affectedPackageName : #PharoJs-Base-Transpiler-Optimizations-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3653' ],		#self : OmReference [ '3654' ],		#time : DateAndTime [ '2024-03-03T08:20:55.48-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjOptimizedMethodTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Tests-Tests\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjOptimizedMethodTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjOptimizedMethodTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjOptimizedMethodTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjOptimizedMethodTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Optimizations-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3654' ],		#self : OmReference [ '3655' ],		#time : DateAndTime [ '2024-03-03T08:20:55.483-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjTranspilationClassCompilationTest subclass: #PjOptimizedClassTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Tests-Tests\'',				#superclassName : 'PjTranspilationClassCompilationTest',				#traitCompositionSource : '{}'			},			#name : #PjOptimizedClassTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjOptimizedClassTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjOptimizedClassTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjOptimizedClassTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Optimizations-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3655' ],		#self : OmReference [ '3656' ],		#time : DateAndTime [ '2024-03-03T08:20:55.486-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjTranspilationClassCompilationTest subclass: #PjOptimizedCoreLibrariesTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Tests-Tests\'',				#superclassName : 'PjTranspilationClassCompilationTest',				#traitCompositionSource : '{}'			},			#name : #PjOptimizedCoreLibrariesTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjOptimizedCoreLibrariesTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjOptimizedCoreLibrariesTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjOptimizedCoreLibrariesTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Optimizations-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3656' ],		#self : OmReference [ '3657' ],		#time : DateAndTime [ '2024-03-03T08:20:55.487-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjStringGenerationTest subclass: #PjGenerationOptimizationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Tests-Tests\'',				#superclassName : 'PjStringGenerationTest',				#traitCompositionSource : '{}'			},			#name : #PjGenerationOptimizationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjGenerationOptimizationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjGenerationOptimizationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjGenerationOptimizationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Optimizations-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3657' ],		#self : OmReference [ '3658' ],		#time : DateAndTime [ '2024-03-03T08:20:55.489-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSpecialMessagesConversionTest subclass: #PjConversionOptimizationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Tests-Tests\'',				#superclassName : 'PjSpecialMessagesConversionTest',				#traitCompositionSource : '{}'			},			#name : #PjConversionOptimizationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjConversionOptimizationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjConversionOptimizationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjConversionOptimizationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Optimizations-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3658' ],		#self : OmReference [ '3659' ],		#time : DateAndTime [ '2024-03-03T08:20:55.49-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Transpiler-Optimizations-Tests-Support,		#affectedPackageName : #PharoJs-Base-Transpiler-Optimizations-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3659' ],		#self : OmReference [ '3660' ],		#time : DateAndTime [ '2024-03-03T08:20:55.491-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjOptimizedMethods\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjOptimizedMethods,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjOptimizedMethods class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjOptimizedMethods class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjOptimizedMethods,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Tests-Support,			#package : #PharoJs-Base-Transpiler-Optimizations-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3660' ],		#self : OmReference [ '3661' ],		#time : DateAndTime [ '2024-03-03T08:20:55.494-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjOptimizedMethods\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Tests-Support\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjOptimizedMethods,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjOptimizedMethods class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjOptimizedMethods class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjOptimizedMethods,					#isMetaSide : false				},				#parent : @8,				#content : 'Sample methods for PjOptimizedMethodTest',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Tests-Support,			#package : #PharoJs-Base-Transpiler-Optimizations-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Sample methods for PjOptimizedMethodTest',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3661' ],		#self : OmReference [ '3662' ],		#time : DateAndTime [ '2024-03-03T08:20:55.496-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjAbstractAstTest subclass: #PjAstOptimizationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Transpiler-Optimizations-Tests-Tests\'',				#superclassName : 'PjAbstractAstTest',				#traitCompositionSource : '{}'			},			#name : #PjAstOptimizationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAstOptimizationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAstOptimizationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAstOptimizationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Transpiler-Optimizations-Tests-Tests,			#package : #PharoJs-Base-Transpiler-Optimizations-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3662' ],		#self : OmReference [ '3663' ],		#time : DateAndTime [ '2024-03-03T08:20:55.633-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjOptimizedMethodTest,				#isMetaSide : false			},			#name : #testShouldReturnTrue,			#protocol : #tests,			#sourceCode : 'testShouldReturnTrue\r\tself assertEquivalent: [|d|\r\t\td := PjOptimizedMethods new.\r\t\td shouldReturnTrue].',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3663' ],		#self : OmReference [ '3664' ],		#time : DateAndTime [ '2024-03-03T08:20:55.634-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjOptimizedMethodTest,				#isMetaSide : false			},			#name : #testShouldReturnTrue2,			#protocol : #tests,			#sourceCode : 'testShouldReturnTrue2\r\tself assertEquivalent: [|d|\r\t\td := PjOptimizedMethods new.\r\t\td shouldReturnTrue2].',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3664' ],		#self : OmReference [ '3665' ],		#time : DateAndTime [ '2024-03-03T08:20:55.635-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjOptimizedClassTranspilationTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\ttranspiler addAllOptionalConversions',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3665' ],		#self : OmReference [ '3666' ],		#time : DateAndTime [ '2024-03-03T08:20:55.635-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjOptimizedClassTranspilationTest,				#isMetaSide : false			},			#name : #testBlockTempNames,			#protocol : #testing,			#sourceCode : 'testBlockTempNames\r\tself generateJsCodeForClasses: { PjClassForTranspilationTest }.\r\tself assertInstanceMethod: #blockWithUnnamedParameter\r\t\tequals: \'(){var $1;if(($1=this._m1())==null){return 42;}else{return $1}}\'.\r\tself assertInstanceMethod: #blockWithUnnamedParameterNonTail\r\t\tequals: \'(){var $1;return 3+(($1=this._m1())==null?42:$1)}\'.\r\tself assertInstanceMethod: #blockWithNamedParameter\r\t\tequals: \'(){var foo;if((foo=this._m1())==null){return null;}else{return $asNil$(foo)._m1()}}\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3666' ],		#self : OmReference [ '3667' ],		#time : DateAndTime [ '2024-03-03T08:20:55.636-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjOptimizedClassTranspilationTest,				#isMetaSide : false			},			#name : #testBlocksAndReturns,			#protocol : #testing,			#sourceCode : 'testBlocksAndReturns\r\tself jsCode: (self convertClass: PjClassForTranspilationTest).\r\tself assertInstanceMethod: #whileNotAtEnd\r\t\tequals: \'(){this._m_((x)=>{while(true==$asNil$(x)._m1()){}});while(true==this._m2()){}return 42}\'.\r\tself assertInstanceMethod: #whileAtEnd\r\t\tequals: \'(){this._m_((x)=>{while(true==$asNil$(x)._m1()){}});while(true==this._m2()){}return this}\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3667' ],		#self : OmReference [ '3668' ],		#time : DateAndTime [ '2024-03-03T08:20:55.636-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjOptimizedClassTranspilationTest,				#isMetaSide : false			},			#name : #testSubIf,			#protocol : #testing,			#sourceCode : 'testSubIf\r\tself jsCode: (self convertClass: PjClassForTranspilationTest).\r\tself assertClassMethod: #setupMessage\r\t\tequals: \'(){return $asNil$((this===JsClass?"":"Sorry, "))._44_("Click anywhere")}\'.\r\tself assertClassMethod: #click:\r\t\tequals: \'(ev){var m,$1;var $_err_$={};try{m=($1=this._setupMessage())==null?\',PjCore throwFunctionName,\'($_err_$=this):$1;return m}catch(e){if(e===$_err_$)return e;throw e}}\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3668' ],		#self : OmReference [ '3669' ],		#time : DateAndTime [ '2024-03-03T08:20:55.636-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjOptimizedCoreLibrariesTranspilationTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\ttranspiler addAllOptionalConversions',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3669' ],		#self : OmReference [ '3670' ],		#time : DateAndTime [ '2024-03-03T08:20:55.636-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjOptimizedCoreLibrariesTranspilationTest,				#isMetaSide : false			},			#name : #testPjLoggingEvaluatorWebSocketDelegateClass,			#protocol : #testing,			#sourceCode : 'testPjLoggingEvaluatorWebSocketDelegateClass\r\tself jsCode: (self convertClass: PjLoggingEvaluatorWebsocketDelegate).\r\tself assertInstanceMethod: #log: equals: \'(aString){var logElement,br,text,$_self_$=this;(()=>{var $1;br=$asNil$(document)._createElement_("BR");text=$asNil$(document)._createTextNode_(aString);logElement=$_self_$._logElement();return ($1=$asNil$(logElement),$1._insertBefore_node_(br,$asNil$(logElement)._firstChild()),$1._insertBefore_node_(text,$asNil$(logElement)._firstChild()))})._on_do_(Error,()=>{return $asNil$(console)._log_(aString)});return this}\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3670' ],		#self : OmReference [ '3671' ],		#time : DateAndTime [ '2024-03-03T08:20:55.637-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjOptimizedCoreLibrariesTranspilationTest,				#isMetaSide : false			},			#name : #testPjStringClass,			#protocol : #testing,			#sourceCode : 'testPjStringClass\r\tself jsCode: (self convertClass: PjString).\rself assertInstanceMethod: #isLetter equals: \'(){return $asNil$(this._letterCharCodes())._includes_(this.charCodeAt(0))}\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3671' ],		#self : OmReference [ '3672' ],		#time : DateAndTime [ '2024-03-03T08:20:55.637-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjGenerationOptimizationTest,				#isMetaSide : false			},			#name : #testAnd,			#protocol : #testing,			#sourceCode : 'testAnd\r\t| y inputAst |\r\ty := PjTempVariableNode identifier: #y.\r\tinputAst := PjApplyNode\r\t\treceiver: selfNode\r\t\tselector: #foo:\r\t\targs: {PjIfTrueIfFalseNode \r\t\t\ttest: y\r\t\t\twhenTrue: one\r\t\t\twhenFalse: falseNode}.\r\tself assert:  inputAst asStringEquals: \'this._foo_(true==y&&1)\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3672' ],		#self : OmReference [ '3673' ],		#time : DateAndTime [ '2024-03-03T08:20:55.637-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjGenerationOptimizationTest,				#isMetaSide : false			},			#name : #testIfFalse,			#protocol : #testing,			#sourceCode : 'testIfFalse\r\t| y inputAst returnAst |\r\ty := PjTempVariableNode identifier: #y.\r\tinputAst := PjIfTrueNode \r\t\ttest: y not\r\t\twhenTrue: one.\r\treturnAst := PjReturnNode expression: (PjIfTrueIfFalseNode \r\t\ttest: y\r\t\twhenTrue: nilNode\r\t\twhenFalse: one).\r\tself assert:  inputAst asStringEquals: \'if(false==y){1}\'.\r\tself assert:  returnAst asStringEquals: \'return true==y?null:1\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3673' ],		#self : OmReference [ '3674' ],		#time : DateAndTime [ '2024-03-03T08:20:55.637-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjGenerationOptimizationTest,				#isMetaSide : false			},			#name : #testIfNil,			#protocol : #testing,			#sourceCode : 'testIfNil\r\t| inputAst tempVariable tempVariableName y |\r\ty := PjTempVariableNode identifier: #y.\r\ttempVariableName := PjStringGenerator tempNamePrefix, \'1\'.\r\ttempVariable := PjTempVariableNode identifier: tempVariableName asSymbol.\r\tinputAst := PjReturnNode expression: (\r\t\tPjIfNilNode \r\t\t\ttest: (self apply: y selector: #foo)\r\t\t\twhenNil: one).\r\tself assert: inputAst asStringEquals: \'return $asNil$(y)._foo()==null?1:null\'.\r\r\tinputAst := PjIfNilNode \r\t\t\ttest: (self apply: y selector: #foo)\r\t\t\twhenNil: one.\r\tself assert: inputAst asStringEquals: \'if($asNil$(y)._foo()==null){1}\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3674' ],		#self : OmReference [ '3675' ],		#time : DateAndTime [ '2024-03-03T08:20:55.637-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjGenerationOptimizationTest,				#isMetaSide : false			},			#name : #testIfNilCaseForIfNilIfNotNil,			#protocol : #testing,			#sourceCode : 'testIfNilCaseForIfNilIfNotNil\r\t| expectedAst tempVariable tempVariableName y |\r\ty := PjTempVariableNode identifier: #y.\r\ttempVariableName := PjStringGenerator tempNamePrefix, \'1\'.\r\ttempVariable := PjTempVariableNode identifier: tempVariableName asSymbol.\r\texpectedAst := PjReturnNode expression: (\r\t\tPjIfNilIfNotNilNode \r\t\t\ttest: (PjAssignNode\r\t\t\t\ttarget: tempVariable\r\t\t\t\texpression: (self apply: y selector: #foo))\r\t\t\twhenNotNil: tempVariable\r\t\t\twhenNil: one).\r\tself\r\t\tassert: expectedAst\r\t\tasStringEquals: \'return ($1=$asNil$(y)._foo())==null?1:$1\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3675' ],		#self : OmReference [ '3676' ],		#time : DateAndTime [ '2024-03-03T08:20:55.638-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjGenerationOptimizationTest,				#isMetaSide : false			},			#name : #testIfNotNil,			#protocol : #testing,			#sourceCode : 'testIfNotNil\r\t| expectedAst tempVariable tempVariableName y |\r\ty := PjTempVariableNode identifier: #y.\r\ttempVariableName := #x.\r\ttempVariable := PjTempVariableNode identifier: tempVariableName.\r\r\texpectedAst := PjReturnNode expression: (\r\t\tPjIfNotNilNode \r\t\t\ttest: (PjAssignNode\r\t\t\t\ttarget: tempVariable\r\t\t\t\texpression: (self apply: y selector: #foo nonNil: false))\r\t\t\twhenNotNil: tempVariable).\r\tself\r\t\tassert: expectedAst\r\t\tasStringEquals: \'return (x=$asNil$(y)._foo())==null?null:x\'.\r\r\texpectedAst := PjReturnNode expression: (\r\t\tPjIfNotNilNode \r\t\t\ttest: (PjAssignNode\r\t\t\t\ttarget: tempVariable\r\t\t\t\texpression: (self apply: y selector: #foo nonNil: false))\r\t\t\twhenNotNil: (self apply: tempVariable selector: #foo nonNil: true)).\r\tself\r\t\tassert: expectedAst\r\t\tasStringEquals: \'return (x=$asNil$(y)._foo())==null?null:x._foo()\'.\r\r\texpectedAst := PjIfNotNilNode \r\t\t\ttest: (PjAssignNode\r\t\t\t\ttarget: tempVariable\r\t\t\t\texpression: (self apply: y selector: #foo nonNil: false))\r\t\t\twhenNotNil: tempVariable.\r\tself assert: expectedAst asStringEquals: \'if((x=$asNil$(y)._foo())!=null){x}\'.\r\r\texpectedAst := PjIfNotNilNode \r\t\t\ttest: (PjAssignNode\r\t\t\t\ttarget: tempVariable\r\t\t\t\texpression: (self apply: y selector: #foo))\r\t\t\twhenNotNil: (self apply: tempVariable selector: #foo nonNil: true).\r\tself\r\t\tassert: expectedAst\r\t\tasStringEquals: \'if((x=$asNil$(y)._foo())!=null){x._foo()}\'.\r\r\texpectedAst := PjIfNotNilNode\r\t\ttest: y\r\t\twhenNotNil: returnOne. \r\tself\r\t\tassert: expectedAst\r\t\tasStringEquals: \'if(y!=null){return 1}\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3676' ],		#self : OmReference [ '3677' ],		#time : DateAndTime [ '2024-03-03T08:20:55.638-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjGenerationOptimizationTest,				#isMetaSide : false			},			#name : #testIfNotNilCaseForIfNilIfNotNil,			#protocol : #testing,			#sourceCode : 'testIfNotNilCaseForIfNilIfNotNil\r\t| expectedAst tempVariable tempVariableName y |\r\ty := PjTempVariableNode identifier: #y.\r\ttempVariableName := #x.\r\ttempVariable := PjTempVariableNode identifier: tempVariableName.\r\r\texpectedAst := PjReturnNode expression: (\r\t\tPjIfNilIfNotNilNode \r\t\t\ttest: (PjAssignNode\r\t\t\t\ttarget: tempVariable\r\t\t\t\texpression: (self apply: y selector: #foo)) \r\t\t\twhenNotNil: tempVariable\r\t\t\twhenNil: one).\r\tself assert: expectedAst asStringEquals: \'return (x=$asNil$(y)._foo())==null?1:x\'.\r\r\texpectedAst := PjReturnNode expression: (\r\t\tPjIfNilIfNotNilNode \r\t\t\ttest: (PjAssignNode\r\t\t\t\ttarget: tempVariable\r\t\t\t\texpression: (self apply: y selector: #foo))\r\t\t\twhenNotNil: (self apply: tempVariable selector: #foo nonNil: true)\r\t\t\twhenNil: one).\r\tself assert: expectedAst asStringEquals: \'return (x=$asNil$(y)._foo())==null?1:x._foo()\'.\r\r\texpectedAst := PjIfNilIfNotNilNode \r\t\t\ttest: (PjAssignNode\r\t\t\t\ttarget: tempVariable\r\t\t\t\texpression: (self apply: y selector: #foo))\r\t\t\twhenNotNil: tempVariable\r\t\t\twhenNil: one .\r\tself assert: expectedAst asStringEquals: \'if((x=$asNil$(y)._foo())==null){1;}else{x}\'.\r\r\texpectedAst := PjIfNilIfNotNilNode \r\t\t\ttest: (PjAssignNode\r\t\t\t\ttarget: tempVariable\r\t\t\t\texpression: (self apply: y selector: #foo))\r\t\t\twhenNotNil: (self apply: tempVariable selector: #foo nonNil: true)\r\t\t\twhenNil: one.\r\tself assert: expectedAst asStringEquals: \'if((x=$asNil$(y)._foo())==null){1;}else{x._foo()}\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3677' ],		#self : OmReference [ '3678' ],		#time : DateAndTime [ '2024-03-03T08:20:55.638-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjGenerationOptimizationTest,				#isMetaSide : false			},			#name : #testIfTrue,			#protocol : #testing,			#sourceCode : 'testIfTrue\r\t| y inputAst |\r\ty := PjTempVariableNode identifier: #y.\r\tinputAst := PjIfTrueNode \r\t\ttest: y\r\t\twhenTrue: one.\r\tself assert:  inputAst asStringEquals: \'if(true==y){1}\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3678' ],		#self : OmReference [ '3679' ],		#time : DateAndTime [ '2024-03-03T08:20:55.638-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjGenerationOptimizationTest,				#isMetaSide : false			},			#name : #testIfTrueIfFalse,			#protocol : #testing,			#sourceCode : 'testIfTrueIfFalse\r\t| y inputAst returnAst |\r\ty := PjTempVariableNode identifier: #y.\r\tinputAst := PjIfTrueIfFalseNode \r\t\ttest: y\r\t\twhenTrue: one\r\t\twhenFalse: two.\r\treturnAst := PjReturnNode expression: inputAst.\r\tself assert:  inputAst asStringEquals: \'if(true==y){1}else{2}\'.\r\tself assert:  returnAst asStringEquals: \'return true==y?1:2\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3679' ],		#self : OmReference [ '3680' ],		#time : DateAndTime [ '2024-03-03T08:20:55.638-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjGenerationOptimizationTest,				#isMetaSide : false			},			#name : #testOr,			#protocol : #testing,			#sourceCode : 'testOr\r\t| y inputAst |\r\ty := PjTempVariableNode identifier: #y.\r\tinputAst := PjApplyNode\r\t\treceiver: selfNode\r\t\tselector: #foo:\r\t\targs: {PjIfTrueIfFalseNode \r\t\t\ttest: y\r\t\t\twhenTrue: trueNode\r\t\t\twhenFalse: one}.\r\tself assert:  inputAst asStringEquals: \'this._foo_(true==y||1)\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3680' ],		#self : OmReference [ '3681' ],		#time : DateAndTime [ '2024-03-03T08:20:55.639-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjGenerationOptimizationTest,				#isMetaSide : false			},			#name : #testSequence,			#protocol : #testing,			#sourceCode : 'testSequence\r\t| x inputAst |\r\tx := PjTempVariableNode identifier: #x.\r\tinputAst := PjSequenceNode\r\t\texpressions:\r\t\t\t{one.\r\t\t\ttwo.\r\t\t\t(PjIfTrueIfFalseNode\r\t\t\t\ttest: (self apply: x selector: #foo)\r\t\t\t\twhenTrue: one\r\t\t\t\twhenFalse: two)}.\r\tself\r\t\tassert: (PjIfTrueNode test: inputAst whenTrue: one)\r\t\tasStringEquals:\r\t\t\t\'if(true==(1,2,(true==$asNil$(x)._foo()?1:2))){1}\'.\r\tself\r\t\tassert: inputAst\r\t\tasStringEquals: \'1;2;if(true==$asNil$(x)._foo()){1}else{2}\'.\r\tinputAst := self\r\t\tsimpleBlock:\r\t\t\t{(PjIfTrueIfFalseNode\r\t\t\t\ttest: one\r\t\t\t\twhenTrue:\r\t\t\t\t\t(PjSequenceNode\r\t\t\t\t\t\texpressions:\r\t\t\t\t\t\t\t{two.\r\t\t\t\t\t\t\t(PjIfTrueNode test: one not whenTrue: two).\r\t\t\t\t\t\t\treturnThree})\r\t\t\t\twhenFalse:\r\t\t\t\t\t(PjReturnNode\r\t\t\t\t\t\texpression:\r\t\t\t\t\t\t\t(self\r\t\t\t\t\t\t\t\tsimpleBlock:\r\t\t\t\t\t\t\t\t\t{two.\r\t\t\t\t\t\t\t\t\treturnThree}\r\t\t\t\t\t\t\t\tlocals: #()))).\r\t\t\ttwo.\r\t\t\treturnThree}\r\t\tlocals: #().\r\tself\r\t\tassert: inputAst\r\t\tasStringEquals:\r\t\t\t\'(()=>{if(true==1){2;if(false==1){2};return 3}else{return ()=>{2;return 3}};2;return 3})\'.\r\tinputAst := PjBlockNode\r\t\tparameters: #(a)\r\t\tlocals: #(d)\r\t\tbody:\r\t\t\t{(PjIfTrueNode\r\t\t\t\ttest: falseNode\r\t\t\t\twhenTrue:\r\t\t\t\t\t(PjSequenceNode\r\t\t\t\t\t\texpressions:\r\t\t\t\t\t\t\t{(PjAssignNode\r\t\t\t\t\t\t\t\ttarget: (PjTempVariableNode identifier: #d)\r\t\t\t\t\t\t\t\texpression: trueNode)})).\r\t\t\t(PjAssignNode\r\t\t\t\ttarget: (PjTempVariableNode identifier: #d)\r\t\t\t\texpression: falseNode).\r\t\t\t(PjReturnNode expression: (PjArgumentNode identifier: #a))}.\r\tself\r\t\tassert: inputAst\r\t\tasStringEquals: \'((a)=>{var d;if(true==false){d=true};d=false;return a})\'.\r\tinputAst := PjBlockNode\r\t\tparameters: #(a)\r\t\tlocals: #(d)\r\t\tbody:\r\t\t\t{(PjIfTrueNode\r\t\t\t\ttest: falseNode\r\t\t\t\twhenTrue: (PjSequenceNode expressions: #())).\r\t\t\t(PjAssignNode\r\t\t\t\ttarget: (PjTempVariableNode identifier: #d)\r\t\t\t\texpression: falseNode).\r\t\t\t(PjReturnNode expression: (PjArgumentNode identifier: #a))}.\r\tself\r\t\tassert: inputAst\r\t\tasStringEquals: \'((a)=>{var d;if(true==false){};d=false;return a})\'',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3681' ],		#self : OmReference [ '3682' ],		#time : DateAndTime [ '2024-03-03T08:20:55.639-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjGenerationOptimizationTest,				#isMetaSide : false			},			#name : #testToDo,			#protocol : #testing,			#sourceCode : 'testToDo\r\t| in a xNode temp1 temp2 |\r\ta := PjTempVariableNode identifier: #a.\r\tin := PjTempVariableNode identifier: #in.\r\ttemp1 := PjTempVariableNode identifier: \'$1\'.\r\ttemp2 := PjTempVariableNode identifier: \'$2\'.\r\txNode := PjArgumentNode identifier: #x.\r\tself\r\t\tassert: (PjForLoopNode\r\t\t\tfrom: (PjAssignNode target: xNode expression: one)\r\t\t\tto: three\r\t\t\tby: nil\r\t\t\tbody:  {\r\t\t\t\tPjAssignNode\r\t\t\t\t\ttarget: in\r\t\t\t\t\texpression: xNode.\r\t\t\t\tPjReturnNode expression: a\r\t\t\t})\r\t\tasStringEquals: \'for(var x=1;x<=3;++x){$in=x;return a}\'.\r\tself\r\t\tassert: (PjForLoopNode\r\t\t\tfrom: (PjAssignNode target: xNode expression: three)\r\t\t\tto: one\r\t\t\tby: minusOne\r\t\t\tbody:  {\r\t\t\t\tPjAssignNode\r\t\t\t\t\ttarget: in\r\t\t\t\t\texpression: xNode.\r\t\t\t\tPjReturnNode expression: a\r\t\t\t})\r\t\tasStringEquals: \'for(var x=3;x>=1;--x){$in=x;return a}\'.\r\tself\r\t\tassert: (PjForLoopNode\r\t\t\tfrom: (PjAssignNode target: xNode expression: one)\r\t\t\tto: (PjAssignNode target: temp1 expression: a)\r\t\t\tby: (PjAssignNode target: temp2 expression: in)\r\t\t\tbody:  {\r\t\t\t\tPjAssignNode\r\t\t\t\t\ttarget: in\r\t\t\t\t\texpression: xNode.\r\t\t\t\tPjReturnNode expression: a\r\t\t\t})\r\t\tasStringEquals: \'for(var x=1,$1=a,$2=$in;$2>=0?x<=$1:x>=$1;x+=$2){$in=x;return a}\'.\r\tself\r\t\tassert: (PjForLoopNode\r\t\t\tfrom: (PjAssignNode target: xNode expression: one)\r\t\t\tto: (PjAssignNode target: temp1 expression: a)\r\t\t\tby: minusTwo\r\t\t\tbody:  {\r\t\t\t\tPjAssignNode\r\t\t\t\t\ttarget: in\r\t\t\t\t\texpression: xNode.\r\t\t\t\tPjReturnNode expression: a\r\t\t\t})\r\t\tasStringEquals: \'for(var x=1,$1=a;x>=$1;x+=-2){$in=x;return a}\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3682' ],		#self : OmReference [ '3683' ],		#time : DateAndTime [ '2024-03-03T08:20:55.639-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjGenerationOptimizationTest,				#isMetaSide : false			},			#name : #testWhile,			#protocol : #testing,			#sourceCode : 'testWhile\r\t| for a in |\r\tfor := PjTempVariableNode identifier: #for.\r\ta := PjTempVariableNode identifier: #a.\r\tin := PjTempVariableNode identifier: #in.\r\tself\r\t\tassert: (PjWhileNode test: selfNode body:  {\r\t\t\t\tPjAssignNode\r\t\t\t\t\ttarget: in\r\t\t\t\t\texpression: for.\r\t\t\t\tPjReturnNode expression: a\r\t\t\t})\r\t\tasStringEquals: \'while(true==this){$in=$for;return a}\'.\r\tself\r\t\tassert: (PjWhileNode test: (PjSequenceNode expressions: {selfNode. in}) body:  {})\r\t\tasStringEquals: \'while(true==(this,$in)){}\'.\r\tself\r\t\tassert: (PjWhileNode test: selfNode not body:  {\r\t\t\t\tPjAssignNode\r\t\t\t\t\ttarget: in\r\t\t\t\t\texpression: for.\r\t\t\t\tPjReturnNode expression: a\r\t\t\t})\r\t\tasStringEquals: \'while(false==this){$in=$for;return a}\'.\r\tself\r\t\tassert: (PjWhileNode test: (PjSequenceNode expressions: {selfNode. in}) not body:  {})\r\t\tasStringEquals: \'while(false==(this,$in)){}\'.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3683' ],		#self : OmReference [ '3684' ],		#time : DateAndTime [ '2024-03-03T08:20:55.639-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #'assertUnoptimizedContentsOf:',			#protocol : #testing,			#sourceCode : 'assertUnoptimizedContentsOf: aBlock\r\t| actualJsAst |\r\tactualJsAst := self convertFirstStatementOfBlock: aBlock.\r\tself assert: actualJsAst class = PjApplyNode',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3684' ],		#self : OmReference [ '3685' ],		#time : DateAndTime [ '2024-03-03T08:20:55.639-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testAnd,			#protocol : #testing,			#sourceCode : 'testAnd\r\t| expectedAst y returnAst |\r\ty := PjTempVariableNode identifier: #y.\r\tmessageConverter addAllConversions: {PjAndOptimization}. \r\texpectedAst := PjIfTrueIfFalseNode \r\t\ttest: y\r\t\twhenTrue: one\r\t\twhenFalse: falseNode.\r\treturnAst := PjIfTrueIfFalseNode \r\t\ttest: y\r\t\twhenTrue: returnOne\r\t\twhenFalse: returnFalse.\r\tself assertContentsOf: [ ^ y and: [1]] convertsTo: returnAst.\r\tself assertContentsOf: [ ^ y and: 1] convertsTo: returnAst.\r\tself assertContentsOf: [ y and: [1]] convertsTo: expectedAst.\r\tself assertContentsOf: [ y and: 1] convertsTo: expectedAst.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3685' ],		#self : OmReference [ '3686' ],		#time : DateAndTime [ '2024-03-03T08:20:55.639-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testBlockReturns,			#protocol : #testing,			#sourceCode : 'testBlockReturns\r\t| expectedAst tempId temp xArg |\r\tmessageConverter\r\t\taddAllConversions:\r\t\t\t{PjIfNilOptimization.\r\t\t\tPjIfNotNilOptimization.\r\t\t\tPjIfTrueOptimization.\r\t\t\tPjIfTrueIfFalseOptimization}.\r\texpectedAst := self\r\t\tsimpleBlock:\r\t\t\t{three.\r\t\t\ttwo.\r\t\t\t(PjIfTrueIfFalseNode\r\t\t\t\ttest: one\r\t\t\t\twhenTrue: returnOne\r\t\t\t\twhenFalse: returnNil)}\r\t\tlocals: #().\r\tself\r\t\tassertContentsOf: [ [ 3.\r\t\t\t2.\r\t\t\t1\r\t\t\t\tifTrue: [ 1 ] ] ]\r\t\tconvertsTo: expectedAst.\r\texpectedAst := self\r\t\tsimpleBlock:\r\t\t\t{three.\r\t\t\ttwo.\r\t\t\t(PjIfTrueIfFalseNode\r\t\t\t\ttest: one\r\t\t\t\twhenTrue: throwTwo\r\t\t\t\twhenFalse: throwOne)}\r\t\tlocals: #().\r\tself\r\t\tassertContentsOf: [ [ 3.\r\t\t\t2.\r\t\t\t^ 1\r\t\t\t\tifTrue: [ 2 ]\r\t\t\t\tifFalse: [ 1 ] ] ]\r\t\tconvertsTo: expectedAst.\r\texpectedAst := self\r\t\tsimpleBlock:\r\t\t\t{three.\r\t\t\ttwo.\r\t\t\t(PjIfNilIfNotNilNode\r\t\t\t\ttest: one\r\t\t\t\twhenNotNil: throwOne\r\t\t\t\twhenNil: throwNil)}\r\t\tlocals: #().\r\tself\r\t\tassertContentsOf: [ [ 3.\r\t\t\t2.\r\t\t\t^ 1 ifNotNil: [ 1 ] ] ]\r\t\tconvertsTo: expectedAst.\r\txArg := PjArgumentNode identifier: #x.\r\texpectedAst := self\r\t\tsimpleBlock:\r\t\t\t{three.\r\t\t\ttwo.\r\t\t\t(PjIfNilIfNotNilNode\r\t\t\t\ttest: (PjAssignNode target: xArg expression: one)\r\t\t\t\twhenNotNil: (PjNonLocalReturnNode expression: xArg)\r\t\t\t\twhenNil: throwNil)}\r\t\tlocals: #(x).\r\tself\r\t\tassertContentsOf: [ [ 3.\r\t\t\t2.\r\t\t\t^ 1 ifNotNil: [ :x | x ] ] ]\r\t\tconvertsTo: expectedAst.\r\ttempId := \'$1\'.\r\ttemp := PjTempVariableNode identifier: tempId asSymbol.\r\texpectedAst := self\r\t\tsimpleBlock:\r\t\t\t{three.\r\t\t\ttwo.\r\t\t\t(PjIfNilIfNotNilNode\r\t\t\t\ttest: (PjAssignNode target: temp expression: one)\r\t\t\t\twhenNotNil: (PjReturnNode expression: temp)\r\t\t\t\twhenNil: returnOne)}\r\t\tlocals: #(\'$1\').\r\tself\r\t\tassertContentsOf: [ [ 3.\r\t\t\t2.\r\t\t\t1 ifNil: [ 1 ] ] ]\r\t\tconvertsTo: expectedAst.\r\texpectedAst := self\r\t\tsimpleBlock:\r\t\t\t{three.\r\t\t\ttwo.\r\t\t\t(PjIfNilIfNotNilNode\r\t\t\t\ttest: (PjAssignNode target: temp expression: one)\r\t\t\t\twhenNotNil: (PjNonLocalReturnNode expression: temp)\r\t\t\t\twhenNil: throwOne)}\r\t\tlocals: #(\'$1\').\r\tself\r\t\tassertContentsOf: [ [ 3.\r\t\t\t2.\r\t\t\t^ 1 ifNil: [ 1 ] ] ]\r\t\tconvertsTo: expectedAst',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3686' ],		#self : OmReference [ '3687' ],		#time : DateAndTime [ '2024-03-03T08:20:55.64-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testBlockReturns1,			#protocol : #testing,			#sourceCode : 'testBlockReturns1\r\t| expectedAst |\r\tmessageConverter\r\t\taddAllConversions:\r\t\t\t{PjIfNilOptimization.\r\t\t\tPjIfNotNilOptimization.\r\t\t\tPjIfTrueOptimization.\r\t\t\tPjIfTrueIfFalseOptimization}.\r\texpectedAst := self\r\t\tsimpleBlock: {three. two. (PjIfTrueIfFalseNode test: one whenTrue: returnTwo whenFalse: returnOne)}\r\t\tlocals: #().\r\tself \r\t\tassertContentsOf: [ [ 3. 2. 1 ifTrue: [ 2 ] ifFalse: [ 1 ] ] ]\r\t\tconvertsTo: expectedAst.\r\texpectedAst := self\r\t\tsimpleBlock: {three. two. (PjIfTrueIfFalseNode test: one whenTrue: throwTwo whenFalse: returnOne)}\r\t\tlocals: #().\r\tself\r\t\tassertContentsOf: [ [ 3. 2. 1 ifTrue: [ ^ 2 ] ifFalse: [ 1 ] ] ]\r\t\tconvertsTo: expectedAst.\r\texpectedAst := self\r\t\tsimpleBlock: {PjIfTrueIfFalseNode test: one whenTrue: two whenFalse: one. returnTwo}\r\t\tlocals: #().\r\tself\r\t\tassertContentsOf: [ [ 1 ifTrue: [ 2 ] ifFalse: [ 1 ]. 2 ] ]\r\t\tconvertsTo: expectedAst.\r\texpectedAst := self\r\t\tsimpleBlock: {three. two. (PjIfTrueIfFalseNode test: (PjIfTrueIfFalseNode test: one whenTrue: two whenFalse: one) whenTrue: returnTwo whenFalse: returnOne)}\r\t\tlocals: #().\r\tself\r\t\tassertContentsOf: [ [ 3. 2. (1 ifTrue: [ 2 ] ifFalse: [ 1 ]) ifTrue: [ 2 ] ifFalse: [ 1 ] ] ]\r\t\tconvertsTo: expectedAst.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3687' ],		#self : OmReference [ '3688' ],		#time : DateAndTime [ '2024-03-03T08:20:55.64-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testComparisons,			#protocol : #testing,			#sourceCode : 'testComparisons\r\t| y x |\r\ty := PjTempVariableNode identifier: #y.\r\tx := PjTempVariableNode identifier: #x.\r\tmessageConverter addAllConversions: PjComparisonOptimization allSubclasses.\r\tself assertContentsOf: [ x=y ]\r\t\t\tconvertsTo: (PjApplyNode receiver: x selector: #= args: {y}).\r\tself assertContentsOf: [ 1=y ] convertsTo: (PjBinaryNode operator: #== left: one right: y).\r\tself assertContentsOf: [ x=\'foo\' ] convertsTo: (PjBinaryNode operator: #== left: x right: foo).\r\tself assertContentsOf: [ x~=y ]\r\t\t\tconvertsTo: (PjApplyNode receiver: x selector: #~= args: {y}).\r\tself assertContentsOf: [ x<=y ] convertsTo: (PjBinaryNode operator: #<= left: x right: y).\r\tself assertContentsOf: [ x~~y ] convertsTo: (PjBinaryNode operator: #!== left: x right: y).\r\tself assertContentsOf: [ x==y ] convertsTo: (PjBinaryNode operator: #=== left: x right: y).\r\tself assertContentsOf: [ 1~=y ] convertsTo: (PjBinaryNode operator: #!= left: one right: y).',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3688' ],		#self : OmReference [ '3689' ],		#time : DateAndTime [ '2024-03-03T08:20:55.64-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testIfFalse,			#protocol : #testing,			#sourceCode : 'testIfFalse\r\t| expectedAst y returnAst |\r\ty := PjTempVariableNode identifier: #y.\r\tmessageConverter addAllConversions: {PjIfFalseOptimization}. \r\texpectedAst := PjIfTrueNode \r\t\ttest: y not\r\t\twhenTrue: one.\r\treturnAst := PjIfTrueIfFalseNode \r\t\ttest: y\r\t\twhenTrue: returnNil\r\t\twhenFalse: returnOne.\r\tself assertContentsOf: [ ^ y ifFalse: [1]] convertsTo: returnAst.\r\tself assertContentsOf: [ ^ y ifFalse: 1] convertsTo: returnAst.\r\tself assertContentsOf: [ y ifFalse: [1]] convertsTo: expectedAst.\r\tself assertContentsOf: [ y ifFalse: 1] convertsTo: expectedAst.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3689' ],		#self : OmReference [ '3690' ],		#time : DateAndTime [ '2024-03-03T08:20:55.64-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testIfFalseifTrue,			#protocol : #testing,			#sourceCode : 'testIfFalseifTrue\r\t| expectedAst y |\r\ty := PjTempVariableNode identifier: #y.\r\tmessageConverter addAllConversions: {PjIfFalseIfTrueOptimization. PjNotOptimization}.\r\texpectedAst := PjIfTrueIfFalseNode \r\t\ttest: y\r\t\twhenTrue: one \r\t\twhenFalse: two. \r\tself assertContentsOf: [ y ifFalse: [2] ifTrue: [1]] convertsTo: expectedAst.\r\tself assertContentsOf: [ y ifFalse: 2 ifTrue: 1] convertsTo: expectedAst.\r\r\texpectedAst := PjIfTrueIfFalseNode \r\t\ttest: y not\r\t\twhenTrue: one\r\t\twhenFalse: two. \r\tself assertContentsOf: [ y not ifFalse: [2] ifTrue: [1]] convertsTo: expectedAst.\r\tself assertContentsOf: [ y not ifFalse: 2 ifTrue: 1] convertsTo: expectedAst.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3690' ],		#self : OmReference [ '3691' ],		#time : DateAndTime [ '2024-03-03T08:20:55.64-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testIfNil,			#protocol : #testing,			#sourceCode : 'testIfNil\r\t| expectedAst tempVariable tempVariableName y |\r\ty := PjTempVariableNode identifier: #y.\r\tmessageConverter addAllConversions: {PjIfNilOptimization}.\r\ttempVariableName := PjStringGenerator tempNamePrefix , \'1\'.\r\ttempVariable := PjTempVariableNode\r\t\tidentifier: tempVariableName asSymbol.\r\texpectedAst := PjIfNilIfNotNilNode\r\t\ttest:\r\t\t\t(PjAssignNode\r\t\t\t\ttarget: tempVariable\r\t\t\t\texpression: (self apply: y selector: #foo))\r\t\twhenNotNil: (PjReturnNode expression: tempVariable)\r\t\twhenNil: returnOne.\r\tself\r\t\tassertContentsOf: [ ^ y foo ifNil: [ 1 ] ]\r\t\tconvertsTo: expectedAst.\r\texpectedAst := self simpleBlock: expectedAst locals: #(\'$1\').\r\tself\r\t\tassertContentsOf: [ [ y foo ifNil: [ 1 ] ] ]\r\t\tconvertsTo: expectedAst.\r\texpectedAst := PjIfNilIfNotNilNode\r\t\ttest:\r\t\t\t(PjAssignNode\r\t\t\t\ttarget: tempVariable\r\t\t\t\texpression: (self apply: y selector: #foo))\r\t\twhenNotNil: (PjNonLocalReturnNode expression: tempVariable)\r\t\twhenNil: throwOne.\r\texpectedAst := self simpleBlock: expectedAst locals: #(\'$1\').\r\tself\r\t\tassertContentsOf: [ [ ^ y foo ifNil: [ 1 ] ] ]\r\t\tconvertsTo: expectedAst.\r\texpectedAst := PjIfNilNode\r\t\ttest: (self apply: y selector: #foo)\r\t\twhenNil: one.\r\tself assertContentsOf: [ y foo ifNil: [ 1 ] ] convertsTo: expectedAst',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3691' ],		#self : OmReference [ '3692' ],		#time : DateAndTime [ '2024-03-03T08:20:55.64-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testIfNilIfNotNil,			#protocol : #testing,			#sourceCode : 'testIfNilIfNotNil\r\t| expectedAst y |\r\ty := PjTempVariableNode identifier: #y.\r\tmessageConverter addAllConversions: {PjIfNilIfNotNilOptimization}. \r\texpectedAst := PjIfNilIfNotNilNode \r\t\ttest: y\r\t\twhenNotNil: two\r\t\twhenNil: one. \r\tself assertContentsOf: [ y ifNil: [1] ifNotNil: [2]] convertsTo: expectedAst.\r\tself assertContentsOf: [ y ifNil: 1 ifNotNil: 2] convertsTo: expectedAst.\r\t\r\texpectedAst := PjIfNilIfNotNilNode \r\t\ttest: (PjAssignNode\r\t\t\ttarget: (PjArgumentNode identifier: #x)\r\t\t\t expression: y) \r\t\twhenNotNil: (PjArgumentNode identifier: #x)\r\t\twhenNil: one.\r\tself assertContentsOf: [ y ifNil: [1 ] ifNotNil: [: x | x]] convertsTo: expectedAst.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3692' ],		#self : OmReference [ '3693' ],		#time : DateAndTime [ '2024-03-03T08:20:55.64-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testIfNotNil,			#protocol : #testing,			#sourceCode : 'testIfNotNil\r\t| expectedAst y |\r\ty := PjTempVariableNode identifier: #y.\r\tmessageConverter addAllConversions: {PjIfNotNilOptimization}.\r\r\texpectedAst := PjIfNotNilNode\r\t\ttest: y\r\t\twhenNotNil: one. \r\tself assertContentsOf: [y ifNotNil: [1]] convertsTo: expectedAst.\r\r\texpectedAst := PjIfNotNilNode \r\t\ttest: (PjAssignNode\r\t\t\ttarget: (PjArgumentNode identifier: #x)\r\t\t\t expression: y)\r\t\twhenNotNil: (PjArgumentNode identifier: #x).\r\tself assertContentsOf: [y ifNotNil: [: x | x]] convertsTo: expectedAst.\r\r\texpectedAst := PjIfNilIfNotNilNode \r\t\ttest: y\r\t\twhenNotNil: returnOne\r\t\twhenNil:  returnNil. \r\tself assertContentsOf: [ ^ y ifNotNil: [1]] convertsTo: expectedAst.\r\r\texpectedAst := PjIfNilIfNotNilNode \r\t\ttest: (PjAssignNode\r\t\t\ttarget: (PjArgumentNode identifier: #x)\r\t\t\t expression: y)\r\t\twhenNotNil: (PjReturnNode expression: (PjArgumentNode identifier: #x))\r\t\twhenNil: returnNil.\r\tself assertContentsOf: [ ^ y ifNotNil: [: x | x]] convertsTo: expectedAst.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3693' ],		#self : OmReference [ '3694' ],		#time : DateAndTime [ '2024-03-03T08:20:55.64-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testIfNotNilifNil,			#protocol : #testing,			#sourceCode : 'testIfNotNilifNil\r\t| expectedAst y |\r\ty := PjTempVariableNode identifier: #y.\r\tmessageConverter addAllConversions: {PjIfNotNilIfNilOptimization. PjNotOptimization}. \r\texpectedAst := PjIfNilIfNotNilNode \r\t\t\ttest:  (self apply: y selector: #foo)\r\t\t\twhenNotNil: returnOne\r\t\t\twhenNil: returnNil.\r\tself assertContentsOf: [ ^y foo ifNotNil: [1] ifNil: []] convertsTo: expectedAst.\r\r\texpectedAst := PjIfNilIfNotNilNode \r\t\t\ttest:  (self apply: y selector: #foo)\r\t\t\twhenNotNil: (PjAssignNode target: y expression: one)\r\t\t\twhenNil: (PjAssignNode target: y expression: two).\r\tself assertContentsOf: [\r\t\t\ty foo ifNotNil: [\r\t\t\t\ty:=1\r\t\t\t] ifNil: [\r\t\t\t\ty:=2\r\t\t\t]] convertsTo: expectedAst',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3694' ],		#self : OmReference [ '3695' ],		#time : DateAndTime [ '2024-03-03T08:20:55.64-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testIfTrue,			#protocol : #testing,			#sourceCode : 'testIfTrue\r\t| expectedAst y returnAst |\r\ty := PjTempVariableNode identifier: #y.\r\tmessageConverter addAllConversions: {PjIfTrueOptimization}. \r\texpectedAst := PjIfTrueNode \r\t\ttest: y\r\t\twhenTrue: one.\r\treturnAst := PjIfTrueIfFalseNode \r\t\ttest: y\r\t\twhenTrue: returnOne\r\t\twhenFalse: returnNil.\r\tself assertContentsOf: [ y ifTrue: [1]] convertsTo: expectedAst.\r\tself assertContentsOf: [ y ifTrue: 1] convertsTo: expectedAst.\r\tself assertContentsOf: [ ^ y ifTrue: [1]] convertsTo: returnAst.\r\tself assertContentsOf: [ ^ y ifTrue: 1] convertsTo: returnAst.\r\texpectedAst := PjIfTrueNode \r\t\ttest: y\r\t\twhenTrue: (PjSequenceNode expressions: {one. two}).\r\tself assertContentsOf: [ y ifTrue: [1. 2.] ] convertsTo: expectedAst.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3695' ],		#self : OmReference [ '3696' ],		#time : DateAndTime [ '2024-03-03T08:20:55.64-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testIfTrueIfFalse,			#protocol : #testing,			#sourceCode : 'testIfTrueIfFalse\r\t| expectedAst y returnAst |\r\ty := PjTempVariableNode identifier: #y.\r\tmessageConverter addAllConversions: {PjIfTrueIfFalseOptimization}. \r\texpectedAst := PjIfTrueIfFalseNode \r\t\ttest: y\r\t\twhenTrue: one \r\t\twhenFalse: two.\r\treturnAst := PjIfTrueIfFalseNode \r\t\ttest: y\r\t\twhenTrue: returnOne\r\t\twhenFalse: returnTwo.\r\tself assertContentsOf: [ y ifTrue: [1] ifFalse: [2]] convertsTo: expectedAst.\r\tself assertContentsOf: [ y ifTrue: 1 ifFalse: 2] convertsTo: expectedAst.\r\tself assertContentsOf: [ ^ y ifTrue: [1] ifFalse: [2]] convertsTo: returnAst.\r\tself assertContentsOf: [ ^ y ifTrue: 1 ifFalse: 2] convertsTo: returnAst.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3696' ],		#self : OmReference [ '3697' ],		#time : DateAndTime [ '2024-03-03T08:20:55.64-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testInlineBlockReturns,			#protocol : #testing,			#sourceCode : 'testInlineBlockReturns\r\t| expectedAst |\r\tmessageConverter\r\t\taddAllConversions:\r\t\t\t{PjIfTrueOptimization.\r\t\t\tPjIfTrueIfFalseOptimization}.\r\texpectedAst := self\r\t\tsimpleBlock:\r\t\t\t{(PjIfTrueIfFalseNode\r\t\t\t\ttest: one\r\t\t\t\twhenTrue:\r\t\t\t\t\t(PjSequenceNode\r\t\t\t\t\t\texpressions:\r\t\t\t\t\t\t\t{two.\r\t\t\t\t\t\t\treturnThree})\r\t\t\t\twhenFalse:\r\t\t\t\t\t(PjReturnNode\r\t\t\t\t\t\texpression:\r\t\t\t\t\t\t\t(self\r\t\t\t\t\t\t\t\tsimpleBlock:\r\t\t\t\t\t\t\t\t\t{two.\r\t\t\t\t\t\t\t\t\treturnThree}\r\t\t\t\t\t\t\t\tlocals: #())))}\r\t\tlocals: #().\r\tself\r\t\tassertContentsOf: [ [ 1\r\t\t\t\tifTrue: [ 2.\r\t\t\t\t\t3 ]\r\t\t\t\tifFalse: [ [ 2.\r\t\t\t\t\t3 ] ] ] ]\r\t\tconvertsTo: expectedAst.\r\texpectedAst := self\r\t\tsimpleBlock:\r\t\t\t{(PjIfTrueIfFalseNode\r\t\t\t\ttest: one\r\t\t\t\twhenTrue:\r\t\t\t\t\t(PjSequenceNode\r\t\t\t\t\t\texpressions:\r\t\t\t\t\t\t\t{two.\r\t\t\t\t\t\t\tthree})\r\t\t\t\twhenFalse:\r\t\t\t\t\t(PjSequenceNode\r\t\t\t\t\t\texpressions:\r\t\t\t\t\t\t\t{one.\r\t\t\t\t\t\t\t(self\r\t\t\t\t\t\t\t\tsimpleBlock:\r\t\t\t\t\t\t\t\t\t{two.\r\t\t\t\t\t\t\t\t\treturnThree}\r\t\t\t\t\t\t\t\tlocals: #())})).\r\t\t\treturnOne}\r\t\tlocals: #().\r\tself\r\t\tassertContentsOf: [ [ 1\r\t\t\t\tifTrue: [ 2.\r\t\t\t\t\t3 ]\r\t\t\t\tifFalse: [ 1.\r\t\t\t\t\t[ 2.\r\t\t\t\t\t3 ] ].\r\t\t\t1 ] ]\r\t\tconvertsTo: expectedAst',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3697' ],		#self : OmReference [ '3698' ],		#time : DateAndTime [ '2024-03-03T08:20:55.64-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testInlineBlockTempvars,			#protocol : #testing,			#sourceCode : 'testInlineBlockTempvars\r\t| expectedAst block |\r\tmessageConverter\r\t\taddAllConversions: {PjIfTrueOptimization.PjTimesRepeatOptimization}.\r\tblock := [ [ self ifTrue: [ |w| w ] ] ].\r\texpectedAst := PjBlockNode parameters:{} locals:{#w} body:{\r\t\tPjIfTrueIfFalseNode test: (PjSelfNode new inBlock: true)\r\t\t\twhenTrue:(PjReturnNode expression:(PjTempVariableNode identifier:#w))\r\t\t\twhenFalse:(PjReturnNode expression:PjNilNode new)}.\r\tself assertContentsOf: block convertsTo: expectedAst.\r\tblock := [ [ 3 timesRepeat: [ |w| w ] ] ].\r\texpectedAst := PjBlockNode parameters:{} locals:#(w \'$1\') body:{\r\t\tPjForLoopNode\r\t\t\tfrom:(PjAssignNode target:(PjTempVariableNode identifier:\'$1\') expression:(PjLiteralValueNode value:1))\r\t\t\tto:(PjLiteralValueNode value:3)\r\t\t\tby:nil\r\t\t\tbody:{PjAssignNode target:(PjTempVariableNode identifier:#w) expression:PjNilNode new.PjTempVariableNode identifier:#w}}.\r\tself assertContentsOf: block convertsTo: expectedAst.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3698' ],		#self : OmReference [ '3699' ],		#time : DateAndTime [ '2024-03-03T08:20:55.64-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testMethodReturns1,			#protocol : #testing,			#sourceCode : 'testMethodReturns1\r\t| expectedBody expectedAst |\r\tmessageConverter\r\t\taddAllConversions: {PjIfTrueOptimization. PjIfTrueIfFalseOptimization}.\r\texpectedBody := {three.\r\ttwo.\r\t(PjIfTrueIfFalseNode test: one whenTrue: returnTwo whenFalse: one).\r\treturnSelf}.\r\texpectedAst := PjMethodNode\r\t\tmethodName: #return1\r\t\tbody: expectedBody.\r\tself assertMethod: #return1 convertsTo: expectedAst',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3699' ],		#self : OmReference [ '3700' ],		#time : DateAndTime [ '2024-03-03T08:20:55.64-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testMethodReturns2And3,			#protocol : #testing,			#sourceCode : 'testMethodReturns2And3\r\t| expectedBody expectedAst |\r\tmessageConverter\r\t\taddAllConversions: {PjIfTrueOptimization. PjIfTrueIfFalseOptimization}.\r\texpectedBody := {three.\r\ttwo.\r\t(PjIfTrueIfFalseNode\r\t\ttest: one\r\t\twhenTrue: returnTwo\r\t\twhenFalse: returnOne)}.\r\t#(#return2 #return3)\r\t\tdo: [ :selector | \r\t\t\texpectedAst := PjMethodNode\r\t\t\t\tmethodName: selector\r\t\t\t\tbody: expectedBody.\r\t\t\tself assertMethod: selector convertsTo: expectedAst ]',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3700' ],		#self : OmReference [ '3701' ],		#time : DateAndTime [ '2024-03-03T08:20:55.642-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testMethodReturns4,			#protocol : #testing,			#sourceCode : 'testMethodReturns4\r\t| expectedBody expectedAst |\r\tmessageConverter\r\t\taddAllConversions: {PjIfTrueOptimization. PjIfTrueIfFalseOptimization}.\r\texpectedBody := {three.\r\ttwo.\r\t(PjIfTrueIfFalseNode\r\t\ttest: (PjIfTrueIfFalseNode test: two whenTrue: throwSelf whenFalse: three)\r\t\twhenTrue: returnTwo\r\t\twhenFalse: returnOne)}.\r\texpectedAst := PjMethodNode\r\t\tmethodName: #return4\r\t\tbody: {PjTryNode body: expectedBody}.\r\tself assertMethod: #return4 convertsTo: expectedAst',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3701' ],		#self : OmReference [ '3702' ],		#time : DateAndTime [ '2024-03-03T08:20:55.642-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testOr,			#protocol : #testing,			#sourceCode : 'testOr\r\t| expectedAst y returnAst |\r\ty := PjTempVariableNode identifier: #y.\r\tmessageConverter addAllConversions: {PjOrOptimization}. \r\texpectedAst := PjIfTrueIfFalseNode \r\t\ttest: y\r\t\twhenTrue: trueNode\r\t\twhenFalse: one.\r\treturnAst := PjIfTrueIfFalseNode \r\t\ttest: y\r\t\twhenTrue: returnTrue\r\t\twhenFalse: returnOne.\r\tself assertContentsOf: [ ^ y or: [1]] convertsTo: returnAst.\r\tself assertContentsOf: [ ^ y or: 1] convertsTo: returnAst.\r\tself assertContentsOf: [ y or: [1]] convertsTo: expectedAst.\r\tself assertContentsOf: [ y or: 1] convertsTo: expectedAst.',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3702' ],		#self : OmReference [ '3703' ],		#time : DateAndTime [ '2024-03-03T08:20:55.642-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testStringConcatenation,			#protocol : #testing,			#sourceCode : 'testStringConcatenation\r\tmessageConverter\r\t\taddAllConversions: {PjStringAppendOptimization}.\r\tself assertContentsOf: [ \'hello\',1 ] convertsTo: (PjBinaryNode operator: #+ left: helloString right: one).\r\tself assertContentsOf: [ 1,\'hello\' ] convertsTo: (PjApplyNode receiver: one selector: #, args: {helloString}).\r\tself assertContentsOf: [ \'hello\',1,2 ] convertsTo: (PjBinaryNode operator: #+ left: (PjBinaryNode operator: #+ left: helloString right: one) right: two).',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3703' ],		#self : OmReference [ '3704' ],		#time : DateAndTime [ '2024-03-03T08:20:55.642-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testTimesRepeat,			#protocol : #testing,			#sourceCode : 'testTimesRepeat\r\t| in a temp1 temp2 |\r\ta := PjTempVariableNode identifier: #a.\r\tin := PjTempVariableNode identifier: #in.\r\ttemp1 := PjTempVariableNode identifier: \'$1\'.\r\ttemp2 := PjTempVariableNode identifier: \'$2\'.\r\tmessageConverter addAllConversions: {\r\t\tPjTimesRepeatOptimization\r\t}.\r\tself\r\t\tassertContentsOf: [ 3 timesRepeat: [ a := 1]]\r\t\tconvertsTo: (PjForLoopNode\r\t\t\tfrom: (PjAssignNode target: temp1 expression: one)\r\t\t\tto: three\r\t\t\tby: nil\r\t\t\tbody:  {\r\t\t\t\tPjAssignNode\r\t\t\t\t\ttarget: a\r\t\t\t\t\texpression: one\r\t\t\t}).\r\tself\r\t\tassertContentsOf: [ in timesRepeat: [ a := 1]]\r\t\tconvertsTo: (PjForLoopNode\r\t\t\tfrom: (PjAssignNode target: temp1 expression: one)\r\t\t\tto: (PjAssignNode target: temp2 expression: in)\r\t\t\tby: nil\r\t\t\tbody:  {\r\t\t\t\tPjAssignNode\r\t\t\t\t\ttarget: a\r\t\t\t\t\texpression: one\r\t\t\t}).',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3704' ],		#self : OmReference [ '3705' ],		#time : DateAndTime [ '2024-03-03T08:20:55.642-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testToDo,			#protocol : #testing,			#sourceCode : 'testToDo\r\t<expectedFailure> " temporarily disabled optimization "\r\t| in a xNode temp1 temp2 |\r\ta := PjTempVariableNode identifier: #a.\r\tin := PjTempVariableNode identifier: #in.\r\ttemp1 := PjTempVariableNode identifier: \'$1\'.\r\ttemp2 := PjTempVariableNode identifier: \'$2\'.\r\tmessageConverter addAllConversions: {\r\t\tPjToDoOptimization. PjToByDoOptimization\r\t}. \r\tself\r\t\tassertUnoptimizedContentsOf: [ 1 to: 10 do: [ in := 3. ^ a]].\r\txNode := PjArgumentNode identifier: #x.\r\tself\r\t\tassertContentsOf: [ 1 to: 3 do: [:x| in := x. ^ a]]\r\t\tconvertsTo: (PjForLoopNode\r\t\t\tfrom: (PjAssignNode target: xNode expression: one)\r\t\t\tto: three\r\t\t\tby: nil\r\t\t\tbody:  {\r\t\t\t\tPjAssignNode\r\t\t\t\t\ttarget: in\r\t\t\t\t\texpression: xNode.\r\t\t\t\tPjReturnNode expression: a\r\t\t\t}).\r\tself\r\t\tassertContentsOf: [ 3 to: 1 by: -1 do: [:x| in := x. ^ a]]\r\t\tconvertsTo: (PjForLoopNode\r\t\t\tfrom: (PjAssignNode target: xNode expression: three)\r\t\t\tto: one\r\t\t\tby: minusOne\r\t\t\tbody:  {\r\t\t\t\tPjAssignNode\r\t\t\t\t\ttarget: in\r\t\t\t\t\texpression: xNode.\r\t\t\t\tPjReturnNode expression: a\r\t\t\t}).\r\tself\r\t\tassertContentsOf: [ 1 to: a by: in do: [:x| in := x. ^ a]]\r\t\tconvertsTo: (PjForLoopNode\r\t\t\tfrom: (PjAssignNode target: xNode expression: one)\r\t\t\tto: (PjAssignNode target: temp1 expression: a)\r\t\t\tby: (PjAssignNode target: temp2 expression: in)\r\t\t\tbody:  {\r\t\t\t\tPjAssignNode\r\t\t\t\t\ttarget: in\r\t\t\t\t\texpression: xNode.\r\t\t\t\tPjReturnNode expression: a\r\t\t\t}).\r\tself\r\t\tassertContentsOf: [ 1 to: a by: -2 do: [:x| in := x. ^ a]]\r\t\tconvertsTo: (PjForLoopNode\r\t\t\tfrom: (PjAssignNode target: xNode expression: one)\r\t\t\tto: (PjAssignNode target: temp1 expression: a)\r\t\t\tby: minusTwo\r\t\t\tbody:  {\r\t\t\t\tPjAssignNode\r\t\t\t\t\ttarget: in\r\t\t\t\t\texpression: xNode.\r\t\t\t\tPjReturnNode expression: a\r\t\t\t}).',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3705' ],		#self : OmReference [ '3706' ],		#time : DateAndTime [ '2024-03-03T08:20:55.643-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjConversionOptimizationTest,				#isMetaSide : false			},			#name : #testWhile,			#protocol : #testing,			#sourceCode : 'testWhile\r\t| for in a |\r\tfor := PjTempVariableNode identifier: #for.\r\ta := PjTempVariableNode identifier: #a.\r\tin := PjTempVariableNode identifier: #in.\r\tmessageConverter addAllConversions: {\r\t\tPjWhileTrueOptimization. PjWhileTrueDoOptimization.\r\t\tPjWhileFalseOptimization. PjWhileFalseDoOptimization.\r\t}. \r\tself\r\t\tassertContentsOf: [ [self] whileTrue: [ in := for. ^ a]]\r\t\tconvertsTo: (PjWhileNode test: selfNode body:  {\r\t\t\t\tPjAssignNode\r\t\t\t\t\ttarget: in\r\t\t\t\t\texpression: for.\r\t\t\t\tPjReturnNode expression: a\r\t\t\t}).\r\tself\r\t\tassertContentsOf: [ [self. in] whileTrue ]\r\t\tconvertsTo: (PjWhileNode test: (PjSequenceNode expressions: {selfNode. in}) body:  {}).\r\tself\r\t\tassertContentsOf: [ [self] whileFalse: [ in := for. ^ a]]\r\t\tconvertsTo:  (PjWhileNode test: selfNode not body:  {\r\t\t\t\tPjAssignNode\r\t\t\t\t\ttarget: in\r\t\t\t\t\texpression: for.\r\t\t\t\tPjReturnNode expression: a\r\t\t\t}).\r\tself\r\t\tassertContentsOf: [ [self. in] whileFalse ]\r\t\tconvertsTo: (PjWhileNode test: (PjSequenceNode expressions: {selfNode. in}) not body:  {}).\r\tself\r\t\tassertContentsOf: [ self foo: [[self. in] whileFalse] ]\r\t\tconvertsTo: (PjApplyNode receiver: selfNode selector: #foo: args: (PjBlockNode parameters: #() locals: #() body: {PjWhileNode test: (PjSequenceNode expressions: {selfNodeInBlock. in}) not body:  {}}) asOrderedCollection).',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3706' ],		#self : OmReference [ '3707' ],		#time : DateAndTime [ '2024-03-03T08:20:55.643-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjOptimizedMethods,				#isMetaSide : false			},			#name : #shouldReturnTrue,			#protocol : #asserting,			#sourceCode : 'shouldReturnTrue\r    false\r        ifTrue: [ 1 ifNil: [  ] ]\r        ifFalse: [ 1 ifNil: [  ].\r            ^ true ].\r    ^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3707' ],		#self : OmReference [ '3708' ],		#time : DateAndTime [ '2024-03-03T08:20:55.643-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjOptimizedMethods,				#isMetaSide : false			},			#name : #shouldReturnTrue2,			#protocol : #asserting,			#sourceCode : 'shouldReturnTrue2\r    false\r        ifTrue: [ 1 ifNil: [  ] ]\r        ifFalse: [ 1 ifNotNil: [ ^ true ].\r            ^ true ].\r    ^ false',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3708' ],		#self : OmReference [ '3709' ],		#time : DateAndTime [ '2024-03-03T08:20:55.643-05:00' ],		#trigger : OmReference [ '3652' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAstOptimizationTest,				#isMetaSide : false			},			#name : #testNotTransformation,			#protocol : #testing,			#sourceCode : 'testNotTransformation\r\t| v1 v2 |\r\tv1 := PjTempVariableNode identifier: #v1.\r\tv2 := PjTempVariableNode identifier: #v2.\r\tself assert: selfNode not equals: (PjUnaryNode operator: #! expression: selfNode).\r\tself assert: (PjUnaryNode operator: #! expression: selfNode) not equals: selfNode.\r\tself assert: selfNode not not equals: selfNode.\r\tself assert: (PjBinaryNode operator: #< left: v1 right: v2) not equals: (PjBinaryNode operator: #< left: v2 right: v1)',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Optimizations-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:55.827-05:00' ],		#prior : OmReference [ '3709' ],		#self : OmReference [ '3710' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-Base-Serialization-Tests-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3710' ],		#self : OmReference [ '3711' ],		#time : DateAndTime [ '2024-03-03T08:20:55.852-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Serialization-Tests,		#affectedPackageName : #PharoJs-Base-Serialization-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3711' ],		#self : OmReference [ '3712' ],		#time : DateAndTime [ '2024-03-03T08:20:55.855-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PhxPharoJsonSerialisationTests\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Serialization-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PhxPharoJsonSerialisationTests,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PhxPharoJsonSerialisationTests class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PhxPharoJsonSerialisationTests class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PhxPharoJsonSerialisationTests,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Serialization-Tests,			#package : #PharoJs-Base-Serialization-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3712' ],		#self : OmReference [ '3713' ],		#time : DateAndTime [ '2024-03-03T08:20:55.858-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PhxJsonObjectForTestWithAlphabeticallyOrderedIVs\r\tinstanceVariableNames: \'aaaa bbbb cccc\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Serialization-Tests\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PhxJsonObjectForTestWithAlphabeticallyOrderedIVs,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PhxJsonObjectForTestWithAlphabeticallyOrderedIVs,						#isMetaSide : false					},					#name : #aaaa,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PhxJsonObjectForTestWithAlphabeticallyOrderedIVs,						#isMetaSide : false					},					#name : #bbbb,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PhxJsonObjectForTestWithAlphabeticallyOrderedIVs,						#isMetaSide : false					},					#name : #cccc,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PhxJsonObjectForTestWithAlphabeticallyOrderedIVs class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PhxJsonObjectForTestWithAlphabeticallyOrderedIVs class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PhxJsonObjectForTestWithAlphabeticallyOrderedIVs,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Serialization-Tests,			#package : #PharoJs-Base-Serialization-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3713' ],		#self : OmReference [ '3714' ],		#time : DateAndTime [ '2024-03-03T08:20:55.86-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PhxJsonTestResources\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Serialization-Tests\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PhxJsonTestResources,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PhxJsonTestResources class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PhxJsonTestResources class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PhxJsonTestResources,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Serialization-Tests,			#package : #PharoJs-Base-Serialization-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3714' ],		#self : OmReference [ '3715' ],		#time : DateAndTime [ '2024-03-03T08:20:55.863-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PhxBridgedDateAndDateAndTimeTests\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Serialization-Tests\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PhxBridgedDateAndDateAndTimeTests,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PhxBridgedDateAndDateAndTimeTests class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PhxBridgedDateAndDateAndTimeTests class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PhxBridgedDateAndDateAndTimeTests,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Serialization-Tests,			#package : #PharoJs-Base-Serialization-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3715' ],		#self : OmReference [ '3716' ],		#time : DateAndTime [ '2024-03-03T08:20:55.865-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PhxBridgedJsonSerialisationTests\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Serialization-Tests\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PhxBridgedJsonSerialisationTests,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PhxBridgedJsonSerialisationTests class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PhxBridgedJsonSerialisationTests class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PhxBridgedJsonSerialisationTests,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Serialization-Tests,			#package : #PharoJs-Base-Serialization-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3716' ],		#self : OmReference [ '3717' ],		#time : DateAndTime [ '2024-03-03T08:20:55.866-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PhxJavascriptJsonSerialisationTests\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Serialization-Tests\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PhxJavascriptJsonSerialisationTests,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PhxJavascriptJsonSerialisationTests class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PhxJavascriptJsonSerialisationTests class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PhxJavascriptJsonSerialisationTests,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Serialization-Tests,			#package : #PharoJs-Base-Serialization-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3717' ],		#self : OmReference [ '3718' ],		#time : DateAndTime [ '2024-03-03T08:20:55.985-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxPharoJsonSerialisationTests,				#isMetaSide : false			},			#name : #testArraysCircularReferences,			#protocol : #tests,			#sourceCode : 'testArraysCircularReferences\r\t| cClone aClone bClone a b c |\r\ta := {\'A\'. nil. nil. nil}.\r\tb := {\'B\'. nil. nil. nil }.\r\tc := {\'C\'. nil. nil. nil }.\r\t{ a. b. c } do: [ : each |\r\t\teach at: 2 put: a.\r\t\teach at: 3 put: b.\r\t\teach at: 4 put: c.\r\t].\r\tcClone := PhxJsonReader readFromString: c asPhxJsonString.\r\taClone := cClone second.\r\tbClone := cClone third.\r\t{ aClone. bClone. cClone.}  with: #(A B C) do: [ : each : name |\r\t\tself assert: each size equals: 4.\r\t\tself assert: each first equals: name.\r\t\tself assert: each second identicalTo: aClone.\r\t\tself assert: each third identicalTo: bClone.\r\t\tself assert: each last identicalTo: cClone.\r\t].',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3718' ],		#self : OmReference [ '3719' ],		#time : DateAndTime [ '2024-03-03T08:20:55.987-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxPharoJsonSerialisationTests,				#isMetaSide : false			},			#name : #testDictionariesReferencingEachOther,			#protocol : #tests,			#sourceCode : 'testDictionariesReferencingEachOther\r\t| cClone bClone aInBClone aInCClone  a b c |\r\ta := Dictionary new.\r\ta at: #name put: \'A\'.\r\tb := Dictionary new.\r\tb at: #name put: \'B\'.\r\tb at: #a put: a.\r\tc := Dictionary new.\r\tc at: #name put: \'C\'.\r\tc at: #a put: a.\r\tc at: #b put: b.\r\tcClone := PhxJsonReader readFromString: c asPhxJsonString.\r\tself assert: cClone size equals: 3.\r\tself assert: (cClone at: #name) equals: \'C\'.\r\taInCClone := cClone at: #a.\r\tself deny: aInCClone isNil.\r\tself assert: aInCClone size equals: 1.\r\tself assert: (aInCClone at: #name) equals: \'A\'.\r\tbClone := cClone at: #b.\r\tself deny: bClone isNil.\r\tself assert: bClone size equals: 2.\r\tself assert: (bClone at: #name) equals: \'B\'.\r\taInBClone := bClone at: #a.\r\tself assert: aInBClone identicalTo: aInCClone.',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3719' ],		#self : OmReference [ '3720' ],		#time : DateAndTime [ '2024-03-03T08:20:55.988-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxPharoJsonSerialisationTests,				#isMetaSide : false			},			#name : #testDictionariesWithCircularReferences,			#protocol : #tests,			#sourceCode : 'testDictionariesWithCircularReferences\r\t| cClone aClone bClone  a b c |\r\ta := Dictionary new.\r\ta at: #name put: \'A\'.\r\tb := Dictionary new.\r\tb at: #name put: \'B\'.\r\tc := Dictionary new.\r\tc at: #name put: \'C\'.\r\t{ a. b. c } do: [ : each |\r\t\teach at: #a put: a.\r\t\teach at: #b put: b.\r\t\teach at: #c put: c.\r\t].\r\tcClone := PhxJsonReader readFromString: c asPhxJsonString.\r\taClone := cClone at: #a.\r\tbClone := cClone at: #b.\r\t{ aClone. bClone. cClone.}  with: #(A B C) do: [ : each : name |\r\t\tself assert: each size equals: 4.\r\t\tself assert: (each at: #name) equals: name.\r\t\tself assert: (each at: #a) identicalTo: aClone.\r\t\tself assert: (each at: #b) identicalTo: bClone.\r\t\tself assert: (each at: #c) identicalTo: cClone.\r\t].',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3720' ],		#self : OmReference [ '3721' ],		#time : DateAndTime [ '2024-03-03T08:20:55.988-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxPharoJsonSerialisationTests,				#isMetaSide : false			},			#name : #testOrderedCollectionsCircularReferences,			#protocol : #tests,			#sourceCode : 'testOrderedCollectionsCircularReferences\r\t| cClone aClone bClone a b c |\r\ta := #(\'A\') asOrderedCollection.\r\tb := #(\'B\') asOrderedCollection.\r\tc := #(\'C\') asOrderedCollection.\r\t{ a. b. c } do: [ : each |\r\t\teach add: a.\r\t\teach add: b.\r\t\teach add: c.\r\t].\r\tcClone := PhxJsonReader readFromString: c asPhxJsonString.\r\taClone := cClone second.\r\tbClone := cClone third.\r\t{ aClone. bClone. cClone.}  with: #(A B C) do: [ : each : name |\r\t\tself assert: each size equals: 4.\r\t\tself assert: each first equals: name.\r\t\tself assert: each second identicalTo: aClone.\r\t\tself assert: each third identicalTo: bClone.\r\t\tself assert: each last identicalTo: cClone.\r\t].',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3721' ],		#self : OmReference [ '3722' ],		#time : DateAndTime [ '2024-03-03T08:20:55.988-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxPharoJsonSerialisationTests,				#isMetaSide : false			},			#name : #testProperInstRefOrderWhenUsingCollections,			#protocol : #tests,			#sourceCode : 'testProperInstRefOrderWhenUsingCollections\r\t| obj problemObject string |\r\tobj := Object new.\r\tproblemObject := {obj.\r\t{obj}}.\r\tstring := problemObject asPhxJsonString.\r\tself shouldnt: [ PhxJsonReader readFromString: string ] raise: Error',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3722' ],		#self : OmReference [ '3723' ],		#time : DateAndTime [ '2024-03-03T08:20:55.989-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxPharoJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSetsCircularReferences,			#protocol : #tests,			#sourceCode : 'testSetsCircularReferences\r\t<expectedFailure>\r\t| cClone aClone bClone  a b c |\r\tself fail: \'Pharo bug: Infinite recursion upon adding cross set references\'.\r\ta := #(\'A\') asSet.\r\tb := {\'B\'} asSet.\r\tc := {\'C\'} asSet.\r\t{ a. b. c } do: [ : each |\r\t\teach add: a.\r\t\teach add: b.\r\t\teach add: c.\r\t].\r\tcClone := PhxJsonReader readFromString: c asPhxJsonString.\r\taClone := cClone detect: [: each | each includes: \'A\'].\r\tbClone := cClone detect: [: each | each includes: \'B\'].\r\t{ aClone. bClone. cClone.} with: #(A B C) do: [ : each : name |\r\t\tself assert: each size equals: 4.\r\t\tself assert: (each includes: name).\r\t\t{ aClone. bClone. cClone.} do: [ : expectedElement |\r\t\t\tself assert: (each includes: expectedElement) ]\r\t].',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3723' ],		#self : OmReference [ '3724' ],		#time : DateAndTime [ '2024-03-03T08:20:55.989-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxPharoJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSetsReferencingEachOther,			#protocol : #tests,			#sourceCode : 'testSetsReferencingEachOther\r\r\t| cClone bClone a b c aInBClone aInCClone |\r\ta := #( \'AAAA\' ) asSet.\r\tb := { \r\t\t     \'BBBB\'.\r\t\t     a } asSet.\r\tc := { \r\t\t     \'CCCC\'.\r\t\t     a.\r\t\t     b } asSet.\r\tcClone := PhxJsonReader readFromString: c asPhxJsonString.\r\tself assert: cClone size equals: 3.\r\tself assert: (cClone includes: \'CCCC\').\r\tself deny: (cClone includes: cClone).\r\tbClone := cClone detect: [ :each | each size = 2 ].\r\tself assert: (bClone includes: \'BBBB\').\r\tself deny: (bClone includes: bClone).\r\taInBClone := bClone detect: [ :each | each size = 1 ].\r\tself assert: aInBClone size equals: 1.\r\tself assert: (aInBClone includes: \'AAAA\').\r\taInCClone := cClone detect: [ :each | each size = 1 ].\r\tself assert: aInBClone identicalTo: aInCClone',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3724' ],		#self : OmReference [ '3725' ],		#time : DateAndTime [ '2024-03-03T08:20:55.989-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJsonObjectForTestWithAlphabeticallyOrderedIVs,				#isMetaSide : false			},			#name : #aaaa,			#protocol : #accessing,			#sourceCode : 'aaaa\r\r\t^ aaaa',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3725' ],		#self : OmReference [ '3726' ],		#time : DateAndTime [ '2024-03-03T08:20:55.989-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJsonObjectForTestWithAlphabeticallyOrderedIVs,				#isMetaSide : false			},			#name : #'aaaa:',			#protocol : #accessing,			#sourceCode : 'aaaa: anObject\r\r\taaaa := anObject',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3726' ],		#self : OmReference [ '3727' ],		#time : DateAndTime [ '2024-03-03T08:20:55.99-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJsonObjectForTestWithAlphabeticallyOrderedIVs,				#isMetaSide : false			},			#name : #bbbb,			#protocol : #accessing,			#sourceCode : 'bbbb\r\r\t^ bbbb',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3727' ],		#self : OmReference [ '3728' ],		#time : DateAndTime [ '2024-03-03T08:20:55.99-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJsonObjectForTestWithAlphabeticallyOrderedIVs,				#isMetaSide : false			},			#name : #'bbbb:',			#protocol : #accessing,			#sourceCode : 'bbbb: anObject\r\r\tbbbb := anObject',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3728' ],		#self : OmReference [ '3729' ],		#time : DateAndTime [ '2024-03-03T08:20:55.99-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJsonObjectForTestWithAlphabeticallyOrderedIVs,				#isMetaSide : false			},			#name : #cccc,			#protocol : #accessing,			#sourceCode : 'cccc\r\r\t^ cccc',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3729' ],		#self : OmReference [ '3730' ],		#time : DateAndTime [ '2024-03-03T08:20:55.99-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJsonObjectForTestWithAlphabeticallyOrderedIVs,				#isMetaSide : false			},			#name : #'cccc:',			#protocol : #accessing,			#sourceCode : 'cccc: anObject\r\r\tcccc := anObject',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3730' ],		#self : OmReference [ '3731' ],		#time : DateAndTime [ '2024-03-03T08:20:55.991-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PhxJsonTestResources class',				#isMetaSide : true			},			#name : #challengingStringRequiringUnicodeAndEscapement,			#protocol : #tests,			#sourceCode : 'challengingStringRequiringUnicodeAndEscapement\r\t^ \'Hi <there>, I\'\'m just a "String", and I cost only 2€. Olé!\'',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3731' ],		#self : OmReference [ '3732' ],		#time : DateAndTime [ '2024-03-03T08:20:55.991-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PhxJsonTestResources class',				#isMetaSide : true			},			#name : #challingingObjectAvoidingDateAndTime,			#protocol : #tests,			#sourceCode : 'challingingObjectAvoidingDateAndTime\r\t| org |\r\torg := PhxJsonTestResources objectWithLiteralIVs.\r\t^ {org.\r\torg.\r\t\'Hello "world"\'.\r\t123.\r\t1.33.\r\t{org.\r\torg.\r\tself challengingStringRequiringUnicodeAndEscapement.\r\t123.\r\t1.33}}',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3732' ],		#self : OmReference [ '3733' ],		#time : DateAndTime [ '2024-03-03T08:20:55.991-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PhxJsonTestResources class',				#isMetaSide : true			},			#name : #objectGraphWithCycleOfLength1,			#protocol : #tests,			#sourceCode : 'objectGraphWithCycleOfLength1\r\r\t| leaf1 leaf2 node root |\r\tleaf1 := PhxJsonObjectForTestWithAlphabeticallyOrderedIVs new.\r\tleaf2 := PhxJsonObjectForTestWithAlphabeticallyOrderedIVs new.\r\tnode := PhxJsonObjectForTestWithAlphabeticallyOrderedIVs new.\r\troot := PhxJsonObjectForTestWithAlphabeticallyOrderedIVs new.\r\tleaf1\r\t\taaaa: leaf1;\r\t\tbbbb: \'Test org 1\';\r\t\tcccc: \'TestOrg1LegalForm1\'.\r\tleaf2\r\t\taaaa: \'TestOrg2\';\r\t\tbbbb: leaf2;\r\t\tcccc: \'TestOrg1LegalForm2\'.\r\tnode\r\t\taaaa: leaf1;\r\t\tbbbb: leaf2;\r\t\tcccc: node.\r\troot\r\t\taaaa: leaf1;\r\t\tbbbb: node;\r\t\tcccc: leaf2.\r\t^ root',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3733' ],		#self : OmReference [ '3734' ],		#time : DateAndTime [ '2024-03-03T08:20:55.991-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PhxJsonTestResources class',				#isMetaSide : true			},			#name : #objectGraphWithCycleOfLength2,			#protocol : #tests,			#sourceCode : 'objectGraphWithCycleOfLength2\r\r\t| leaf1 leaf2 node root |\r\tleaf1 := PhxJsonObjectForTestWithAlphabeticallyOrderedIVs new.\r\tleaf2 := PhxJsonObjectForTestWithAlphabeticallyOrderedIVs new.\r\tnode := PhxJsonObjectForTestWithAlphabeticallyOrderedIVs new.\r\troot := PhxJsonObjectForTestWithAlphabeticallyOrderedIVs new.\r\tleaf1\r\t\taaaa: node;\r\t\tbbbb: \'Test org 1\';\r\t\tcccc: \'TestOrg1LegalForm1\'.\r\tleaf2\r\t\taaaa: \'TestOrg2\';\r\t\tbbbb: node;\r\t\tcccc: \'TestOrg1LegalForm2\'.\r\tnode\r\t\taaaa: leaf1;\r\t\tbbbb: leaf2;\r\t\tcccc: root.\r\troot\r\t\taaaa: leaf1;\r\t\tbbbb: node;\r\t\tcccc: leaf2.\r\t^ root',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3734' ],		#self : OmReference [ '3735' ],		#time : DateAndTime [ '2024-03-03T08:20:55.991-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PhxJsonTestResources class',				#isMetaSide : true			},			#name : #objectGraphWithSharedLeaves,			#protocol : #tests,			#sourceCode : 'objectGraphWithSharedLeaves\r\r\t| leaf1 leaf2 node1 node2 node3 root |\r\tleaf1 := PhxJsonObjectForTestWithAlphabeticallyOrderedIVs new.\r\tleaf2 := PhxJsonObjectForTestWithAlphabeticallyOrderedIVs new.\r\tnode1 := PhxJsonObjectForTestWithAlphabeticallyOrderedIVs new.\r\tnode2 := PhxJsonObjectForTestWithAlphabeticallyOrderedIVs new.\r\tnode3 := PhxJsonObjectForTestWithAlphabeticallyOrderedIVs new.\r\troot := PhxJsonObjectForTestWithAlphabeticallyOrderedIVs new.\r\tleaf1\r\t\taaaa: \'stuff\';\r\t\tbbbb: \'Test org 1\';\r\t\tcccc: \'TestOrg1LegalForm1\'.\r\tleaf2\r\t\taaaa: \'TestOrg2\';\r\t\tbbbb: \'more stuff\';\r\t\tcccc: \'TestOrg1LegalForm2\'.\r\tnode1\r\t\taaaa: leaf1;\r\t\tbbbb: leaf2;\r\t\tcccc: \'node2\'.\r\tnode2\r\t\taaaa: node1;\r\t\tbbbb: leaf2;\r\t\tcccc: leaf1.\r\tnode3\r\t\taaaa: leaf2;\r\t\tbbbb: leaf1;\r\t\tcccc: node1.\r\troot\r\t\taaaa: node3;\r\t\tbbbb: node1;\r\t\tcccc: node2.\r\t^ root',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3735' ],		#self : OmReference [ '3736' ],		#time : DateAndTime [ '2024-03-03T08:20:55.992-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PhxJsonTestResources class',				#isMetaSide : true			},			#name : #objectWithLiteralIVs,			#protocol : #tests,			#sourceCode : 'objectWithLiteralIVs\r\r\t^ PhxJsonObjectForTestWithAlphabeticallyOrderedIVs new\r\t\t  aaaa: \'TestOrg1\';\r\t\t  bbbb: \'Test org 1\';\r\t\t  cccc: \'TestOrg1LegalForm\';\r\t\t  yourself',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3736' ],		#self : OmReference [ '3737' ],		#time : DateAndTime [ '2024-03-03T08:20:55.992-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedDateAndDateAndTimeTests,				#isMetaSide : false			},			#name : #testDateAndTimeNowEquivalence,			#protocol : #tests,			#sourceCode : 'testDateAndTimeNowEquivalence\r\t| pharoTs jsTsString jsTs |\r\tpharoTs := DateAndTime now.\r\tjsTsString := self evalBlock: [ DateAndTime now toISOString ].\r\tjsTs := DateAndTime fromString: jsTsString.\r\tself assert: (pharoTs asSeconds - jsTs asSeconds) abs < 10.\r\tself assert: (pharoTs asUTC asSeconds - jsTs asSeconds) abs < 10',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3737' ],		#self : OmReference [ '3738' ],		#time : DateAndTime [ '2024-03-03T08:20:55.992-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedDateAndDateAndTimeTests,				#isMetaSide : false			},			#name : #testDateAndTimePhxJsonAlwaysUTC,			#protocol : #tests,			#sourceCode : 'testDateAndTimePhxJsonAlwaysUTC\r\t| jsTs phxJson pharoTs pharoTs2 |\r\tpharoTs := PhxJsonReader\r\t\treadFromString: \'{"class":"DateAndTime","instance":"2020-04-21T21:17:08.908+02:00"}\'.\r\tself assert: pharoTs offset = 2 hours.\r\tpharoTs2 := PhxJsonReader readFromString: pharoTs asPhxJsonString.\r\tself assert: pharoTs2 offset isZero.\r\tphxJson := self\r\t\tevalBlock: [ | ts |\r\t\t\tts := PhxJsonReader\r\t\t\t\treadFromString: \'{"class":"DateAndTime","instance":"2020-04-21T21:17:08.908+02:00"}\'.\r\t\t\tconsole log: ts.\r\t\t\tts asPhxJsonString\t"always translates to UTC" ].\r\tjsTs := PhxJsonReader readFromString: phxJson.\r\tself assert: jsTs offset isZero',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3738' ],		#self : OmReference [ '3739' ],		#time : DateAndTime [ '2024-03-03T08:20:55.992-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedDateAndDateAndTimeTests,				#isMetaSide : false			},			#name : #testDateAndTimeRefCountWhileMaterializing,			#protocol : #tests,			#sourceCode : 'testDateAndTimeRefCountWhileMaterializing\r\r\t| phxJson |\r\tphxJson := self evalBlock: [ \r\t\t           | ts |\r\t\t           ts := DateAndTime now.\r\t\t           { \r\t\t\t           ts.\r\t\t\t           ts } asPhxJsonString ].\r\tself\r\t\tshouldnt: [ PhxJsonReader readFromString: phxJson ]\r\t\traise: SubscriptOutOfBounds',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3739' ],		#self : OmReference [ '3740' ],		#time : DateAndTime [ '2024-03-03T08:20:55.992-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #'assertAllWithInstantiationBlock:literal:testEq:test4Stages:',			#protocol : #private,			#sourceCode : 'assertAllWithInstantiationBlock: aBlock literal: jsonString testEq: testEq test4Stages: test4Stages\r\r\t| instanceProxy |\r\tinstanceProxy := self evalBlock: aBlock.\r\tself\r\t\tassert: [ instanceProxy asPhxJsonString ]\r\t\tevaluatesTo: jsonString.\r\r\ttestEq ifTrue: [ self assertEquivalent: aBlock ].\r\tself isEqualAfterWriteReadInJs: aBlock.\r\ttest4Stages ifTrue: [ \r\t\tself isEqualAfter4StageMarshalingInBothWorlds: aBlock ]',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3740' ],		#self : OmReference [ '3741' ],		#time : DateAndTime [ '2024-03-03T08:20:55.992-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #'isEqualAfter4StageMarshalingInBothWorlds:',			#protocol : #private,			#sourceCode : 'isEqualAfter4StageMarshalingInBothWorlds: aBlock\r\r\t| jsonStringOfObject objectProxy serializedInJsWorld materializedObjectSmalltalk serializedInSmalltalkWorld stringifiedAfterMaterializedInJsWorld |\r\tobjectProxy := self evalBlock: aBlock.\r\tserializedInJsWorld := self evalBlock: [ objectProxy asPhxJsonString ].\r\tmaterializedObjectSmalltalk := PhxJsonReader readFromString:\r\t\t                               serializedInJsWorld.\r\tserializedInSmalltalkWorld := materializedObjectSmalltalk\r\t\t                              asPhxJsonString.\r\tstringifiedAfterMaterializedInJsWorld := self evalBlock: [ \r\t\t                                         JSON stringify:\r\t\t\t                                         (PhxJsonReader \r\t\t\t\t                                          readFromString:\r\t\t\t\t                                          serializedInSmalltalkWorld) ].\r\tjsonStringOfObject := self evalBlock: [ JSON stringify: objectProxy ].\r\tself\r\t\tassert: stringifiedAfterMaterializedInJsWorld\r\t\tequals: jsonStringOfObject',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3741' ],		#self : OmReference [ '3742' ],		#time : DateAndTime [ '2024-03-03T08:20:55.992-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #'isEqualAfterWriteReadInJs:',			#protocol : #private,			#sourceCode : 'isEqualAfterWriteReadInJs: aBlock\r\r\t| jsonStringAfterWriteRead jsonStringOfObject instanceProxy instanceJsonInJsWorld |\r\tinstanceProxy := self evalBlock: aBlock.\r\tinstanceJsonInJsWorld := self evalBlock: [ \r\t\t                         instanceProxy asPhxJsonString ].\r\tjsonStringAfterWriteRead := self evalBlock: [ \r\t\t                            JSON stringify:\r\t\t\t                            (PhxJsonReader readFromString:\r\t\t\t\t                             instanceProxy asPhxJsonString) ].\r\tjsonStringOfObject := self evalBlock: [ \r\t\t                      JSON stringify: instanceProxy ].\r\tself assert: jsonStringAfterWriteRead equals: jsonStringOfObject',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3742' ],		#self : OmReference [ '3743' ],		#time : DateAndTime [ '2024-03-03T08:20:55.993-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSerializeArray,			#protocol : #tests,			#sourceCode : 'testSerializeArray\r\tself\r\t\tassertAllWithInstantiationBlock:  [{}]  \r\t\tliteral: \'{"class":"Array","instance":[]}\'\r\t\ttestEq: true\r\t\ttest4Stages: true',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3743' ],		#self : OmReference [ '3744' ],		#time : DateAndTime [ '2024-03-03T08:20:55.993-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSerializeAssociations,			#protocol : #tests,			#sourceCode : 'testSerializeAssociations\r\tself\r\t\tassertAllWithInstantiationBlock: [{ \'een\' -> 1. \'twee\' -> 2 }  ]\r\t\tliteral: \'{"class":"Array","instance":[{"class":"Association","instance":{"key":"een","value":1}},{"class":"Association","instance":{"key":"twee","value":2}}]}\'\r\t\ttestEq: false\r\t\ttest4Stages: true',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3744' ],		#self : OmReference [ '3745' ],		#time : DateAndTime [ '2024-03-03T08:20:55.993-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSerializeBoolean,			#protocol : #tests,			#sourceCode : 'testSerializeBoolean\r\tself\r\t\tassertAllWithInstantiationBlock: [ true  ]\r\t\tliteral: \'true\'\r\t\ttestEq: true\r\t\ttest4Stages: true.\r\tself\r\t\tassertAllWithInstantiationBlock: [ false  ]\r\t\tliteral: \'false\'\r\t\ttestEq: true\r\t\ttest4Stages: true',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3745' ],		#self : OmReference [ '3746' ],		#time : DateAndTime [ '2024-03-03T08:20:55.993-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSerializeChallengingObject,			#protocol : #tests,			#sourceCode : 'testSerializeChallengingObject\r\tself\r\t\tassertAllWithInstantiationBlock: [ PhxJsonTestResources challingingObjectAvoidingDateAndTime  ]\r\t\tliteral: PhxJsonTestResources challingingObjectAvoidingDateAndTime asPhxJsonString\r\t\ttestEq: false\r\t\ttest4Stages: true',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3746' ],		#self : OmReference [ '3747' ],		#time : DateAndTime [ '2024-03-03T08:20:55.993-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSerializeDate,			#protocol : #tests,			#sourceCode : 'testSerializeDate\r\t<expectedFailure>\r\tself fail: #ToDo.\r\tself\r\t\tassertAllWithInstantiationBlock: [ | d |\r\t\t\td := (DateAndTime\r\t\t\t\tyear: 2020\r\t\t\t\tmonth: 04\r\t\t\t\tday: 11\r\t\t\t\thour: 23\r\t\t\t\tminute: 2\r\t\t\t\tsecond: 3) asDate.\r\t\t\td  ]\r\t\tliteral: \'{"class":"DateAndTime","instance":"2020-04-11T23:02:03.000Z"}\'\r\t\ttestEq: true\r\t\ttest4Stages: true',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3747' ],		#self : OmReference [ '3748' ],		#time : DateAndTime [ '2024-03-03T08:20:55.993-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSerializeDateAndTime,			#protocol : #tests,			#sourceCode : 'testSerializeDateAndTime\r\t<expectedFailure>\r\tself fail: #ToDo.\r\tself\r\t\tassertAllWithInstantiationBlock: [ | d |\r\t\t\td := DateAndTime\r\t\t\t\tyear: 2020\r\t\t\t\tmonth: 04\r\t\t\t\tday: 11\r\t\t\t\thour: 23\r\t\t\t\tminute: 2\r\t\t\t\tsecond: 3.\r\t\t\td  ]\r\t\tliteral: \'{"class":"DateAndTime","instance":"2020-04-11T23:02:03.000Z"}\'\r\t\ttestEq: true\r\t\ttest4Stages: true',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3748' ],		#self : OmReference [ '3749' ],		#time : DateAndTime [ '2024-03-03T08:20:55.993-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSerializeDictionary,			#protocol : #tests,			#sourceCode : 'testSerializeDictionary\r\tself\r\t\tassertAllWithInstantiationBlock: [ | d |\r\t\t\td := Dictionary new.\r\t\t\td at: \'a\' put: \'abc\'.\r\t\t\td at: \'b\' put: \'123\'.\r\t\t\td ]\r\t\tliteral: \'{"class":"Dictionary","instance":{"a":"abc","b":"123"}}\'\r\t\ttestEq: false "#assertEquivalent: doesn\'t work for this type of object"\r\t\ttest4Stages: true',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3749' ],		#self : OmReference [ '3750' ],		#time : DateAndTime [ '2024-03-03T08:20:55.994-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSerializeDifferentObjectGraphs,			#protocol : #tests,			#sourceCode : 'testSerializeDifferentObjectGraphs\r\r\t| jsString pharoString |\r\t#(objectGraphWithSharedLeaves objectGraphWithCycleOfLength2 objectGraphWithCycleOfLength1\r\t   objectWithLiteralIVs ) do: [ :each | \r\t\tself assertEquivalent: [ \r\t\t\t(PhxJsonTestResources perform: each) asPhxJsonString ].\r\t\tjsString := self evalBlock: [ \r\t\t\t            (PhxJsonTestResources perform: each) asPhxJsonString ].\r\t\tself\r\t\t\tshouldnt: [ PhxJsonReader readFromString: jsString ]\r\t\t\traise: Exception.\r\t\tpharoString := (PhxJsonTestResources perform: each) asPhxJsonString.\r\t\tself\r\t\t\tshouldnt: [ \r\t\t\tself evalBlock: [ PhxJsonReader readFromString: pharoString ] ]\r\t\t\traise: Exception ]',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3750' ],		#self : OmReference [ '3751' ],		#time : DateAndTime [ '2024-03-03T08:20:55.994-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSerializeEmptyObject,			#protocol : #tests,			#sourceCode : 'testSerializeEmptyObject\r\tself\r\t\tassertAllWithInstantiationBlock: [ Object new  ]\r\t\tliteral: \'{"class":"Object","instance":{}}\'\r\t\ttestEq: false "#assertEquivalent: doesn\'t work for this type of object"\r\t\ttest4Stages: true',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3751' ],		#self : OmReference [ '3752' ],		#time : DateAndTime [ '2024-03-03T08:20:55.994-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSerializeIdentityDictionary1Entry,			#protocol : #tests,			#sourceCode : 'testSerializeIdentityDictionary1Entry\r\r\tself\r\t\tassertAllWithInstantiationBlock: [ \r\t\t\t| d |\r\t\t\td := IdentityDictionary new.\r\t\t\td at: \'b\' put: \'123\'.\r\t\t\td ]\r\t\tliteral: \'{"class":"IdentityDictionary","instance":{"b":"123"}}\'\r\t\ttestEq: false "#assertEquivalent: doesn\'t work for this type of object"\r\t\ttest4Stages: true.\r\tself\r\t\tassertAllWithInstantiationBlock: [ \r\t\t\t| d |\r\t\t\td := IdentityDictionary new.\r\t\t\td at: \'a\' put: \'abc\'.\r\t\t\td ]\r\t\tliteral: \'{"class":"IdentityDictionary","instance":{"a":"abc"}}\'\r\t\ttestEq: false "#assertEquivalent: doesn\'t work for this type of object"\r\t\ttest4Stages: true',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3752' ],		#self : OmReference [ '3753' ],		#time : DateAndTime [ '2024-03-03T08:20:55.994-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSerializeIdentityDictionary2Entries,			#protocol : #tests,			#sourceCode : 'testSerializeIdentityDictionary2Entries\r\t"Entries in a dictionary are unordered. So, serialization may result into different valid results."\r\t| serializationBlock validSerializationStrings jsSerialization pharoSerialization |\r\tserializationBlock := [ | d |\r\t\t\td := IdentityDictionary new.\r\t\t\td at: \'a\' put: \'abc\'.\r\t\t\td at: \'b\' put: \'123\'.\r\t\t\td asPhxJsonString ].\r\tvalidSerializationStrings := #(\r\t\t\'{"class":"IdentityDictionary","instance":{"a":"abc","b":"123"}}\'\r\t\t\'{"class":"IdentityDictionary","instance":{"b":"123","a":"abc"}}\').\r\tjsSerialization := self evalBlock: serializationBlock.\r\tpharoSerialization := serializationBlock value.\r\t{jsSerialization. pharoSerialization} do: [ : serialization |\r\t\tself assert: (validSerializationStrings includes: serialization)\r\t]',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3753' ],		#self : OmReference [ '3754' ],		#time : DateAndTime [ '2024-03-03T08:20:55.994-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSerializeInstRefs,			#protocol : #tests,			#sourceCode : 'testSerializeInstRefs\r\t"objects should be checked by identity!!!"\r\r\t| a |\r\ta := {}.\r\tself\r\t\tassert: [ {a.\r\t\t\ta} asPhxJsonString ]\r\t\tevaluatesTo:\r\t\t\t\'{"class":"Array","instance":[{"class":"Array","instance":[]},{"instRef":2}]}\'.\r\tself\r\t\tassertEquivalent: [ {a.\r\t\t\ta} asPhxJsonString ]',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3754' ],		#self : OmReference [ '3755' ],		#time : DateAndTime [ '2024-03-03T08:20:55.994-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSerializeInstRefsAvoidWhenDifferentInstances,			#protocol : #tests,			#sourceCode : 'testSerializeInstRefsAvoidWhenDifferentInstances\r\t"objects should be checked by identity!!!"\r\r\tself\r\t\tassert: [ {{}.\r\t\t\t{}} asPhxJsonString ]\r\t\tevaluatesTo:\r\t\t\t\'{"class":"Array","instance":[{"class":"Array","instance":[]},{"class":"Array","instance":[]}]}\'.\r\tself\r\t\tassertEquivalent: [ {{}.\r\t\t\t{}} asPhxJsonString ]',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3755' ],		#self : OmReference [ '3756' ],		#time : DateAndTime [ '2024-03-03T08:20:55.994-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSerializeNil,			#protocol : #tests,			#sourceCode : 'testSerializeNil\r\tself\r\t\tassertAllWithInstantiationBlock: [ nil  ]\r\t\tliteral: \'null\'\r\t\ttestEq: true\r\t\ttest4Stages: true',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3756' ],		#self : OmReference [ '3757' ],		#time : DateAndTime [ '2024-03-03T08:20:55.995-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSerializeNumber,			#protocol : #tests,			#sourceCode : 'testSerializeNumber\r\tself\r\t\tassertAllWithInstantiationBlock: [ 123456789  ]\r\t\tliteral: \'123456789\'\r\t\ttestEq: true\r\t\ttest4Stages: true.\r\tself\r\t\tassertAllWithInstantiationBlock: [ 12345.6789  ]\r\t\tliteral: \'12345.6789\'\r\t\ttestEq: true\r\t\ttest4Stages: true',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3757' ],		#self : OmReference [ '3758' ],		#time : DateAndTime [ '2024-03-03T08:20:55.995-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSerializeOrderedCollection,			#protocol : #tests,			#sourceCode : 'testSerializeOrderedCollection\r\t"On js side, OrderedCollection does not exist!!! "\r\t"Auto transpiled to Array."\r\r\tself\r\t\tassertAllWithInstantiationBlock: [ OrderedCollection new ]\r\t\tliteral: \'{"class":"Array","instance":[]}\'\r\t\ttestEq: false "don\'t test because it\'s an Array client side"\r\t\ttest4Stages: true',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3758' ],		#self : OmReference [ '3759' ],		#time : DateAndTime [ '2024-03-03T08:20:55.995-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSerializeOrderedCollectionInPharoMatrializeInJs,			#protocol : #tests,			#sourceCode : 'testSerializeOrderedCollectionInPharoMatrializeInJs\r\r\t| originalCollection serializationString materializedCollection |\r\toriginalCollection := OrderedCollection withAll: #( a 11 \'xyz\' ).\r\tserializationString := originalCollection asPhxJsonString.\r\tmaterializedCollection := self evalBlock: [ \r\t\t                          PhxJsonReader readFromString: \r\t\t\t                          serializationString ].\r\toriginalCollection withIndexDo: [ :each :index | \r\t\tself assert: (materializedCollection at: index) equals: each ]',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3759' ],		#self : OmReference [ '3760' ],		#time : DateAndTime [ '2024-03-03T08:20:55.995-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSerializeSet,			#protocol : #tests,			#sourceCode : 'testSerializeSet\r\r\tself\r\t\tassertAllWithInstantiationBlock: [ Set new ]\r\t\tliteral: \'{"class":"Set","instance":[]}\'\r\t\ttestEq: false "#assertEquivalent: doesn\'t work for this type of object"\r\t\ttest4Stages: true ',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3760' ],		#self : OmReference [ '3761' ],		#time : DateAndTime [ '2024-03-03T08:20:55.995-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxBridgedJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSerializeString,			#protocol : #tests,			#sourceCode : 'testSerializeString\r\tself\r\t\tassertAllWithInstantiationBlock: [ PhxJsonTestResources challengingStringRequiringUnicodeAndEscapement\r\t\t\t\t ]\r\t\tliteral:\r\t\t\tPhxJsonTestResources challengingStringRequiringUnicodeAndEscapement\r\t\t\t\tasPhxJsonString\r\t\ttestEq: true\r\t\ttest4Stages: true',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3761' ],		#self : OmReference [ '3762' ],		#time : DateAndTime [ '2024-03-03T08:20:55.995-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJavascriptJsonSerialisationTests,				#isMetaSide : false			},			#name : #testArraysCircularReferences,			#protocol : #tests,			#sourceCode : 'testArraysCircularReferences\r\t| cClone aClone bClone |\r\tcClone := self evalBlock: [\r\t\t| a b c |\r\t\ta := {\'A\'. nil. nil. nil}.\r\t\tb := {\'B\'. nil. nil. nil }.\r\t\tc := {\'C\'. nil. nil. nil }.\r\t\t{ a. b. c } do: [ : each |\r\t\t\teach at: 2 put: a.\r\t\t\teach at: 3 put: b.\r\t\t\teach at: 4 put: c.\r\t\t].\r\t\tPhxJsonReader readFromString: c asPhxJsonString.\r\t\t].\t\r\taClone := cClone second.\r\tbClone := cClone third.\r\t{ aClone. bClone. cClone.}  with: #(A B C) do: [ : each : name |\r\t\tself assert: each size equals: 4.\r\t\tself assert: each first equals: name.\r\t\tself assert: each second identicalTo: aClone.\r\t\tself assert: each third identicalTo: bClone.\r\t\tself assert: each last identicalTo: cClone.\r\t].',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3762' ],		#self : OmReference [ '3763' ],		#time : DateAndTime [ '2024-03-03T08:20:55.995-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJavascriptJsonSerialisationTests,				#isMetaSide : false			},			#name : #testDictionariesReferencingEachOther,			#protocol : #tests,			#sourceCode : 'testDictionariesReferencingEachOther\r\t<expectedFailure>\r\t| cClone aClone bClone |\r\tcClone := self evalBlock: [\r\t\t| a b c |\r\t\ta := Dictionary new.\r\t\ta at: #name put: \'A\'.\r\t\tb := Dictionary new.\r\t\tb at: #name put: \'B\'.\r\t\tb at: #a put: a.\r\t\tc := Dictionary new.\r\t\tc at: #name put: \'C\'.\r\t\tc at: #a put: a.\r\t\tc at: #b put: b.\r\t\tPhxJsonReader readFromString: c asPhxJsonString.\r\t\t].\r\tself assert: cClone size equals: 3.\r\taClone := cClone at: #a.\r\tself assert: aClone size equals: 1.\r\tself assert: (aClone at: #name) equals: \'A\'.\r\tbClone := cClone at: #b.\r\tself assert: bClone size equals: 2.\r\tself assert: (bClone at: #name) equals: \'B\'.\r\tself assert: (bClone at: #b) identicalTo: aClone.',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3763' ],		#self : OmReference [ '3764' ],		#time : DateAndTime [ '2024-03-03T08:20:55.996-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJavascriptJsonSerialisationTests,				#isMetaSide : false			},			#name : #testDictionariesWithCircularReferences,			#protocol : #tests,			#sourceCode : 'testDictionariesWithCircularReferences\r\t<expectedFailure>\r\t| cClone aClone bClone |\r\tcClone := self evalBlock: [\r\t\t| a b c |\r\t\ta := Dictionary new.\r\t\ta at: #name put: \'A\'.\r\t\tb := Dictionary new.\r\t\tb at: #name put: \'B\'.\r\t\tc := Dictionary new.\r\t\tc at: #name put: \'C\'.\r\t\t{ a. b. c } do: [ : each |\r\t\t\teach at: #a put: a.\r\t\t\teach at: #b put: b.\r\t\t\teach at: #c put: c.\r\t\t].\r\t\tPhxJsonReader readFromString: c asPhxJsonString.\r\t\t].\r\taClone := cClone at: #a.\r\tbClone := cClone at: #b.\r\t{ aClone. bClone. cClone.}  with: #(A B C) do: [ : each : name |\r\t\tself assert: each size equals: 4.\r\t\tself assert: (each at: #name) equals: name.\r\t\tself assert: (each at: #a) identicalTo: aClone.\r\t\tself assert: (each at: #b) identicalTo: bClone.\r\t\tself assert: (each at: #c) identicalTo: cClone.\r\t].',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3764' ],		#self : OmReference [ '3765' ],		#time : DateAndTime [ '2024-03-03T08:20:55.996-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJavascriptJsonSerialisationTests,				#isMetaSide : false			},			#name : #testOrderedCollectionsCircularReferences,			#protocol : #tests,			#sourceCode : 'testOrderedCollectionsCircularReferences\r\t| cClone aClone bClone |\r\tcClone := self evalBlock: [\r\t\t| a b c |\r\t\ta := #(\'A\') asOrderedCollection.\r\t\tb := {\'B\'} asOrderedCollection.\r\t\tc := {\'C\'} asOrderedCollection.\r\t\t{ a. b. c } do: [ : each |\r\t\t\teach add: a.\r\t\t\teach add: b.\r\t\t\teach add: c.\r\t\t].\r\t\tPhxJsonReader readFromString: c asPhxJsonString.\r\t\t].\t\r\taClone := cClone second.\r\tbClone := cClone third.\r\t{ aClone. bClone. cClone.}  with: #(A B C) do: [ : each : name |\r\t\tself assert: each size equals: 4.\r\t\tself assert: each first equals: name.\r\t\tself assert: each second identicalTo: aClone.\r\t\tself assert: each third identicalTo: bClone.\r\t\tself assert: each last identicalTo: cClone.\r\t].',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3765' ],		#self : OmReference [ '3766' ],		#time : DateAndTime [ '2024-03-03T08:20:55.996-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJavascriptJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSetsCircularReferences,			#protocol : #tests,			#sourceCode : 'testSetsCircularReferences\r\t<expectedFailure>\r\t| cClone aClone bClone identitySet |\r\tcClone := self evalBlock: [\r\t\t| a b c |\r\t\ta := {\'A\'} asSet.\r\t\tb := {\'B\'} asSet.\r\t\tc := {\'C\'} asSet.\r\t\t{a. b. c} do: [ : each | each addAll: {a. b. c} ].\r\t\tPhxJsonReader readFromString: c asPhxJsonString.\r\t\t].\t\r\taClone := cClone detect: [: each | each includes: \'A\'] ifNone: [nil].\r\tbClone := cClone detect: [: each | each includes: \'B\'] ifNone: [nil].\r\t{ aClone. bClone. cClone.} with: #(A B C) do: [ : each : name |\r\t\tself assert: each size equals: 4.\r\t\tself assert: (each includes: name).\r\t].\r\tidentitySet := IdentitySet new.\r\t{aClone. bClone. cClone} do: [ : each | identitySet addAll: each ].\r\tidentitySet removeAll: #(A B C).\r\tself assert: identitySet size equals: 3.',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3766' ],		#self : OmReference [ '3767' ],		#time : DateAndTime [ '2024-03-03T08:20:55.996-05:00' ],		#trigger : OmReference [ '3710' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhxJavascriptJsonSerialisationTests,				#isMetaSide : false			},			#name : #testSetsReferencingEachOther,			#protocol : #tests,			#sourceCode : 'testSetsReferencingEachOther\r\t| cClone bClone aInBClone aInCClone |\r\tcClone := self evalBlock: [\r\t\t| a b c |\r\t\ta := #(\'A\') asSet.\r\t\tb := {\'B\'. a } asSet.\r\t\tc := {\'C\'. a. b } asSet.\r\t\tPhxJsonReader readFromString: c asPhxJsonString.\r\t].\r\tself assert: cClone size equals: 3.\r\tself assert: (cClone includes: \'C\').\r\tself deny: (cClone includes: cClone).\r\tbClone := cClone detect: [ : each | each includes: \'B\' ] ifNone: [nil].\r\tself assert: bClone size equals: 2.\r\tself deny: (bClone includes: bClone).\r\taInBClone := bClone detect: [ : each | each includes: \'A\' ] ifNone: [nil].\r\tself assert: aInBClone size equals: 1.\r\taInCClone := cClone detect: [ : each | each includes: \'A\' ] ifNone: [nil].\r\tself assert: aInBClone identicalTo: aInCClone.',			#stamp : '',			#package : #PharoJs-Base-Serialization-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:56.16-05:00' ],		#prior : OmReference [ '3767' ],		#self : OmReference [ '3768' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-Base-Serialization-Deprecated-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3768' ],		#self : OmReference [ '3769' ],		#time : DateAndTime [ '2024-03-03T08:20:56.185-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Serialization-Deprecated-Tests,		#affectedPackageName : #PharoJs-Base-Serialization-Deprecated	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3769' ],		#self : OmReference [ '3770' ],		#time : DateAndTime [ '2024-03-03T08:20:56.188-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjCompositeForSerializationTest\r\tinstanceVariableNames: \'a b\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Serialization-Deprecated-Tests\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjCompositeForSerializationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjCompositeForSerializationTest,						#isMetaSide : false					},					#name : #a,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjCompositeForSerializationTest,						#isMetaSide : false					},					#name : #b,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjCompositeForSerializationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjCompositeForSerializationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjCompositeForSerializationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Serialization-Deprecated-Tests,			#package : #PharoJs-Base-Serialization-Deprecated,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3770' ],		#self : OmReference [ '3771' ],		#time : DateAndTime [ '2024-03-03T08:20:56.191-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjSerializationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Serialization-Deprecated-Tests\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjSerializationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSerializationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSerializationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSerializationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Serialization-Deprecated-Tests,			#package : #PharoJs-Base-Serialization-Deprecated,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3771' ],		#self : OmReference [ '3772' ],		#time : DateAndTime [ '2024-03-03T08:20:56.193-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Serialization-Deprecated-Kernel,		#affectedPackageName : #PharoJs-Base-Serialization-Deprecated	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3772' ],		#self : OmReference [ '3773' ],		#time : DateAndTime [ '2024-03-03T08:20:56.194-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjMaterializer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjBrowserGlobals\'\r\tpackage: \'PharoJs-Base-Serialization-Deprecated-Kernel\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjMaterializer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMaterializer class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMaterializer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMaterializer,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Serialization-Deprecated-Kernel,			#package : #PharoJs-Base-Serialization-Deprecated,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjMaterializer,						#isMetaSide : false					},					#name : #PjBrowserGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3773' ],		#self : OmReference [ '3774' ],		#time : DateAndTime [ '2024-03-03T08:20:56.197-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjSerializationTestSupport\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjBrowserGlobals\'\r\tpackage: \'PharoJs-Base-Serialization-Deprecated-Tests\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjSerializationTestSupport,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSerializationTestSupport class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSerializationTestSupport class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSerializationTestSupport,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Serialization-Deprecated-Tests,			#package : #PharoJs-Base-Serialization-Deprecated,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSerializationTestSupport,						#isMetaSide : false					},					#name : #PjBrowserGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3774' ],		#self : OmReference [ '3775' ],		#time : DateAndTime [ '2024-03-03T08:20:56.285-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjObject class',				#isMetaSide : true			},			#name : #'newFromMaterialized:',			#protocol : #'*PharoJs-Base-Serialization-Deprecated',			#sourceCode : 'newFromMaterialized: serializationArray\r\t|restored ivIndex|\r\trestored := self new. "Ensure initialize is performed in case there are new IVs"\r\tivIndex := 1.\r\t[ivIndex <= serializationArray size] whileTrue: [\r\t\trestored \r\t\t\tinstVarNamed: (serializationArray at: ivIndex) \r\t\t\tput: (serializationArray at: ivIndex + 1) materialize.\r\t\tivIndex := ivIndex + 2.\r\t].\r\t^restored',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3775' ],		#self : OmReference [ '3776' ],		#time : DateAndTime [ '2024-03-03T08:20:56.286-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #serializationArray,			#protocol : #'*PharoJs-Base-Serialization-Deprecated',			#sourceCode : 'serializationArray\r\t^ {self className.\r\tself serializationContents}',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3776' ],		#self : OmReference [ '3777' ],		#time : DateAndTime [ '2024-03-03T08:20:56.287-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #serializationContents,			#protocol : #'*PharoJs-Base-Serialization-Deprecated',			#sourceCode : 'serializationContents\r\t|serializable|\r\tserializable := OrderedCollection new.\r\tself keysAndValuesDo: [ : key : value |\r\t\tserializable add: key.\r\t\tserializable add: value serializationArray.\r\t].\r\t^serializable',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3777' ],		#self : OmReference [ '3778' ],		#time : DateAndTime [ '2024-03-03T08:20:56.287-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObject,				#isMetaSide : false			},			#name : #serialize,			#protocol : #'*PharoJs-Base-Serialization-Deprecated',			#sourceCode : 'serialize\r\t^ self serializationArray asJSON',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3778' ],		#self : OmReference [ '3779' ],		#time : DateAndTime [ '2024-03-03T08:20:56.287-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCompositeForSerializationTest,				#isMetaSide : false			},			#name : #a,			#protocol : #accessing,			#sourceCode : 'a\r\t^ a',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3779' ],		#self : OmReference [ '3780' ],		#time : DateAndTime [ '2024-03-03T08:20:56.287-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCompositeForSerializationTest,				#isMetaSide : false			},			#name : #'a:',			#protocol : #accessing,			#sourceCode : 'a: anObject\r\ta := anObject',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3780' ],		#self : OmReference [ '3781' ],		#time : DateAndTime [ '2024-03-03T08:20:56.287-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCompositeForSerializationTest,				#isMetaSide : false			},			#name : #b,			#protocol : #accessing,			#sourceCode : 'b\r\t^ b',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3781' ],		#self : OmReference [ '3782' ],		#time : DateAndTime [ '2024-03-03T08:20:56.287-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCompositeForSerializationTest,				#isMetaSide : false			},			#name : #'b:',			#protocol : #accessing,			#sourceCode : 'b: anObject\r\tb := anObject',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3782' ],		#self : OmReference [ '3783' ],		#time : DateAndTime [ '2024-03-03T08:20:56.287-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjUndefinedObject class',				#isMetaSide : true			},			#name : #'newFromMaterialized:',			#protocol : #'*PharoJs-Base-Serialization-Deprecated',			#sourceCode : 'newFromMaterialized: anObject\r\t^nil',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3783' ],		#self : OmReference [ '3784' ],		#time : DateAndTime [ '2024-03-03T08:20:56.288-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUndefinedObject,				#isMetaSide : false			},			#name : #serializationContents,			#protocol : #'*PharoJs-Base-Serialization-Deprecated',			#sourceCode : 'serializationContents\r\t^self',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3784' ],		#self : OmReference [ '3785' ],		#time : DateAndTime [ '2024-03-03T08:20:56.288-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNumber class',				#isMetaSide : true			},			#name : #'newFromMaterialized:',			#protocol : #'*PharoJs-Base-Serialization-Deprecated',			#sourceCode : 'newFromMaterialized: materializedObject\r\t^materializedObject',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3785' ],		#self : OmReference [ '3786' ],		#time : DateAndTime [ '2024-03-03T08:20:56.288-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNumber,				#isMetaSide : false			},			#name : #serializationContents,			#protocol : #'*PharoJs-Base-Serialization-Deprecated',			#sourceCode : 'serializationContents\r\t^self',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3786' ],		#self : OmReference [ '3787' ],		#time : DateAndTime [ '2024-03-03T08:20:56.288-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjString class',				#isMetaSide : true			},			#name : #'newFromMaterialized:',			#protocol : #'*PharoJs-Base-Serialization-Deprecated',			#sourceCode : 'newFromMaterialized: materializedObject\r\t^materializedObject',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3787' ],		#self : OmReference [ '3788' ],		#time : DateAndTime [ '2024-03-03T08:20:56.289-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #materialize,			#protocol : #'*PharoJs-Base-Serialization-Deprecated',			#sourceCode : 'materialize\r\t^PjMaterializer materializeFromString: self',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3788' ],		#self : OmReference [ '3789' ],		#time : DateAndTime [ '2024-03-03T08:20:56.289-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjString,				#isMetaSide : false			},			#name : #serializationContents,			#protocol : #'*PharoJs-Base-Serialization-Deprecated',			#sourceCode : 'serializationContents\r\t^self',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3789' ],		#self : OmReference [ '3790' ],		#time : DateAndTime [ '2024-03-03T08:20:56.29-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTArray classTrait',				#isMetaSide : true			},			#name : #'newFromMaterialized:',			#protocol : #'*PharoJs-Base-Serialization-Deprecated',			#sourceCode : 'newFromMaterialized: aJsonArray\r\t| materializedArray |\r\tmaterializedArray := self new.\r\taJsonArray do: [ : each | materializedArray add: each materialize].\r\t^materializedArray',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3790' ],		#self : OmReference [ '3791' ],		#time : DateAndTime [ '2024-03-03T08:20:56.291-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTArray,				#isMetaSide : false			},			#name : #serializationContents,			#protocol : #'*PharoJs-Base-Serialization-Deprecated',			#sourceCode : 'serializationContents\r\t"Important not to use a collect to ensure that we have an OrderedCollection that is actually a JS array. Since JSON knows how to handle arrays."\r\t| serializableElements |\r\tserializableElements := OrderedCollection new.\r\tself do: [ : each | serializableElements add: each serializationArray ].\r\t^serializableElements',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3791' ],		#self : OmReference [ '3792' ],		#time : DateAndTime [ '2024-03-03T08:20:56.291-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSerializationTest,				#isMetaSide : false			},			#name : #testBasicTypes,			#protocol : #testing,			#sourceCode : 'testBasicTypes\r\tself assert: [ \'abc\' serialize ] evaluatesTo: \'["String","abc"]\'.\r\tself assert: [ 3.14 serialize ] evaluatesTo: \'["Number",3.14]\'.\r\tself assert: [ true serialize ] evaluatesTo: \'["Boolean",true]\'.\r\tself assert: [ nil serialize ] evaluatesTo: \'["PjUndefinedObject",{}]\'.\r\tself assertBlock: [ PjSerializationTestSupport assertEquals: 645].\r\tself assertBlock: [ PjSerializationTestSupport assertEquals: 3.14].\r\tself assertBlock: [ PjSerializationTestSupport assertEquals: \'hello\' ].\r\tself assertBlock: [ PjSerializationTestSupport assertIdentity: nil ].\r\tself assertBlock: [ PjSerializationTestSupport assertIdentity: true ].\r\tself assertBlock: [ PjSerializationTestSupport assertIdentity: false ].',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3792' ],		#self : OmReference [ '3793' ],		#time : DateAndTime [ '2024-03-03T08:20:56.291-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSerializationTest,				#isMetaSide : false			},			#name : #testCollectionsOfBasicTypes,			#protocol : #testing,			#sourceCode : 'testCollectionsOfBasicTypes\r\tself assertBlock: [ PjSerializationTestSupport assertCollection: #() ].\r\tself assertBlock: [ PjSerializationTestSupport assertCollection: #(1 2 3) ].\r\tself assertBlock: [ PjSerializationTestSupport assertCollection: #(\'abc\' \'other\' \'yes\') ].\r\tself assertBlock: [ PjSerializationTestSupport assertCollection: OrderedCollection new ].\r\tself assertBlock: [ PjSerializationTestSupport assertCollection: Set new ].\r\tself assertBlock: [ \r\t\t|s|\r\t\ts := Set new.\r\t\ts addAll: #(1 2 3).\r\t\tPjSerializationTestSupport assertCollection: s ].\r\tself assertBlock: [ PjSerializationTestSupport assertCollection: SortedCollection new ].\r\tself assertBlock: [ \r\t\t|s|\r\t\ts := SortedCollection new.\r\t\ts addAll: #(310 22 13).\r\t\tPjSerializationTestSupport assertCollection: s ].',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3793' ],		#self : OmReference [ '3794' ],		#time : DateAndTime [ '2024-03-03T08:20:56.292-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSerializationTest,				#isMetaSide : false			},			#name : #testCollectionsOfComplexTypes,			#protocol : #testing,			#sourceCode : 'testCollectionsOfComplexTypes\r\tself assertBlock: [ \r\t\t|s|\r\t\ts := Set new.\r\t\ts addAll: {Time now. 1 hour}.\r\t\tPjSerializationTestSupport assertCollection: s ].\r\tself assertBlock: [ \r\t\t|c1 c2 s|\r\t\ts := Set new.\r\t\ts addAll: {\'wonderful\'. \'world\'}.\r\t\tc1 := PjCompositeForSerializationTest new.\r\t\tc1 a: 456.\r\t\tc1 b: true.\r\t\tc2 := PjCompositeForSerializationTest new.\r\t\tc2 a: s.\r\t\tc2 b: c1.\r\t\tPjSerializationTestSupport assertComplexObject: c2.\r\t\t].',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3794' ],		#self : OmReference [ '3795' ],		#time : DateAndTime [ '2024-03-03T08:20:56.292-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSerializationTest,				#isMetaSide : false			},			#name : #testDuration,			#protocol : #testing,			#sourceCode : 'testDuration\r\tself assertBlock: [ PjSerializationTestSupport assertDuration: Duration zero].\r\tself assertBlock: [ PjSerializationTestSupport assertDuration: 10 years].\r\tself assertBlock: [ PjSerializationTestSupport assertDuration: 6 months].\r\tself assertBlock: [ PjSerializationTestSupport assertDuration: 2 weeks].\r\tself assertBlock: [ PjSerializationTestSupport assertDuration: 2 hours].\r\tself assertBlock: [ PjSerializationTestSupport assertDuration: 30 minutes].\r\tself assertBlock: [ PjSerializationTestSupport assertDuration: 10 seconds].',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3795' ],		#self : OmReference [ '3796' ],		#time : DateAndTime [ '2024-03-03T08:20:56.292-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSerializationTest,				#isMetaSide : false			},			#name : #testTime,			#protocol : #testing,			#sourceCode : 'testTime\r\tself assertBlock: [ PjSerializationTestSupport assertTime: Time now].\r\tself assertBlock: [ \r\t\tPjSerializationTestSupport assertTime: (Time hour: 1 minute: 1 second: 13)].\r\tself assertBlock: [ \r\t\tPjSerializationTestSupport assertTime: (Time now seconds: 25)].\r\tself assertBlock: [ \r\t\tPjSerializationTestSupport assertTime: (Time now seconds: 625)].\r\tself assertBlock: [ \r\t\tPjSerializationTestSupport assertTime: (Time noon)].\r\tself assertBlock: [ \r\t\tPjSerializationTestSupport assertTime: (Time midnight)].\r\tself assertBlock: [ \r\t\tPjSerializationTestSupport assertTime: (Time hour: 1 minute: 0 second: 0)].\r\tself assertBlock: [ \r\t\tPjSerializationTestSupport assertTime: (Time hour: 12 minute: 0 second: 0)].\r\tself assertBlock: [ \r\t\tPjSerializationTestSupport assertTime: (Time hour: 13 minute: 0 second: 0)].\r\tself assertBlock: [ \r\t\tPjSerializationTestSupport assertTime: (Time hour: 23 minute: 59 second: 30)].',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3796' ],		#self : OmReference [ '3797' ],		#time : DateAndTime [ '2024-03-03T08:20:56.292-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSerializationTest,				#isMetaSide : false			},			#name : #testTimeDetailledSerialization,			#protocol : #testing,			#sourceCode : 'testTimeDetailledSerialization\r\t| now clone |\r\tnow := self evalBlock: [ \r\t\t\t\twindow instVarNamed: #now put: Time now.\r\t\t \t\twindow now.\r\t].\r\tclone := self evalBlock: [ PjSerializationTestSupport serializeThenMaterialize: window now].\r\tself assert: clone hour24 equals: now hour24.\r\tself assert: clone minute equals: now minute.\r\tself assert: clone second equals: now second.',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3797' ],		#self : OmReference [ '3798' ],		#time : DateAndTime [ '2024-03-03T08:20:56.292-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjMaterializer class',				#isMetaSide : true			},			#name : #'materializeFrom:',			#protocol : #materializing,			#sourceCode : 'materializeFrom: anObject\r\t^anObject materialize',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3798' ],		#self : OmReference [ '3799' ],		#time : DateAndTime [ '2024-03-03T08:20:56.292-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjMaterializer class',				#isMetaSide : true			},			#name : #'materializeFromArray:',			#protocol : #materializing,			#sourceCode : 'materializeFromArray: array\r\t| class |\r\tclass := global instVarNamed: array first.\r\t^class newFromMaterialized: array second',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3799' ],		#self : OmReference [ '3800' ],		#time : DateAndTime [ '2024-03-03T08:20:56.292-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjMaterializer class',				#isMetaSide : true			},			#name : #'materializeFromString:',			#protocol : #materializing,			#sourceCode : 'materializeFromString: aString\r\t| array |\r\tarray := JSON parse: aString.\r\t^self materializeFromArray: array',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3800' ],		#self : OmReference [ '3801' ],		#time : DateAndTime [ '2024-03-03T08:20:56.292-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjSerializationTestSupport class',				#isMetaSide : true			},			#name : #'assertCollection:',			#protocol : #serializing,			#sourceCode : 'assertCollection: aCollection\r\t| clone |\r\tclone := self serializeThenMaterialize: aCollection.\r\tclone class == aCollection class ifFalse: [ ^false ].\r\tclone size == aCollection size ifFalse: [ ^false ].\r\taCollection withIndexDo: [ : element : index |\r\t\telement class == (clone at: index) class ifFalse: [ ^false ].\r\t].\r\t^true',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3801' ],		#self : OmReference [ '3802' ],		#time : DateAndTime [ '2024-03-03T08:20:56.293-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjSerializationTestSupport class',				#isMetaSide : true			},			#name : #'assertComplexObject:',			#protocol : #serializing,			#sourceCode : 'assertComplexObject: aComposite\r\t| clone |\r\tclone := self serializeThenMaterialize: aComposite.\r\tclone class == aComposite class ifFalse: [ ^false ].\r\tclone a class == aComposite a class ifFalse: [ ^false ].\r\tclone b class == aComposite b class ifFalse: [ ^false ].\r\t^true',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3802' ],		#self : OmReference [ '3803' ],		#time : DateAndTime [ '2024-03-03T08:20:56.293-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjSerializationTestSupport class',				#isMetaSide : true			},			#name : #'assertDuration:',			#protocol : #serializing,			#sourceCode : 'assertDuration: aDuration\r\t| clone |\r\tclone := self serializeThenMaterialize: aDuration.\r\tclone class == Duration ifFalse: [ ^false ].\r\t^aDuration totalSeconds = clone totalSeconds',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3803' ],		#self : OmReference [ '3804' ],		#time : DateAndTime [ '2024-03-03T08:20:56.293-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjSerializationTestSupport class',				#isMetaSide : true			},			#name : #'assertEquals:',			#protocol : #serializing,			#sourceCode : 'assertEquals: anObject\r\t^(self serializeThenMaterialize: anObject) = anObject',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3804' ],		#self : OmReference [ '3805' ],		#time : DateAndTime [ '2024-03-03T08:20:56.293-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjSerializationTestSupport class',				#isMetaSide : true			},			#name : #'assertIdentity:',			#protocol : #serializing,			#sourceCode : 'assertIdentity: anObject\r\t^(self serializeThenMaterialize: anObject) == anObject',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3805' ],		#self : OmReference [ '3806' ],		#time : DateAndTime [ '2024-03-03T08:20:56.293-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjSerializationTestSupport class',				#isMetaSide : true			},			#name : #'assertTime:',			#protocol : #serializing,			#sourceCode : 'assertTime: aTime\r\t| clone |\r\tclone := self serializeThenMaterialize: aTime.\r\tclone class == Time ifFalse: [ ^false ].\r\tclone hour24 = aTime hour24 ifFalse: [ ^false ].\r\tclone minute = aTime minute ifFalse: [ ^false ].\r\tclone second = aTime second ifFalse: [ ^false ].\r\t^true',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3806' ],		#self : OmReference [ '3807' ],		#time : DateAndTime [ '2024-03-03T08:20:56.293-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjSerializationTestSupport class',				#isMetaSide : true			},			#name : #'serializeThenMaterialize:',			#protocol : #serializing,			#sourceCode : 'serializeThenMaterialize: anObject\r\t^PjMaterializer materializeFrom: anObject serialize',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3807' ],		#self : OmReference [ '3808' ],		#time : DateAndTime [ '2024-03-03T08:20:56.293-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTDate classTrait',				#isMetaSide : true			},			#name : #'newFromMaterialized:',			#protocol : #'*PharoJs-Base-Serialization-Deprecated',			#sourceCode : 'newFromMaterialized: jsonString\r\t<javascript: \'return new Date(jsonString)\'>',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3808' ],		#self : OmReference [ '3809' ],		#time : DateAndTime [ '2024-03-03T08:20:56.294-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTDate,				#isMetaSide : false			},			#name : #serializationContents,			#protocol : #'*PharoJs-Base-Serialization-Deprecated',			#sourceCode : 'serializationContents\r\t^self',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3809' ],		#self : OmReference [ '3810' ],		#time : DateAndTime [ '2024-03-03T08:20:56.294-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArray,				#isMetaSide : false			},			#name : #materialize,			#protocol : #'*PharoJs-Base-Serialization-Deprecated',			#sourceCode : 'materialize\r\t^PjMaterializer materializeFromArray: self',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3810' ],		#self : OmReference [ '3811' ],		#time : DateAndTime [ '2024-03-03T08:20:56.294-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBoolean class',				#isMetaSide : true			},			#name : #'newFromMaterialized:',			#protocol : #'*PharoJs-Base-Serialization-Deprecated',			#sourceCode : 'newFromMaterialized: materializedObject\r\t^materializedObject',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3811' ],		#self : OmReference [ '3812' ],		#time : DateAndTime [ '2024-03-03T08:20:56.295-05:00' ],		#trigger : OmReference [ '3768' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBoolean,				#isMetaSide : false			},			#name : #serializationContents,			#protocol : #'*PharoJs-Base-Serialization-Deprecated',			#sourceCode : 'serializationContents\r\t^self',			#stamp : '',			#package : #PharoJs-Base-Serialization-Deprecated		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:56.489-05:00' ],		#prior : OmReference [ '3812' ],		#self : OmReference [ '3813' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-Base-JS-CoreLibraries-Tests-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3813' ],		#self : OmReference [ '3814' ],		#time : DateAndTime [ '2024-03-03T08:20:56.516-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,		#affectedPackageName : #PharoJs-Base-JS-CoreLibraries-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3814' ],		#self : OmReference [ '3815' ],		#time : DateAndTime [ '2024-03-03T08:20:56.518-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjTranspilationClassCompilationTest subclass: #PjCoreLibrariesTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Collections\'',				#superclassName : 'PjTranspilationClassCompilationTest',				#traitCompositionSource : '{}'			},			#name : #PjCoreLibrariesTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjCoreLibrariesTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjCoreLibrariesTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjCoreLibrariesTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3815' ],		#self : OmReference [ '3816' ],		#time : DateAndTime [ '2024-03-03T08:20:56.523-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjArrayLikeCollectionTest\r\tinstanceVariableNames: \'collection\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Collections\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjArrayLikeCollectionTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjArrayLikeCollectionTest,						#isMetaSide : false					},					#name : #collection,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjArrayLikeCollectionTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjArrayLikeCollectionTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjArrayLikeCollectionTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3816' ],		#self : OmReference [ '3817' ],		#time : DateAndTime [ '2024-03-03T08:20:56.526-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjArrayLikeCollectionTest subclass: #PjHtmlCollectionTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Collections\'',				#superclassName : 'PjArrayLikeCollectionTest',				#traitCompositionSource : '{}'			},			#name : #PjHtmlCollectionTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjHtmlCollectionTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjHtmlCollectionTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjHtmlCollectionTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3817' ],		#self : OmReference [ '3818' ],		#time : DateAndTime [ '2024-03-03T08:20:56.528-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjArrayLikeCollectionTest subclass: #PjNodeListTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Collections\'',				#superclassName : 'PjArrayLikeCollectionTest',				#traitCompositionSource : '{}'			},			#name : #PjNodeListTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNodeListTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNodeListTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNodeListTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3818' ],		#self : OmReference [ '3819' ],		#time : DateAndTime [ '2024-03-03T08:20:56.53-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjArrayTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Collections\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjArrayTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjArrayTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjArrayTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjArrayTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3819' ],		#self : OmReference [ '3820' ],		#time : DateAndTime [ '2024-03-03T08:20:56.535-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjAsJsObjectInJs\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Collections\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjAsJsObjectInJs,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAsJsObjectInJs class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAsJsObjectInJs class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAsJsObjectInJs,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3820' ],		#self : OmReference [ '3821' ],		#time : DateAndTime [ '2024-03-03T08:20:56.537-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjAssociationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Collections\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjAssociationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAssociationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAssociationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAssociationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3821' ],		#self : OmReference [ '3822' ],		#time : DateAndTime [ '2024-03-03T08:20:56.538-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjChronololgyTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Collections\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjChronololgyTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjChronololgyTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjChronololgyTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjChronololgyTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3822' ],		#self : OmReference [ '3823' ],		#time : DateAndTime [ '2024-03-03T08:20:56.54-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-JS-CoreLibraries-Tests-Objects,		#affectedPackageName : #PharoJs-Base-JS-CoreLibraries-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3823' ],		#self : OmReference [ '3824' ],		#time : DateAndTime [ '2024-03-03T08:20:56.541-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjDateAndTimeTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Objects\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjDateAndTimeTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDateAndTimeTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDateAndTimeTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDateAndTimeTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Objects,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3824' ],		#self : OmReference [ '3825' ],		#time : DateAndTime [ '2024-03-03T08:20:56.542-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjDictionaryTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Collections\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjDictionaryTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDictionaryTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDictionaryTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDictionaryTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3825' ],		#self : OmReference [ '3826' ],		#time : DateAndTime [ '2024-03-03T08:20:56.543-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjIdentityDictionaryTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Collections\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjIdentityDictionaryTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjIdentityDictionaryTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjIdentityDictionaryTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjIdentityDictionaryTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3826' ],		#self : OmReference [ '3827' ],		#time : DateAndTime [ '2024-03-03T08:20:56.545-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjObjectTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Objects\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjObjectTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjObjectTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjObjectTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjObjectTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Objects,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3827' ],		#self : OmReference [ '3828' ],		#time : DateAndTime [ '2024-03-03T08:20:56.547-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjOrderedCollectionTest\r\tinstanceVariableNames: \'collection\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Collections\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjOrderedCollectionTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjOrderedCollectionTest,						#isMetaSide : false					},					#name : #collection,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjOrderedCollectionTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjOrderedCollectionTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjOrderedCollectionTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3828' ],		#self : OmReference [ '3829' ],		#time : DateAndTime [ '2024-03-03T08:20:56.548-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjSetTest\r\tinstanceVariableNames: \'set\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Collections\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjSetTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSetTest,						#isMetaSide : false					},					#name : #set,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSetTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSetTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSetTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3829' ],		#self : OmReference [ '3830' ],		#time : DateAndTime [ '2024-03-03T08:20:56.549-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjSortedCollectionTest\r\tinstanceVariableNames: \'collection\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Collections\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjSortedCollectionTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjSortedCollectionTest,						#isMetaSide : false					},					#name : #collection,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjSortedCollectionTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjSortedCollectionTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjSortedCollectionTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3830' ],		#self : OmReference [ '3831' ],		#time : DateAndTime [ '2024-03-03T08:20:56.55-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjStreamTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Collections\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjStreamTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjStreamTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjStreamTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjStreamTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3831' ],		#self : OmReference [ '3832' ],		#time : DateAndTime [ '2024-03-03T08:20:56.553-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjStreamTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Collections\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjStreamTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjStreamTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjStreamTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjStreamTest,					#isMetaSide : false				},				#parent : @8,				#content : 'I contain test for the simplistic Read/Write Stream implementation',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I contain test for the simplistic Read/Write Stream implementation',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3832' ],		#self : OmReference [ '3833' ],		#time : DateAndTime [ '2024-03-03T08:20:56.555-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjStringTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Collections\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjStringTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjStringTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjStringTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjStringTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3833' ],		#self : OmReference [ '3834' ],		#time : DateAndTime [ '2024-03-03T08:20:56.556-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjBridgeTestCase subclass: #PjUndefinedObjectTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Objects\'',				#superclassName : 'PjBridgeTestCase',				#traitCompositionSource : '{}'			},			#name : #PjUndefinedObjectTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjUndefinedObjectTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjUndefinedObjectTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjUndefinedObjectTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Objects,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3834' ],		#self : OmReference [ '3835' ],		#time : DateAndTime [ '2024-03-03T08:20:56.558-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjAsJsObjectInPharo\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Collections\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PjAsJsObjectInPharo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAsJsObjectInPharo class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAsJsObjectInPharo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAsJsObjectInPharo,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3835' ],		#self : OmReference [ '3836' ],		#time : DateAndTime [ '2024-03-03T08:20:56.559-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjDummyTestObject\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Collections\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjDummyTestObject,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDummyTestObject class\r\tinstanceVariableNames: \'string\'',					#traitCompositionSource : '{}'				},				#name : #'PjDummyTestObject class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjDummyTestObject class'						},						#name : #string,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDummyTestObject,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3836' ],		#self : OmReference [ '3837' ],		#time : DateAndTime [ '2024-03-03T08:20:56.561-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjObjectForDictTest\r\tinstanceVariableNames: \'data\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Collections\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjObjectForDictTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjObjectForDictTest,						#isMetaSide : false					},					#name : #data,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjObjectForDictTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjObjectForDictTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjObjectForDictTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3837' ],		#self : OmReference [ '3838' ],		#time : DateAndTime [ '2024-03-03T08:20:56.564-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjObjectForTestingAsJsObject\r\tinstanceVariableNames: \'plainArray associationArray dict objectNoIvs objectWithIvs\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Collections\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjObjectForTestingAsJsObject,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjObjectForTestingAsJsObject,						#isMetaSide : false					},					#name : #plainArray,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjObjectForTestingAsJsObject,						#isMetaSide : false					},					#name : #associationArray,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjObjectForTestingAsJsObject,						#isMetaSide : false					},					#name : #dict,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjObjectForTestingAsJsObject,						#isMetaSide : false					},					#name : #objectNoIvs,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjObjectForTestingAsJsObject,						#isMetaSide : false					},					#name : #objectWithIvs,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjObjectForTestingAsJsObject class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjObjectForTestingAsJsObject class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjObjectForTestingAsJsObject,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Collections,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3838' ],		#self : OmReference [ '3839' ],		#time : DateAndTime [ '2024-03-03T08:20:56.567-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-JS-CoreLibraries-Tests-Controllers,		#affectedPackageName : #PharoJs-Base-JS-CoreLibraries-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3839' ],		#self : OmReference [ '3840' ],		#time : DateAndTime [ '2024-03-03T08:20:56.568-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebAppTestCase subclass: #PjDomControllerPharoTest\r\tuses: PjTAppRunsInPharo\r\tinstanceVariableNames: \'domElement\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Controllers\'',				#superclassName : 'PjWebAppTestCase',				#traitCompositionSource : 'PjTAppRunsInPharo'			},			#name : #PjDomControllerPharoTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDomControllerPharoTest,						#isMetaSide : false					},					#name : #domElement,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDomControllerPharoTest class\r\tuses: PjTAppRunsInPharo classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTAppRunsInPharo classTrait'				},				#name : #'PjDomControllerPharoTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDomControllerPharoTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Controllers,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3840' ],		#self : OmReference [ '3841' ],		#time : DateAndTime [ '2024-03-03T08:20:56.571-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDomControllerPharoTest subclass: #PjDomControllerJsTest\r\tuses: PjTAppRunsInJS\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-JS-CoreLibraries-Tests-Controllers\'',				#superclassName : 'PjDomControllerPharoTest',				#traitCompositionSource : 'PjTAppRunsInJS'			},			#name : #PjDomControllerJsTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDomControllerJsTest class\r\tuses: PjTAppRunsInJS classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTAppRunsInJS classTrait'				},				#name : #'PjDomControllerJsTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDomControllerJsTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-JS-CoreLibraries-Tests-Controllers,			#package : #PharoJs-Base-JS-CoreLibraries-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3841' ],		#self : OmReference [ '3842' ],		#time : DateAndTime [ '2024-03-03T08:20:57.337-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCoreLibrariesTranspilationTest,				#isMetaSide : false			},			#name : #testPjStringClass,			#protocol : #tests,			#sourceCode : 'testPjStringClass\r\tself jsCode: (self convertClass: PjString).\r\tself assertInstanceMethod: #= equals: \'(other){return this==other}\'.\r\tself assertInstanceMethod: #, equals:  \'(other){return this+other}\'.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3842' ],		#self : OmReference [ '3843' ],		#time : DateAndTime [ '2024-03-03T08:20:57.337-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCoreLibrariesTranspilationTest,				#isMetaSide : false			},			#name : #testPjUndefinedObjectClass,			#protocol : #tests,			#sourceCode : 'testPjUndefinedObjectClass\r\tself jsCode: (self convertClass: PjUndefinedObject).\r\tself assertInstanceMethod: #= equals:  \'(other){return null==other}\'.\r\tself assertClassMethod: #new equals: \'(){return Smalltalk._signal_("cannot create instances of UndefinedObject")}\'.\r\tself assertClassMethod: #javascriptInitialize equals: \'(){var $1;this.uniqueInstance=this._basicNew();$1=$asNil$(Object);$1.freeze(this.uniqueInstance);$1.freeze(this);return this}\'\r',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3843' ],		#self : OmReference [ '3844' ],		#time : DateAndTime [ '2024-03-03T08:20:57.338-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjArrayLikeCollectionTest class',				#isMetaSide : true			},			#name : #isAbstract,			#protocol : #testing,			#sourceCode : 'isAbstract\r\t^self == PjArrayLikeCollectionTest',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3844' ],		#self : OmReference [ '3845' ],		#time : DateAndTime [ '2024-03-03T08:20:57.338-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayLikeCollectionTest,				#isMetaSide : false			},			#name : #defaultCollection,			#protocol : #'accessing - defaults',			#sourceCode : 'defaultCollection\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3845' ],		#self : OmReference [ '3846' ],		#time : DateAndTime [ '2024-03-03T08:20:57.339-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayLikeCollectionTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\tcollection := self defaultCollection',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3846' ],		#self : OmReference [ '3847' ],		#time : DateAndTime [ '2024-03-03T08:20:57.339-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayLikeCollectionTest,				#isMetaSide : false			},			#name : #testIndexOf,			#protocol : #testing,			#sourceCode : 'testIndexOf\r\t| index |\r\tindex := collection indexOf: collection first.\r\tself assert: index equals: 1.\r\tself assert: (collection at: index) == collection first',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3847' ],		#self : OmReference [ '3848' ],		#time : DateAndTime [ '2024-03-03T08:20:57.339-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlCollectionTest,				#isMetaSide : false			},			#name : #defaultCollection,			#protocol : #'accessing - defaults',			#sourceCode : 'defaultCollection\r\t^ document body children',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3848' ],		#self : OmReference [ '3849' ],		#time : DateAndTime [ '2024-03-03T08:20:57.342-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeListTest,				#isMetaSide : false			},			#name : #defaultCollection,			#protocol : #'accessing - defaults',			#sourceCode : 'defaultCollection\r\t^ document body childNodes',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3849' ],		#self : OmReference [ '3850' ],		#time : DateAndTime [ '2024-03-03T08:20:57.342-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeListTest,				#isMetaSide : false			},			#name : #testAllButFirst,			#protocol : #tests,			#sourceCode : 'testAllButFirst\r\tself assert: collection allButFirst size equals: collection size - 1.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3850' ],		#self : OmReference [ '3851' ],		#time : DateAndTime [ '2024-03-03T08:20:57.342-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeListTest,				#isMetaSide : false			},			#name : #testCollectionIsNotEmpty,			#protocol : #tests,			#sourceCode : 'testCollectionIsNotEmpty\r\tself assert: collection notEmpty.\r\tself deny: collection isEmpty',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3851' ],		#self : OmReference [ '3852' ],		#time : DateAndTime [ '2024-03-03T08:20:57.342-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testAllButFirst,			#protocol : #tests,			#sourceCode : 'testAllButFirst\r\t| array |\r\tarray := self bridge evalBlock: [ #(10 20 30 40) ].\r\tself assert: array allButFirst size equals: array size - 1',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3852' ],		#self : OmReference [ '3853' ],		#time : DateAndTime [ '2024-03-03T08:20:57.342-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testArrayClassDoesNotOverlapWithArrayFunction,			#protocol : #tests,			#sourceCode : 'testArrayClassDoesNotOverlapWithArrayFunction\r\tself assertJavascript: \'typeof Array\' evaluatesTo: \'function\'.\r\tself assertJavascript: \'typeof PjArray\' evaluatesTo: \'undefined\'.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3853' ],		#self : OmReference [ '3854' ],		#time : DateAndTime [ '2024-03-03T08:20:57.342-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testArrayWith1Element,			#protocol : #tests,			#sourceCode : 'testArrayWith1Element\r\tself assert: [{1}] evaluatesToRaw: \'[1]\'.\r\tself assert: [#(1)] evaluatesToRaw: \'[1]\'.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3854' ],		#self : OmReference [ '3855' ],		#time : DateAndTime [ '2024-03-03T08:20:57.343-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testArrayWith2Elements,			#protocol : #tests,			#sourceCode : 'testArrayWith2Elements\r\tself assert: [{1. 2}] evaluatesToRaw: \'[1,2]\'.\r\tself assert: [#(1 2)] evaluatesToRaw: \'[1,2]\'.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3855' ],		#self : OmReference [ '3856' ],		#time : DateAndTime [ '2024-03-03T08:20:57.343-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testArrayWithMoreElements,			#protocol : #tests,			#sourceCode : 'testArrayWithMoreElements\r\tself assert: [{1. 2}] evaluatesToRaw: \'[1,2]\'.\r\tself assert: [#(1 2)] evaluatesToRaw: \'[1,2]\'.\r\tself assert: [#(1 true \'id\' \'x\\y"z\')] evaluatesToRaw: \'[1,true,"id","x\\\\y\\"z"]\'.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3856' ],		#self : OmReference [ '3857' ],		#time : DateAndTime [ '2024-03-03T08:20:57.343-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testAsOrderedCollection,			#protocol : #tests,			#sourceCode : 'testAsOrderedCollection\r\t| orderedCollection |\r\torderedCollection := self evalBlock: [#(1 2 3 4) asOrderedCollection].\r\tself assert: orderedCollection size equals: 4.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3857' ],		#self : OmReference [ '3858' ],		#time : DateAndTime [ '2024-03-03T08:20:57.343-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testAt,			#protocol : #tests,			#sourceCode : 'testAt\r\t| array |\r\tarray := self bridge evalBlock: [ #(10 20 30 40) ].\r\t#(10 20 30 40)\r\t\tdoWithIndex:\r\t\t\t[ :expectedValue :index | self assert: [ array at: index ] evaluatesTo: expectedValue ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3858' ],		#self : OmReference [ '3859' ],		#time : DateAndTime [ '2024-03-03T08:20:57.343-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testAtIfAbsent,			#protocol : #tests,			#sourceCode : 'testAtIfAbsent\r\t| array actualValue |\r\tarray := self bridge evalBlock: [ #(10 20 30) ].\r\t#(10 20 30)\r\t\twithIndexDo: [ :expectedValue :index | \r\t\t\tactualValue := self bridge\r\t\t\t\tevalBlock: [ array at: index ifAbsent: [ nil ] ].\r\t\t\tself assert: actualValue equals: expectedValue ].\r\tactualValue := self bridge\r\t\tevalBlock: [ array at: 10 ifAbsent: [ 100 ] ].\r\tself assert: actualValue equals: 100',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3859' ],		#self : OmReference [ '3860' ],		#time : DateAndTime [ '2024-03-03T08:20:57.343-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testAtPut,			#protocol : #tests,			#sourceCode : 'testAtPut\r\t| array |\r\tarray := self bridge evalBlock: [ #(10 20 30 40) ].\r\t#(11 22 33 44)\r\t\tdoWithIndex:\r\t\t\t[ :newValue :index | self bridge evalBlock: [ array at: index put: newValue ] ].\r\tself assert: [ array ] evaluatesToRaw: \'[11,22,33,44]\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3860' ],		#self : OmReference [ '3861' ],		#time : DateAndTime [ '2024-03-03T08:20:57.343-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testCircularReference,			#protocol : #tests,			#sourceCode : 'testCircularReference\r\t| array |\r\tarray := self bridge evalBlock: [#(\'X\')].\r\tself deny: (array includes: array).',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3861' ],		#self : OmReference [ '3862' ],		#time : DateAndTime [ '2024-03-03T08:20:57.344-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testCollect,			#protocol : #tests,			#sourceCode : 'testCollect\r\t| double |\r\tdouble := self bridge\r\t\tevalBlock: [ | array |\r\t\t\tarray := #(10 20 30 40).\r\t\t\tarray collect: [ :element | 2 * element ] ].\r\t#(20 40 60 80)\r\t\tdoWithIndex:\r\t\t\t[ :expectedValue :index | self assert: [ (double at: index) = expectedValue ] evaluatesTo: true ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3862' ],		#self : OmReference [ '3863' ],		#time : DateAndTime [ '2024-03-03T08:20:57.344-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testCollectPerform,			#protocol : #tests,			#sourceCode : 'testCollectPerform\r\t| double |\r\tdouble := self bridge\r\t\tevalBlock: [ | array |\r\t\t\tarray := #(10 -20 -30 40).\r\t\t\tarray collect: [ :each | each abs ] ].\r\t#(10 20 30 40)\r\t\tdoWithIndex:\r\t\t\t[ :expectedValue :index | self assert: [ (double at: index) = expectedValue ] evaluatesTo: true ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3863' ],		#self : OmReference [ '3864' ],		#time : DateAndTime [ '2024-03-03T08:20:57.344-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testCollectPerformSymbol,			#protocol : #tests,			#sourceCode : 'testCollectPerformSymbol\r\t| double |\r\tdouble := self bridge\r\t\tevalBlock: [ | array |\r\t\t\tarray := #(10 -20 -30 40).\r\t\t\tarray collect: #abs ].\r\t#(10 20 30 40)\r\t\tdoWithIndex:\r\t\t\t[ :expectedValue :index | self assert: [ (double at: index) = expectedValue ] evaluatesTo: true ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3864' ],		#self : OmReference [ '3865' ],		#time : DateAndTime [ '2024-03-03T08:20:57.344-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testConverstionToArray,			#protocol : #tests,			#sourceCode : 'testConverstionToArray\r\t| collection |\r\tcollection := self evalBlock: [#(1 2 3 4)].\r\tself deny: collection asArray identicalTo: collection.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3865' ],		#self : OmReference [ '3866' ],		#time : DateAndTime [ '2024-03-03T08:20:57.344-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testConverstionToSet,			#protocol : #tests,			#sourceCode : 'testConverstionToSet\r\t| setFromArray |\r\tsetFromArray := self bridge evalBlock: [ #(10 20 30 40) asSet ].\r\tsetFromArray addAll: #(10 20 30 40).\r\tself assert: setFromArray size equals: 4.\r\tsetFromArray add: 30.\r\tself assert: setFromArray size equals: 4.\r\tsetFromArray add: 50.\r\tself assert: setFromArray size equals: 5.\r\t#(10 20 30 40 50) do: [ :each |\r\t\tself assert: (setFromArray includes: each) ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3866' ],		#self : OmReference [ '3867' ],		#time : DateAndTime [ '2024-03-03T08:20:57.344-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testCopy,			#protocol : #tests,			#sourceCode : 'testCopy\r\t| tests |\r\ttests := self bridge\r\t\tevalBlock: [ | array |\r\t\t\tarray := #(10 20 30 40).\r\t\t\t{array copy = array. array copy == array} ].\r\tself assert: tests first.\r\tself deny: tests last.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3867' ],		#self : OmReference [ '3868' ],		#time : DateAndTime [ '2024-03-03T08:20:57.345-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testDetectIfFound,			#protocol : #tests,			#sourceCode : 'testDetectIfFound\r\tself\r\t\tassertEquivalent: [|array found|\r\t\t\tarray := #(1 2 3 4).\r\t\t\tfound := false.\r\t\t\tarray detect: [ : element | console log: element. element == 2] ifFound: [found := true].\r\t\t\tfound].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3868' ],		#self : OmReference [ '3869' ],		#time : DateAndTime [ '2024-03-03T08:20:57.345-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testDetectIfNone,			#protocol : #tests,			#sourceCode : 'testDetectIfNone\r\tself \r\t\tassertEquivalent: [|array notFound| array := #(1 2 3 4).\r\t\t\tnotFound := false.\r\t\t\tarray detect: [ : element | element == 5] ifNone: [notFound := true].\r\t\t\tnotFound].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3869' ],		#self : OmReference [ '3870' ],		#time : DateAndTime [ '2024-03-03T08:20:57.345-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testDo,			#protocol : #tests,			#sourceCode : 'testDo\r\tself\r\t\tassertEquivalent: [|array total|\r\t\t\tarray := #(1 2 3 4).\r\t\t\ttotal := 0.\r\t\t\tarray do: [ : element | total := total + element].\r\t\t\ttotal].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3870' ],		#self : OmReference [ '3871' ],		#time : DateAndTime [ '2024-03-03T08:20:57.345-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testDoWithIndex,			#protocol : #tests,			#sourceCode : 'testDoWithIndex\r\tself\r\t\tassertEquivalent: [|array total|\r\t\t\tarray := #(10 20 30 40).\r\t\t\ttotal := 0.\r\t\t\tarray doWithIndex: [ : element : index | total := total + index].\r\t\t\ttotal].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3871' ],		#self : OmReference [ '3872' ],		#time : DateAndTime [ '2024-03-03T08:20:57.345-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testEmptyArray,			#protocol : #tests,			#sourceCode : 'testEmptyArray\r\tself assert: [{}] evaluatesToRaw: \'[]\'.\r\tself assert: [#()] evaluatesToRaw: \'[]\'.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3872' ],		#self : OmReference [ '3873' ],		#time : DateAndTime [ '2024-03-03T08:20:57.345-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testEquality,			#protocol : #tests,			#sourceCode : 'testEquality\r\tself assertEquivalent: [#() = #()].\r\tself assertEquivalent: [#(11) = #(11)].\r\tself assertEquivalent: [#(11 22) = #(11 22)].\r\tself assertEquivalent: [#(11 22 33) = #(11 22 33)].\r\tself assertEquivalent: [#(11 33 22) = #(11 22 33)].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3873' ],		#self : OmReference [ '3874' ],		#time : DateAndTime [ '2024-03-03T08:20:57.345-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testIncludes,			#protocol : #tests,			#sourceCode : 'testIncludes\r\tself assertEquivalent: [#() includes: 4].\r\tself assertEquivalent: [#(2 3 4 5) includes: 4].\r\tself assertEquivalent: [#() includes: \'hello\'].\r\tself assertEquivalent: [#(2 \'hello\' 5) includes: \'hello\'].\r\tself assertEquivalent: [ #(2 3 (4 5) 6) includes: #(4 5) ].\r\tself assertEquivalent: [ #(2 3 (4 5) 6) includes: #(5 6) ].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3874' ],		#self : OmReference [ '3875' ],		#time : DateAndTime [ '2024-03-03T08:20:57.345-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testIncludesAll,			#protocol : #tests,			#sourceCode : 'testIncludesAll\r\tself assertEquivalent: [#() includesAll: #(4)].\r\tself assertEquivalent: [#(2 3 4 5) includesAll: #(4)].\r\tself assertEquivalent: [#() includesAll: #(\'hello\')].\r\tself assertEquivalent: [#(2 \'hello\' 5) includesAll: #(\'hello\')].\r\tself assertEquivalent: [ #(2 3 4 5 6) includesAll: #(4 5) ].\r\tself assertEquivalent: [ #(2 3 4 5 6) includesAll: #(6 2 6) ].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3875' ],		#self : OmReference [ '3876' ],		#time : DateAndTime [ '2024-03-03T08:20:57.346-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testIncludesAny,			#protocol : #tests,			#sourceCode : 'testIncludesAny\r\tself assertEquivalent: [#() includesAny: #(4)].\r\tself assertEquivalent: [#(2 3 4 5) includesAny: #(4)].\r\tself assertEquivalent: [#() includesAny: #(\'hello\')].\r\tself assertEquivalent: [#(2 \'hello\' 5) includesAny: #(\'hello\')].\r\tself assertEquivalent: [ #(2 3 4 5 6) includesAny: #(4 5) ].\r\tself assertEquivalent: [ #(2 3 4 5 6) includesAny: #(6 2 6) ].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3876' ],		#self : OmReference [ '3877' ],		#time : DateAndTime [ '2024-03-03T08:20:57.346-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testInserElement,			#protocol : #tests,			#sourceCode : 'testInserElement',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3877' ],		#self : OmReference [ '3878' ],		#time : DateAndTime [ '2024-03-03T08:20:57.346-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testIsEmpty,			#protocol : #tests,			#sourceCode : 'testIsEmpty\r\tself assertEquivalent: [#() isEmpty].\r\tself assertEquivalent: [#(11) isEmpty].\r\tself assertEquivalent: [#(11 22 33) isEmpty].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3878' ],		#self : OmReference [ '3879' ],		#time : DateAndTime [ '2024-03-03T08:20:57.346-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testNotEmpty,			#protocol : #tests,			#sourceCode : 'testNotEmpty\r\tself assertEquivalent: [#() notEmpty].\r\tself assertEquivalent: [#(11) notEmpty].\r\tself assertEquivalent: [#(11 22 33) notEmpty].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3879' ],		#self : OmReference [ '3880' ],		#time : DateAndTime [ '2024-03-03T08:20:57.346-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testReject,			#protocol : #tests,			#sourceCode : 'testReject\r\t| filtered |\r\tfiltered := self bridge evalBlock: [ #(10 20 30 40) reject: [ : each | each > 35 or: [ each < 15 ] ]].\r\tself assert: filtered size equals: 2.\r\tself assert: filtered first equals: 20.\r\tself assert: filtered last equals: 30.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3880' ],		#self : OmReference [ '3881' ],		#time : DateAndTime [ '2024-03-03T08:20:57.346-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testRemove,			#protocol : #tests,			#sourceCode : 'testRemove\r\tself assertEquivalent: [ #(10 20 30 40) asOrderedCollection removeAt: 2 ].\r\tself assertEquivalent: [ (#(10 20 30 40) asOrderedCollection removeAt: 2;yourself) asArray ].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3881' ],		#self : OmReference [ '3882' ],		#time : DateAndTime [ '2024-03-03T08:20:57.346-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testReversed,			#protocol : #tests,			#sourceCode : 'testReversed\r\tself\r\t\tassertEquivalent: [|array|\r\t\t\tarray := #(1 2 3 4).\r\t\t\tarray,array reversed].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3882' ],		#self : OmReference [ '3883' ],		#time : DateAndTime [ '2024-03-03T08:20:57.347-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testShallowCopy,			#protocol : #tests,			#sourceCode : 'testShallowCopy\r\t| clone |\r\tclone := self evalBlock: [ #(11 22 33) copy].\r\tself assert: clone size equals: 3.\r\t#(11 22 33) withIndexDo: [ : each : index |\r\t\tself assert: (clone at: index) equals: each\r\t\t ].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3883' ],		#self : OmReference [ '3884' ],		#time : DateAndTime [ '2024-03-03T08:20:57.347-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjArrayTest,				#isMetaSide : false			},			#name : #testSize,			#protocol : #tests,			#sourceCode : 'testSize\r\tself assertEquivalent: [#() size].\r\tself assertEquivalent: [#(11 ) size].\r\tself assertEquivalent: [#(11 22) size].\r\tself assertEquivalent: [#(11 22 33) size].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3884' ],		#self : OmReference [ '3885' ],		#time : DateAndTime [ '2024-03-03T08:20:57.347-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAsJsObjectInJs,				#isMetaSide : false			},			#name : #testBoolean,			#protocol : #tests,			#sourceCode : 'testBoolean\r\tself assertBlock: [ true asJsObject == true].\r\tself assertBlock: [ false asJsObject == false].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3885' ],		#self : OmReference [ '3886' ],		#time : DateAndTime [ '2024-03-03T08:20:57.347-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAsJsObjectInJs,				#isMetaSide : false			},			#name : #testConvertingADictionary,			#protocol : #tests,			#sourceCode : 'testConvertingADictionary\r\tself assertBlock: [{ #a -> 1. #b -> 2. #c -> 3 } asDictionary asJsObject class == Object].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3886' ],		#self : OmReference [ '3887' ],		#time : DateAndTime [ '2024-03-03T08:20:57.347-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAsJsObjectInJs,				#isMetaSide : false			},			#name : #testConvertingAnAssociationArray,			#protocol : #tests,			#sourceCode : 'testConvertingAnAssociationArray\r\tself assertBlock: [{ #a -> 1. #b -> 2. #c -> 3 } asJsObject class == Object].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3887' ],		#self : OmReference [ '3888' ],		#time : DateAndTime [ '2024-03-03T08:20:57.347-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAsJsObjectInJs,				#isMetaSide : false			},			#name : #testConvertingCompositeArray,			#protocol : #tests,			#sourceCode : 'testConvertingCompositeArray\r\t| converted convertedAssociations convertedDict |\r\tconverted := self evalBlock: [\r\t\t{ \r\t\t#array -> #(1 2 3). \r\t\t#associationArray -> { #a -> 1. #b -> 2. #c -> 3 }.\r\t\t#dict ->  { #x -> 0. #y -> 3.14.} asDictionary.\r\t\t#object -> Object new\r\t} asJsObject].\r\tself assertBlock: [converted class == Object].\r\tself assertBlock: [(converted at: #array) class == Array].\r\tself assertBlock: [(converted at: #object) class == Object].\r\tconvertedAssociations := converted at: #associationArray.\r\tself assertBlock: [convertedAssociations class == Object].\r\t#(a b c) with: #(1 2 3) do: [ : iv : expectedValue | \r\t\tself assert: (convertedAssociations at: iv) equals: expectedValue].\r\tconvertedDict := converted at: #dict.\r\tself assertBlock: [convertedDict class == Object].\r\t#(x y) with: #(0 3.14) do: [ : iv : expectedValue | \r\t\tself assert: (convertedDict at: iv) equals: expectedValue].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3888' ],		#self : OmReference [ '3889' ],		#time : DateAndTime [ '2024-03-03T08:20:57.347-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAsJsObjectInJs,				#isMetaSide : false			},			#name : #testConvertingCompositeDictionary,			#protocol : #tests,			#sourceCode : 'testConvertingCompositeDictionary\r\t| converted |\r\tconverted := self evalBlock: [\r\t\t{ \r\t\t#array -> #(1 2 3). \r\t\t#associationArray -> { #a -> 1. #b -> 2. #c -> 3 }.\r\t\t#dict ->  { #x -> 0. #y -> 3.14.} asDictionary.\r\t\t#object -> Object new\r\t} asDictionary asJsObject].\r\tself assertBlock: [converted class == Object].\r\tself assertBlock: [(converted at: #array) class == Array].\r\tself assertBlock: [(converted at: #object) class == Object].\r\tself assertBlock: [(converted at: #associationArray) class == Object].\r\tself assertBlock: [(converted at: #dict) class == Object].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3889' ],		#self : OmReference [ '3890' ],		#time : DateAndTime [ '2024-03-03T08:20:57.348-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAsJsObjectInJs,				#isMetaSide : false			},			#name : #testConvertingNestedDictionariesAndArrays,			#protocol : #tests,			#sourceCode : 'testConvertingNestedDictionariesAndArrays\r\t| converted |\r\tconverted := self evalBlock: [\r\t\t{ { \r\t\t#arrays -> { { #a -> 4. #b -> 5 }. false not. 3 negated. #(3 4 5)}.\r\t} } asJsObject].\r\tself assertBlock: [converted class == Array].\r\tself assertBlock: [converted first class == Object].\r\tself assertBlock: [(converted first at: #arrays) class == Array].\r\tself assertBlock: [(converted first at: #arrays) first class == Object].\r\tself assertBlock: [(converted first at: #arrays) second class == Boolean].\r\tself assertBlock: [(converted first at: #arrays) third class == SmallInteger].\r\tself assertBlock: [(converted first at: #arrays) fourth class == Array].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3890' ],		#self : OmReference [ '3891' ],		#time : DateAndTime [ '2024-03-03T08:20:57.348-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAsJsObjectInJs,				#isMetaSide : false			},			#name : #testConvertingObjectWithNestedDictionaryAndArray,			#protocol : #tests,			#sourceCode : 'testConvertingObjectWithNestedDictionaryAndArray\r\t| original converted |\r\tself bridge loadClass: PjObjectForTestingAsJsObject.\r\toriginal :=  self evalBlock: [PjObjectForTestingAsJsObject from:\r\t\t{ \r\t\t#plainArray -> #(1 2 3). \r\t\t#associationArray -> { #a -> 1. #b -> 2. #c -> 3 }.\r\t\t#dict ->  { #x -> 0. #y -> 3.14.} asDictionary.\r\t\t#object -> Object new\r\t}].\r\tconverted := self evalBlock: [original asJsObject].\r\tself assertBlock: [converted == original].\r\tself assertBlock: [converted class == PjObjectForTestingAsJsObject].\r\tself assertBlock: [converted plainArray == original plainArray].\r\tself assertBlock: [converted plainArray class == Array].\r\tself assertBlock: [converted associationArray == original associationArray].\r\tself assertBlock: [converted associationArray class == Array].\r\tself assertBlock: [converted dict == original dict].\r\tself assertBlock: [converted dict class == Dictionary].\r\tself assertBlock: [converted object == original object].\r\tself assertBlock: [converted object class == Object].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3891' ],		#self : OmReference [ '3892' ],		#time : DateAndTime [ '2024-03-03T08:20:57.348-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAsJsObjectInJs,				#isMetaSide : false			},			#name : #testIfnil,			#protocol : #tests,			#sourceCode : 'testIfnil\r    self\r        assertBlock: [ PjDummyTestObject string: (\'Hello\' ifNil: [ \'World\' ]).\r            PjDummyTestObject string = \'Hello\' ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3892' ],		#self : OmReference [ '3893' ],		#time : DateAndTime [ '2024-03-03T08:20:57.348-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAsJsObjectInJs,				#isMetaSide : false			},			#name : #testIgnoreArrayOfNonAssociations,			#protocol : #tests,			#sourceCode : 'testIgnoreArrayOfNonAssociations\r\tself assertBlock: [#(1 2 3) asJsObject class == Array].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3893' ],		#self : OmReference [ '3894' ],		#time : DateAndTime [ '2024-03-03T08:20:57.348-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAsJsObjectInJs,				#isMetaSide : false			},			#name : #testNumber,			#protocol : #tests,			#sourceCode : 'testNumber\r\tself assertBlock: [ 3.14 asJsObject == 3.14].\r\tself assertBlock: [ 42 asJsObject == 42].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3894' ],		#self : OmReference [ '3895' ],		#time : DateAndTime [ '2024-03-03T08:20:57.348-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAsJsObjectInJs,				#isMetaSide : false			},			#name : #testString,			#protocol : #tests,			#sourceCode : 'testString\r\tself assertBlock: [ \'Smalltalk Rocks!\' asJsObject == \'Smalltalk Rocks!\'].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3895' ],		#self : OmReference [ '3896' ],		#time : DateAndTime [ '2024-03-03T08:20:57.348-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAssociationTest,				#isMetaSide : false			},			#name : #testEqualityForAssociations,			#protocol : #tests,			#sourceCode : 'testEqualityForAssociations\r\tself assertEquivalent: [(1->#hello)=(2->#hello)].\r\tself assertEquivalent: [(3->#hello)=(3->#hello)].\r\tself assertEquivalent: [(1->#hello)=(2->#goodbye)].\r\tself assertEquivalent: [(3->#hello)=(3->#goodbye)].\r\tself assertEquivalent: [\r\t\t\t| a | \r\t\t\ta := 3->4. \r\t\t\ta = a].\r\tself assertEquivalent: [(1->5)=(2->5)].\r\tself assertEquivalent: [(3->5)=(3->5)].\r\tself assertEquivalent: [(1->5)=(2->8)].\r\tself assertEquivalent: [(3->8)=(3->8)].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3896' ],		#self : OmReference [ '3897' ],		#time : DateAndTime [ '2024-03-03T08:20:57.349-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAssociationTest,				#isMetaSide : false			},			#name : #testEqualityForKeys,			#protocol : #tests,			#sourceCode : 'testEqualityForKeys\r\tself assertEquivalent: [\r\t\t| a b |\r\t\ta := 3->4.\r\t\tb := 3->6.\r\t\ta key = b key].\r\tself assertEquivalent: [\r\t\t| a b |\r\t\ta := 4->1.\r\t\tb := 6->2.\r\t\ta key = b key].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3897' ],		#self : OmReference [ '3898' ],		#time : DateAndTime [ '2024-03-03T08:20:57.349-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAssociationTest,				#isMetaSide : false			},			#name : #testEqualityForValues,			#protocol : #tests,			#sourceCode : 'testEqualityForValues\r\tself assertEquivalent: [\r\t\t| a b |\r\t\ta := 4->3.\r\t\tb := 6->3.\r\t\ta value = b value].\r\tself assertEquivalent: [\r\t\t| a b |\r\t\ta := 4->1.\r\t\tb := 6->2.\r\t\ta value = b value].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3898' ],		#self : OmReference [ '3899' ],		#time : DateAndTime [ '2024-03-03T08:20:57.349-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjChronololgyTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\tself bridge\r\t\tloadAllClasses:\r\t\t\t{\r\t\t\tTime.\r\t\t\tDuration.\r\t\t\tDateAndTime}',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3899' ],		#self : OmReference [ '3900' ],		#time : DateAndTime [ '2024-03-03T08:20:57.349-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjChronololgyTest,				#isMetaSide : false			},			#name : #testAddDurationToDateAndTime,			#protocol : #tests,			#sourceCode : 'testAddDurationToDateAndTime\r\tself assertEquivalent: [|origin later|\r\t\torigin := DateAndTime year: 2020 month: 1 day: 1 hour: 0 minute: 0 second: 0.\r\t\tlater := origin + 123 milliSeconds.\r\t\tlater milliSecond.].\t\r\tself assertEquivalent: [|origin later|\r\t\torigin := DateAndTime year: 2020 month: 1 day: 1 hour: 0 minute: 0 second: 0.\r\t\tlater := origin + 23 seconds.\r\t\tlater second.].\t\r\tself assertEquivalent: [|origin later|\r\t\torigin := DateAndTime year: 2020 month: 1 day: 1 hour: 0 minute: 0 second: 0.\r\t\tlater := origin + 45 minutes.\r\t\tlater minute.].\t\r\tself assertEquivalent: [|origin later|\r\t\torigin := DateAndTime year: 2020 month: 1 day: 1 hour: 0 minute: 0 second: 0.\r\t\tlater := origin + 7 hours.\r\t\tlater hour.].\t\r\tself assertEquivalent: [|origin later|\r\t\torigin := DateAndTime year: 2020 month: 1 day: 1 hour: 0 minute: 0 second: 0.\r\t\tlater := origin + 5 days.\r\t\tlater dayOfMonth.].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3900' ],		#self : OmReference [ '3901' ],		#time : DateAndTime [ '2024-03-03T08:20:57.349-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjChronololgyTest,				#isMetaSide : false			},			#name : #testDateAndTimeArithmetic,			#protocol : #tests,			#sourceCode : 'testDateAndTimeArithmetic\r\tself evalBlock: [|reference|\r\t\treference := DateAndTime todayHour: 14 minute: 59 second: 33.\r\t\twindow instVarNamed: #reference put: reference].\t\r\tself evalBlock: [\r\t\t|plus1Sec| \r\t\tplus1Sec := window reference +  1 second.\r\t\twindow instVarNamed: #plus1Sec put: plus1Sec].\t\r\tself assertEquivalent: [window plus1Sec hour24 = 14].\r\tself assertEquivalent: [window plus1Sec hour = 14].\r\tself assertEquivalent: [window plus1Sec hour12 = 2].\r\tself assertEquivalent: [window plus1Sec minute = 59].\r\tself assertEquivalent: [window plus1Sec second = 34].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3901' ],		#self : OmReference [ '3902' ],		#time : DateAndTime [ '2024-03-03T08:20:57.349-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjChronololgyTest,				#isMetaSide : false			},			#name : #testDateAndTimeCreation,			#protocol : #tests,			#sourceCode : 'testDateAndTimeCreation\r\tself evalBlock: [|today tomorrow|\r\t\ttoday := DateAndTime todayHour: 14 minute: 59 second: 34.\r\t\ttomorrow := DateAndTime tomorrowHour: 14 minute: 59 second: 34.\r\t\twindow instVarNamed: #today put: today.\r\t\twindow instVarNamed: #tomorrow put: tomorrow.\r\t\t].\t\r\t{window today. window tomorrow} do: [: each |\r\t\tself assert: each hour24 = 14.\r\t\tself assert: each hour = 14.\r\t\tself assert: each hour12 = 2.\r\t\tself assert: each minute = 59.\r\t\tself assert: each second = 34.\r\t].\r\tself assert: window today year equals: Date today year.\r\tself assert: window today monthIndex equals: Date today monthIndex.\r\tself assert: window today dayOfMonth equals: Date today dayOfMonth.\r\tself assert: window today dayOfWeek equals: Date today dayOfWeek.\r\tself assert: window tomorrow year equals: Date tomorrow year.\r\tself assert: window tomorrow monthIndex equals: Date tomorrow monthIndex.\r\tself assert: window tomorrow dayOfMonth equals: Date tomorrow dayOfMonth.\r\tself assert: window tomorrow dayOfWeek equals: Date tomorrow dayOfWeek.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3902' ],		#self : OmReference [ '3903' ],		#time : DateAndTime [ '2024-03-03T08:20:57.35-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjChronololgyTest,				#isMetaSide : false			},			#name : #testDuration,			#protocol : #tests,			#sourceCode : 'testDuration\r\tself assertBlock: [ Duration zero class == Duration ].\r\tself assertEquivalent: [ Duration zero days].\r\tself assertEquivalent: [ Duration zero hours].\r\tself assertEquivalent: [ Duration zero minutes].\r\tself assertEquivalent: [ 1 month monthsCount].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3903' ],		#self : OmReference [ '3904' ],		#time : DateAndTime [ '2024-03-03T08:20:57.35-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjChronololgyTest,				#isMetaSide : false			},			#name : #testSubtractDateAndTime,			#protocol : #tests,			#sourceCode : 'testSubtractDateAndTime\r\tself assertEquivalent: [|origin later|\r\t\torigin := DateAndTime year: 2020 month: 1 day: 1 hour: 0 minute: 0 second: 0.\r\t\tlater := origin + 123 milliSeconds.\r\t\t(later - origin) millisecondsCount\r\t].\t\r\tself assertEquivalent: [|origin later|\r\t\torigin := DateAndTime year: 2020 month: 1 day: 1 hour: 0 minute: 0 second: 0.\r\t\tlater := origin + 54 seconds.\r\t\t(later - origin) seconds\r\t].\t\r\tself assertEquivalent: [|origin later|\r\t\torigin := DateAndTime year: 2020 month: 1 day: 1 hour: 0 minute: 0 second: 0.\r\t\tlater := origin + 12 minutes.\r\t\t(later - origin) minutes\r\t].\t\r\tself assertEquivalent: [|origin later|\r\t\torigin := DateAndTime year: 2020 month: 1 day: 1 hour: 0 minute: 0 second: 0.\r\t\tlater := origin + 3 hours.\r\t\t(later - origin) hours\r\t].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3904' ],		#self : OmReference [ '3905' ],		#time : DateAndTime [ '2024-03-03T08:20:57.35-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjChronololgyTest,				#isMetaSide : false			},			#name : #testTime,			#protocol : #tests,			#sourceCode : 'testTime\r\tself assertBlock: [ Time now class == Time ].\r\tself assertEquivalent: [ (Time hour: 5 minute: 30) asDateAndTime dayOfMonth].\r\tself assertEquivalent: [ (Time hour: 5 minute: 30) asDateAndTime monthIndex].\r\tself assertEquivalent: [ (Time hour: 5 minute: 30) asDateAndTime year].\r\tself assertEquivalent: [ Time now hour].\r\tself assertEquivalent: [ Time now hour].\r\tself assertEquivalent: [ Time now hour12].\r\tself assertEquivalent: [ Time now hour24].\r\tself assertEquivalent: [ Time now minute].\r\tself assert: [ (Time hour: 1 minute: 1 second: 13) asSeconds ] evaluatesTo: 3673.\r\tself assert: [ (Time now seconds: 25) hour24 ] evaluatesTo: 0.\r\tself assert: [ (Time now seconds: 25) minute ] evaluatesTo: 0.\r\tself assert: [ (Time now seconds: 25) second ] evaluatesTo: 25.\r\tself assert: [ (Time now seconds: 625) hour24 ] evaluatesTo: 0.\r\tself assert: [ (Time now seconds: 625) minute ] evaluatesTo: 10.\r\tself assert: [ (Time now seconds: 625) second ] evaluatesTo: 25.\r\tself assertEquivalent: [ Time noon meridianAbbreviation].\r\tself assertEquivalent: [ Time noon hour12].\r\tself assertEquivalent: [ Time noon hour24].\r\tself assertEquivalent: [ Time midnight meridianAbbreviation].\r\tself assertEquivalent: [ Time midnight hour12].\r\tself assertEquivalent: [ Time midnight hour24].\r\tself assertEquivalent: [ (Time hour: 0 minute: 0 second: 0) hour12 ].\r\tself assertEquivalent: [ (Time hour: 1 minute: 0 second: 0) hour12 ].\r\tself assertEquivalent: [ (Time hour: 11 minute: 0 second: 0) hour12 ].\r\tself assertEquivalent: [ (Time hour: 12 minute: 0 second: 0) hour12 ].\r\tself assertEquivalent: [ (Time hour: 13 minute: 0 second: 0) hour12 ].\r\tself assertEquivalent: [ (Time hour: 23 minute: 0 second: 0) hour12 ].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3905' ],		#self : OmReference [ '3906' ],		#time : DateAndTime [ '2024-03-03T08:20:57.35-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDateAndTimeTest,				#isMetaSide : false			},			#name : #testConversion,			#protocol : #tests,			#sourceCode : 'testConversion\r\r\t| today todayString |\r\tself assertEquivalent: [ \r\t\t(DateAndTime fromString: \'2022-01-02T12:30:21-04:00\') getTime ].\r\tself assertEquivalent: [ \r\t\t(DateAndTime fromString: \'2022-01-02T12:30:21-04:00\') printString ].\r\tself assertEquivalent: [ \r\t\t(DateAndTime fromString: \'2022-01-02T12:30:21-00:00\') printString ].\r\tself assertEquivalent: [ \r\t\t(DateAndTime fromString: \'2022-01-02T12:30:21+04:00\') printString ].\r\ttoday := DateAndTime today.\r\ttodayString := String streamContents: [ :str | \r\t\t               BasicDatePrinter default\r\t\t\t               printYMD: today\r\t\t\t               withLeadingSpace: false\r\t\t\t               on: str ].\r\tself assertEquivalent: [ \r\t\t(DateAndTime fromString: todayString , \'T12:30:21\') printString ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3906' ],		#self : OmReference [ '3907' ],		#time : DateAndTime [ '2024-03-03T08:20:57.35-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionaryTest,				#isMetaSide : false			},			#name : #testAsDictionary,			#protocol : #tests,			#sourceCode : 'testAsDictionary\r\t| original asDictResult |\r\toriginal := self bridge evalBlock: [ Dictionary new].\r\toriginal \r\t\tat: #a put: 1;\r\t\tat: #b put: 2.\r\tasDictResult := original asDictionary.\r\tself assert: original == asDictResult',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3907' ],		#self : OmReference [ '3908' ],		#time : DateAndTime [ '2024-03-03T08:20:57.35-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionaryTest,				#isMetaSide : false			},			#name : #testAtIfAbsent,			#protocol : #tests,			#sourceCode : 'testAtIfAbsent\r\tself assertEquivalent: [|d|\r\t\td := Dictionary new.\r\t\td at: #x ifAbsent: [42]].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3908' ],		#self : OmReference [ '3909' ],		#time : DateAndTime [ '2024-03-03T08:20:57.351-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionaryTest,				#isMetaSide : false			},			#name : #testAtIfAbsentPut,			#protocol : #tests,			#sourceCode : 'testAtIfAbsentPut\r\tself assertEquivalent: [|d|\r\t\td := Dictionary new.\r\t\td at: #x ifAbsentPut: 42.\r\t\td at: #x].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3909' ],		#self : OmReference [ '3910' ],		#time : DateAndTime [ '2024-03-03T08:20:57.351-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionaryTest,				#isMetaSide : false			},			#name : #testAtIfEmpty,			#protocol : #tests,			#sourceCode : 'testAtIfEmpty\r\tself assertEquivalent: [ Dictionary new isEmpty ].\r\tself assertEquivalent: [ (Dictionary new at: #x put: 4;yourself) isEmpty ].\r\tself assertEquivalent: [|d|\r\t\td := Dictionary new.\r\t\td ifEmpty: [ 3 ]].\r\tself assertEquivalent: [|d|\r\t\td := Dictionary new.\r\t\td ifEmpty: [ 3 ] ifNotEmpty: [42]].\r\tself assertEquivalent: [|d|\r\t\td := Dictionary new.\r\t\td ifNotEmpty: [ 3 ] ifEmpty: [42]].\r\tself assertEquivalent: [|d t|\r\t\td := Dictionary new.t:=5.\r\t\td at: #x put: 4.\r\t\td ifEmpty: [ t:=3 ].t].\r\tself assertEquivalent: [|d|\r\t\td := Dictionary new.\r\t\td at: #x put: 4.\r\t\td ifEmpty: [ 3 ] ifNotEmpty: [42]].\r\tself assertEquivalent: [|d|\r\t\td := Dictionary new.\r\t\td at: #x put: 4.\r\t\td ifNotEmpty: [ 3 ] ifEmpty: [42]].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3910' ],		#self : OmReference [ '3911' ],		#time : DateAndTime [ '2024-03-03T08:20:57.351-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionaryTest,				#isMetaSide : false			},			#name : #testAtPut,			#protocol : #tests,			#sourceCode : 'testAtPut\r\tself assertEquivalent: [|d|\r\t\td := Dictionary new.\r\t\td at: #x put: 42.\r\t\td at: #x].\r\tself assert: [|d|\r\t\td := Dictionary new.\r\t\td at: #x put: 42.\r\t\td] evaluatesToRaw: \'{"x":42}\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3911' ],		#self : OmReference [ '3912' ],		#time : DateAndTime [ '2024-03-03T08:20:57.351-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionaryTest,				#isMetaSide : false			},			#name : #testBridgeConstructor,			#protocol : #tests,			#sourceCode : 'testBridgeConstructor\r\t| eg |\r\teg := self bridge\r\t\tevalBlock: [ {(#a -> 3).\r\t\t\t(#b -> 5)} asDictionary ].\r\tself assert: [ eg at: #a ] evaluatesTo: 3.\r\tself assert: [ eg at: #b ] evaluatesTo: 5.\r\tself\r\t\tassert: [ eg\r\t\t\t\tadd: #c -> 42;\r\t\t\t\tat: #c ]\r\t\tevaluatesTo: 42.\r\tself assert: [ eg keys ] evaluatesToRaw: \'["a","b","c"]\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3912' ],		#self : OmReference [ '3913' ],		#time : DateAndTime [ '2024-03-03T08:20:57.351-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionaryTest,				#isMetaSide : false			},			#name : #testBridgeConstructorSimple,			#protocol : #tests,			#sourceCode : 'testBridgeConstructorSimple\r\t| eg |\r\teg := self bridge evalBlock: [ {(#a -> 3)} asDictionary ].\r\tself assert: [ eg at: #a ] evaluatesTo: 3.\r\tself assert: [ eg keys ] evaluatesToRaw: \'["a"]\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3913' ],		#self : OmReference [ '3914' ],		#time : DateAndTime [ '2024-03-03T08:20:57.351-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionaryTest,				#isMetaSide : false			},			#name : #testDictionaryWithProxies,			#protocol : #tests,			#sourceCode : 'testDictionaryWithProxies\r\t| proxy dictionaryWithProxy |\r\tproxy := self evalBlock: [ Object new ].\r\tdictionaryWithProxy := { #someId -> proxy } asDictionary.\r\tself \r\t\tshouldnt: [window instVarNamed: #dict put:  dictionaryWithProxy ]\r\t\traise: Error',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3914' ],		#self : OmReference [ '3915' ],		#time : DateAndTime [ '2024-03-03T08:20:57.351-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionaryTest,				#isMetaSide : false			},			#name : #testKeysAndValuesDo,			#protocol : #tests,			#sourceCode : 'testKeysAndValuesDo\r\t| eg |\r\teg := self bridge\r\t\tevalBlock: [ {(#a -> 3).\r\t\t\t(#b -> 5).\r\t\t\t(#c -> 42)} asDictionary ].\r\tself\r\t\tassert: [ | count |\r\t\t\tcount := 0.\r\t\t\teg keysAndValuesDo: [ :k :v | count := count + v ].\r\t\t\tcount ]\r\t\tevaluatesTo: 50.\r\tself\r\t\tassert: [ | count |\r\t\t\tcount := 0.\r\t\t\teg do: [ :v | count := count + v ].\r\t\t\tcount ]\r\t\tevaluatesTo: 50.\r\tself assert: [ eg isEmpty ] evaluatesTo: false.\r\tself assert: [ Dictionary new isEmpty ] evaluatesTo: true',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3915' ],		#self : OmReference [ '3916' ],		#time : DateAndTime [ '2024-03-03T08:20:57.352-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionaryTest,				#isMetaSide : false			},			#name : #testNewFromPairs,			#protocol : #tests,			#sourceCode : 'testNewFromPairs\r\t| d |\r\td := self bridge\r\t\tevalBlock: [ Dictionary newFromPairs: #(#x 17 #y 42) ].\r\tself assert: d asRawJSONString equals: \'{"x":17,"y":42}\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3916' ],		#self : OmReference [ '3917' ],		#time : DateAndTime [ '2024-03-03T08:20:57.352-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionaryTest,				#isMetaSide : false			},			#name : #testNonInterference,			#protocol : #tests,			#sourceCode : 'testNonInterference\r\t" make sure dictionary emulation doesn\'t interfere "\r\tself assert: [document body classList add: \'hello\'] evaluatesTo: nil.\r\tself assert: [document body classList contains: \'hello\'] evaluatesTo: true',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3917' ],		#self : OmReference [ '3918' ],		#time : DateAndTime [ '2024-03-03T08:20:57.352-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionaryTest,				#isMetaSide : false			},			#name : #testUseEqualObjectsAsKeys,			#protocol : #tests,			#sourceCode : 'testUseEqualObjectsAsKeys\r\tself assert: [\r\t\t|dict firstKey secondKey| \r\t\tdict := Dictionary new.\r\t\tfirstKey := PjObjectForDictTest data: 1.\r\t\tdict at: firstKey put: \'A\'.\r\t\tsecondKey := PjObjectForDictTest data: 1.\r\t\tdict at: secondKey put: \'B\'.\r\t\tdict at: firstKey\r\t] evaluatesTo: \'B\'.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3918' ],		#self : OmReference [ '3919' ],		#time : DateAndTime [ '2024-03-03T08:20:57.352-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDictionaryTest,				#isMetaSide : false			},			#name : #testUseNonEqualObjectsAsKeys,			#protocol : #tests,			#sourceCode : 'testUseNonEqualObjectsAsKeys\r\tself assert: [\r\t\t|dict firstKey secondKey| \r\t\tdict := Dictionary new.\r\t\tfirstKey := PjObjectForDictTest data: 1.\r\t\tdict at: firstKey put: \'A\'.\r\t\tsecondKey := PjObjectForDictTest data: 2.\r\t\tdict at: secondKey put: \'B\'.\r\t\tdict at: firstKey\r\t] evaluatesTo: \'A\'.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3919' ],		#self : OmReference [ '3920' ],		#time : DateAndTime [ '2024-03-03T08:20:57.352-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionaryTest,				#isMetaSide : false			},			#name : #testAsDictionary,			#protocol : #tests,			#sourceCode : 'testAsDictionary\r\t| original asDictResult |\r\toriginal := self bridge evalBlock: [ IdentityDictionary new].\r\toriginal \r\t\tat: #a put: 1;\r\t\tat: #b put: 2.\r\tasDictResult := original asDictionary.\r\tself assert: original == asDictResult',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3920' ],		#self : OmReference [ '3921' ],		#time : DateAndTime [ '2024-03-03T08:20:57.353-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionaryTest,				#isMetaSide : false			},			#name : #testAtIfAbsent,			#protocol : #tests,			#sourceCode : 'testAtIfAbsent\r\tself assertEquivalent: [|d|\r\t\td := IdentityDictionary new.\r\t\td at: #x ifAbsent: [42]].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3921' ],		#self : OmReference [ '3922' ],		#time : DateAndTime [ '2024-03-03T08:20:57.353-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionaryTest,				#isMetaSide : false			},			#name : #testAtIfAbsentPut,			#protocol : #tests,			#sourceCode : 'testAtIfAbsentPut\r\tself assertEquivalent: [|d|\r\t\td := IdentityDictionary new.\r\t\td at: #x ifAbsentPut: 42.\r\t\td at: #x].\r\tself assertEquivalent: [|d|\r\t\td := IdentityDictionary new.\r\t\td at: #x ifAbsentPut: [42].\r\t\td at: #x].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3922' ],		#self : OmReference [ '3923' ],		#time : DateAndTime [ '2024-03-03T08:20:57.353-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionaryTest,				#isMetaSide : false			},			#name : #testAtIfEmpty,			#protocol : #tests,			#sourceCode : 'testAtIfEmpty\r\tself assertEquivalent: [ IdentityDictionary new isEmpty ].\r\tself assertEquivalent: [ (IdentityDictionary new at: #x put: 4;yourself) isEmpty ].\r\tself assertEquivalent: [|d|\r\t\td := IdentityDictionary new.\r\t\td ifEmpty: [ 3 ]].\r\tself assertEquivalent: [|d|\r\t\td := IdentityDictionary new.\r\t\td ifEmpty: [ 3 ] ifNotEmpty: [42]].\r\tself assertEquivalent: [|d|\r\t\td := IdentityDictionary new.\r\t\td ifNotEmpty: [ 3 ] ifEmpty: [42]].\r\tself assertEquivalent: [|d t|\r\t\td := IdentityDictionary new.t:=5.\r\t\td at: #x put: 4.\r\t\td ifEmpty: [ t:=3 ].t].\r\tself assertEquivalent: [|d|\r\t\td := IdentityDictionary new.\r\t\td at: #x put: 4.\r\t\td ifEmpty: [ 3 ] ifNotEmpty: [42]].\r\tself assertEquivalent: [|d|\r\t\td := IdentityDictionary new.\r\t\td at: #x put: 4.\r\t\td ifNotEmpty: [ 3 ] ifEmpty: [42]].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3923' ],		#self : OmReference [ '3924' ],		#time : DateAndTime [ '2024-03-03T08:20:57.353-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionaryTest,				#isMetaSide : false			},			#name : #testAtPut,			#protocol : #tests,			#sourceCode : 'testAtPut\r\tself assertEquivalent: [|d|\r\t\td := IdentityDictionary new.\r\t\td at: #x put: 42.\r\t\td at: #x].\r\tself assertEquivalent: [|d|\r\t\td := IdentityDictionary new.\r\t\td at: #x put: 42.\r\t\td size]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3924' ],		#self : OmReference [ '3925' ],		#time : DateAndTime [ '2024-03-03T08:20:57.353-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionaryTest,				#isMetaSide : false			},			#name : #testKeysAndValuesDo,			#protocol : #tests,			#sourceCode : 'testKeysAndValuesDo\r\t| dict |\r\tdict := self bridge\r\t\tevalBlock: [ \r\t\t\tIdentityDictionary new\r\t\t\t\tat: #a put: 3;\r\t\t\t\tat: #b put: 5;\r\t\t\t\tat: #c put: 42;\r\t\t\t\tyourself ].\r\tself\r\t\tassert: [ | count |\r\t\t\tcount := 0.\r\t\t\tdict keysAndValuesDo: [ :k :v | count := count + v ].\r\t\t\tcount ]\r\t\tevaluatesTo: 50.\r\tself\r\t\tassert: [ | count |\r\t\t\tcount := 0.\r\t\t\tdict do: [ :v | count := count + v ].\r\t\t\tcount ]\r\t\tevaluatesTo: 50.\r\tself assert: [ dict isEmpty ] evaluatesTo: false.\r\tself assert: [ IdentityDictionary new isEmpty ] evaluatesTo: true',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3925' ],		#self : OmReference [ '3926' ],		#time : DateAndTime [ '2024-03-03T08:20:57.353-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionaryTest,				#isMetaSide : false			},			#name : #testNewFromPairs,			#protocol : #tests,			#sourceCode : 'testNewFromPairs\r\t| d |\r\td := self bridge\r\t\tevalBlock: [ IdentityDictionary newFromPairs: #(#x 17 #y 42) ].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3926' ],		#self : OmReference [ '3927' ],		#time : DateAndTime [ '2024-03-03T08:20:57.353-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionaryTest,				#isMetaSide : false			},			#name : #testNonInterference,			#protocol : #tests,			#sourceCode : 'testNonInterference\r\t" make sure dictionary emulation doesn\'t interfere "\r\tself assert: [document body classList add: \'hello\'] evaluatesTo: nil.\r\tself assert: [document body classList contains: \'hello\'] evaluatesTo: true',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3927' ],		#self : OmReference [ '3928' ],		#time : DateAndTime [ '2024-03-03T08:20:57.354-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjIdentityDictionaryTest,				#isMetaSide : false			},			#name : #testUseObjectsAsKeysForIdentityDictionary,			#protocol : #tests,			#sourceCode : 'testUseObjectsAsKeysForIdentityDictionary\r\tself assert: [\r\t\t|dict firstKey secondKey| \r\t\tdict := IdentityDictionary new.\r\t\tfirstKey :=  PjObjectForDictTest data: 1.\r\t\tdict at: firstKey put: \'A\'.\r\t\tsecondKey := PjObjectForDictTest data: 1.\r\t\tdict at: secondKey put: \'B\'.\r\t\tdict at: firstKey\r\t] evaluatesTo: \'A\'.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3928' ],		#self : OmReference [ '3929' ],		#time : DateAndTime [ '2024-03-03T08:20:57.354-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObjectTest,				#isMetaSide : false			},			#name : #testNewObjectHasNoEnumeratableKeys,			#protocol : #tests,			#sourceCode : 'testNewObjectHasNoEnumeratableKeys\r\t"This is important for many JS third party libraries"\r\tself assertBlock: [ Object new allEnumeratableKeys isEmpty ] .',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3929' ],		#self : OmReference [ '3930' ],		#time : DateAndTime [ '2024-03-03T08:20:57.354-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObjectTest,				#isMetaSide : false			},			#name : #testPrintStringArray,			#protocol : #tests,			#sourceCode : 'testPrintStringArray\r\r\tself\r\t\tassert: [ #( 1 2 3 nil true #nil #symbol ) printString ]\r\t\tevaluatesTo: \'#(1 2 3 nil true \'\'nil\'\' \'\'symbol\'\')\'.\r\tself\r\t\tassert: [ \r\t\t#( #( 1 2 3 nil ) #(  ) #( true #nil #symbol ) ) printString ]\r\t\tevaluatesTo: \'#(#(1 2 3 nil) #() #(true \'\'nil\'\' \'\'symbol\'\'))\'.\r\tself\r\t\tassert: [ \r\t\t\t{ \r\t\t\t\tObject new.\r\t\t\t\t#( true nil ).\r\t\t\t\tnil.\r\t\t\t\t12.4.\r\t\t\t\t#someSymbol.\r\t\t\t\t(true and: [ false ]).\r\t\t\t\t[ 42 factorial ] } printString ]\r\t\tevaluatesTo:\r\t\t\'an Array(an Object #(true nil) nil 12.4 \'\'someSymbol\'\' false a Block)\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3930' ],		#self : OmReference [ '3931' ],		#time : DateAndTime [ '2024-03-03T08:20:57.354-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObjectTest,				#isMetaSide : false			},			#name : #testPrintStringBasicCases,			#protocol : #tests,			#sourceCode : 'testPrintStringBasicCases\r\r\tself assert: [ Object new printString ] evaluatesTo: \'an Object\'.\r\tself assert: [ PjSet new printString ] evaluatesTo: \'a PjSet()\'.\r\tself\r\t\tassert: [ \'hello world\' printString ]\r\t\tevaluatesTo: \'\'\'hello world\'\'\'.\r\tself\r\t\tassert: [ \'DragN\'\'Drop\' printString ]\r\t\tevaluatesTo: \'\'\'DragN\'\'\'\'Drop\'\'\'.\r\tself assert: [ true printString ] evaluatesTo: \'true\'.\r\tself assert: [ false printString ] evaluatesTo: \'false\'.\r\tself assert: [ nil printString ] evaluatesTo: \'nil\'.\r\tself\r\t\tassert: [ #someSymbol printString ]\r\t\tevaluatesTo: \'\'\'someSymbol\'\'\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3931' ],		#self : OmReference [ '3932' ],		#time : DateAndTime [ '2024-03-03T08:20:57.354-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObjectTest,				#isMetaSide : false			},			#name : #testPrintStringException,			#protocol : #tests,			#sourceCode : 'testPrintStringException\r\r\t{ \r\t\tError.\r\t\tZeroDivide } do: [ :exceptionClass | \r\t\tself\r\t\t\tassert: [ exceptionClass new description ]\r\t\t\tevaluatesTo: exceptionClass name.\r\t\tself\r\t\t\tassert: [ \r\t\t\t\texceptionClass new\r\t\t\t\t\tmessageText: \'Some cause\';\r\t\t\t\t\tdescription ]\r\t\t\tevaluatesTo: exceptionClass name , \': Some cause\' ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3932' ],		#self : OmReference [ '3933' ],		#time : DateAndTime [ '2024-03-03T08:20:57.354-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObjectTest,				#isMetaSide : false			},			#name : #testPrintStringNumbers,			#protocol : #tests,			#sourceCode : 'testPrintStringNumbers\r\r\tself assert: [ 123 printString ] evaluatesTo: \'123\'.\r\tself\r\t\tassert: [ Float infinity printString ]\r\t\tevaluatesTo: \'Float infinity\'.\r\tself\r\t\tassert: [ Float nan printString ]\r\t\tevaluatesTo: \'Float nan\'.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3933' ],		#self : OmReference [ '3934' ],		#time : DateAndTime [ '2024-03-03T08:20:57.355-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObjectTest,				#isMetaSide : false			},			#name : #testShallowCopy,			#protocol : #tests,			#sourceCode : 'testShallowCopy\r\tself assertBlock: [\r\t\t|original clone|\r\t\toriginal := Object new.\r\t\toriginal instVarNamed: #a put: 1. \r\t\tclone := original copy.\r\t\tclone class == Object and: [ (clone instVarNamed: #a) = 1 ]\r\t\t ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3934' ],		#self : OmReference [ '3935' ],		#time : DateAndTime [ '2024-03-03T08:20:57.355-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjOrderedCollectionTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\tcollection := self evalBlock: [ OrderedCollection new ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3935' ],		#self : OmReference [ '3936' ],		#time : DateAndTime [ '2024-03-03T08:20:57.355-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjOrderedCollectionTest,				#isMetaSide : false			},			#name : #testCircularReference,			#protocol : #tests,			#sourceCode : 'testCircularReference\r\tself deny: (collection includes: collection).\r\tcollection add: \'A\'.\r\tself deny: (collection includes: collection).\r\tcollection add: collection.\r\tself assert: (collection includes: collection).\r\tself assert: collection size equals: 2.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3936' ],		#self : OmReference [ '3937' ],		#time : DateAndTime [ '2024-03-03T08:20:57.355-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjOrderedCollectionTest,				#isMetaSide : false			},			#name : #testConverstionToOrderedCollection,			#protocol : #tests,			#sourceCode : 'testConverstionToOrderedCollection\r\tself deny: collection asOrderedCollection identicalTo: collection.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3937' ],		#self : OmReference [ '3938' ],		#time : DateAndTime [ '2024-03-03T08:20:57.356-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjOrderedCollectionTest,				#isMetaSide : false			},			#name : #testInsertElementBeforeFirstOne,			#protocol : #tests,			#sourceCode : 'testInsertElementBeforeFirstOne\r\tcollection addAll: #(1 2 3).\r\tcollection insert: 0 before: 1.\r\tself assert: collection size equals: 4.\r\t(0 to: 3) withIndexDo: [ : expectedElement : index |\r\t\tself assert: (collection at: index) equals: expectedElement\r\t]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3938' ],		#self : OmReference [ '3939' ],		#time : DateAndTime [ '2024-03-03T08:20:57.356-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjOrderedCollectionTest,				#isMetaSide : false			},			#name : #testJoin,			#protocol : #tests,			#sourceCode : 'testJoin\r\t| temp |\r\tcollection addAll: #(4 5).\r\ttemp := collection join: #((1 2 3) (6 7) (3 2)).\r\tself assert: collection size equals: 2.\r\tself assert: temp size equals: 11.\r\t#(1 2 3 4 5 6 7 4 5 3 2) withIndexDo: [ : expectedElement : index |\r\t\tself assert: (temp at: index) equals: expectedElement\r\t]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3939' ],		#self : OmReference [ '3940' ],		#time : DateAndTime [ '2024-03-03T08:20:57.356-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjOrderedCollectionTest,				#isMetaSide : false			},			#name : #testRemoveAll,			#protocol : #tests,			#sourceCode : 'testRemoveAll\r\tcollection addAll: #(1 2 3 4 5).\r\tcollection removeAll: #(1 5).\r\tself assert: collection size equals: 3.\r\t#(2 3 4) withIndexDo: [ : expectedElement : index |\r\t\tself assert: (collection at: index) equals: expectedElement\r\t].\r\tcollection removeAll.\r\tself assert: collection isEmpty.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3940' ],		#self : OmReference [ '3941' ],		#time : DateAndTime [ '2024-03-03T08:20:57.356-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSetTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\tset := self evalBlock: [ Set new ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3941' ],		#self : OmReference [ '3942' ],		#time : DateAndTime [ '2024-03-03T08:20:57.356-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSetTest,				#isMetaSide : false			},			#name : #testCircularReference,			#protocol : #tests,			#sourceCode : 'testCircularReference\r\tself deny: (set includes: set).\r\tset add: \'A\'.\r\tself deny: (set includes: set).\r\tset add: set.\r\tself assert: (set includes: set).\r\tself assert: set size equals: 2.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3942' ],		#self : OmReference [ '3943' ],		#time : DateAndTime [ '2024-03-03T08:20:57.356-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSetTest,				#isMetaSide : false			},			#name : #testConverstionToSet,			#protocol : #tests,			#sourceCode : 'testConverstionToSet\r\tself assert: set asSet identicalTo: set',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3943' ],		#self : OmReference [ '3944' ],		#time : DateAndTime [ '2024-03-03T08:20:57.356-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSetTest,				#isMetaSide : false			},			#name : #testElementAddedFirstSeveralTimesShowsUpOnlyOnce,			#protocol : #tests,			#sourceCode : 'testElementAddedFirstSeveralTimesShowsUpOnlyOnce\r\t3 timesRepeat: [ set addFirst: 42 ].\r\tself assert: set size equals: 1.\r\tself assert: (set includes: 42).',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3944' ],		#self : OmReference [ '3945' ],		#time : DateAndTime [ '2024-03-03T08:20:57.357-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSetTest,				#isMetaSide : false			},			#name : #testElementAddedLastSeveralTimesShowsUpOnlyOnce,			#protocol : #tests,			#sourceCode : 'testElementAddedLastSeveralTimesShowsUpOnlyOnce\r\t3 timesRepeat: [ set addLast: 42 ].\r\tself assert: set size equals: 1.\r\tself assert: (set includes: 42).',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3945' ],		#self : OmReference [ '3946' ],		#time : DateAndTime [ '2024-03-03T08:20:57.357-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSetTest,				#isMetaSide : false			},			#name : #testElementAddedSeveralTimesShowsUpOnlyOnce,			#protocol : #tests,			#sourceCode : 'testElementAddedSeveralTimesShowsUpOnlyOnce\r\t3 timesRepeat: [ set add: 42 ].\r\tself assert: set size equals: 1.\r\tself assert: (set includes: 42).',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3946' ],		#self : OmReference [ '3947' ],		#time : DateAndTime [ '2024-03-03T08:20:57.357-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSetTest,				#isMetaSide : false			},			#name : #testLike,			#protocol : #tests,			#sourceCode : 'testLike\r\tset addAll: #(1 2 3 4 5).\r\tself assert: (set like: 4) equals: 4.\r\tself assert: (set like: 42) equals: nil.\r\tself assert: (set like: 4 ifAbsent: [ 3+4 ]) equals: 4.\r\tself assert: (set like: 42 ifAbsent: [ 3+4 ]) equals: 7.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3947' ],		#self : OmReference [ '3948' ],		#time : DateAndTime [ '2024-03-03T08:20:57.357-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSetTest,				#isMetaSide : false			},			#name : #testRemove,			#protocol : #tests,			#sourceCode : 'testRemove\r\tset addAll: #(1 2 3 4 5).\r\tset remove: 3 ifAbsent: [ ].\r\tset remove: 42 ifAbsent: [ ].\r\tself assert: set size equals: 4.\r\t#(1 2 4 5) do: [ : expectedElement |\r\t\tself assert: (set includes: expectedElement)\r\t].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3948' ],		#self : OmReference [ '3949' ],		#time : DateAndTime [ '2024-03-03T08:20:57.357-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSetTest,				#isMetaSide : false			},			#name : #testRemoveAll,			#protocol : #tests,			#sourceCode : 'testRemoveAll\r\tset addAll: #(1 2 3 4 5).\r\tset removeAll: #(1 5).\r\tself assert: set size equals: 3.\r\t#(2 3 4) do: [ : expectedElement |\r\t\tself assert: (set includes: expectedElement)\r\t].\r\tset removeAll.\r\tself assert: set isEmpty.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3949' ],		#self : OmReference [ '3950' ],		#time : DateAndTime [ '2024-03-03T08:20:57.357-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSortedCollectionTest,				#isMetaSide : false			},			#name : #'atRandomAddAll:',			#protocol : #utilities,			#sourceCode : 'atRandomAddAll: elements\r\t| toInsert |\r\ttoInsert := Set withAll: elements.\r \ttoInsert size timesRepeat: [\r\t\t|inserted|\r\t\tinserted := toInsert atRandom.\r\t\tcollection add: inserted.\r\t\ttoInsert remove: inserted].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3950' ],		#self : OmReference [ '3951' ],		#time : DateAndTime [ '2024-03-03T08:20:57.357-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSortedCollectionTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\tcollection := self evalBlock: [ SortedCollection new ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3951' ],		#self : OmReference [ '3952' ],		#time : DateAndTime [ '2024-03-03T08:20:57.358-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSortedCollectionTest,				#isMetaSide : false			},			#name : #testAllButLast,			#protocol : #tests,			#sourceCode : 'testAllButLast\r\t| allButLast |\r\t1 to: 4 do: [:each|\r\t\tcollection add: each].\r\tallButLast := collection allButLast.\r\tself assert: allButLast size equals: 3.\r\t1 to: 3 do: [ : each |\r\t\tself assert: (allButLast at: each) equals: each.\r\t].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3952' ],		#self : OmReference [ '3953' ],		#time : DateAndTime [ '2024-03-03T08:20:57.358-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSortedCollectionTest,				#isMetaSide : false			},			#name : #testCollect,			#protocol : #tests,			#sourceCode : 'testCollect\r\tcollection := self evalBlock: [ \r\t\t|s|\r\t\ts := SortedCollection  new.\r\t\ts add: 3; add: 1.\r\t\ts collect: [: each | each ]].\r\tself assert: collection size equals: 2.\r\tself assert: collection first equals: 1.\r\tself assert: collection last equals: 3.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3953' ],		#self : OmReference [ '3954' ],		#time : DateAndTime [ '2024-03-03T08:20:57.358-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSortedCollectionTest,				#isMetaSide : false			},			#name : #testReSortingNumbers,			#protocol : #tests,			#sourceCode : 'testReSortingNumbers\r\tself evalBlock: [ collection sortBlock: [ : a : b | a <= b ] ].\r\tself atRandomAddAll: (1 to: 10).\r\tself evalBlock: [ collection sortBlock: [ : a : b | a >= b ] ].\r\t(1 to: 10) with: (1 to: 10) reversed do: [ : index : expectedValue |\r\t\tself assert: (collection at: index) equals: expectedValue ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3954' ],		#self : OmReference [ '3955' ],		#time : DateAndTime [ '2024-03-03T08:20:57.358-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSortedCollectionTest,				#isMetaSide : false			},			#name : #testShallowCopy,			#protocol : #tests,			#sourceCode : 'testShallowCopy\r\t| clone |\r\tself atRandomAddAll: (1 to: 10).\r\tclone := collection copy.\r\tself assert: clone size equals: 10.\r\t(1 to: 10) do: [ : index |\r\t\tself assert: (clone at: index) equals: index ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3955' ],		#self : OmReference [ '3956' ],		#time : DateAndTime [ '2024-03-03T08:20:57.358-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSortedCollectionTest,				#isMetaSide : false			},			#name : #testSortingNumbersGreaterFirst,			#protocol : #tests,			#sourceCode : 'testSortingNumbersGreaterFirst\r\tself evalBlock: [ collection sortBlock: [ : a : b | a >=b ] ].\r\tself atRandomAddAll: (1 to: 10).\r\t(1 to: 10) with: (1 to: 10) reversed do: [ : index : expectedValue |\r\t\tself assert: (collection at: index) equals: expectedValue ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3956' ],		#self : OmReference [ '3957' ],		#time : DateAndTime [ '2024-03-03T08:20:57.358-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjSortedCollectionTest,				#isMetaSide : false			},			#name : #testSortingNumbersSmallerFirst,			#protocol : #tests,			#sourceCode : 'testSortingNumbersSmallerFirst\r\tself atRandomAddAll: (1 to: 10).\r\t(1 to: 10) do: [ : index |\r\t\tself assert: (collection at: index) equals: index ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3957' ],		#self : OmReference [ '3958' ],		#time : DateAndTime [ '2024-03-03T08:20:57.358-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStreamTest,				#isMetaSide : false			},			#name : #testArrayRead,			#protocol : #tests,			#sourceCode : 'testArrayRead\r\tself assertEquivalent: [#(1 2 3) readStream next].\r\tself assertEquivalent: [#(1 2 3) readStream next;next].\r\tself assertEquivalent: [#(1 2 3) readStream next;next;next].\r\tself assertEquivalent: [#(1 2 3) readStream next;next;next;next].\r\tself assertEquivalent: [#(1 2 3) readStream next;next;next;atEnd].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3958' ],		#self : OmReference [ '3959' ],		#time : DateAndTime [ '2024-03-03T08:20:57.359-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStreamTest,				#isMetaSide : false			},			#name : #testArrayReadWrite,			#protocol : #tests,			#sourceCode : 'testArrayReadWrite\r\tself assert: [#() writeStream nextPutAll: #(1 2 3);nextPutAll: #(4 5 6);next;next;next;next] evaluatesTo: 4.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3959' ],		#self : OmReference [ '3960' ],		#time : DateAndTime [ '2024-03-03T08:20:57.359-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStreamTest,				#isMetaSide : false			},			#name : #testArrayWrite,			#protocol : #tests,			#sourceCode : 'testArrayWrite\r\tself assertEquivalent: [#(() writeStream nextPut: 3;nextPutAll: \'abc\';contents) at: 2].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3960' ],		#self : OmReference [ '3961' ],		#time : DateAndTime [ '2024-03-03T08:20:57.359-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStreamTest,				#isMetaSide : false			},			#name : #testStringNewWrite,			#protocol : #tests,			#sourceCode : 'testStringNewWrite\r\r\tself assertEquivalent: [ \r\t\tString new: 10 streamContents: [ :stream | stream << \'hello world\' ] ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3961' ],		#self : OmReference [ '3962' ],		#time : DateAndTime [ '2024-03-03T08:20:57.359-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStreamTest,				#isMetaSide : false			},			#name : #testStringPeek,			#protocol : #tests,			#sourceCode : 'testStringPeek\r\tself assertEquivalent: [\'abc\' readStream peek asString].\r\tself assertEquivalent: [(\'abc\' readStream peek;next) asString].\r\tself assertEquivalent: [(\'abc\' readStream next;peek;next) asString].\r\tself assertEquivalent: [\'abc\' readStream next;next;peek;atEnd].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3962' ],		#self : OmReference [ '3963' ],		#time : DateAndTime [ '2024-03-03T08:20:57.359-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStreamTest,				#isMetaSide : false			},			#name : #testStringRead,			#protocol : #tests,			#sourceCode : 'testStringRead\r\tself assertEquivalent: [\'abc\' readStream next asString].\r\tself assertEquivalent: [(\'abc\' readStream next;next) asString].\r\tself assertEquivalent: [(\'abc\' readStream next;next;next) asString].\r\tself assertEquivalent: [\'abc\' readStream next;next;next;atEnd].\r\tself assertEquivalent: [\'abc\' readStream next;next;next;next].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3963' ],		#self : OmReference [ '3964' ],		#time : DateAndTime [ '2024-03-03T08:20:57.359-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStreamTest,				#isMetaSide : false			},			#name : #testStringReadWrite,			#protocol : #tests,			#sourceCode : 'testStringReadWrite\r\tself assert: [(\'\' writeStream nextPutAll: \'abc\';nextPutAll: \'def\';next;next;next;next) asString] evaluatesTo: \'d\'.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3964' ],		#self : OmReference [ '3965' ],		#time : DateAndTime [ '2024-03-03T08:20:57.359-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStreamTest,				#isMetaSide : false			},			#name : #testStringWrite,			#protocol : #tests,			#sourceCode : 'testStringWrite\r\tself assertEquivalent: [\'\' writeStream nextPut: $x;nextPutAll: \'abc\';contents].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3965' ],		#self : OmReference [ '3966' ],		#time : DateAndTime [ '2024-03-03T08:20:57.36-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringTest,				#isMetaSide : false			},			#name : #testConversion,			#protocol : #tests,			#sourceCode : 'testConversion\r\tself assertEquivalent: [\'the Eiffel Tower\' asUppercase].\r\tself assertEquivalent: [\'the Eiffel Tower\' asLowercase].\r\tself assertEquivalent: [\'the Eiffel Tower\' capitalized].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3966' ],		#self : OmReference [ '3967' ],		#time : DateAndTime [ '2024-03-03T08:20:57.36-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringTest,				#isMetaSide : false			},			#name : #testConversionToNumbers,			#protocol : #tests,			#sourceCode : 'testConversionToNumbers\r\tself assertEquivalent: [\'07\' asInteger].\r\tself assertEquivalent: [\'3.14\' asInteger].\r\tself assertEquivalent: [\'3.14\' asNumber].\r\tself assertEquivalent: [\'2xyz\' asNumber].\r\tself assertEquivalent: [\'1.41xyz\' asNumber].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3967' ],		#self : OmReference [ '3968' ],		#time : DateAndTime [ '2024-03-03T08:20:57.36-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringTest,				#isMetaSide : false			},			#name : #testFirst,			#protocol : #tests,			#sourceCode : 'testFirst\r\tself assert: [\'abc\' first] evaluatesTo: \'a\'.\r\tself assert: [\'CBA\' first] evaluatesTo: \'C\'.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3968' ],		#self : OmReference [ '3969' ],		#time : DateAndTime [ '2024-03-03T08:20:57.36-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringTest,				#isMetaSide : false			},			#name : #testIfEmpty,			#protocol : #tests,			#sourceCode : 'testIfEmpty\r\tself assertEquivalent: [\'abc\' ifEmpty: [\'xyz\']].\r\tself assertEquivalent: [\'\' ifEmpty: [\'xyz\']].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3969' ],		#self : OmReference [ '3970' ],		#time : DateAndTime [ '2024-03-03T08:20:57.36-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringTest,				#isMetaSide : false			},			#name : #testIsAlphanumeric,			#protocol : #tests,			#sourceCode : 'testIsAlphanumeric\r\t| digits |\r\tdigits := Character allByteCharacters select: [: each | each isAlphaNumeric ].\r\tself assertBlock: [digits allSatisfy: [: char |char isAlphaNumeric ]].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3970' ],		#self : OmReference [ '3971' ],		#time : DateAndTime [ '2024-03-03T08:20:57.36-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringTest,				#isMetaSide : false			},			#name : #testIsDigit,			#protocol : #tests,			#sourceCode : 'testIsDigit\r\t| digits |\r\tdigits := Character allByteCharacters select: [: each | each isDigit].\r\tself assertBlock: [digits allSatisfy: [: char |char isDigit]].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3971' ],		#self : OmReference [ '3972' ],		#time : DateAndTime [ '2024-03-03T08:20:57.36-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringTest,				#isMetaSide : false			},			#name : #testIsLetter,			#protocol : #tests,			#sourceCode : 'testIsLetter\r\t| letters nonLetters |\r\tletters := Character allByteCharacters select: [: each | each isLetter].\r\tself assertBlock: [letters allSatisfy: [: char |char isLetter]].\r\tnonLetters := Character allByteCharacters copyWithoutAll: letters.\r\tself assertBlock: [nonLetters noneSatisfy: [: char |  char isLetter]].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3972' ],		#self : OmReference [ '3973' ],		#time : DateAndTime [ '2024-03-03T08:20:57.361-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringTest,				#isMetaSide : false			},			#name : #testLast,			#protocol : #tests,			#sourceCode : 'testLast\r\tself assert: [\'abc\' last] evaluatesTo: \'c\'.\r\tself assert: [\'CBA\' last] evaluatesTo: \'A\'.',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3973' ],		#self : OmReference [ '3974' ],		#time : DateAndTime [ '2024-03-03T08:20:57.361-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringTest,				#isMetaSide : false			},			#name : #testReversed,			#protocol : #tests,			#sourceCode : 'testReversed\r\tself\r\t\tassertEquivalent: [\'abcd\' reversed].',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3974' ],		#self : OmReference [ '3975' ],		#time : DateAndTime [ '2024-03-03T08:20:57.361-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringTest,				#isMetaSide : false			},			#name : #testSplit,			#protocol : #tests,			#sourceCode : 'testSplit\r\t| splited |\r\tsplited := self evalBlock: [\'.\' split: \'a.b.c\'].\r\tself assert: splited size equals: 3.\r\t#(a b c) withIndexDo: [ : expected : index | \r\t\tself assert: (splited at: index) equals: expected]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3975' ],		#self : OmReference [ '3976' ],		#time : DateAndTime [ '2024-03-03T08:20:57.361-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjStringTest,				#isMetaSide : false			},			#name : #testSplitOn,			#protocol : #tests,			#sourceCode : 'testSplitOn\r\r\tself assertEquivalent: [\r\t\t(\'a.b.c\' splitOn: \'.\') asArray ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3976' ],		#self : OmReference [ '3977' ],		#time : DateAndTime [ '2024-03-03T08:20:57.361-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUndefinedObjectTest,				#isMetaSide : false			},			#name : #testNilCannotBeReplaced,			#protocol : #tests,			#sourceCode : 'testNilCannotBeReplaced\r\r\tself assertBlock: [ PjUndefinedObject uniqueInstance == nil yourself ].\r\tself evalBlock: [ \r\t\twindow at: #originalNil put: PjUndefinedObject uniqueInstance ].\r\tself\r\t\tshould: [ \r\t\tself evalBlock: [ PjUndefinedObject uniqueInstance: #( 42 ) ] ]\r\t\traise: Error.\r\tself assertBlock: [ \r\t\t(window at: #originalNil) == PjUndefinedObject uniqueInstance ]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3977' ],		#self : OmReference [ '3978' ],		#time : DateAndTime [ '2024-03-03T08:20:57.361-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUndefinedObjectTest,				#isMetaSide : false			},			#name : #testNilStructureCannotChange,			#protocol : #tests,			#sourceCode : 'testNilStructureCannotChange\r\r\tself should: [self evalBlock: [ nil at: #newProperty put: 42 ]] raise: Error.\r\tself assert: [ nil at: #newProperty ] evaluatesTo: nil.\r',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3978' ],		#self : OmReference [ '3979' ],		#time : DateAndTime [ '2024-03-03T08:20:57.361-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAsJsObjectInPharo,				#isMetaSide : false			},			#name : #testBasicObjects,			#protocol : #tests,			#sourceCode : 'testBasicObjects\r\t{ \'abc\'. true. false. nil. 3.14. 2000. $a } do: [ : each |\r\t\tself assert: each asJsObject == each\r\t]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3979' ],		#self : OmReference [ '3980' ],		#time : DateAndTime [ '2024-03-03T08:20:57.362-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAsJsObjectInPharo,				#isMetaSide : false			},			#name : #testConvertingADictionary,			#protocol : #tests,			#sourceCode : 'testConvertingADictionary\r\t| dict |\r\tdict := { #a -> 1. #b -> 2. #c -> 3 } asDictionary.\r\tself assert: (dict asJsObject isKindOf: Dictionary)',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3980' ],		#self : OmReference [ '3981' ],		#time : DateAndTime [ '2024-03-03T08:20:57.362-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAsJsObjectInPharo,				#isMetaSide : false			},			#name : #testConvertingAnAssociationArray,			#protocol : #tests,			#sourceCode : 'testConvertingAnAssociationArray\r\t| converted |\r\tconverted := { #a -> 1. #b -> 2. #c -> 3 } asJsObject.\r\tself assert: (converted isKindOf: Dictionary)',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3981' ],		#self : OmReference [ '3982' ],		#time : DateAndTime [ '2024-03-03T08:20:57.362-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAsJsObjectInPharo,				#isMetaSide : false			},			#name : #testConvertingCompositeArray,			#protocol : #tests,			#sourceCode : 'testConvertingCompositeArray\r\t| converted |\r\tconverted := { \r\t\t#array -> #(1 2 3). \r\t\t#associationArray -> { #a -> 1. #b -> 2. #c -> 3 }.\r\t\t#dict ->  { #x -> 0. #y -> 3.14.} asDictionary.\r\t\t#object -> Object new\r\t} asJsObject.\r\tself assert: (converted isKindOf: Dictionary).\r\tself assert: ((converted at: #array) isKindOf: Array).\r\tself assert: ((converted at: #object) isKindOf: Dictionary).\r\tself assert: ((converted at: #associationArray) isKindOf: Dictionary).\r\tself assert: ((converted at: #dict) isKindOf: Dictionary).',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3982' ],		#self : OmReference [ '3983' ],		#time : DateAndTime [ '2024-03-03T08:20:57.362-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAsJsObjectInPharo,				#isMetaSide : false			},			#name : #testConvertingCompositeDictionary,			#protocol : #tests,			#sourceCode : 'testConvertingCompositeDictionary\r\t| converted |\r\tconverted := { \r\t\t#array -> #(1 2 3). \r\t\t#associationArray -> { #a -> 1. #b -> 2. #c -> 3 }.\r\t\t#dict ->  { #x -> 0. #y -> 3.14.} asDictionary.\r\t\t#object -> Object new\r\t} asDictionary asJsObject.\r\tself assert: (converted isKindOf: Dictionary).\r\tself assert: ((converted at: #array) isKindOf: Array).\r\tself assert: ((converted at: #object) isKindOf: Dictionary).\r\tself assert: ((converted at: #associationArray) isKindOf: Dictionary).\r\tself assert: ((converted at: #dict) isKindOf: Dictionary).',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3983' ],		#self : OmReference [ '3984' ],		#time : DateAndTime [ '2024-03-03T08:20:57.362-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAsJsObjectInPharo,				#isMetaSide : false			},			#name : #testConvertingObjectWithNestedDictionaryAndArray,			#protocol : #tests,			#sourceCode : 'testConvertingObjectWithNestedDictionaryAndArray\r\t| original converted |\r\toriginal := PjObjectForTestingAsJsObject from: { \r\t\t#plainArray -> #(1 2 3). \r\t\t#associationArray -> { #a -> 1. #b -> 2. #c -> 3 }.\r\t\t#dict ->  { #x -> 0. #y -> 3.14.} asDictionary.\r\t\t#objectNoIvs -> Object new.\r\t\t#objectWithIvs -> (PjObjectForTestingAsJsObject from: {#plainArray -> #(x y z)}).\r\t}.\r\tconverted := original asJsObject.\r\tself assert: (converted isKindOf: Dictionary).\r\tself assert: ((converted at: #plainArray) isKindOf: Array).\r\tself assert: ((converted at: #objectNoIvs) isKindOf: Dictionary).\r\tself assert: ((converted at: #objectWithIvs) isKindOf: Dictionary).\r\tself assert: ((converted at: #associationArray) isKindOf: Dictionary).\r\tself assert: ((converted at: #dict) isKindOf: Dictionary).',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3984' ],		#self : OmReference [ '3985' ],		#time : DateAndTime [ '2024-03-03T08:20:57.362-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAsJsObjectInPharo,				#isMetaSide : false			},			#name : #testIgnoreArrayOfNonAssociations,			#protocol : #tests,			#sourceCode : 'testIgnoreArrayOfNonAssociations\r\t| array |\r\tarray := #(1 2 3).\r\tself assert: array asJsObject == array',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3985' ],		#self : OmReference [ '3986' ],		#time : DateAndTime [ '2024-03-03T08:20:57.362-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAsJsObjectInPharo,				#isMetaSide : false			},			#name : #testProxy,			#protocol : #tests,			#sourceCode : 'testProxy\r\t| proxy |\r\tproxy := PjProxy new.\r\tself assert: proxy asJsObject == proxy',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3986' ],		#self : OmReference [ '3987' ],		#time : DateAndTime [ '2024-03-03T08:20:57.362-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDummyTestObject class',				#isMetaSide : true			},			#name : #string,			#protocol : #accessing,			#sourceCode : 'string\r\t^string',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3987' ],		#self : OmReference [ '3988' ],		#time : DateAndTime [ '2024-03-03T08:20:57.362-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDummyTestObject class',				#isMetaSide : true			},			#name : #'string:',			#protocol : #accessing,			#sourceCode : 'string: aString\r\tstring := aString',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3988' ],		#self : OmReference [ '3989' ],		#time : DateAndTime [ '2024-03-03T08:20:57.363-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjObjectForDictTest class',				#isMetaSide : true			},			#name : #'data:',			#protocol : #'instance creation',			#sourceCode : 'data: anObject\r\t^self new\r\t\tdata: anObject;\r\t\tyourself',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3989' ],		#self : OmReference [ '3990' ],		#time : DateAndTime [ '2024-03-03T08:20:57.363-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObjectForDictTest,				#isMetaSide : false			},			#name : #'=',			#protocol : #comparing,			#sourceCode : '= other\r\t^data = other data',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3990' ],		#self : OmReference [ '3991' ],		#time : DateAndTime [ '2024-03-03T08:20:57.363-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObjectForDictTest,				#isMetaSide : false			},			#name : #data,			#protocol : #accessing,			#sourceCode : 'data\r\t^ data',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3991' ],		#self : OmReference [ '3992' ],		#time : DateAndTime [ '2024-03-03T08:20:57.363-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObjectForDictTest,				#isMetaSide : false			},			#name : #'data:',			#protocol : #accessing,			#sourceCode : 'data: anObject\r\tdata := anObject',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3992' ],		#self : OmReference [ '3993' ],		#time : DateAndTime [ '2024-03-03T08:20:57.363-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObjectForDictTest,				#isMetaSide : false			},			#name : #hash,			#protocol : #comparing,			#sourceCode : 'hash\r\t^data hash',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3993' ],		#self : OmReference [ '3994' ],		#time : DateAndTime [ '2024-03-03T08:20:57.363-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjObjectForTestingAsJsObject class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: anAssociationArray\r\t^self new\r\t\tfrom: anAssociationArray;\r\t\tyourself',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3994' ],		#self : OmReference [ '3995' ],		#time : DateAndTime [ '2024-03-03T08:20:57.363-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjObjectForTestingAsJsObject,				#isMetaSide : false			},			#name : #'from:',			#protocol : #initialization,			#sourceCode : 'from: anAssociationArray\r\tanAssociationArray asDictionary keysAndValuesDo: [ : key :value|\r\t\tself instVarNamed: key put: value]',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3995' ],		#self : OmReference [ '3996' ],		#time : DateAndTime [ '2024-03-03T08:20:57.364-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDomControllerPharoTest class',				#isMetaSide : true			},			#name : #appClass,			#protocol : #'suite parameters',			#sourceCode : 'appClass\r\t^PjMinimalFileBasedWebApp',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3996' ],		#self : OmReference [ '3997' ],		#time : DateAndTime [ '2024-03-03T08:20:57.365-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDomControllerPharoTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\tdomElement := app createElement: \'div\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3997' ],		#self : OmReference [ '3998' ],		#time : DateAndTime [ '2024-03-03T08:20:57.365-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDomControllerPharoTest,				#isMetaSide : false			},			#name : #testCssClassARemoval,			#protocol : #testing,			#sourceCode : 'testCssClassARemoval\r\tapp cssClassesStringElement: domElement set: \'a b c\'.\r\tself assert: (app cssClassesStringElement: domElement) equals: \'a b c\'.\r\tapp cssClassesRemoveAll: #(a c) element: domElement.\r\tself assert: (app cssClassesStringElement: domElement) trimBoth equals: \'b\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3998' ],		#self : OmReference [ '3999' ],		#time : DateAndTime [ '2024-03-03T08:20:57.365-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDomControllerPharoTest,				#isMetaSide : false			},			#name : #testCssClassAddition,			#protocol : #testing,			#sourceCode : 'testCssClassAddition\r\tself assert: (app cssClassesStringElement: domElement) equals: \'\'.\r\tapp cssClassesAddAll: #(a b c) element: domElement.\r\tself assert: (app cssClassesStringElement: domElement) trimBoth equals: \'a b c\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3999' ],		#self : OmReference [ '4000' ],		#time : DateAndTime [ '2024-03-03T08:20:57.365-05:00' ],		#trigger : OmReference [ '3813' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDomControllerPharoTest,				#isMetaSide : false			},			#name : #testCssClassReplacement,			#protocol : #testing,			#sourceCode : 'testCssClassReplacement\r\tapp cssClassesStringElement: domElement set: \'a b c\'.\r\tself assert: (app cssClassesStringElement: domElement) equals: \'a b c\'.\r\tapp cssClassesReplaceAll: #(a c) byAll: #(x y) element: domElement.\r\tself assert: (app cssClassesStringElement: domElement) trimBoth equals: \'b x y\'',			#stamp : '',			#package : #PharoJs-Base-JS-CoreLibraries-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:57.586-05:00' ],		#prior : OmReference [ '4000' ],		#self : OmReference [ '4001' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-Base-Exporter-Tests-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4001' ],		#self : OmReference [ '4002' ],		#time : DateAndTime [ '2024-03-03T08:20:57.614-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Exporter-Tests-Support,		#affectedPackageName : #PharoJs-Base-Exporter-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4002' ],		#self : OmReference [ '4003' ],		#time : DateAndTime [ '2024-03-03T08:20:57.616-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptGlobals subclass: #PjTest1Polyfill\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'Foobar\'\r\tpackage: \'PharoJs-Base-Exporter-Tests-Support\'',				#superclassName : 'PjJavascriptGlobals',				#traitCompositionSource : '{}'			},			#name : #PjTest1Polyfill,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTest1Polyfill class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTest1Polyfill class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTest1Polyfill,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTest1Polyfill,						#isMetaSide : false					},					#name : #Foobar,					#parent : @8				}			],			#category : #PharoJs-Base-Exporter-Tests-Support,			#package : #PharoJs-Base-Exporter-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4003' ],		#self : OmReference [ '4004' ],		#time : DateAndTime [ '2024-03-03T08:20:57.62-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptGlobals subclass: #PjTest2Polyfill\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'Bar\'\r\tpoolDictionaries: \'PjTest1Polyfill\'\r\tpackage: \'PharoJs-Base-Exporter-Tests-Support\'',				#superclassName : 'PjJavascriptGlobals',				#traitCompositionSource : '{}'			},			#name : #PjTest2Polyfill,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTest2Polyfill class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTest2Polyfill class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTest2Polyfill,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTest2Polyfill,						#isMetaSide : false					},					#name : #Bar,					#parent : @8				}			],			#category : #PharoJs-Base-Exporter-Tests-Support,			#package : #PharoJs-Base-Exporter-Tests,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTest2Polyfill,						#isMetaSide : false					},					#name : #PjTest1Polyfill,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4004' ],		#self : OmReference [ '4005' ],		#time : DateAndTime [ '2024-03-03T08:20:57.625-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjNodeApplication subclass: #PjTestClassForPolyfill\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjTest2Polyfill\'\r\tpackage: \'PharoJs-Base-Exporter-Tests-Support\'',				#superclassName : 'PjNodeApplication',				#traitCompositionSource : '{}'			},			#name : #PjTestClassForPolyfill,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTestClassForPolyfill class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTestClassForPolyfill class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTestClassForPolyfill,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Exporter-Tests-Support,			#package : #PharoJs-Base-Exporter-Tests,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTestClassForPolyfill,						#isMetaSide : false					},					#name : #PjTest2Polyfill,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4005' ],		#self : OmReference [ '4006' ],		#time : DateAndTime [ '2024-03-03T08:20:57.627-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Base-Exporter-Tests-Tests,		#affectedPackageName : #PharoJs-Base-Exporter-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4006' ],		#self : OmReference [ '4007' ],		#time : DateAndTime [ '2024-03-03T08:20:57.628-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjPackageTranspilationTest subclass: #PjDependentTranspilerTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Exporter-Tests-Tests\'',				#superclassName : 'PjPackageTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjDependentTranspilerTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDependentTranspilerTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDependentTranspilerTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDependentTranspilerTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Exporter-Tests-Tests,			#package : #PharoJs-Base-Exporter-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4007' ],		#self : OmReference [ '4008' ],		#time : DateAndTime [ '2024-03-03T08:20:57.629-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjAppPathTest\r\tinstanceVariableNames: \'appClass\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Exporter-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PjAppPathTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAppPathTest,						#isMetaSide : false					},					#name : #appClass,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAppPathTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAppPathTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAppPathTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Exporter-Tests-Tests,			#package : #PharoJs-Base-Exporter-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4008' ],		#self : OmReference [ '4009' ],		#time : DateAndTime [ '2024-03-03T08:20:57.647-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjExporterTest\r\tuses: PjTJavascriptCodeAnalyser\r\tinstanceVariableNames: \'exporter jsCode\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Exporter-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : 'PjTJavascriptCodeAnalyser'			},			#name : #PjExporterTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporterTest,						#isMetaSide : false					},					#name : #exporter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporterTest,						#isMetaSide : false					},					#name : #jsCode,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjExporterTest class\r\tuses: PjTJavascriptCodeAnalyser classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTJavascriptCodeAnalyser classTrait'				},				#name : #'PjExporterTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjExporterTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Exporter-Tests-Tests,			#package : #PharoJs-Base-Exporter-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4009' ],		#self : OmReference [ '4010' ],		#time : DateAndTime [ '2024-03-03T08:20:57.649-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjAppTestCase subclass: #PjNodeAppExportTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Exporter-Tests-Tests\'',				#superclassName : 'PjAppTestCase',				#traitCompositionSource : '{}'			},			#name : #PjNodeAppExportTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNodeAppExportTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNodeAppExportTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNodeAppExportTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Exporter-Tests-Tests,			#package : #PharoJs-Base-Exporter-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4010' ],		#self : OmReference [ '4011' ],		#time : DateAndTime [ '2024-03-03T08:20:57.655-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedWebApp subclass: #PjAppForPathTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Exporter-Tests-Support\'',				#superclassName : 'PjFileBasedWebApp',				#traitCompositionSource : '{}'			},			#name : #PjAppForPathTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAppForPathTest class\r\tinstanceVariableNames: \'appJsSubFolder appHtmlSubFolder\'',					#traitCompositionSource : '{}'				},				#name : #'PjAppForPathTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjAppForPathTest class'						},						#name : #appJsSubFolder,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjAppForPathTest class'						},						#name : #appHtmlSubFolder,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAppForPathTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Exporter-Tests-Support,			#package : #PharoJs-Base-Exporter-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4011' ],		#self : OmReference [ '4012' ],		#time : DateAndTime [ '2024-03-03T08:20:57.657-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjSuperClassForTranspilationTest subclass: #PjAlternateClassForTranspilationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'A X Y prototype\'\r\tpoolDictionaries: \'PjDomGlobals\'\r\tpackage: \'PharoJs-Base-Exporter-Tests-Support\'',				#superclassName : 'PjSuperClassForTranspilationTest',				#traitCompositionSource : '{}'			},			#name : #PjAlternateClassForTranspilationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAlternateClassForTranspilationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjAlternateClassForTranspilationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAlternateClassForTranspilationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAlternateClassForTranspilationTest,						#isMetaSide : false					},					#name : #A,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAlternateClassForTranspilationTest,						#isMetaSide : false					},					#name : #X,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAlternateClassForTranspilationTest,						#isMetaSide : false					},					#name : #Y,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAlternateClassForTranspilationTest,						#isMetaSide : false					},					#name : #prototype,					#parent : @8				}			],			#category : #PharoJs-Base-Exporter-Tests-Support,			#package : #PharoJs-Base-Exporter-Tests,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjAlternateClassForTranspilationTest,						#isMetaSide : false					},					#name : #PjDomGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4012' ],		#self : OmReference [ '4013' ],		#time : DateAndTime [ '2024-03-03T08:20:57.718-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjExporterTest\r\tuses: PjTJavascriptCodeAnalyser\r\tinstanceVariableNames: \'exporter jsCode\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Exporter-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : 'PjTJavascriptCodeAnalyser'			},			#name : #PjExporterTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporterTest,						#isMetaSide : false					},					#name : #exporter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporterTest,						#isMetaSide : false					},					#name : #jsCode,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjExporterTest class\r\tuses: PjTJavascriptCodeAnalyser classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTJavascriptCodeAnalyser classTrait'				},				#name : #'PjExporterTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjExporterTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Exporter-Tests-Tests,			#package : #PharoJs-Base-Exporter-Tests,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'writing low-level'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4013' ],		#self : OmReference [ '4014' ],		#time : DateAndTime [ '2024-03-03T08:20:57.719-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjExporterTest\r\tuses: PjTJavascriptCodeAnalyser\r\tinstanceVariableNames: \'exporter jsCode\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Exporter-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : 'PjTJavascriptCodeAnalyser'			},			#name : #PjExporterTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporterTest,						#isMetaSide : false					},					#name : #exporter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporterTest,						#isMetaSide : false					},					#name : #jsCode,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjExporterTest class\r\tuses: PjTJavascriptCodeAnalyser classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTJavascriptCodeAnalyser classTrait'				},				#name : #'PjExporterTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjExporterTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Exporter-Tests-Tests,			#package : #PharoJs-Base-Exporter-Tests,			#sharedPools : OrderedCollection [ ]		},		#protocol : #asserting	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4014' ],		#self : OmReference [ '4015' ],		#time : DateAndTime [ '2024-03-03T08:20:57.719-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjExporterTest\r\tuses: PjTJavascriptCodeAnalyser\r\tinstanceVariableNames: \'exporter jsCode\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Exporter-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : 'PjTJavascriptCodeAnalyser'			},			#name : #PjExporterTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporterTest,						#isMetaSide : false					},					#name : #exporter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporterTest,						#isMetaSide : false					},					#name : #jsCode,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjExporterTest class\r\tuses: PjTJavascriptCodeAnalyser classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTJavascriptCodeAnalyser classTrait'				},				#name : #'PjExporterTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjExporterTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Exporter-Tests-Tests,			#package : #PharoJs-Base-Exporter-Tests,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'test support'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4015' ],		#self : OmReference [ '4016' ],		#time : DateAndTime [ '2024-03-03T08:20:57.72-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjExporterTest\r\tuses: PjTJavascriptCodeAnalyser\r\tinstanceVariableNames: \'exporter jsCode\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Base-Exporter-Tests-Tests\'',				#superclassName : 'TestCase',				#traitCompositionSource : 'PjTJavascriptCodeAnalyser'			},			#name : #PjExporterTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporterTest,						#isMetaSide : false					},					#name : #exporter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjExporterTest,						#isMetaSide : false					},					#name : #jsCode,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjExporterTest class\r\tuses: PjTJavascriptCodeAnalyser classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTJavascriptCodeAnalyser classTrait'				},				#name : #'PjExporterTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjExporterTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Base-Exporter-Tests-Tests,			#package : #PharoJs-Base-Exporter-Tests,			#sharedPools : OrderedCollection [ ]		},		#protocol : #writing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4016' ],		#self : OmReference [ '4017' ],		#time : DateAndTime [ '2024-03-03T08:20:57.81-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTest1Polyfill class',				#isMetaSide : true			},			#name : #nodePackageName,			#protocol : #polyfill,			#sourceCode : 'nodePackageName\r\t<pharoJsSkip>\r\t^ \'foobar\'',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4017' ],		#self : OmReference [ '4018' ],		#time : DateAndTime [ '2024-03-03T08:20:57.81-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTest2Polyfill class',				#isMetaSide : true			},			#name : #'nodePolyfill:',			#protocol : #polyfill,			#sourceCode : 'nodePolyfill: aTranspiler\r\t<pharoJsSkip>\r\tsuper nodePolyfill: aTranspiler.\r\taTranspiler\r\t\tnextPutAll: \'var Bar=Foobar.Bar;\';cr',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4018' ],		#self : OmReference [ '4019' ],		#time : DateAndTime [ '2024-03-03T08:20:57.812-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTest2Polyfill class',				#isMetaSide : true			},			#name : #requiredPolyfills,			#protocol : #polyfill,			#sourceCode : 'requiredPolyfills\r\t^ self sharedPools',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4019' ],		#self : OmReference [ '4020' ],		#time : DateAndTime [ '2024-03-03T08:20:57.812-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTestClassForPolyfill class',				#isMetaSide : true			},			#name : #pharoJsSelectorPrefix,			#protocol : #accessing,			#sourceCode : 'pharoJsSelectorPrefix\r\t^ \'alt_\'',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4020' ],		#self : OmReference [ '4021' ],		#time : DateAndTime [ '2024-03-03T08:20:57.812-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTestClassForPolyfill class',				#isMetaSide : true			},			#name : #playgroundDoNotList,			#protocol : #settings,			#sourceCode : 'playgroundDoNotList\r\r\t<pharoJsSkip>\r\t',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4021' ],		#self : OmReference [ '4022' ],		#time : DateAndTime [ '2024-03-03T08:20:57.812-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTestClassForPolyfill,				#isMetaSide : false			},			#name : #m,			#protocol : #any,			#sourceCode : 'm\r\t| bar ws |\r\tbar := Bar new.\r\tws := WebSocket new.',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4022' ],		#self : OmReference [ '4023' ],		#time : DateAndTime [ '2024-03-03T08:20:57.812-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspilerTest,				#isMetaSide : false			},			#name : #testBootstrapClasses,			#protocol : #testing,			#sourceCode : 'testBootstrapClasses\r\r\ttranspiler alreadyConvertedClasses: { PjCore }.\r\tself generateJsCodeForClasses: PjExporter bootstrapClasses.\r\tself assertClassExtension: PjObject installedBefore: PjString.\r\tself assertClassExtension: PjObject installedBefore: PjError',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4023' ],		#self : OmReference [ '4024' ],		#time : DateAndTime [ '2024-03-03T08:20:57.813-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspilerTest,				#isMetaSide : false			},			#name : #testClassOrdering,			#protocol : #testing,			#sourceCode : 'testClassOrdering\r\ttranspiler alreadyConvertedClasses: { PjCore. Object. }.\r\tself generateJsCodeForClasses: {\r\t\tPjAlternateClassForTranspilationTest.\r\t}.\r\tself assertClass: PjSuperClassForTranspilationTest installedBefore: PjAlternateClassForTranspilationTest.\r\tself assertClass: PjSharedPoolForTest installedBefore: PjSuperClassForTranspilationTest.\r\tself assertClass: PjClassEForPackageTranspilationTest installedBefore: PjAlternateClassForTranspilationTest.\r\tself assert: PjSharedPoolForTest initializedBefore: PjAlternateClassForTranspilationTest.',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4024' ],		#self : OmReference [ '4025' ],		#time : DateAndTime [ '2024-03-03T08:20:57.813-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspilerTest,				#isMetaSide : false			},			#name : #testIncludeMethods,			#protocol : #testing,			#sourceCode : 'testIncludeMethods\r\t" test that methods from a variety of dependent classes get loaded "\r\tself generateJsCodeForClasses: { PjClassForTranspilationTest }.\r\tself assert: (self instanceMethod: #selector) equals: \'(){return this.selector}\'.\r\tself assert: (self instanceMethod: #selectors) equals: \'(){return [this.selector]}\'.\r\tself assert: (self instanceMethod: #order:selector:) equals: \'(aNumber,aString){this._order_(aNumber);this.selector=aString;return this}\'.\r\tself assert: (self classMethod: #javascriptName) equals: nil. "because of pragma"\r\tself assert: (self classMethod: #exampleForTest) equals: \'(){return this}\'.',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4025' ],		#self : OmReference [ '4026' ],		#time : DateAndTime [ '2024-03-03T08:20:57.813-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDependentTranspilerTest,				#isMetaSide : false			},			#name : #transpilerClass,			#protocol : #accessing,			#sourceCode : 'transpilerClass\r\t^ PjDependentTranspiler',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4026' ],		#self : OmReference [ '4027' ],		#time : DateAndTime [ '2024-03-03T08:20:57.813-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppPathTest,				#isMetaSide : false			},			#name : #resetAppClass,			#protocol : #running,			#sourceCode : 'resetAppClass\r\tappClass appHtmlSubFolder: nil.\r\tappClass appJsSubFolder: nil.\r\tappClass defaultAppFolderPath deleteIfAbsent: [ ]\r',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4027' ],		#self : OmReference [ '4028' ],		#time : DateAndTime [ '2024-03-03T08:20:57.813-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppPathTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\tappClass := PjAppForPathTest.\r\tappClass appFolder: \'/some/folder\' asFileReference. \r\tself resetAppClass',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4028' ],		#self : OmReference [ '4029' ],		#time : DateAndTime [ '2024-03-03T08:20:57.813-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppPathTest,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #running,			#sourceCode : 'tearDown\r\tsuper tearDown.\r\tself resetAppClass',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4029' ],		#self : OmReference [ '4030' ],		#time : DateAndTime [ '2024-03-03T08:20:57.813-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppPathTest,				#isMetaSide : false			},			#name : #testDefaultAppFolderCreatedIfMissing,			#protocol : #running,			#sourceCode : 'testDefaultAppFolderCreatedIfMissing\r\tself assert: appClass defaultAppFolder exists',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4030' ],		#self : OmReference [ '4031' ],		#time : DateAndTime [ '2024-03-03T08:20:57.813-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppPathTest,				#isMetaSide : false			},			#name : #testNilHtmlFolderAndNilJsFolder,			#protocol : #running,			#sourceCode : 'testNilHtmlFolderAndNilJsFolder\r\tappClass appHtmlSubFolder: nil.\r\tappClass appJsSubFolder: nil.\r\tself assert: appClass appFullHtmlFolderPath equals: appClass appFolder.\r\tself assert: appClass appFullJsFolderPath equals: appClass appFullHtmlFolderPath.',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4031' ],		#self : OmReference [ '4032' ],		#time : DateAndTime [ '2024-03-03T08:20:57.814-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppPathTest,				#isMetaSide : false			},			#name : #testNilHtmlFolderFolderButNotNilJsFolder,			#protocol : #running,			#sourceCode : 'testNilHtmlFolderFolderButNotNilJsFolder\r\tappClass appHtmlSubFolder: nil.\r\tappClass appJsSubFolder: \'js\'.\r\tself assert: appClass appFullHtmlFolderPath equals: appClass appFolder.\r\tself assert: appClass appFullJsFolderPath equals: appClass appFullHtmlFolderPath / \'js\'.',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4032' ],		#self : OmReference [ '4033' ],		#time : DateAndTime [ '2024-03-03T08:20:57.814-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppPathTest,				#isMetaSide : false			},			#name : #testNotNilHtmlFolderAndNotNilJsFolder,			#protocol : #running,			#sourceCode : 'testNotNilHtmlFolderAndNotNilJsFolder\r\tappClass appHtmlSubFolder: \'www\'.\r\tappClass appJsSubFolder: \'js\'.\r\tself assert: appClass appFullHtmlFolderPath equals: appClass appFolder/\'www\'.\r\tself assert: appClass appFullJsFolderPath equals: appClass appFullHtmlFolderPath / \'js\'.',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4033' ],		#self : OmReference [ '4034' ],		#time : DateAndTime [ '2024-03-03T08:20:57.814-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppPathTest,				#isMetaSide : false			},			#name : #testNotNilHtmlFolderButNilJsFolder,			#protocol : #running,			#sourceCode : 'testNotNilHtmlFolderButNilJsFolder\r\tappClass appHtmlSubFolder: \'www\'.\r\tappClass appJsSubFolder: nil.\r\tself assert: appClass appFullHtmlFolderPath equals: appClass appFolder/ \'www\'.\r\tself assert: appClass appFullJsFolderPath equals: appClass appFullHtmlFolderPath.',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4034' ],		#self : OmReference [ '4035' ],		#time : DateAndTime [ '2024-03-03T08:20:57.815-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #classToTranspile,			#protocol : #running,			#sourceCode : 'classToTranspile\r\tself explicitRequirement',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #classToTranspile,			#protocol : #running,			#sourceCode : 'classToTranspile\r\t^ PjClassExtensionForTest',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4035' ],		#self : OmReference [ '4036' ],		#time : DateAndTime [ '2024-03-03T08:20:57.815-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #classToTranspile,			#protocol : #accessing,			#sourceCode : 'classToTranspile\r\t^ PjClassExtensionForTest',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #classToTranspile,			#protocol : #running,			#sourceCode : 'classToTranspile\r\t^ PjClassExtensionForTest',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4036' ],		#self : OmReference [ '4037' ],		#time : DateAndTime [ '2024-03-03T08:20:57.815-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #jsCode,			#protocol : #accessing,			#sourceCode : 'jsCode\r\tself explicitRequirement',			#stamp : '',			#package : #PharoJs-Base-Transpiler-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #jsCode,			#protocol : #accessing,			#sourceCode : 'jsCode\r\t^jsCode',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4037' ],		#self : OmReference [ '4038' ],		#time : DateAndTime [ '2024-03-03T08:20:57.816-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #lineEnding,			#protocol : #accessing,			#sourceCode : 'lineEnding\r\tself explicitRequirement',			#stamp : '',			#package : #PharoJs-Base-Transpiler		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #lineEnding,			#protocol : #accessing,			#sourceCode : 'lineEnding\r\t^exporter transpiler lineEnding',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4038' ],		#self : OmReference [ '4039' ],		#time : DateAndTime [ '2024-03-03T08:20:57.816-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #pharoJsSelectorPrefix,			#protocol : #accessing,			#sourceCode : 'pharoJsSelectorPrefix\r\t^ exporter transpiler pharoJsSelectorPrefix',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4039' ],		#self : OmReference [ '4040' ],		#time : DateAndTime [ '2024-03-03T08:20:57.816-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\texporter := PjExporter new.',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4040' ],		#self : OmReference [ '4041' ],		#time : DateAndTime [ '2024-03-03T08:20:57.816-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #testAvoidOverridingOnImportMethodsFromPharo,			#protocol : #testing,			#sourceCode : 'testAvoidOverridingOnImportMethodsFromPharo\r\r\texporter initializeWithAppClass: PjApplication.\r\texporter addClass: PjClassExtensionForTest.\r\tjsCode := exporter javascriptCode.\r\tself assertInstanceMethod: #foo equals: \'(){return 42}\'.\r\tself\r\t\tassert: (jsCode splitOn:\r\t\t\t\t self pharoJsSelectorPrefix , \'foo\') size\r\t\tequals: 2',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4041' ],		#self : OmReference [ '4042' ],		#time : DateAndTime [ '2024-03-03T08:20:57.816-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #testClassInheritanceOrder,			#protocol : #testing,			#sourceCode : 'testClassInheritanceOrder\r\r\texporter initializeWithAppClass: PjDOMApplication.\r\tjsCode := exporter javascriptCode.\r\tself assert: \'class PjApplication\' precedes: \'class PjDOMApplication\'',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4042' ],		#self : OmReference [ '4043' ],		#time : DateAndTime [ '2024-03-03T08:20:57.817-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #testCoreClassedLoaded,			#protocol : #testing,			#sourceCode : 'testCoreClassedLoaded\r\r\t| pjPrefix |\r\texporter initializeWithAppClass: PjApplication.\r\tpjPrefix := self pharoJsSelectorPrefix. " has to be done after an application has been set "\r\tjsCode := exporter javascriptCode.\r\tself assert: (jsCode includesSubstring:\r\t\t\t \'installClass(class PjClass extends Function{\').\r\tself assert: (jsCode includesSubstring:\r\t\t\t \'installClass(class PjApplication extends Object{\').\r\tself deny: (jsCode includesSubstring: \'class Object\').\r\tself assert: (jsCode includes: \'PjClass\' before: \'PjApplication\').\r\tself assert: (jsCode\r\t\t\t includes: PjTranspiler installClassSelector , \'=function(\'\r\t\t\t before: \'PjApplication\').\r\tself assert: (jsCode\r\t\t\t includes:\r\t\t\t PjTranspiler installJsClassPlaceholderSelector , \'=function(\'\r\t\t\t before: \'PjApplication\')',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4043' ],		#self : OmReference [ '4044' ],		#time : DateAndTime [ '2024-03-03T08:20:57.817-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #testExportingClassesAndPackages,			#protocol : #testing,			#sourceCode : 'testExportingClassesAndPackages\r\texporter addClass: Object.\r\tself assert: exporter classes size equals: 1.\r\texporter addAllClasses: {String. Array}.\r\tself assert: exporter classes size equals: 3.\r\texporter addPackage: \'PharoJs-Base-Exporter-Tests-Support\'.\r\tself assert: exporter classes size = 8.\r\texporter addAllPackages: {PjExporter category.  PjTranspiler category}.\r\tself assert: exporter classes size > 10.',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4044' ],		#self : OmReference [ '4045' ],		#time : DateAndTime [ '2024-03-03T08:20:57.817-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #testImportMethodsFromPharo,			#protocol : #testing,			#sourceCode : 'testImportMethodsFromPharo\r\texporter initializeWithAppClass: PjApplication.\r\texporter addClass: PjClassExtensionForTest.\r\tjsCode := exporter javascriptCode.\r\t#(yourself isArray isLiteral eqv:) do: [ : selector |\r\t\tself assertHasInstanceMethod: selector ].\r\t#(allInstances allInstancesDo: new) do: [ : selector |\r\t\tself assertHasClassMethod: selector ].\r\tself assertInstanceMethod: #yourself equals: \'(){return this}\'',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4045' ],		#self : OmReference [ '4046' ],		#time : DateAndTime [ '2024-03-03T08:20:57.817-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #testJsSelector,			#protocol : #testing,			#sourceCode : 'testJsSelector\r\t| contents |\r\tcontents := (PjTestFileExporter exportApp: PjTestClassForPolyfill) contents.\r\tself assert: (contents includesSubstring: \'alt_m(\').',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4046' ],		#self : OmReference [ '4047' ],		#time : DateAndTime [ '2024-03-03T08:20:57.817-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #testLaunchCodeAppearsAtTheEndOfExportedCode,			#protocol : #testing,			#sourceCode : 'testLaunchCodeAppearsAtTheEndOfExportedCode\r\texporter initializeWithAppClass: PjApplication.\r\texporter launchBlock: [42].\r\tjsCode := exporter javascriptCode.\r\tself assert: (jsCode allButLast endsWith: \'return 42})();\')',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4047' ],		#self : OmReference [ '4048' ],		#time : DateAndTime [ '2024-03-03T08:20:57.817-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #testMainClassIsAddedToClassesToExport,			#protocol : #testing,			#sourceCode : 'testMainClassIsAddedToClassesToExport\r\texporter initializeWithAppClass: PjWebApplication.\r\tself assert: (exporter classes includes: PjWebApplication).\r\tself assert: exporter classes size > 1.',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4048' ],		#self : OmReference [ '4049' ],		#time : DateAndTime [ '2024-03-03T08:20:57.817-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #testPolyfills,			#protocol : #testing,			#sourceCode : 'testPolyfills\r\t| contents foobar bar |\r\tcontents := (PjTestFileExporter exportApp: PjMinimalNodeApplication) contents.\r\tself deny: (contents includesSubstring: \' WebSocket=Smalltalk.require("ws")\').\r\tcontents := (PjTestFileExporter exportApp: PjTestClassForPolyfill) contents.\r\tself assert: (contents includesSubstring: \' WebSocket=Smalltalk.require("ws")\').\r\tself assert: (contents includesSubstring: \' Foobar=Smalltalk.require("foobar")\').\r\tself assert: (contents includesSubstring: \'Bar=Foobar.Bar\').\r\tfoobar := contents findString: \' Foobar=Smalltalk.require("foobar")\'.\r\tbar := contents findString: \'Bar=Foobar.Bar\'.\r\tself assert: foobar<bar.',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4049' ],		#self : OmReference [ '4050' ],		#time : DateAndTime [ '2024-03-03T08:20:57.817-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #testTestResourcesAreIgnored,			#protocol : #testing,			#sourceCode : 'testTestResourcesAreIgnored\r\texporter addAllClasses: {TestResource}.\r\tself assert: exporter classes isEmpty.',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4050' ],		#self : OmReference [ '4051' ],		#time : DateAndTime [ '2024-03-03T08:20:57.818-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #testTestsAreIgnored,			#protocol : #testing,			#sourceCode : 'testTestsAreIgnored\r\texporter addAllClasses: {TestCase. PjExporterTest}.\r\tself assert: exporter classes isEmpty.',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4051' ],		#self : OmReference [ '4052' ],		#time : DateAndTime [ '2024-03-03T08:20:57.818-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExporterTest,				#isMetaSide : false			},			#name : #testTraitsAreIgnored,			#protocol : #testing,			#sourceCode : 'testTraitsAreIgnored\r\texporter addClass: TComparable.\r\tself assert: exporter classes isEmpty.',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4052' ],		#self : OmReference [ '4053' ],		#time : DateAndTime [ '2024-03-03T08:20:57.818-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNodeAppExportTest class',				#isMetaSide : true			},			#name : #appClass,			#protocol : #'suite parameters',			#sourceCode : 'appClass\r\r\t^ PjMinimalNodeApplication',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4053' ],		#self : OmReference [ '4054' ],		#time : DateAndTime [ '2024-03-03T08:20:57.818-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeAppExportTest,				#isMetaSide : false			},			#name : #testRequiredJsModulesInstalled,			#protocol : #tests,			#sourceCode : 'testRequiredJsModulesInstalled\r\r\tself appClass modulesFolder ensureDeleteAll.\r\tself deny: self appClass modulesFolder exists.\r\tself appClass exportApp.\r\tself assert: self appClass modulesFolder exists',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4054' ],		#self : OmReference [ '4055' ],		#time : DateAndTime [ '2024-03-03T08:20:57.818-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAppForPathTest class',				#isMetaSide : true			},			#name : #appFolder,			#protocol : #accessing,			#sourceCode : 'appFolder\r\t^appFolder',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4055' ],		#self : OmReference [ '4056' ],		#time : DateAndTime [ '2024-03-03T08:20:57.818-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAppForPathTest class',				#isMetaSide : true			},			#name : #appHtmlSubFolder,			#protocol : #accessing,			#sourceCode : 'appHtmlSubFolder\r\t^appHtmlSubFolder',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4056' ],		#self : OmReference [ '4057' ],		#time : DateAndTime [ '2024-03-03T08:20:57.819-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAppForPathTest class',				#isMetaSide : true			},			#name : #'appHtmlSubFolder:',			#protocol : #accessing,			#sourceCode : 'appHtmlSubFolder: anObject\r\tappHtmlSubFolder := anObject',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4057' ],		#self : OmReference [ '4058' ],		#time : DateAndTime [ '2024-03-03T08:20:57.819-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAppForPathTest class',				#isMetaSide : true			},			#name : #appJsSubFolder,			#protocol : #accessing,			#sourceCode : 'appJsSubFolder\r\t^appJsSubFolder',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4058' ],		#self : OmReference [ '4059' ],		#time : DateAndTime [ '2024-03-03T08:20:57.819-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAppForPathTest class',				#isMetaSide : true			},			#name : #'appJsSubFolder:',			#protocol : #accessing,			#sourceCode : 'appJsSubFolder: anObject\r\tappJsSubFolder := anObject',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4059' ],		#self : OmReference [ '4060' ],		#time : DateAndTime [ '2024-03-03T08:20:57.819-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAlternateClassForTranspilationTest class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #initialization-release,			#sourceCode : 'initialize',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4060' ],		#self : OmReference [ '4061' ],		#time : DateAndTime [ '2024-03-03T08:20:57.819-05:00' ],		#trigger : OmReference [ '4001' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAlternateClassForTranspilationTest,				#isMetaSide : false			},			#name : #m,			#protocol : #any,			#sourceCode : 'm\r\t^ PjClassEForPackageTranspilationTest new',			#stamp : '',			#package : #PharoJs-Base-Exporter-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:57.981-05:00' ],		#prior : OmReference [ '4061' ],		#self : OmReference [ '4062' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-Examples-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4062' ],		#self : OmReference [ '4063' ],		#time : DateAndTime [ '2024-03-03T08:20:58.007-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Examples-D3JS,		#affectedPackageName : #PharoJs-Examples	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4063' ],		#self : OmReference [ '4064' ],		#time : DateAndTime [ '2024-03-03T08:20:58.009-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjJavascriptGlobals subclass: #PjD3JsGlobals\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'d3\'\r\tpackage: \'PharoJs-Examples-D3JS\'',				#superclassName : 'PjJavascriptGlobals',				#traitCompositionSource : '{}'			},			#name : #PjD3JsGlobals,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjD3JsGlobals class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjD3JsGlobals class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjD3JsGlobals,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjD3JsGlobals,						#isMetaSide : false					},					#name : #d3,					#parent : @8				}			],			#category : #PharoJs-Examples-D3JS,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4064' ],		#self : OmReference [ '4065' ],		#time : DateAndTime [ '2024-03-03T08:20:58.014-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Examples-Minimal,		#affectedPackageName : #PharoJs-Examples	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4065' ],		#self : OmReference [ '4066' ],		#time : DateAndTime [ '2024-03-03T08:20:58.015-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjNodeApplication subclass: #PjMinimalNodeApplication\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-Minimal\'',				#superclassName : 'PjNodeApplication',				#traitCompositionSource : '{}'			},			#name : #PjMinimalNodeApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMinimalNodeApplication class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMinimalNodeApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMinimalNodeApplication,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-Minimal,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4066' ],		#self : OmReference [ '4067' ],		#time : DateAndTime [ '2024-03-03T08:20:58.017-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjNodeApplication subclass: #PjMinimalNodeApplication\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-Minimal\'',				#superclassName : 'PjNodeApplication',				#traitCompositionSource : '{}'			},			#name : #PjMinimalNodeApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMinimalNodeApplication class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMinimalNodeApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMinimalNodeApplication,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a minimal application that runs in nodejs',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-Minimal,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a minimal application that runs in nodejs',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4067' ],		#self : OmReference [ '4068' ],		#time : DateAndTime [ '2024-03-03T08:20:58.019-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Examples-ExpressJS,		#affectedPackageName : #PharoJs-Examples	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4068' ],		#self : OmReference [ '4069' ],		#time : DateAndTime [ '2024-03-03T08:20:58.02-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjExpressApp subclass: #PjHelloWorldExpressApp\r\tinstanceVariableNames: \'name\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-ExpressJS\'',				#superclassName : 'PjExpressApp',				#traitCompositionSource : '{}'			},			#name : #PjHelloWorldExpressApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjHelloWorldExpressApp,						#isMetaSide : false					},					#name : #name,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjHelloWorldExpressApp class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjHelloWorldExpressApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjHelloWorldExpressApp,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-ExpressJS,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4069' ],		#self : OmReference [ '4070' ],		#time : DateAndTime [ '2024-03-03T08:20:58.021-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjExpressApp subclass: #PjHelloWorldExpressApp\r\tinstanceVariableNames: \'name\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-ExpressJS\'',				#superclassName : 'PjExpressApp',				#traitCompositionSource : '{}'			},			#name : #PjHelloWorldExpressApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjHelloWorldExpressApp,						#isMetaSide : false					},					#name : #name,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjHelloWorldExpressApp class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjHelloWorldExpressApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjHelloWorldExpressApp,					#isMetaSide : false				},				#parent : @8,				#content : 'Express-based app. Requires the following node packages be installed in the folder\r\t- [express](https://expressjs.com)\r\t- [body-parser](https://expressjs.com/en/resources/middleware/body-parser.html): Parse incoming request bodies in a middleware before your handlers, available under the req.body property.\r\t- [serve-static](https://expressjs.com/en/resources/middleware/serve-static.html): Create a new middleware function to serve files from within a given root directory. The file to serve will be determined by combining req.url with the provided root directory. When a file is not found, instead of sending a 404 response, this module will instead call next() to move on to the next middleware, allowing for stacking and fall-backs.\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-ExpressJS,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Express-based app. Requires the following node packages be installed in the folder\r\t- [express](https://expressjs.com)\r\t- [body-parser](https://expressjs.com/en/resources/middleware/body-parser.html): Parse incoming request bodies in a middleware before your handlers, available under the req.body property.\r\t- [serve-static](https://expressjs.com/en/resources/middleware/serve-static.html): Create a new middleware function to serve files from within a given root directory. The file to serve will be determined by combining req.url with the provided root directory. When a file is not found, instead of sending a 404 response, this module will instead call next() to move on to the next middleware, allowing for stacking and fall-backs.\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4070' ],		#self : OmReference [ '4071' ],		#time : DateAndTime [ '2024-03-03T08:20:58.023-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Examples-PhysicsSimulation,		#affectedPackageName : #PharoJs-Examples	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4071' ],		#self : OmReference [ '4072' ],		#time : DateAndTime [ '2024-03-03T08:20:58.024-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedWebApp subclass: #PhysicsSim\r\tinstanceVariableNames: \'engine\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-PhysicsSimulation\'',				#superclassName : 'PjFileBasedWebApp',				#traitCompositionSource : '{}'			},			#name : #PhysicsSim,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PhysicsSim,						#isMetaSide : false					},					#name : #engine,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PhysicsSim class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PhysicsSim class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PhysicsSim,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-PhysicsSimulation,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4072' ],		#self : OmReference [ '4073' ],		#time : DateAndTime [ '2024-03-03T08:20:58.026-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedWebApp subclass: #PhysicsSim\r\tinstanceVariableNames: \'engine\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-PhysicsSimulation\'',				#superclassName : 'PjFileBasedWebApp',				#traitCompositionSource : '{}'			},			#name : #PhysicsSim,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PhysicsSim,						#isMetaSide : false					},					#name : #engine,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PhysicsSim class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PhysicsSim class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PhysicsSim,					#isMetaSide : false				},				#parent : @8,				#content : 'This example was first introduced durint a talk given at the ESUG 2018 conference.\rIt shows how to use an existing JS library by relying on the matters.js library\rhttps://brm.io/matter-js/',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-PhysicsSimulation,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'This example was first introduced durint a talk given at the ESUG 2018 conference.\rIt shows how to use an existing JS library by relying on the matters.js library\rhttps://brm.io/matter-js/',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4073' ],		#self : OmReference [ '4074' ],		#time : DateAndTime [ '2024-03-03T08:20:58.027-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Examples-Counter,		#affectedPackageName : #PharoJs-Examples	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4074' ],		#self : OmReference [ '4075' ],		#time : DateAndTime [ '2024-03-03T08:20:58.028-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedWebApp subclass: #PjCounterBrowserApp\r\tinstanceVariableNames: \'counter controller\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-Counter\'',				#superclassName : 'PjFileBasedWebApp',				#traitCompositionSource : '{}'			},			#name : #PjCounterBrowserApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjCounterBrowserApp,						#isMetaSide : false					},					#name : #counter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjCounterBrowserApp,						#isMetaSide : false					},					#name : #controller,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjCounterBrowserApp class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjCounterBrowserApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjCounterBrowserApp,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-Counter,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4075' ],		#self : OmReference [ '4076' ],		#time : DateAndTime [ '2024-03-03T08:20:58.03-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedWebApp subclass: #PjDisjointForceDirectedGraphExample\r\tinstanceVariableNames: \'simulation svg svgLinks svgNodes dataLinks dataNodes\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjD3JsGlobals\'\r\tpackage: \'PharoJs-Examples-D3JS\'',				#superclassName : 'PjFileBasedWebApp',				#traitCompositionSource : '{}'			},			#name : #PjDisjointForceDirectedGraphExample,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDisjointForceDirectedGraphExample,						#isMetaSide : false					},					#name : #simulation,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDisjointForceDirectedGraphExample,						#isMetaSide : false					},					#name : #svg,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDisjointForceDirectedGraphExample,						#isMetaSide : false					},					#name : #svgLinks,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDisjointForceDirectedGraphExample,						#isMetaSide : false					},					#name : #svgNodes,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDisjointForceDirectedGraphExample,						#isMetaSide : false					},					#name : #dataLinks,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDisjointForceDirectedGraphExample,						#isMetaSide : false					},					#name : #dataNodes,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDisjointForceDirectedGraphExample class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDisjointForceDirectedGraphExample class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDisjointForceDirectedGraphExample,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-D3JS,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDisjointForceDirectedGraphExample,						#isMetaSide : false					},					#name : #PjD3JsGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4076' ],		#self : OmReference [ '4077' ],		#time : DateAndTime [ '2024-03-03T08:20:58.031-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedWebApp subclass: #PjDisjointForceDirectedGraphExample\r\tinstanceVariableNames: \'simulation svg svgLinks svgNodes dataLinks dataNodes\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjD3JsGlobals\'\r\tpackage: \'PharoJs-Examples-D3JS\'',				#superclassName : 'PjFileBasedWebApp',				#traitCompositionSource : '{}'			},			#name : #PjDisjointForceDirectedGraphExample,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDisjointForceDirectedGraphExample,						#isMetaSide : false					},					#name : #simulation,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDisjointForceDirectedGraphExample,						#isMetaSide : false					},					#name : #svg,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDisjointForceDirectedGraphExample,						#isMetaSide : false					},					#name : #svgLinks,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDisjointForceDirectedGraphExample,						#isMetaSide : false					},					#name : #svgNodes,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDisjointForceDirectedGraphExample,						#isMetaSide : false					},					#name : #dataLinks,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDisjointForceDirectedGraphExample,						#isMetaSide : false					},					#name : #dataNodes,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDisjointForceDirectedGraphExample class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDisjointForceDirectedGraphExample class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDisjointForceDirectedGraphExample,					#isMetaSide : false				},				#parent : @8,				#content : 'Example of app using data visualisation library D3JS https://d3js.org/\rDisplays a graph with clickable and draggable nodes',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-D3JS,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDisjointForceDirectedGraphExample,						#isMetaSide : false					},					#name : #PjD3JsGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'Example of app using data visualisation library D3JS https://d3js.org/\rDisplays a graph with clickable and draggable nodes',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4077' ],		#self : OmReference [ '4078' ],		#time : DateAndTime [ '2024-03-03T08:20:58.034-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Examples-HelloWorld,		#affectedPackageName : #PharoJs-Examples	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4078' ],		#self : OmReference [ '4079' ],		#time : DateAndTime [ '2024-03-03T08:20:58.035-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedWebApp subclass: #PjHelloWorldApp\r\tinstanceVariableNames: \'user\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-HelloWorld\'',				#superclassName : 'PjFileBasedWebApp',				#traitCompositionSource : '{}'			},			#name : #PjHelloWorldApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjHelloWorldApp,						#isMetaSide : false					},					#name : #user,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjHelloWorldApp class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjHelloWorldApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjHelloWorldApp,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-HelloWorld,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4079' ],		#self : OmReference [ '4080' ],		#time : DateAndTime [ '2024-03-03T08:20:58.037-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedWebApp subclass: #PjHelloWorldApp\r\tinstanceVariableNames: \'user\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-HelloWorld\'',				#superclassName : 'PjFileBasedWebApp',				#traitCompositionSource : '{}'			},			#name : #PjHelloWorldApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjHelloWorldApp,						#isMetaSide : false					},					#name : #user,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjHelloWorldApp class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjHelloWorldApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjHelloWorldApp,					#isMetaSide : false				},				#parent : @8,				#content : 'Simple Hello World example. \rThe app UI relies on an text input field and a button.\rThe HTML file is on GIT https://github.com/bouraqadi/PharoJS.git sub-folder PharoJsExamples/HelloWorld/\r\rTo generate the javascript index.js file, evaluate the following expression: \rPjHelloWorldApp exportApp',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-HelloWorld,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Simple Hello World example. \rThe app UI relies on an text input field and a button.\rThe HTML file is on GIT https://github.com/bouraqadi/PharoJS.git sub-folder PharoJsExamples/HelloWorld/\r\rTo generate the javascript index.js file, evaluate the following expression: \rPjHelloWorldApp exportApp',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4080' ],		#self : OmReference [ '4081' ],		#time : DateAndTime [ '2024-03-03T08:20:58.042-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedWebApp subclass: #PjHelloWorldExpressClientApp\r\tuses: PjTWebClientApp\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-ExpressJS\'',				#superclassName : 'PjFileBasedWebApp',				#traitCompositionSource : 'PjTWebClientApp'			},			#name : #PjHelloWorldExpressClientApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjHelloWorldExpressClientApp class\r\tuses: PjTWebClientApp classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTWebClientApp classTrait'				},				#name : #'PjHelloWorldExpressClientApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjHelloWorldExpressClientApp,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-ExpressJS,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4081' ],		#self : OmReference [ '4082' ],		#time : DateAndTime [ '2024-03-03T08:20:58.043-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedWebApp subclass: #PjHelloWorldExpressClientApp\r\tuses: PjTWebClientApp\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-ExpressJS\'',				#superclassName : 'PjFileBasedWebApp',				#traitCompositionSource : 'PjTWebClientApp'			},			#name : #PjHelloWorldExpressClientApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjHelloWorldExpressClientApp class\r\tuses: PjTWebClientApp classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTWebClientApp classTrait'				},				#name : #'PjHelloWorldExpressClientApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjHelloWorldExpressClientApp,					#isMetaSide : false				},				#parent : @8,				#content : 'I rely on the [Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) to make REST calls on the ExpressJS-based server implemented by `PjHelloWorldExpressApp`.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-ExpressJS,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I rely on the [Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) to make REST calls on the ExpressJS-based server implemented by `PjHelloWorldExpressApp`.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4082' ],		#self : OmReference [ '4083' ],		#time : DateAndTime [ '2024-03-03T08:20:58.044-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedWebApp subclass: #PjHtmlGeneratingCounterApp\r\tinstanceVariableNames: \'count countDisplay\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-Counter\'',				#superclassName : 'PjFileBasedWebApp',				#traitCompositionSource : '{}'			},			#name : #PjHtmlGeneratingCounterApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjHtmlGeneratingCounterApp,						#isMetaSide : false					},					#name : #count,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjHtmlGeneratingCounterApp,						#isMetaSide : false					},					#name : #countDisplay,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjHtmlGeneratingCounterApp class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjHtmlGeneratingCounterApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjHtmlGeneratingCounterApp,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-Counter,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4083' ],		#self : OmReference [ '4084' ],		#time : DateAndTime [ '2024-03-03T08:20:58.046-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Examples-DrawRectangle,		#affectedPackageName : #PharoJs-Examples	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4084' ],		#self : OmReference [ '4085' ],		#time : DateAndTime [ '2024-03-03T08:20:58.047-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebApplication subclass: #PjDrawRectangleApp\r\tinstanceVariableNames: \'rectangle colour\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-DrawRectangle\'',				#superclassName : 'PjWebApplication',				#traitCompositionSource : '{}'			},			#name : #PjDrawRectangleApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDrawRectangleApp,						#isMetaSide : false					},					#name : #rectangle,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDrawRectangleApp,						#isMetaSide : false					},					#name : #colour,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDrawRectangleApp class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDrawRectangleApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDrawRectangleApp,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-DrawRectangle,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4085' ],		#self : OmReference [ '4086' ],		#time : DateAndTime [ '2024-03-03T08:20:58.048-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebApplication subclass: #PjDrawRectangleApp\r\tinstanceVariableNames: \'rectangle colour\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-DrawRectangle\'',				#superclassName : 'PjWebApplication',				#traitCompositionSource : '{}'			},			#name : #PjDrawRectangleApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDrawRectangleApp,						#isMetaSide : false					},					#name : #rectangle,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDrawRectangleApp,						#isMetaSide : false					},					#name : #colour,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDrawRectangleApp class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDrawRectangleApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDrawRectangleApp,					#isMetaSide : false				},				#parent : @8,				#content : 'I am just the shared methods of a minimal browser application.\r\rMy subclasses are the actual implementions.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-DrawRectangle,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am just the shared methods of a minimal browser application.\r\rMy subclasses are the actual implementions.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4086' ],		#self : OmReference [ '4087' ],		#time : DateAndTime [ '2024-03-03T08:20:58.05-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDrawRectangleApp subclass: #PjDrawRectangleNoDnuApp\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-DrawRectangle\'',				#superclassName : 'PjDrawRectangleApp',				#traitCompositionSource : '{}'			},			#name : #PjDrawRectangleNoDnuApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDrawRectangleNoDnuApp class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDrawRectangleNoDnuApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDrawRectangleNoDnuApp,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-DrawRectangle,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4087' ],		#self : OmReference [ '4088' ],		#time : DateAndTime [ '2024-03-03T08:20:58.051-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDrawRectangleApp subclass: #PjDrawRectangleNoDnuApp\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-DrawRectangle\'',				#superclassName : 'PjDrawRectangleApp',				#traitCompositionSource : '{}'			},			#name : #PjDrawRectangleNoDnuApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDrawRectangleNoDnuApp class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDrawRectangleNoDnuApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDrawRectangleNoDnuApp,					#isMetaSide : false				},				#parent : @8,				#content : 'I implement a minimal browser application.\r\rI am a version that doesn\'t need a DNU infrastructure.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-DrawRectangle,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I implement a minimal browser application.\r\rI am a version that doesn\'t need a DNU infrastructure.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4088' ],		#self : OmReference [ '4089' ],		#time : DateAndTime [ '2024-03-03T08:20:58.052-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDrawRectangleApp subclass: #PjDrawRectangleUseDnuApp\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-DrawRectangle\'',				#superclassName : 'PjDrawRectangleApp',				#traitCompositionSource : '{}'			},			#name : #PjDrawRectangleUseDnuApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDrawRectangleUseDnuApp class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDrawRectangleUseDnuApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDrawRectangleUseDnuApp,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-DrawRectangle,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4089' ],		#self : OmReference [ '4090' ],		#time : DateAndTime [ '2024-03-03T08:20:58.053-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDrawRectangleApp subclass: #PjDrawRectangleUseDnuApp\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-DrawRectangle\'',				#superclassName : 'PjDrawRectangleApp',				#traitCompositionSource : '{}'			},			#name : #PjDrawRectangleUseDnuApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDrawRectangleUseDnuApp class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDrawRectangleUseDnuApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDrawRectangleUseDnuApp,					#isMetaSide : false				},				#parent : @8,				#content : 'I implement a minimal browser application.\r\rI am a version that needs a working DNU infrastructure.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-DrawRectangle,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I implement a minimal browser application.\r\rI am a version that needs a working DNU infrastructure.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4090' ],		#self : OmReference [ '4091' ],		#time : DateAndTime [ '2024-03-03T08:20:58.057-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Examples-ChartJS,		#affectedPackageName : #PharoJs-Examples	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4091' ],		#self : OmReference [ '4092' ],		#time : DateAndTime [ '2024-03-03T08:20:58.058-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebApplication subclass: #PjES5vsES6BenchmarkChartsApp\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-ChartJS\'',				#superclassName : 'PjWebApplication',				#traitCompositionSource : '{}'			},			#name : #PjES5vsES6BenchmarkChartsApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjES5vsES6BenchmarkChartsApp class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjES5vsES6BenchmarkChartsApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjES5vsES6BenchmarkChartsApp,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-ChartJS,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4092' ],		#self : OmReference [ '4093' ],		#time : DateAndTime [ '2024-03-03T08:20:58.059-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebApplication subclass: #PjES5vsES6BenchmarkChartsApp\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-ChartJS\'',				#superclassName : 'PjWebApplication',				#traitCompositionSource : '{}'			},			#name : #PjES5vsES6BenchmarkChartsApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjES5vsES6BenchmarkChartsApp class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjES5vsES6BenchmarkChartsApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjES5vsES6BenchmarkChartsApp,					#isMetaSide : false				},				#parent : @8,				#content : 'I provide charts of benchmarks conducted to compare the evolution of the transpiler to generated EcmaScript 6 (ES6) style JS instead of EcmaScript 5 (ES5).\rThese benchmarks were conducted as part of a paper presented at International Workshop on Smalltalk Technology (IWST) colocated with [ESUG 2023 conference](https://esug.github.io/2023-Conference/conf2023.html) in Lyon, France.\r\rCharts are built using [ChartJS](https://www.chartjs.org) a Simple and flexible JavaScript charting framework.\rJust like PharoJS, ChartJS open-source and distributed via GitHub under a MIT License.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-ChartJS,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I provide charts of benchmarks conducted to compare the evolution of the transpiler to generated EcmaScript 6 (ES6) style JS instead of EcmaScript 5 (ES5).\rThese benchmarks were conducted as part of a paper presented at International Workshop on Smalltalk Technology (IWST) colocated with [ESUG 2023 conference](https://esug.github.io/2023-Conference/conf2023.html) in Lyon, France.\r\rCharts are built using [ChartJS](https://www.chartjs.org) a Simple and flexible JavaScript charting framework.\rJust like PharoJS, ChartJS open-source and distributed via GitHub under a MIT License.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4093' ],		#self : OmReference [ '4094' ],		#time : DateAndTime [ '2024-03-03T08:20:58.06-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebApplication subclass: #PjMinimalWebApplication\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-Minimal\'',				#superclassName : 'PjWebApplication',				#traitCompositionSource : '{}'			},			#name : #PjMinimalWebApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMinimalWebApplication class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMinimalWebApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMinimalWebApplication,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-Minimal,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4094' ],		#self : OmReference [ '4095' ],		#time : DateAndTime [ '2024-03-03T08:20:58.061-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebApplication subclass: #PjMinimalWebApplication\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-Minimal\'',				#superclassName : 'PjWebApplication',				#traitCompositionSource : '{}'			},			#name : #PjMinimalWebApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMinimalWebApplication class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMinimalWebApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMinimalWebApplication,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a minimal application that runs in a web browser.\r\rI demonstrate overriding the default html and css, and log to the console.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-Minimal,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a minimal application that runs in a web browser.\r\rI demonstrate overriding the default html and css, and log to the console.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4095' ],		#self : OmReference [ '4096' ],		#time : DateAndTime [ '2024-03-03T08:20:58.062-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjCounter\r\tinstanceVariableNames: \'count\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-Counter\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjCounter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjCounter,						#isMetaSide : false					},					#name : #count,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjCounter class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjCounter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjCounter,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-Counter,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4096' ],		#self : OmReference [ '4097' ],		#time : DateAndTime [ '2024-03-03T08:20:58.078-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjCounterController\r\tinstanceVariableNames: \'counter countDisplay\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-Counter\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjCounterController,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjCounterController,						#isMetaSide : false					},					#name : #counter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjCounterController,						#isMetaSide : false					},					#name : #countDisplay,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjCounterController class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjCounterController class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjCounterController,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-Counter,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4097' ],		#self : OmReference [ '4098' ],		#time : DateAndTime [ '2024-03-03T08:20:58.081-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjUser\r\tinstanceVariableNames: \'name\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-HelloWorld\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjUser,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjUser,						#isMetaSide : false					},					#name : #name,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjUser class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjUser class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjUser,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-HelloWorld,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4098' ],		#self : OmReference [ '4099' ],		#time : DateAndTime [ '2024-03-03T08:20:58.082-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Examples-ThreeJS,		#affectedPackageName : #PharoJs-Examples	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4099' ],		#self : OmReference [ '4100' ],		#time : DateAndTime [ '2024-03-03T08:20:58.083-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'SharedPool subclass: #PjThreeJsGlobals\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'BoxGeometry Mesh MeshBasicMaterial PerspectiveCamera Scene THREE TextureLoader WebGLRenderer\'\r\tpoolDictionaries: \'PjBrowserGlobals\'\r\tpackage: \'PharoJs-Examples-ThreeJS\'',				#superclassName : 'SharedPool',				#traitCompositionSource : '{}'			},			#name : #PjThreeJsGlobals,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjThreeJsGlobals class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjThreeJsGlobals class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjThreeJsGlobals,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjThreeJsGlobals,						#isMetaSide : false					},					#name : #BoxGeometry,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjThreeJsGlobals,						#isMetaSide : false					},					#name : #Mesh,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjThreeJsGlobals,						#isMetaSide : false					},					#name : #MeshBasicMaterial,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjThreeJsGlobals,						#isMetaSide : false					},					#name : #PerspectiveCamera,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjThreeJsGlobals,						#isMetaSide : false					},					#name : #Scene,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjThreeJsGlobals,						#isMetaSide : false					},					#name : #THREE,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjThreeJsGlobals,						#isMetaSide : false					},					#name : #TextureLoader,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjThreeJsGlobals,						#isMetaSide : false					},					#name : #WebGLRenderer,					#parent : @8				}			],			#category : #PharoJs-Examples-ThreeJS,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjThreeJsGlobals,						#isMetaSide : false					},					#name : #PjBrowserGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4100' ],		#self : OmReference [ '4101' ],		#time : DateAndTime [ '2024-03-03T08:20:58.085-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedWebApp subclass: #PjThreeJsDemo\r\tinstanceVariableNames: \'scene camera renderer cube\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjThreeJsGlobals\'\r\tpackage: \'PharoJs-Examples-ThreeJS\'',				#superclassName : 'PjFileBasedWebApp',				#traitCompositionSource : '{}'			},			#name : #PjThreeJsDemo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjThreeJsDemo,						#isMetaSide : false					},					#name : #scene,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjThreeJsDemo,						#isMetaSide : false					},					#name : #camera,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjThreeJsDemo,						#isMetaSide : false					},					#name : #renderer,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjThreeJsDemo,						#isMetaSide : false					},					#name : #cube,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjThreeJsDemo class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjThreeJsDemo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjThreeJsDemo,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-ThreeJS,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjThreeJsDemo,						#isMetaSide : false					},					#name : #PjThreeJsGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4101' ],		#self : OmReference [ '4102' ],		#time : DateAndTime [ '2024-03-03T08:20:58.087-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjFileBasedWebApp subclass: #PjThreeJsDemo\r\tinstanceVariableNames: \'scene camera renderer cube\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjThreeJsGlobals\'\r\tpackage: \'PharoJs-Examples-ThreeJS\'',				#superclassName : 'PjFileBasedWebApp',				#traitCompositionSource : '{}'			},			#name : #PjThreeJsDemo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjThreeJsDemo,						#isMetaSide : false					},					#name : #scene,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjThreeJsDemo,						#isMetaSide : false					},					#name : #camera,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjThreeJsDemo,						#isMetaSide : false					},					#name : #renderer,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjThreeJsDemo,						#isMetaSide : false					},					#name : #cube,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjThreeJsDemo class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjThreeJsDemo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjThreeJsDemo,					#isMetaSide : false				},				#parent : @8,				#content : 'Simple demo of ThreeJS 3D graphics library (https://threejs.org/).\rShows a cube that can be rotated by pressing keyboard arrow keys.\r\r"Transpile to JS"\rPjThreeJsDemo exportApp.\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-ThreeJS,			#package : #PharoJs-Examples,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjThreeJsDemo,						#isMetaSide : false					},					#name : #PjThreeJsGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'Simple demo of ThreeJS 3D graphics library (https://threejs.org/).\rShows a cube that can be rotated by pressing keyboard arrow keys.\r\r"Transpile to JS"\rPjThreeJsDemo exportApp.\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4102' ],		#self : OmReference [ '4103' ],		#time : DateAndTime [ '2024-03-03T08:20:58.385-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjMinimalNodeApplication class',				#isMetaSide : true			},			#name : #start,			#protocol : #'event handling',			#sourceCode : 'start\r\tsuper start.\r\tconsole log: \'this is a minimal Node application\'',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4103' ],		#self : OmReference [ '4104' ],		#time : DateAndTime [ '2024-03-03T08:20:58.628-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjHelloWorldExpressApp class',				#isMetaSide : true			},			#name : #clientAppClasses,			#protocol : #accessing,			#sourceCode : 'clientAppClasses\r\r\t<pharoJsSkip>\r\t^{PjHelloWorldExpressClientApp }',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4104' ],		#self : OmReference [ '4105' ],		#time : DateAndTime [ '2024-03-03T08:20:58.629-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjHelloWorldExpressApp class',				#isMetaSide : true			},			#name : #staticFilesFolderName,			#protocol : #accessing,			#sourceCode : 'staticFilesFolderName\r\t^\'public\'',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4105' ],		#self : OmReference [ '4106' ],		#time : DateAndTime [ '2024-03-03T08:20:58.629-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressApp,				#isMetaSide : false			},			#name : #greetings,			#protocol : #initialization,			#sourceCode : 'greetings\r\r\t^ String streamContents: [ :str | \r\t\t  str << \'ExpressJS says: Hello\'.\r\t\t  self name ifNotNil: [ \r\t\t\t  str\r\t\t\t\t  space;\r\t\t\t\t  << self name ].\r\t\t  str << $! ]',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4106' ],		#self : OmReference [ '4107' ],		#time : DateAndTime [ '2024-03-03T08:20:58.629-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressApp,				#isMetaSide : false			},			#name : #'handlePostNameRequest:response:',			#protocol : #handlers,			#sourceCode : 'handlePostNameRequest: req response: res\r\r\t"See \r\tRequest doc https://expressjs.com/en/4x/api.html#req\r\tResponse doc https://expressjs.com/en/4x/api.html#res"\r\r\tself name: req body.\r\tres send: self name',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4107' ],		#self : OmReference [ '4108' ],		#time : DateAndTime [ '2024-03-03T08:20:58.629-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressApp,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\r\tsuper initialize.\r\tself serveStaticFilesIn: self staticFilesFolderName.\r\tserver get: \'/name\' handler: [ :req :res | res send: self name ].\r\tserver\r\t\tpost: \'/name\'\r\t\thandler: [ :req :res | \r\t\tself handlePostNameRequest: req response: res ].\r\tserver\r\t\tget: \'/greetings\'\r\t\thandler: [ :req :res | res send: self greetings ]',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4108' ],		#self : OmReference [ '4109' ],		#time : DateAndTime [ '2024-03-03T08:20:58.629-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressApp,				#isMetaSide : false			},			#name : #name,			#protocol : #accessing,			#sourceCode : 'name\r\r\t^ name',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4109' ],		#self : OmReference [ '4110' ],		#time : DateAndTime [ '2024-03-03T08:20:58.629-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressApp,				#isMetaSide : false			},			#name : #'name:',			#protocol : #accessing,			#sourceCode : 'name: anObject\r\r\tname := anObject',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4110' ],		#self : OmReference [ '4111' ],		#time : DateAndTime [ '2024-03-03T08:20:58.63-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressApp,				#isMetaSide : false			},			#name : #staticFilesFolderName,			#protocol : #initialization,			#sourceCode : 'staticFilesFolderName\r\t^self class staticFilesFolderName',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4111' ],		#self : OmReference [ '4112' ],		#time : DateAndTime [ '2024-03-03T08:20:58.63-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PhysicsSim class',				#isMetaSide : true			},			#name : #appJsSubFolder,			#protocol : #description,			#sourceCode : 'appJsSubFolder\r\t<pharoJsSkip>\r\t^#js',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4112' ],		#self : OmReference [ '4113' ],		#time : DateAndTime [ '2024-03-03T08:20:58.63-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhysicsSim,				#isMetaSide : false			},			#name : #addInitialBodies,			#protocol : #'initialize - release',			#sourceCode : 'addInitialBodies\r\t| boxA boxB ground |\r\tboxA := self matterJsRoot Bodies rectangle: 400 y: 200 width: 80 height: 80.\r\tboxB := self matterJsRoot Bodies rectangle: 450 y: 50 width: 80 height: 80.\r\tground := self matterJsRoot Bodies rectangle: 400 y: 610 width: 810 height: 60 options: {#isStatic -> true} asJsObject.\r\tself matterJsRoot World add: engine world bodies: { boxA. boxB. ground }',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4113' ],		#self : OmReference [ '4114' ],		#time : DateAndTime [ '2024-03-03T08:20:58.63-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhysicsSim,				#isMetaSide : false			},			#name : #bodies,			#protocol : #accessing,			#sourceCode : 'bodies\r\t^ engine world bodies',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4114' ],		#self : OmReference [ '4115' ],		#time : DateAndTime [ '2024-03-03T08:20:58.63-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhysicsSim,				#isMetaSide : false			},			#name : #createAndStartEngine,			#protocol : #'initialize - release',			#sourceCode : 'createAndStartEngine\r\t| runner |\r\tengine := self matterJsRoot Engine create.\r\trunner := self matterJsRoot Runner create.\r\tself matterJsRoot Runner run: runner with: engine',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4115' ],		#self : OmReference [ '4116' ],		#time : DateAndTime [ '2024-03-03T08:20:58.63-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhysicsSim,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'initialize - release',			#sourceCode : 'initialize\r\tsuper initialize.\r\tself createAndStartEngine.\r\tself setupAndStartRendering.\r\tself addInitialBodies.\r\tself onClick: #resetButton do: [ \r\t\tself matterJsRoot World clear: engine world keepStatic: true]',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4116' ],		#self : OmReference [ '4117' ],		#time : DateAndTime [ '2024-03-03T08:20:58.63-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhysicsSim,				#isMetaSide : false			},			#name : #matterJsRoot,			#protocol : #'initialize - release',			#sourceCode : 'matterJsRoot\r\t^ window Matter',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4117' ],		#self : OmReference [ '4118' ],		#time : DateAndTime [ '2024-03-03T08:20:58.631-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhysicsSim,				#isMetaSide : false			},			#name : #setupAndStartRendering,			#protocol : #'initialize - release',			#sourceCode : 'setupAndStartRendering\r\t| render simulationView |\r\tsimulationView := self elementAt: #simulationView.\r\trender := self matterJsRoot Render create: \r\t\t{#element -> simulationView.\r\t\t#engine -> engine.\r\t\t#options -> {#width -> 800.\r\t\t\t\t\t#height -> 600.\r\t\t\t\t\t#wireframes -> false.\r\t\t\t\t\t#background -> \'transparent\'}} asJsObject.\r\tself matterJsRoot Render run: render',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4118' ],		#self : OmReference [ '4119' ],		#time : DateAndTime [ '2024-03-03T08:20:58.631-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCounterBrowserApp class',				#isMetaSide : true			},			#name : #appClasses,			#protocol : #description,			#sourceCode : 'appClasses\r\t<pharoJsSkip>\r\t^super appClasses, {PjCounter. PjCounterController}',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4119' ],		#self : OmReference [ '4120' ],		#time : DateAndTime [ '2024-03-03T08:20:58.631-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCounterBrowserApp class',				#isMetaSide : true			},			#name : #appJsSubFolder,			#protocol : #description,			#sourceCode : 'appJsSubFolder\r\t^\'js\'',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4120' ],		#self : OmReference [ '4121' ],		#time : DateAndTime [ '2024-03-03T08:20:58.631-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounterBrowserApp,				#isMetaSide : false			},			#name : #countDisplay,			#protocol : #accessing,			#sourceCode : 'countDisplay\r\t^ self elementAt: \'countDisplay\'',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4121' ],		#self : OmReference [ '4122' ],		#time : DateAndTime [ '2024-03-03T08:20:58.631-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounterBrowserApp,				#isMetaSide : false			},			#name : #incrementButton,			#protocol : #accessing,			#sourceCode : 'incrementButton\r\t^ self elementAt: \'incrementButton\'',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4122' ],		#self : OmReference [ '4123' ],		#time : DateAndTime [ '2024-03-03T08:20:58.631-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounterBrowserApp,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tsuper initialize.\r\tcounter := PjCounter new.\r\tcontroller := PjCounterController new.\r\tcontroller counter: counter.\r\tcontroller countDisplay: self countDisplay.\r\tself resetButton addEventListener: #click block: [ controller reset ].\r\tself incrementButton addEventListener: #click block: [ controller increment ]',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4123' ],		#self : OmReference [ '4124' ],		#time : DateAndTime [ '2024-03-03T08:20:58.631-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounterBrowserApp,				#isMetaSide : false			},			#name : #resetButton,			#protocol : #accessing,			#sourceCode : 'resetButton\r\t^ self elementAt: \'resetButton\'',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4124' ],		#self : OmReference [ '4125' ],		#time : DateAndTime [ '2024-03-03T08:20:58.632-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDisjointForceDirectedGraphExample,				#isMetaSide : false			},			#name : #addMouseActions,			#protocol : #initialization,			#sourceCode : 'addMouseActions\r\tsvgNodes on: \'click\' do: [ : event | self onClick: event].\r\tsvgNodes call: self onDrag.',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4125' ],		#self : OmReference [ '4126' ],		#time : DateAndTime [ '2024-03-03T08:20:58.632-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDisjointForceDirectedGraphExample,				#isMetaSide : false			},			#name : #'createSimulationWith:',			#protocol : #initialization,			#sourceCode : 'createSimulationWith: data\r\t| forceId distance strength |\r\tdataNodes := data result nodes.\r\tdataLinks := data result links.\r\tsimulation := d3 forceSimulation: dataNodes.\r\tforceId := (d3 forceLink: dataLinks) id: [: d | d id].\r\tdistance := forceId distance: [ : d  | 1.0 / d score].\r\tstrength := distance strength: [ : d | d score ].\r\tsimulation force: \'link\' with: strength.\r \tsimulation force: \'charge\' with: d3 forceManyBody.\r   simulation force: \'center\' with: d3 forceCenter.',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4126' ],		#self : OmReference [ '4127' ],		#time : DateAndTime [ '2024-03-03T08:20:58.632-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDisjointForceDirectedGraphExample,				#isMetaSide : false			},			#name : #createSvg,			#protocol : #initialization,			#sourceCode : 'createSvg\r\t| obj |\r\tsvg := d3 create: \'svg\'.\r\tsvg attr: \'preserveAspectRatio\' with: \'xMidYMid meet\'.\r   obj := (svg append: \'g\').\r\tobj := obj attr: \'stroke\' with: \'#999\'.\r\tobj := obj attr: \'stroke-opacity\' with: 0.8.\r\tobj := obj selectAll: \'line\'.\r\tobj := obj data: dataLinks.\r\tobj := obj join: \'line\'.\r\tsvgLinks := obj attr: \'stroke-width\' with: [ : d | d score * 7.0 ].\r\tobj :=  svg append: \'g\'.\r\tobj := obj attr: \'stroke\' with: \'#fff\'.\r\tobj := obj attr: \'stroke-opacity\' with: 0.5.\r\tobj := obj selectAll: \'circle\'.\r\tobj := obj data: dataNodes.\r\tobj := obj join: \'circle\'.\r\tobj := obj attr: \'r\' with: 5.\r\tsvgNodes := obj attr: \'fill\' with: [self randomColor].',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4127' ],		#self : OmReference [ '4128' ],		#time : DateAndTime [ '2024-03-03T08:20:58.632-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDisjointForceDirectedGraphExample,				#isMetaSide : false			},			#name : #d3,			#protocol : #initialization,			#sourceCode : 'd3\r\t^d3',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4128' ],		#self : OmReference [ '4129' ],		#time : DateAndTime [ '2024-03-03T08:20:58.632-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDisjointForceDirectedGraphExample,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsuper initialize.\r\t(d3 json: \'graph.json\')\r\t\tthen: [ :data | \r\t\t\t| node |\r\t\t\tself createSimulationWith: data.\r\t\t\tself createSvg.\r\t\t\tself addMouseActions.\r\t\t\tnode := svg node.\r\t\t\tdocument body append: node.\r\t\t\tsimulation\r\t\t\t\ton: #tick\r\t\t\t\tdo: [ self updateDisplay ] ]',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4129' ],		#self : OmReference [ '4130' ],		#time : DateAndTime [ '2024-03-03T08:20:58.632-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDisjointForceDirectedGraphExample,				#isMetaSide : false			},			#name : #'maxOf:',			#protocol : #accessing,			#sourceCode : 'maxOf: aCollection\r\t<javascript: \'return Math.max(...aCollection)\'>',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4130' ],		#self : OmReference [ '4131' ],		#time : DateAndTime [ '2024-03-03T08:20:58.632-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDisjointForceDirectedGraphExample,				#isMetaSide : false			},			#name : #'minOf:',			#protocol : #accessing,			#sourceCode : 'minOf: aCollection\r\t<javascript: \'return Math.min(...aCollection)\'>',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4131' ],		#self : OmReference [ '4132' ],		#time : DateAndTime [ '2024-03-03T08:20:58.632-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDisjointForceDirectedGraphExample,				#isMetaSide : false			},			#name : #'onClick:',			#protocol : #initialization,			#sourceCode : 'onClick: event\r\t| clickedNode index |\r\tclickedNode := event target.\r\tindex := clickedNode parentNode children indexOf: clickedNode. \r\twindow alert: (dataNodes at: index) title.',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4132' ],		#self : OmReference [ '4133' ],		#time : DateAndTime [ '2024-03-03T08:20:58.633-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDisjointForceDirectedGraphExample,				#isMetaSide : false			},			#name : #onDrag,			#protocol : #initialization,			#sourceCode : 'onDrag\r\t| dragStarted dragged dragEnded obj |\r\tdragStarted := [: event |\r\t\tevent active ifFalse: [ (simulation alphaTarget: 0.3) restart ].\r\t\tevent subject at: #fx put: event  subject x.\r\t\tevent subject at: #fy put: event  subject y.\r   ].\r  \tdragged := [: event| \r\t\tevent subject at: #fx put: event x.\r\t\tevent subject at: #fy put: event y.\r \t].              \r   dragEnded := [: event| \r\t\tevent active ifFalse: [simulation alphaTarget: 0].\r\t\tevent subject fx: nil.\r\t\tevent subject fy: nil.\r\t].\r\tobj := d3 drag.\r\tobj := obj on: \'start\' with: dragStarted.\r\tobj := obj on: \'drag\' with: dragged.\r\t^obj on: \'end\' with: dragEnded',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4133' ],		#self : OmReference [ '4134' ],		#time : DateAndTime [ '2024-03-03T08:20:58.633-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDisjointForceDirectedGraphExample,				#isMetaSide : false			},			#name : #randomColor,			#protocol : #initialization,			#sourceCode : 'randomColor\r\t| colors randomIndex |\r\tcolors := #(pink red blue green yellow orange purple).\r\trandomIndex := self randomIndexOf: colors.\r\t^colors at: randomIndex',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4134' ],		#self : OmReference [ '4135' ],		#time : DateAndTime [ '2024-03-03T08:20:58.633-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDisjointForceDirectedGraphExample,				#isMetaSide : false			},			#name : #'randomIndexOf:',			#protocol : #initialization,			#sourceCode : 'randomIndexOf: aCollection\r\t<javascript: \'let min = 1;\r  let max = aCollection.length;\r  return Math.floor(Math.random() * (max - min) + min);\'>',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4135' ],		#self : OmReference [ '4136' ],		#time : DateAndTime [ '2024-03-03T08:20:58.633-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDisjointForceDirectedGraphExample,				#isMetaSide : false			},			#name : #updateDisplay,			#protocol : #initialization,			#sourceCode : 'updateDisplay\r\t| nodes_x nodes_y min_x min_y w h |\r\tsvgLinks\r\t\tattr: \'x1\' with: [: d | d source x];\r\t\tattr: \'y1\' with: [: d | d source y];\r\t\tattr: \'x2\' with: [: d | d target x];\r\t\tattr: \'y2\' with: [: d | d target y].\r\r\tsvgNodes\r\t\tattr: \'cx\' with: [: d | d x];\r\t\tattr: \'cy\' with: [: d | d y].\r \tnodes_x := dataNodes map: [: d | d x].\r \tnodes_y := dataNodes map: [: d | d y].\r\tmin_x := (self minOf: nodes_x) - 10.\r\tmin_y := (self minOf: nodes_y) - 10.\r\tw := (self maxOf: nodes_x)  - min_x + 10.\r\th := (self maxOf: nodes_y)  - min_y + 10.\r   svg attr: \'viewBox\' bounds: {min_x. min_y. w. h}.',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4136' ],		#self : OmReference [ '4137' ],		#time : DateAndTime [ '2024-03-03T08:20:58.633-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjHelloWorldApp class',				#isMetaSide : true			},			#name : #appClasses,			#protocol : #description,			#sourceCode : 'appClasses\r\t<pharoJsSkip>\r\t^super appClasses, { PjUser }',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4137' ],		#self : OmReference [ '4138' ],		#time : DateAndTime [ '2024-03-03T08:20:58.633-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldApp,				#isMetaSide : false			},			#name : #start,			#protocol : #initialize-release,			#sourceCode : 'start\r\t| nameInput sayHelloButton greetingMessageContainer |\r\tsuper start.\r\tuser := PjUser new.\r\tnameInput := document getElementById: #nameTextInput.\r\tsayHelloButton := document getElementById: #sayHelloButton.\r\tnameInput addEventListener: #change block: [ user name: nameInput value ].\r\tgreetingMessageContainer := document getElementById: #greetingMessageContainer.\r\tsayHelloButton addEventListener: #click block: [ greetingMessageContainer innerHTML: \'Hello \' , user name ]',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4138' ],		#self : OmReference [ '4139' ],		#time : DateAndTime [ '2024-03-03T08:20:58.634-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjHelloWorldExpressClientApp class',				#isMetaSide : true			},			#name : #serverAppClass,			#protocol : #accessing,			#sourceCode : 'serverAppClass\r\r\t<pharoJsSkip>\r\t^ self explicitRequirement ',			#stamp : '',			#package : #PharoJs-Base-App		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjHelloWorldExpressClientApp class',				#isMetaSide : true			},			#name : #serverAppClass,			#protocol : #accessing,			#sourceCode : 'serverAppClass\r\r\t<pharoJsSkip>\r\t^ PjHelloWorldExpressApp',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4139' ],		#self : OmReference [ '4140' ],		#time : DateAndTime [ '2024-03-03T08:20:58.635-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjHelloWorldExpressClientApp class',				#isMetaSide : true			},			#name : #serverAppClass,			#protocol : #exporting,			#sourceCode : 'serverAppClass\r\r\t<pharoJsSkip>\r\t^ PjHelloWorldExpressApp',			#stamp : '',			#package : #PharoJs-Examples		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjHelloWorldExpressClientApp class',				#isMetaSide : true			},			#name : #serverAppClass,			#protocol : #accessing,			#sourceCode : 'serverAppClass\r\r\t<pharoJsSkip>\r\t^ PjHelloWorldExpressApp',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4140' ],		#self : OmReference [ '4141' ],		#time : DateAndTime [ '2024-03-03T08:20:58.635-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressClientApp,				#isMetaSide : false			},			#name : #'greetings:',			#protocol : #acting,			#sourceCode : 'greetings: aString\r\tself greetingsContainer textContent: aString',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4141' ],		#self : OmReference [ '4142' ],		#time : DateAndTime [ '2024-03-03T08:20:58.635-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressClientApp,				#isMetaSide : false			},			#name : #greetingsContainer,			#protocol : #accessing,			#sourceCode : 'greetingsContainer\r\t^self elementAt: #greetingsMessageContainer',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4142' ],		#self : OmReference [ '4143' ],		#time : DateAndTime [ '2024-03-03T08:20:58.635-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressClientApp,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\r\tsuper initialize.\r\tself\r\t\tonClickElement: self updateGreetingsButton\r\t\tdo: [ self updateGreetings ].\r\tself onClickElement: self setNameButton do: [ self setName ]',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4143' ],		#self : OmReference [ '4144' ],		#time : DateAndTime [ '2024-03-03T08:20:58.635-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressClientApp,				#isMetaSide : false			},			#name : #nameInput,			#protocol : #accessing,			#sourceCode : 'nameInput\r\r\t^ self elementAt: #nameTextInput',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4144' ],		#self : OmReference [ '4145' ],		#time : DateAndTime [ '2024-03-03T08:20:58.636-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressClientApp,				#isMetaSide : false			},			#name : #setName,			#protocol : #acting,			#sourceCode : 'setName\r\r\t| providedName |\r\tprovidedName := self nameInput value.\r\tprovidedName size < 2 ifTrue: [ \r\t\t^ window alert: \'Please provide a name with at least 2 characters\' ].\r\t(window fetch: \'/name\' with: { (#method -> \'POST\'). #body -> providedName } asJsObject) \r\t\tthen: [ :response | self setNameResponse: response ]',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4145' ],		#self : OmReference [ '4146' ],		#time : DateAndTime [ '2024-03-03T08:20:58.636-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressClientApp,				#isMetaSide : false			},			#name : #setNameButton,			#protocol : #accessing,			#sourceCode : 'setNameButton\r\r\t^self elementAt: #setNameButton',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4146' ],		#self : OmReference [ '4147' ],		#time : DateAndTime [ '2024-03-03T08:20:58.636-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressClientApp,				#isMetaSide : false			},			#name : #'setNameResponse:',			#protocol : #acting,			#sourceCode : 'setNameResponse: response\r\tresponse ok ifFalse: [ ^window alert: \'Setting name failed!\' ].\r\tself nameInput value: \'\'.\r\tself updateGreetings',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4147' ],		#self : OmReference [ '4148' ],		#time : DateAndTime [ '2024-03-03T08:20:58.637-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressClientApp,				#isMetaSide : false			},			#name : #updateGreetings,			#protocol : #acting,			#sourceCode : 'updateGreetings\r\r\t(window fetch: \'/greetings\') then: [ :response | \r\t\tresponse text then: [ :value | self greetings: value ] ]',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4148' ],		#self : OmReference [ '4149' ],		#time : DateAndTime [ '2024-03-03T08:20:58.637-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressClientApp,				#isMetaSide : false			},			#name : #updateGreetingsButton,			#protocol : #accessing,			#sourceCode : 'updateGreetingsButton\r\r\t^self elementAt: #updateGreetingsButton',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4149' ],		#self : OmReference [ '4150' ],		#time : DateAndTime [ '2024-03-03T08:20:58.637-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjHtmlGeneratingCounterApp class',				#isMetaSide : true			},			#name : #pharoJsSelectorPrefix,			#protocol : #accessing,			#sourceCode : 'pharoJsSelectorPrefix\r\t<pharoJsSkip>\r\t^  \'_\'',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4150' ],		#self : OmReference [ '4151' ],		#time : DateAndTime [ '2024-03-03T08:20:58.637-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGeneratingCounterApp,				#isMetaSide : false			},			#name : #buttonsSharedCss,			#protocol : #initialize-release,			#sourceCode : 'buttonsSharedCss\r\t^ {\r\t#border -> \'none\'.\r\t#padding -> \'15px 32px\'.\r\t#textAlign -> \'center\'.\r\t#textDecoration -> \'none\'.\r\t#display -> \'inline-block\'.\r\t#fontSize -> \'16px\'}',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4151' ],		#self : OmReference [ '4152' ],		#time : DateAndTime [ '2024-03-03T08:20:58.637-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGeneratingCounterApp,				#isMetaSide : false			},			#name : #containerCss,			#protocol : #initialize-release,			#sourceCode : 'containerCss\r\t^ {\r\t#width -> \'100%\'.\r\t#textAlign -> \'center\'.\r\t#backgroundColor -> \'#ddffdd\'.\r\t#padding -> \'50px\'.\r\t#boxSizing -> \'border-box\'}',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4152' ],		#self : OmReference [ '4153' ],		#time : DateAndTime [ '2024-03-03T08:20:58.637-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGeneratingCounterApp,				#isMetaSide : false			},			#name : #count,			#protocol : #accessing,			#sourceCode : 'count\r\t^ count',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4153' ],		#self : OmReference [ '4154' ],		#time : DateAndTime [ '2024-03-03T08:20:58.637-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGeneratingCounterApp,				#isMetaSide : false			},			#name : #'count:',			#protocol : #accessing,			#sourceCode : 'count: newCount\r\tcount := newCount.\r\tcountDisplay innerHTML: newCount',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4154' ],		#self : OmReference [ '4155' ],		#time : DateAndTime [ '2024-03-03T08:20:58.638-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGeneratingCounterApp,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\t| container incrementButton decrementButton |\r\tsuper initialize.\r\tcontainer := self addElement: \'div\' style: self containerCss.\r\tcountDisplay := self addElement: \'div\' to: container style: {#fontSize -> \'300%\'}.\r\tself addElement: \'br\' to: container.\r\tincrementButton := self addElement: \'button\' to: container style: self buttonsSharedCss.\r\tincrementButton innerHTML: \'Increment\'.\r\tself setElement: incrementButton style: {#backgroundColor -> \'#ccf5ff\'}.\r\tself onClickElement: incrementButton do: [ self count: self count + 1 ].\r\tdecrementButton := self addElement: \'button\' to: container style: self buttonsSharedCss.\r\tdecrementButton innerHTML: \'Decrement\'.\r\tself onClickElement: decrementButton do: [ self count: self count - 1 ].\r\tself setElement: decrementButton style: {#backgroundColor -> \'#ffe6e6\'}.\r\tself count: 0',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4155' ],		#self : OmReference [ '4156' ],		#time : DateAndTime [ '2024-03-03T08:20:58.638-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDrawRectangleApp,				#isMetaSide : false			},			#name : #onLoad,			#protocol : #'event handling',			#sourceCode : 'onLoad',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4156' ],		#self : OmReference [ '4157' ],		#time : DateAndTime [ '2024-03-03T08:20:58.638-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDrawRectangleApp,				#isMetaSide : false			},			#name : #start,			#protocol : #'event handling',			#sourceCode : 'start\r\tsuper start.\r\tself setupDOM',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4157' ],		#self : OmReference [ '4158' ],		#time : DateAndTime [ '2024-03-03T08:20:58.638-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDrawRectangleNoDnuApp,				#isMetaSide : false			},			#name : #setupDOM,			#protocol : #'initialize - release',			#sourceCode : 'setupDOM\r\trectangle := document js_createElement: \'div\'.\r\trectangle js_at:#id put: \'grn\'.\r\tcolour := \'green\'.\r\t(rectangle js_at:#style)\r\t\tjs_at:#backgroundColor put: colour;\r\t\tjs_at:#height put: 3cm;\r\t\tjs_at:#width put: 3cm;\r\t\tjs_at:#margin put: -1.5cm;\r\t\tjs_at:#position put: #absolute;\r\t\tjs_at:#left put: 100px;\r\t\tjs_at:#top put: 150px.\r\trectangle js_at:#innerHTML put: \'Clck to \',\'\' capitalized,\'change\' capitalized,\' colour\'.\r\trectangle js_addEventListener: #click block: [ : ev |\r\t\tcolour = \'green\' ifTrue: [\r\t\t\tcolour := \'pink\'.\r\t\t\t(rectangle js_at:#style) js_at:#backgroundColor put: colour\r\t\t] ifFalse: [\r\t\t\tcolour = \'pink\' ifTrue: [\r\t\t\t\tcolour := \'yellow\'.\r\t\t\t(rectangle js_at:#style) js_at:#backgroundColor put: colour\r\t\t\t] ifFalse: [\r"\t\t\t\tself flag: \'TODO: firefox requires the listener in removeEventListener\'.\r"\t\t\t\t(document js_at:#body) js_removeChild: rectangle.\r\t\t\t\tself stop\r\t\t]]\r\t].\r\r\t(document js_at:#body)\r\t\tjs_appendChild: rectangle;\r\t\tjs_addEventListener: #click block: [ : ev | | x y |\r\t\t\tx := ev js_at:#pageX.\r\t\t\ty := ev js_at:#pageY.\r\t\t\t(rectangle js_at:#style)\r\t\t\t\tjs_at:#left put: x px;\r\t\t\t\tjs_at:#top put: y px\r\t\t]',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4158' ],		#self : OmReference [ '4159' ],		#time : DateAndTime [ '2024-03-03T08:20:58.638-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDrawRectangleNoDnuApp,				#isMetaSide : false			},			#name : #subscribeToDeviceEvents,			#protocol : #'initialize - release',			#sourceCode : 'subscribeToDeviceEvents\r\t" Bind any events that are required on startup. Common events are:\r    \t \'load\', \'deviceready\', \'offline\', and \'online\'."\r\tsuper subscribeToDeviceEvents.\r\tdocument js_addEventListener: \'load\' block: [: ev | self onLoad].',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4159' ],		#self : OmReference [ '4160' ],		#time : DateAndTime [ '2024-03-03T08:20:58.638-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDrawRectangleUseDnuApp,				#isMetaSide : false			},			#name : #setupDOM,			#protocol : #'initialize - release',			#sourceCode : 'setupDOM\r\trectangle := document createElement: \'div\'.\r\trectangle id: \'grn\'.\r\tcolour := \'green\'.\r\trectangle style \r\t\tbackgroundColor: colour;\r\t\theight: 3cm;\r\t\twidth: 3cm;\r\t\tmargin: -1.5cm;\r\t\tposition: #absolute;\r\t\tleft: 100px;\r\t\ttop: 150px.\r\trectangle innerHTML: \'Clck to change colour\'.\r\trectangle addEventListener: #click block: [ : ev |\r\t\tcolour = \'green\' ifTrue: [\r\t\t\tcolour := \'pink\'.\r\t\t\trectangle style backgroundColor: colour\r\t\t] ifFalse: [\r\t\t\tcolour = \'pink\' ifTrue: [\r\t\t\t\tcolour := \'yellow\'.\r\t\t\t\trectangle style backgroundColor: colour\r\t\t\t] ifFalse: [\r\t\t\t\tself flag: \'TODO: firefox requires the listener in removeEventListener\'.\r\t\t\t\tdocument body removeChild: rectangle.\r\t\t\t\tself stop\r\t\t]]\r\t].\r\r\tdocument body\r\t\tappendChild: rectangle;\r\t\taddEventListener: #click block: [ : ev | | x y |\r\t\t\tx := ev pageX.\r\t\t\ty := ev pageY.\r\t\t\trectangle style\r\t\t\t\tleft: x px;\r\t\t\t\ttop: y px\r\t\t]',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4160' ],		#self : OmReference [ '4161' ],		#time : DateAndTime [ '2024-03-03T08:20:58.639-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDrawRectangleUseDnuApp,				#isMetaSide : false			},			#name : #subscribeToDeviceEvents,			#protocol : #'initialize - release',			#sourceCode : 'subscribeToDeviceEvents\r\t" Bind any events that are required on startup. Common events are:\r    \t \'load\', \'deviceready\', \'offline\', and \'online\'."\r\tsuper subscribeToDeviceEvents.\r\tdocument addEventListener: \'load\' block: [: ev | self onLoad].',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4161' ],		#self : OmReference [ '4162' ],		#time : DateAndTime [ '2024-03-03T08:20:58.639-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjES5vsES6BenchmarkChartsApp class',				#isMetaSide : true			},			#name : #appJsSubFolder,			#protocol : #accessing,			#sourceCode : 'appJsSubFolder\r\t<pharoJsSkip>\r\t^ #js',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4162' ],		#self : OmReference [ '4163' ],		#time : DateAndTime [ '2024-03-03T08:20:58.639-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjES5vsES6BenchmarkChartsApp class',				#isMetaSide : true			},			#name : #bridgeClientClass,			#protocol : #accessing,			#sourceCode : 'bridgeClientClass\r\t<pharoJsSkip>\r\t^ PjBridgeServedFileBasedBrowserBridgeClient',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4163' ],		#self : OmReference [ '4164' ],		#time : DateAndTime [ '2024-03-03T08:20:58.639-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjES5vsES6BenchmarkChartsApp,				#isMetaSide : false			},			#name : #'chartCSV:',			#protocol : #initialization,			#sourceCode : 'chartCSV: csvString\r\r\t| canvas data |\r\tcanvas := self addElement: \'canvas\'.\r\tdata := window Papa parse: csvString , { \r\t\t\t                (#header -> true) } asJsObject.\r\tconsole log: data',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4164' ],		#self : OmReference [ '4165' ],		#time : DateAndTime [ '2024-03-03T08:20:58.639-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjES5vsES6BenchmarkChartsApp,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\r\t| canvas data |\r\tsuper initialize.\r\tcanvas := self addElement: \'canvas\'.\r\tdata := { \r\t\t        { \r\t\t\t        (#year -> 2010).\r\t\t\t        (#count -> 10) }.\r\t\t        { \r\t\t\t        (#year -> 2011).\r\t\t\t        (#count -> 20) }.\r\t\t        { \r\t\t\t        (#year -> 2012).\r\t\t\t        (#count -> 15) }.\r\t\t        { \r\t\t\t        (#year -> 2013).\r\t\t\t        (#count -> 25) }.\r\t\t        { \r\t\t\t        (#year -> 2014).\r\t\t\t        (#count -> 22) }.\r\t\t        { \r\t\t\t        (#year -> 2015).\r\t\t\t        (#count -> 30) }.\r\t\t        { \r\t\t\t        (#year -> 2016).\r\t\t\t        (#count -> 28) } } asJsObject.\r\tself newChartIn: canvas config: { \r\t\t\t(#type -> \'bar\').\r\t\t\t(#data -> { \r\t\t\t\t (#labels -> (data collect: [ :row | row year ])).\r\t\t\t\t (#datasets -> { { \r\t\t\t\t\t  (#label -> \'Acquisitions by year\').\r\t\t\t\t\t  (#data -> (data collect: [ :row | row count ])) } }) }) }\r\t\t\tasJsObject',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4165' ],		#self : OmReference [ '4166' ],		#time : DateAndTime [ '2024-03-03T08:20:58.639-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjES5vsES6BenchmarkChartsApp,				#isMetaSide : false			},			#name : #initializeNew,			#protocol : #initialization,			#sourceCode : 'initializeNew\r\r\tsuper initialize.\r\t(window fetch: \'data/loadTime.csv\')\r\t\tthen: [ :response | \r\t\t\tresponse text then: [ :text | self chartCSV: text ] ];\r\t\tcatch: [ :err | console log: err ]',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4166' ],		#self : OmReference [ '4167' ],		#time : DateAndTime [ '2024-03-03T08:20:58.64-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjES5vsES6BenchmarkChartsApp,				#isMetaSide : false			},			#name : #initializeOLD,			#protocol : #initialization,			#sourceCode : 'initializeOLD\r\r\t| canvas data |\r\tsuper initialize.\r\tcanvas := self addElement: \'canvas\'.\r\tdata := { \r\t\t        { \r\t\t\t        (#year -> 2010).\r\t\t\t        (#count -> 10) }.\r\t\t        { \r\t\t\t        (#year -> 2011).\r\t\t\t        (#count -> 20) }.\r\t\t        { \r\t\t\t        (#year -> 2012).\r\t\t\t        (#count -> 15) }.\r\t\t        { \r\t\t\t        (#year -> 2013).\r\t\t\t        (#count -> 25) }.\r\t\t        { \r\t\t\t        (#year -> 2014).\r\t\t\t        (#count -> 22) }.\r\t\t        { \r\t\t\t        (#year -> 2015).\r\t\t\t        (#count -> 30) }.\r\t\t        { \r\t\t\t        (#year -> 2016).\r\t\t\t        (#count -> 28) } } asJsObject.\r\tself newChartIn: canvas config: { \r\t\t\t(#type -> \'bar\').\r\t\t\t(#data -> { \r\t\t\t\t (#labels -> (data collect: [ :row | row year ])).\r\t\t\t\t (#datasets -> { { \r\t\t\t\t\t  (#label -> \'Acquisitions by year\').\r\t\t\t\t\t  (#data -> (data collect: [ :row | row count ])) } }) }) }\r\t\t\tasJsObject',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4167' ],		#self : OmReference [ '4168' ],		#time : DateAndTime [ '2024-03-03T08:20:58.64-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjES5vsES6BenchmarkChartsApp,				#isMetaSide : false			},			#name : #'newChartIn:config:',			#protocol : #'instance creation',			#sourceCode : 'newChartIn: containerDom config: chartConfig\r\r\t<javascript: \'return new Chart(containerDom, chartConfig)\'>\r\t',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4168' ],		#self : OmReference [ '4169' ],		#time : DateAndTime [ '2024-03-03T08:20:58.64-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjMinimalWebApplication class',				#isMetaSide : true			},			#name : #css,			#protocol : #'pharojs support',			#sourceCode : 'css\r\t^ \'body{color:blue}\'',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4169' ],		#self : OmReference [ '4170' ],		#time : DateAndTime [ '2024-03-03T08:20:58.64-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjMinimalWebApplication class',				#isMetaSide : true			},			#name : #'log:',			#protocol : #'event handling',			#sourceCode : 'log: message\r\tconsole log: message',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4170' ],		#self : OmReference [ '4171' ],		#time : DateAndTime [ '2024-03-03T08:20:58.64-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjMinimalWebApplication class',				#isMetaSide : true			},			#name : #start,			#protocol : #'event handling',			#sourceCode : 'start\r\tsuper start.\r\tconsole log: \'this is a minimal Browser application\'',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4171' ],		#self : OmReference [ '4172' ],		#time : DateAndTime [ '2024-03-03T08:20:58.64-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounter,				#isMetaSide : false			},			#name : #count,			#protocol : #accessing,			#sourceCode : 'count\r\t^ count',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4172' ],		#self : OmReference [ '4173' ],		#time : DateAndTime [ '2024-03-03T08:20:58.64-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounter,				#isMetaSide : false			},			#name : #'count:',			#protocol : #accessing,			#sourceCode : 'count: anObject\r\tcount := anObject',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4173' ],		#self : OmReference [ '4174' ],		#time : DateAndTime [ '2024-03-03T08:20:58.64-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounter,				#isMetaSide : false			},			#name : #increment,			#protocol : #'initialize - release',			#sourceCode : 'increment\r\tself count: self count + 1',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4174' ],		#self : OmReference [ '4175' ],		#time : DateAndTime [ '2024-03-03T08:20:58.64-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounter,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'initialize - release',			#sourceCode : 'initialize\r\tsuper initialize.\r\tself reset',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4175' ],		#self : OmReference [ '4176' ],		#time : DateAndTime [ '2024-03-03T08:20:58.641-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounter,				#isMetaSide : false			},			#name : #reset,			#protocol : #'initialize - release',			#sourceCode : 'reset\r\tself count: 0',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4176' ],		#self : OmReference [ '4177' ],		#time : DateAndTime [ '2024-03-03T08:20:58.641-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounterController,				#isMetaSide : false			},			#name : #countDisplay,			#protocol : #accessing,			#sourceCode : 'countDisplay\r\t^ countDisplay',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4177' ],		#self : OmReference [ '4178' ],		#time : DateAndTime [ '2024-03-03T08:20:58.641-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounterController,				#isMetaSide : false			},			#name : #'countDisplay:',			#protocol : #accessing,			#sourceCode : 'countDisplay: anObject\r\tcountDisplay := anObject',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4178' ],		#self : OmReference [ '4179' ],		#time : DateAndTime [ '2024-03-03T08:20:58.641-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounterController,				#isMetaSide : false			},			#name : #counter,			#protocol : #accessing,			#sourceCode : 'counter\r\t^ counter',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4179' ],		#self : OmReference [ '4180' ],		#time : DateAndTime [ '2024-03-03T08:20:58.641-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounterController,				#isMetaSide : false			},			#name : #'counter:',			#protocol : #accessing,			#sourceCode : 'counter: anObject\r\tcounter := anObject',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4180' ],		#self : OmReference [ '4181' ],		#time : DateAndTime [ '2024-03-03T08:20:58.641-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounterController,				#isMetaSide : false			},			#name : #increment,			#protocol : #actions,			#sourceCode : 'increment\r\tself counter increment.\r\tself updateDisplay',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4181' ],		#self : OmReference [ '4182' ],		#time : DateAndTime [ '2024-03-03T08:20:58.641-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounterController,				#isMetaSide : false			},			#name : #reset,			#protocol : #actions,			#sourceCode : 'reset\r\tself counter reset.\r\tself updateDisplay',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4182' ],		#self : OmReference [ '4183' ],		#time : DateAndTime [ '2024-03-03T08:20:58.641-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounterController,				#isMetaSide : false			},			#name : #updateDisplay,			#protocol : #displaying,			#sourceCode : 'updateDisplay\r\tself countDisplay innerHTML: self counter count',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4183' ],		#self : OmReference [ '4184' ],		#time : DateAndTime [ '2024-03-03T08:20:58.641-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUser,				#isMetaSide : false			},			#name : #name,			#protocol : #accessing,			#sourceCode : 'name\r\t^name',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4184' ],		#self : OmReference [ '4185' ],		#time : DateAndTime [ '2024-03-03T08:20:58.641-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjUser,				#isMetaSide : false			},			#name : #'name:',			#protocol : #accessing,			#sourceCode : 'name: anObject\r\tname := anObject',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4185' ],		#self : OmReference [ '4186' ],		#time : DateAndTime [ '2024-03-03T08:20:58.642-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjThreeJsDemo class',				#isMetaSide : true			},			#name : #appJsSubFolder,			#protocol : #description,			#sourceCode : 'appJsSubFolder\r\t<pharoJsSkip>\r\t^#js',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4186' ],		#self : OmReference [ '4187' ],		#time : DateAndTime [ '2024-03-03T08:20:58.642-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjThreeJsDemo,				#isMetaSide : false			},			#name : #animate,			#protocol : #initialization,			#sourceCode : 'animate\r\r\twindow requestAnimationFrame: [ self animate ].\r\trenderer render: scene camera: camera\r',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4187' ],		#self : OmReference [ '4188' ],		#time : DateAndTime [ '2024-03-03T08:20:58.642-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjThreeJsDemo,				#isMetaSide : false			},			#name : #'handleKeydown:',			#protocol : #initialization,			#sourceCode : 'handleKeydown: keyboardEvent\r\r\t"https://developer.mozilla.org/en-US/docs/Web/API/Element/keydown_event"\r\r\tkeyboardEvent key = \'ArrowRight\' ifTrue: [ ^ self rotateY: 1 ].\r\tkeyboardEvent key = \'ArrowLeft\' ifTrue: [ ^ self rotateY: -1 ].\r\tkeyboardEvent key = \'ArrowUp\' ifTrue: [ ^ self rotateX: -1 ].\r\tkeyboardEvent key = \'ArrowDown\' ifTrue: [ ^ self rotateX: 1 ]\r',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4188' ],		#self : OmReference [ '4189' ],		#time : DateAndTime [ '2024-03-03T08:20:58.642-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjThreeJsDemo,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\r\t| geometry material texture canvasWidth canvasHeight canvas |\r\tsuper initialize.\r\tscene := Scene new.\r\tcanvasWidth := 1024.\r\tcanvasHeight := canvasWidth / 1.6.\r\tcamera := PerspectiveCamera\r\t\t          new: 75\r\t\t          with: canvasWidth / canvasHeight\r\t\t          with: 0.1\r\t\t          with: 1000.\r\trenderer := WebGLRenderer new.\r\trenderer setSize: canvasWidth height: canvasHeight.\r\tdocument body appendChild: renderer domElement.\r\tgeometry := BoxGeometry new: 1 with: 1 with: 1.\r\ttexture := TextureLoader new load:\r\t\t           \'https://pharo.js.org/img/pharoJsBiColorIconWithBorder.jpg\'.\r\tmaterial := MeshBasicMaterial new: { (#map -> texture) } asJsObject.\r\tcube := Mesh new: geometry with: material.\r\tscene add: cube.\r\tcamera position z: 2.\r\tcanvas := document querySelector: \'canvas\'.\r\tcanvas\r\t\tsetAttribute: #tabindex value: 1;\r\t\tfocus;\r\t\taddEventListener: #keydown\r\t\tblock: [ :event | self handleKeydown: event ].\r\tself animate',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4189' ],		#self : OmReference [ '4190' ],		#time : DateAndTime [ '2024-03-03T08:20:58.642-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjThreeJsDemo,				#isMetaSide : false			},			#name : #'rotateX:',			#protocol : #initialization,			#sourceCode : 'rotateX: deltaX\r\r\t| previousRotation newRotation |\r\tpreviousRotation := cube rotation x.\r\tnewRotation := previousRotation + (deltaX * 0.1).\r\tcube rotation x: newRotation',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4190' ],		#self : OmReference [ '4191' ],		#time : DateAndTime [ '2024-03-03T08:20:58.642-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjThreeJsDemo,				#isMetaSide : false			},			#name : #'rotateY:',			#protocol : #initialization,			#sourceCode : 'rotateY: deltaY\r\r\t| previousRotation newRotation |\r\tpreviousRotation := cube rotation y.\r\tnewRotation := previousRotation + (deltaY * 0.1).\r\tcube rotation y: newRotation',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4191' ],		#self : OmReference [ '4192' ],		#time : DateAndTime [ '2024-03-03T08:20:58.642-05:00' ],		#trigger : OmReference [ '4062' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjThreeJsGlobals class',				#isMetaSide : true			},			#name : #javascriptInitialize,			#protocol : #initialization,			#sourceCode : 'javascriptInitialize\r\r\tTHREE := window THREE.\r\tWebGLRenderer := THREE WebGLRenderer.\r\tScene := THREE Scene.\r\tBoxGeometry := THREE BoxGeometry.\r\tMeshBasicMaterial := THREE MeshBasicMaterial.\r\tMesh := THREE Mesh.\r\tPerspectiveCamera := THREE PerspectiveCamera.\r\tTextureLoader := THREE TextureLoader',			#stamp : '',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:58.845-05:00' ],		#prior : OmReference [ '4192' ],		#self : OmReference [ '4193' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-Examples-Tests-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4193' ],		#self : OmReference [ '4194' ],		#time : DateAndTime [ '2024-03-03T08:20:58.871-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Examples-Tests-Counter,		#affectedPackageName : #PharoJs-Examples-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4194' ],		#self : OmReference [ '4195' ],		#time : DateAndTime [ '2024-03-03T08:20:58.874-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjCounterTest\r\tinstanceVariableNames: \'counter\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-Tests-Counter\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PjCounterTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjCounterTest,						#isMetaSide : false					},					#name : #counter,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjCounterTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjCounterTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjCounterTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-Tests-Counter,			#package : #PharoJs-Examples-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4195' ],		#self : OmReference [ '4196' ],		#time : DateAndTime [ '2024-03-03T08:20:58.876-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Examples-Tests-ExpressJS,		#affectedPackageName : #PharoJs-Examples-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4196' ],		#self : OmReference [ '4197' ],		#time : DateAndTime [ '2024-03-03T08:20:58.878-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebServerAppTestCase subclass: #PjHelloWorldExpressAppApiTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-Tests-ExpressJS\'',				#superclassName : 'PjWebServerAppTestCase',				#traitCompositionSource : '{}'			},			#name : #PjHelloWorldExpressAppApiTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjHelloWorldExpressAppApiTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjHelloWorldExpressAppApiTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjHelloWorldExpressAppApiTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-Tests-ExpressJS,			#package : #PharoJs-Examples-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4197' ],		#self : OmReference [ '4198' ],		#time : DateAndTime [ '2024-03-03T08:20:58.881-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Examples-Tests-PhysicsSimulation,		#affectedPackageName : #PharoJs-Examples-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4198' ],		#self : OmReference [ '4199' ],		#time : DateAndTime [ '2024-03-03T08:20:58.884-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebAppTestCase subclass: #PhysicsSimTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-Tests-PhysicsSimulation\'',				#superclassName : 'PjWebAppTestCase',				#traitCompositionSource : '{}'			},			#name : #PhysicsSimTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PhysicsSimTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PhysicsSimTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PhysicsSimTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-Tests-PhysicsSimulation,			#package : #PharoJs-Examples-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4199' ],		#self : OmReference [ '4200' ],		#time : DateAndTime [ '2024-03-03T08:20:58.888-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PhysicsSimTest subclass: #PhysicsSimTestJS\r\tuses: PjTAppRunsInJS\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-Tests-PhysicsSimulation\'',				#superclassName : 'PhysicsSimTest',				#traitCompositionSource : 'PjTAppRunsInJS'			},			#name : #PhysicsSimTestJS,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PhysicsSimTestJS class\r\tuses: PjTAppRunsInJS classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTAppRunsInJS classTrait'				},				#name : #'PhysicsSimTestJS class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PhysicsSimTestJS,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-Tests-PhysicsSimulation,			#package : #PharoJs-Examples-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4200' ],		#self : OmReference [ '4201' ],		#time : DateAndTime [ '2024-03-03T08:20:58.89-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebAppTestCase subclass: #PjCounterBrowserAppTest\r\tinstanceVariableNames: \'countDisplay incrementButton resetButton\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-Tests-Counter\'',				#superclassName : 'PjWebAppTestCase',				#traitCompositionSource : '{}'			},			#name : #PjCounterBrowserAppTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjCounterBrowserAppTest,						#isMetaSide : false					},					#name : #countDisplay,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjCounterBrowserAppTest,						#isMetaSide : false					},					#name : #incrementButton,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjCounterBrowserAppTest,						#isMetaSide : false					},					#name : #resetButton,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjCounterBrowserAppTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjCounterBrowserAppTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjCounterBrowserAppTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-Tests-Counter,			#package : #PharoJs-Examples-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4201' ],		#self : OmReference [ '4202' ],		#time : DateAndTime [ '2024-03-03T08:20:58.893-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjCounterBrowserAppTest subclass: #PjJavascriptCounterBrowserAppTest\r\tuses: PjTAppRunsInJS\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-Tests-Counter\'',				#superclassName : 'PjCounterBrowserAppTest',				#traitCompositionSource : 'PjTAppRunsInJS'			},			#name : #PjJavascriptCounterBrowserAppTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjJavascriptCounterBrowserAppTest class\r\tuses: PjTAppRunsInJS classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTAppRunsInJS classTrait'				},				#name : #'PjJavascriptCounterBrowserAppTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjJavascriptCounterBrowserAppTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-Tests-Counter,			#package : #PharoJs-Examples-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4202' ],		#self : OmReference [ '4203' ],		#time : DateAndTime [ '2024-03-03T08:20:58.895-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Examples-Tests-HelloWorld,		#affectedPackageName : #PharoJs-Examples-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4203' ],		#self : OmReference [ '4204' ],		#time : DateAndTime [ '2024-03-03T08:20:58.897-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebAppTestCase subclass: #PjHelloWorldAppTest\r\tuses: PjTWaitUntilReady\r\tinstanceVariableNames: \'nameInput sayHelloButton greetingMessageContainer\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-Tests-HelloWorld\'',				#superclassName : 'PjWebAppTestCase',				#traitCompositionSource : 'PjTWaitUntilReady'			},			#name : #PjHelloWorldAppTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjHelloWorldAppTest,						#isMetaSide : false					},					#name : #nameInput,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjHelloWorldAppTest,						#isMetaSide : false					},					#name : #sayHelloButton,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjHelloWorldAppTest,						#isMetaSide : false					},					#name : #greetingMessageContainer,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjHelloWorldAppTest class\r\tuses: PjTWaitUntilReady classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTWaitUntilReady classTrait'				},				#name : #'PjHelloWorldAppTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjHelloWorldAppTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-Tests-HelloWorld,			#package : #PharoJs-Examples-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4204' ],		#self : OmReference [ '4205' ],		#time : DateAndTime [ '2024-03-03T08:20:58.899-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjHelloWorldAppTest subclass: #PjJavascriptHelloWorldAppTest\r\tuses: PjTAppRunsInJS\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-Tests-HelloWorld\'',				#superclassName : 'PjHelloWorldAppTest',				#traitCompositionSource : 'PjTAppRunsInJS'			},			#name : #PjJavascriptHelloWorldAppTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjJavascriptHelloWorldAppTest class\r\tuses: PjTAppRunsInJS classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTAppRunsInJS classTrait'				},				#name : #'PjJavascriptHelloWorldAppTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjJavascriptHelloWorldAppTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-Tests-HelloWorld,			#package : #PharoJs-Examples-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4205' ],		#self : OmReference [ '4206' ],		#time : DateAndTime [ '2024-03-03T08:20:58.903-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebAppTestCase subclass: #PjHelloWorldExpressClientAppTest\r\tuses: PjTAppRunsInJS + PjTWebClientAppTestCase\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-Tests-ExpressJS\'',				#superclassName : 'PjWebAppTestCase',				#traitCompositionSource : 'PjTAppRunsInJS + PjTWebClientAppTestCase'			},			#name : #PjHelloWorldExpressClientAppTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjHelloWorldExpressClientAppTest class\r\tuses: PjTAppRunsInJS classTrait + PjTWebClientAppTestCase classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTAppRunsInJS classTrait + PjTWebClientAppTestCase classTrait'				},				#name : #'PjHelloWorldExpressClientAppTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjHelloWorldExpressClientAppTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-Tests-ExpressJS,			#package : #PharoJs-Examples-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4206' ],		#self : OmReference [ '4207' ],		#time : DateAndTime [ '2024-03-03T08:20:58.906-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Examples-Tests-Minimal,		#affectedPackageName : #PharoJs-Examples-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4207' ],		#self : OmReference [ '4208' ],		#time : DateAndTime [ '2024-03-03T08:20:58.907-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjAppTestCase subclass: #PjMinimalNodeApplicationTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-Tests-Minimal\'',				#superclassName : 'PjAppTestCase',				#traitCompositionSource : '{}'			},			#name : #PjMinimalNodeApplicationTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjMinimalNodeApplicationTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjMinimalNodeApplicationTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjMinimalNodeApplicationTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-Tests-Minimal,			#package : #PharoJs-Examples-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4208' ],		#self : OmReference [ '4209' ],		#time : DateAndTime [ '2024-03-03T08:20:59.065-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebAppTestCase subclass: #PjHelloWorldExpressClientAppTest\r\tuses: PjTAppRunsInJS + PjTWebClientAppTestCase\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-Tests-ExpressJS\'',				#superclassName : 'PjWebAppTestCase',				#traitCompositionSource : 'PjTAppRunsInJS + PjTWebClientAppTestCase'			},			#name : #PjHelloWorldExpressClientAppTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjHelloWorldExpressClientAppTest class\r\tuses: PjTAppRunsInJS classTrait + PjTWebClientAppTestCase classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTAppRunsInJS classTrait + PjTWebClientAppTestCase classTrait'				},				#name : #'PjHelloWorldExpressClientAppTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjHelloWorldExpressClientAppTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-Tests-ExpressJS,			#package : #PharoJs-Examples-Tests,			#sharedPools : OrderedCollection [ ]		},		#protocol : #running	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4209' ],		#self : OmReference [ '4210' ],		#time : DateAndTime [ '2024-03-03T08:20:59.065-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebAppTestCase subclass: #PjHelloWorldExpressClientAppTest\r\tuses: PjTAppRunsInJS + PjTWebClientAppTestCase\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Examples-Tests-ExpressJS\'',				#superclassName : 'PjWebAppTestCase',				#traitCompositionSource : 'PjTAppRunsInJS + PjTWebClientAppTestCase'			},			#name : #PjHelloWorldExpressClientAppTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjHelloWorldExpressClientAppTest class\r\tuses: PjTAppRunsInJS classTrait + PjTWebClientAppTestCase classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTAppRunsInJS classTrait + PjTWebClientAppTestCase classTrait'				},				#name : #'PjHelloWorldExpressClientAppTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjHelloWorldExpressClientAppTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Examples-Tests-ExpressJS,			#package : #PharoJs-Examples-Tests,			#sharedPools : OrderedCollection [ ]		},		#protocol : #initialization	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4210' ],		#self : OmReference [ '4211' ],		#time : DateAndTime [ '2024-03-03T08:20:59.127-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounterTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tcounter := PjCounter new',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4211' ],		#self : OmReference [ '4212' ],		#time : DateAndTime [ '2024-03-03T08:20:59.128-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounterTest,				#isMetaSide : false			},			#name : #testIncrementIncreasesCountBy1,			#protocol : #tests,			#sourceCode : 'testIncrementIncreasesCountBy1\r\t1 to: 10 do: [ : expectedCount |\r\t\t\tcounter increment.\r\t\tself assert: counter count equals: expectedCount\r\t]',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4212' ],		#self : OmReference [ '4213' ],		#time : DateAndTime [ '2024-03-03T08:20:59.129-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounterTest,				#isMetaSide : false			},			#name : #testInitialCountIs0,			#protocol : #tests,			#sourceCode : 'testInitialCountIs0\r\tself assert: counter count equals: 0',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4213' ],		#self : OmReference [ '4214' ],		#time : DateAndTime [ '2024-03-03T08:20:59.129-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounterTest,				#isMetaSide : false			},			#name : #testResetSetsCountTo0,			#protocol : #tests,			#sourceCode : 'testResetSetsCountTo0\r\t3 timesRepeat: [counter increment].\r\tcounter reset.\r\tself assert: counter count equals: 0',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4214' ],		#self : OmReference [ '4215' ],		#time : DateAndTime [ '2024-03-03T08:20:59.129-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjHelloWorldExpressAppApiTest class',				#isMetaSide : true			},			#name : #appClass,			#protocol : #'suite parameters',			#sourceCode : 'appClass\r\r\t^ PjHelloWorldExpressApp ',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4215' ],		#self : OmReference [ '4216' ],		#time : DateAndTime [ '2024-03-03T08:20:59.13-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressAppApiTest,				#isMetaSide : false			},			#name : #testHttpGetGreetings,			#protocol : #tests,			#sourceCode : 'testHttpGetGreetings\r\r\t| response |\r\tresponse := self get: \'/greetings\'.\r\tself assert: response contents equals: \'ExpressJS says: Hello!\'.\r\tapp name: \'Spiderman\'.\r\tself assert: (self get: \'/greetings\') contents equals: \'ExpressJS says: Hello Spiderman!\'.\r',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4216' ],		#self : OmReference [ '4217' ],		#time : DateAndTime [ '2024-03-03T08:20:59.13-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressAppApiTest,				#isMetaSide : false			},			#name : #testHttpGetName,			#protocol : #tests,			#sourceCode : 'testHttpGetName\r\r\t| response providedName |\r\tresponse := self get: \'/name\'.\r\tself assert: response code equals: 200.\r\tself assert: response contents equals: nil.\r\tprovidedName := \'Smalltalk Balloon\'.\r\tapp name: providedName.\r\tself assert: (self get: \'/name\') contents equals: providedName',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4217' ],		#self : OmReference [ '4218' ],		#time : DateAndTime [ '2024-03-03T08:20:59.13-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressAppApiTest,				#isMetaSide : false			},			#name : #testHttpGetRoot,			#protocol : #tests,			#sourceCode : 'testHttpGetRoot\r\r\t| response |\r\tresponse := self get: \'/\'.\r\tself assert: response isSuccess.\r\tself assert: (response contentType matches: ZnMimeType textHtml).\r\tself assert: (response contents includesSubstring: \'pharoJsLogo\')',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4218' ],		#self : OmReference [ '4219' ],		#time : DateAndTime [ '2024-03-03T08:20:59.13-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressAppApiTest,				#isMetaSide : false			},			#name : #testHttpPostName,			#protocol : #tests,			#sourceCode : 'testHttpPostName\r\r\t| response name |\r\tname := \'PharoJS\'.\r\tresponse := self post: \'/name\' text: name.\r\tself assert: response code equals: 200.\r\tself assert: response contents equals: name.\r\tself assert: (self get: \'/name\') contents equals: name.\r\tself\r\t\tassert: (self get: \'/greetings\') contents\r\t\tequals: \'ExpressJS says: Hello \' , name , \'!\'',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4219' ],		#self : OmReference [ '4220' ],		#time : DateAndTime [ '2024-03-03T08:20:59.13-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PhysicsSimTest class',				#isMetaSide : true			},			#name : #appClass,			#protocol : #'suite parameters',			#sourceCode : 'appClass\r\t^PhysicsSim',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4220' ],		#self : OmReference [ '4221' ],		#time : DateAndTime [ '2024-03-03T08:20:59.13-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhysicsSimTest,				#isMetaSide : false			},			#name : #testAppInitialSetup,			#protocol : #tests,			#sourceCode : 'testAppInitialSetup\r\tself assert: app bodies size equals: 3',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4221' ],		#self : OmReference [ '4222' ],		#time : DateAndTime [ '2024-03-03T08:20:59.13-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PhysicsSimTest,				#isMetaSide : false			},			#name : #testResetDeleteMobileBodiesOnly,			#protocol : #tests,			#sourceCode : 'testResetDeleteMobileBodiesOnly\r\tself clickElementById: #resetButton.\r\tself assert: app bodies size equals: 1.',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4222' ],		#self : OmReference [ '4223' ],		#time : DateAndTime [ '2024-03-03T08:20:59.131-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjCounterBrowserAppTest class',				#isMetaSide : true			},			#name : #appClass,			#protocol : #'suite parameters',			#sourceCode : 'appClass\r\t^PjCounterBrowserApp',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4223' ],		#self : OmReference [ '4224' ],		#time : DateAndTime [ '2024-03-03T08:20:59.131-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounterBrowserAppTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #tests,			#sourceCode : 'setUp\r\tsuper setUp.\r\tcountDisplay := app countDisplay.\r\tresetButton := app resetButton.\r\tincrementButton := app incrementButton.',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4224' ],		#self : OmReference [ '4225' ],		#time : DateAndTime [ '2024-03-03T08:20:59.131-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounterBrowserAppTest,				#isMetaSide : false			},			#name : #testClickOnIncrementButtonIncreasesCountAndUpdatesDisplay,			#protocol : #tests,			#sourceCode : 'testClickOnIncrementButtonIncreasesCountAndUpdatesDisplay\r\t1 to: 10 do: [ : expectedCount |\r\t\tincrementButton click.\r\t\tself assert: countDisplay innerHTML equals: expectedCount asString\r\t]',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4225' ],		#self : OmReference [ '4226' ],		#time : DateAndTime [ '2024-03-03T08:20:59.131-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounterBrowserAppTest,				#isMetaSide : false			},			#name : #testClickOnResetButtonSetsCountTo0,			#protocol : #tests,			#sourceCode : 'testClickOnResetButtonSetsCountTo0\r\t3 timesRepeat: [incrementButton click.].\r\tresetButton click.\r\tself assert: countDisplay innerHTML equals: \'0\'',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4226' ],		#self : OmReference [ '4227' ],		#time : DateAndTime [ '2024-03-03T08:20:59.131-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounterBrowserAppTest,				#isMetaSide : false			},			#name : #testInitialCountDisplayIs0,			#protocol : #tests,			#sourceCode : 'testInitialCountDisplayIs0\r\tself assert: countDisplay innerHTML equals: \'0\'',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4227' ],		#self : OmReference [ '4228' ],		#time : DateAndTime [ '2024-03-03T08:20:59.132-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjHelloWorldAppTest class',				#isMetaSide : true			},			#name : #appClass,			#protocol : #'suite parameters',			#sourceCode : 'appClass\r\t^PjHelloWorldApp',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4228' ],		#self : OmReference [ '4229' ],		#time : DateAndTime [ '2024-03-03T08:20:59.132-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldAppTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\tnameInput := document getElementById: #nameTextInput.\r\tsayHelloButton := document getElementById: #sayHelloButton.\r\tgreetingMessageContainer := document getElementById: #greetingMessageContainer.',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4229' ],		#self : OmReference [ '4230' ],		#time : DateAndTime [ '2024-03-03T08:20:59.132-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldAppTest,				#isMetaSide : false			},			#name : #testSayHello,			#protocol : #tests,			#sourceCode : 'testSayHello\r\t#(Luke Yoda \'Obi One\') do: [ : name |\r\t\tself changeElement: nameInput value: name.\r\t\tself clickElement: sayHelloButton.\r\t\tself assert: (greetingMessageContainer innerHTML endsWith: name)\r\t]',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4230' ],		#self : OmReference [ '4231' ],		#time : DateAndTime [ '2024-03-03T08:20:59.132-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjHelloWorldExpressClientAppTest class',				#isMetaSide : true			},			#name : #appClass,			#protocol : #'suite parameters',			#sourceCode : 'appClass\r\r\t^ PjHelloWorldExpressClientApp',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4231' ],		#self : OmReference [ '4232' ],		#time : DateAndTime [ '2024-03-03T08:20:59.132-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressClientAppTest,				#isMetaSide : false			},			#name : #testDisplayGreetingsNoName,			#protocol : #tests,			#sourceCode : 'testDisplayGreetingsNoName\r\r\tself assert: app greetingsContainer textContent equals: \'---\'.\r\tself clickElement: app updateGreetingsButton.\r\tself waitUntil: [ \r\t\tapp greetingsContainer textContent = \'ExpressJS says: Hello!\' ]',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4232' ],		#self : OmReference [ '4233' ],		#time : DateAndTime [ '2024-03-03T08:20:59.132-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressClientAppTest,				#isMetaSide : false			},			#name : #testGreetingsUpdatedAfterSettingName,			#protocol : #tests,			#sourceCode : 'testGreetingsUpdatedAfterSettingName\r\r\tself assert: app greetingsContainer textContent equals: \'---\'.\r\tapp nameInput value: \'Test Name\'.\r\tself clickElement: app setNameButton.\r\tself waitUntil: [ \r\t\tapp greetingsContainer textContent\r\t\t= \'ExpressJS says: Hello Test Name!\' ]',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4233' ],		#self : OmReference [ '4234' ],		#time : DateAndTime [ '2024-03-03T08:20:59.133-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressClientAppTest,				#isMetaSide : false			},			#name : #urlPathString,			#protocol : #initialization,			#sourceCode : 'urlPathString\r\tself explicitRequirement ',			#stamp : '',			#package : #PharoJs-TestFramework		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHelloWorldExpressClientAppTest,				#isMetaSide : false			},			#name : #urlPathString,			#protocol : #initialization,			#sourceCode : 'urlPathString\r\t^\'/\'',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4234' ],		#self : OmReference [ '4235' ],		#time : DateAndTime [ '2024-03-03T08:20:59.133-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjMinimalNodeApplicationTest class',				#isMetaSide : true			},			#name : #appClass,			#protocol : #'suite parameters',			#sourceCode : 'appClass \r\t^PjMinimalNodeApplication ',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4235' ],		#self : OmReference [ '4236' ],		#time : DateAndTime [ '2024-03-03T08:20:59.133-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMinimalNodeApplicationTest,				#isMetaSide : false			},			#name : #exportedAppJsFileChangeTime,			#protocol : #tests,			#sourceCode : 'exportedAppJsFileChangeTime\r\r\t^ self appClass appFullJsFileName resolve changeTime',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4236' ],		#self : OmReference [ '4237' ],		#time : DateAndTime [ '2024-03-03T08:20:59.133-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMinimalNodeApplicationTest,				#isMetaSide : false			},			#name : #testArithmeticOperations,			#protocol : #tests,			#sourceCode : 'testArithmeticOperations\r\tself assert: [ 1+2 ] evaluatesTo: 3.\r\tself assert: [ 32 / 8 ] evaluatesTo: 4.',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4237' ],		#self : OmReference [ '4238' ],		#time : DateAndTime [ '2024-03-03T08:20:59.134-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMinimalNodeApplicationTest,				#isMetaSide : false			},			#name : #testLoadClass,			#protocol : #tests,			#sourceCode : 'testLoadClass\r\t| jsCounter |\r\tjsCounter := self evalBlock: [ PjCounter new ].\r\tself assert: jsCounter count equals: 0.\r\t1 to: 3 do: [ : expectedCount | \r\t\tjsCounter increment.\r\t\tself assert: jsCounter count equals: expectedCount\r\t]',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4238' ],		#self : OmReference [ '4239' ],		#time : DateAndTime [ '2024-03-03T08:20:59.134-05:00' ],		#trigger : OmReference [ '4193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjMinimalNodeApplicationTest,				#isMetaSide : false			},			#name : #testResetApp,			#protocol : #tests,			#sourceCode : 'testResetApp\r\r\t| initialChangeTime latestChangeTime |\r\tself evalBlock: [ global instVarNamed: #forTest put: 3 ].\r\tself assert: [ global instVarNamed: #forTest ] evaluatesTo: 3.\r\tinitialChangeTime := self exportedAppJsFileChangeTime.\r\tself resetApp.\r\tself assert: [ global instVarNamed: #forTest ] evaluatesTo: nil.\r\tlatestChangeTime := self exportedAppJsFileChangeTime.\r\tself assert: latestChangeTime equals: initialChangeTime',			#stamp : '',			#package : #PharoJs-Examples-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:59.295-05:00' ],		#prior : OmReference [ '4239' ],		#self : OmReference [ '4240' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-Benchmarking-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4240' ],		#self : OmReference [ '4241' ],		#time : DateAndTime [ '2024-03-03T08:20:59.328-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Benchmarking-Application,		#affectedPackageName : #PharoJs-Benchmarking	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4241' ],		#self : OmReference [ '4242' ],		#time : DateAndTime [ '2024-03-03T08:20:59.33-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjNodeApplication subclass: #PjNodeTimingApplication\r\tinstanceVariableNames: \'iterations prefix printedIterations\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-Application\'',				#superclassName : 'PjNodeApplication',				#traitCompositionSource : '{}'			},			#name : #PjNodeTimingApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeTimingApplication,						#isMetaSide : false					},					#name : #iterations,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeTimingApplication,						#isMetaSide : false					},					#name : #prefix,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeTimingApplication,						#isMetaSide : false					},					#name : #printedIterations,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNodeTimingApplication class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNodeTimingApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNodeTimingApplication,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Application,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4242' ],		#self : OmReference [ '4243' ],		#time : DateAndTime [ '2024-03-03T08:20:59.332-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjNodeApplication subclass: #PjNodeTimingApplication\r\tinstanceVariableNames: \'iterations prefix printedIterations\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-Application\'',				#superclassName : 'PjNodeApplication',				#traitCompositionSource : '{}'			},			#name : #PjNodeTimingApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeTimingApplication,						#isMetaSide : false					},					#name : #iterations,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeTimingApplication,						#isMetaSide : false					},					#name : #prefix,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjNodeTimingApplication,						#isMetaSide : false					},					#name : #printedIterations,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjNodeTimingApplication class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjNodeTimingApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjNodeTimingApplication,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the class that provides comparative timing on NodeJS.\r\rI run tests that have no explicit reference to Javascript objects, tests that reference generic top-level object, and tests that are specific to NodeJS.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Application,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the class that provides comparative timing on NodeJS.\r\rI run tests that have no explicit reference to Javascript objects, tests that reference generic top-level object, and tests that are specific to NodeJS.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4243' ],		#self : OmReference [ '4244' ],		#time : DateAndTime [ '2024-03-03T08:20:59.335-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Benchmarking-Timing,		#affectedPackageName : #PharoJs-Benchmarking	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4244' ],		#self : OmReference [ '4245' ],		#time : DateAndTime [ '2024-03-03T08:20:59.337-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDependentTranspiler subclass: #PjTimingTestTranspiler\r\tinstanceVariableNames: \'delayDNU\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-Timing\'',				#superclassName : 'PjDependentTranspiler',				#traitCompositionSource : '{}'			},			#name : #PjTimingTestTranspiler,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTimingTestTranspiler,						#isMetaSide : false					},					#name : #delayDNU,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTimingTestTranspiler class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTimingTestTranspiler class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTimingTestTranspiler,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Timing,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4245' ],		#self : OmReference [ '4246' ],		#time : DateAndTime [ '2024-03-03T08:20:59.339-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDependentTranspiler subclass: #PjTimingTestTranspiler\r\tinstanceVariableNames: \'delayDNU\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-Timing\'',				#superclassName : 'PjDependentTranspiler',				#traitCompositionSource : '{}'			},			#name : #PjTimingTestTranspiler,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTimingTestTranspiler,						#isMetaSide : false					},					#name : #delayDNU,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTimingTestTranspiler class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTimingTestTranspiler class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTimingTestTranspiler,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a transpiler that can be controlled to support the timing application/',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Timing,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a transpiler that can be controlled to support the timing application/',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4246' ],		#self : OmReference [ '4247' ],		#time : DateAndTime [ '2024-03-03T08:20:59.341-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebApplication subclass: #PjBrowserTimingApplication\r\tinstanceVariableNames: \'iterations prefix printedIterations\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-Application\'',				#superclassName : 'PjWebApplication',				#traitCompositionSource : '{}'			},			#name : #PjBrowserTimingApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserTimingApplication,						#isMetaSide : false					},					#name : #iterations,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserTimingApplication,						#isMetaSide : false					},					#name : #prefix,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserTimingApplication,						#isMetaSide : false					},					#name : #printedIterations,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBrowserTimingApplication class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBrowserTimingApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBrowserTimingApplication,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Application,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4247' ],		#self : OmReference [ '4248' ],		#time : DateAndTime [ '2024-03-03T08:20:59.342-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebApplication subclass: #PjBrowserTimingApplication\r\tinstanceVariableNames: \'iterations prefix printedIterations\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-Application\'',				#superclassName : 'PjWebApplication',				#traitCompositionSource : '{}'			},			#name : #PjBrowserTimingApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserTimingApplication,						#isMetaSide : false					},					#name : #iterations,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserTimingApplication,						#isMetaSide : false					},					#name : #prefix,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjBrowserTimingApplication,						#isMetaSide : false					},					#name : #printedIterations,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjBrowserTimingApplication class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjBrowserTimingApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjBrowserTimingApplication,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the class that provides comparative timing on browsers.\r\rI run tests that have no explicit reference to Javascript objects, tests that reference generic top-level object, and tests that are specific to browsers with a DOM.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Application,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the class that provides comparative timing on browsers.\r\rI run tests that have no explicit reference to Javascript objects, tests that reference generic top-level object, and tests that are specific to browsers with a DOM.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4248' ],		#self : OmReference [ '4249' ],		#time : DateAndTime [ '2024-03-03T08:20:59.344-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Benchmarking-Client,		#affectedPackageName : #PharoJs-Benchmarking	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4249' ],		#self : OmReference [ '4250' ],		#time : DateAndTime [ '2024-03-03T08:20:59.346-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebApplication subclass: #PjTimingPlatformApp\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjUniversalGlobals\'\r\tpackage: \'PharoJs-Benchmarking-Client\'',				#superclassName : 'PjWebApplication',				#traitCompositionSource : '{}'			},			#name : #PjTimingPlatformApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTimingPlatformApp class\r\tinstanceVariableNames: \'iterations minimumTrials\'',					#traitCompositionSource : '{}'				},				#name : #'PjTimingPlatformApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjTimingPlatformApp class'						},						#name : #iterations,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjTimingPlatformApp class'						},						#name : #minimumTrials,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTimingPlatformApp,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Client,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTimingPlatformApp,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4250' ],		#self : OmReference [ '4251' ],		#time : DateAndTime [ '2024-03-03T08:20:59.347-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebApplication subclass: #PjTimingPlatformApp\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjUniversalGlobals\'\r\tpackage: \'PharoJs-Benchmarking-Client\'',				#superclassName : 'PjWebApplication',				#traitCompositionSource : '{}'			},			#name : #PjTimingPlatformApp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTimingPlatformApp class\r\tinstanceVariableNames: \'iterations minimumTrials\'',					#traitCompositionSource : '{}'				},				#name : #'PjTimingPlatformApp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjTimingPlatformApp class'						},						#name : #iterations,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjTimingPlatformApp class'						},						#name : #minimumTrials,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTimingPlatformApp,					#isMetaSide : false				},				#parent : @8,				#content : 'I am an App to determine timings of blocks.\r\rThis is used to justify optimizations',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Client,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTimingPlatformApp,						#isMetaSide : false					},					#name : #PjUniversalGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'I am an App to determine timings of blocks.\r\rThis is used to justify optimizations',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4251' ],		#self : OmReference [ '4252' ],		#time : DateAndTime [ '2024-03-03T08:20:59.348-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Benchmarking-DeltaBlue,		#affectedPackageName : #PharoJs-Benchmarking	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4252' ],		#self : OmReference [ '4253' ],		#time : DateAndTime [ '2024-03-03T08:20:59.349-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'OrderedCollection variableSubclass: #PjDbPlan\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue\'',				#superclassName : 'OrderedCollection',				#traitCompositionSource : '{}'			},			#name : #PjDbPlan,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbPlan class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbPlan class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbPlan,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-DeltaBlue,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4253' ],		#self : OmReference [ '4254' ],		#time : DateAndTime [ '2024-03-03T08:20:59.35-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'OrderedCollection variableSubclass: #PjDbPlan\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue\'',				#superclassName : 'OrderedCollection',				#traitCompositionSource : '{}'			},			#name : #PjDbPlan,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbPlan class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbPlan class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbPlan,					#isMetaSide : false				},				#parent : @8,				#content : 'A Plan is an ordered list of constraints to be executed in sequence to\rresatisfy all currently satisfiable constraints in the face of one or more\rchanging inputs.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-DeltaBlue,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A Plan is an ordered list of constraints to be executed in sequence to\rresatisfy all currently satisfiable constraints in the face of one or more\rchanging inputs.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4254' ],		#self : OmReference [ '4255' ],		#time : DateAndTime [ '2024-03-03T08:20:59.351-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjDbAbstractConstraint\r\tinstanceVariableNames: \'strength\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjDbAbstractConstraint,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbAbstractConstraint,						#isMetaSide : false					},					#name : #strength,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbAbstractConstraint class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbAbstractConstraint class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbAbstractConstraint,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-DeltaBlue,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4255' ],		#self : OmReference [ '4256' ],		#time : DateAndTime [ '2024-03-03T08:20:59.355-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjDbAbstractConstraint\r\tinstanceVariableNames: \'strength\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjDbAbstractConstraint,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbAbstractConstraint,						#isMetaSide : false					},					#name : #strength,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbAbstractConstraint class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbAbstractConstraint class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbAbstractConstraint,					#isMetaSide : false				},				#parent : @8,				#content : 'I am an abstract class representing a system-maintainable relationship (or\r"constraint") between a set of variables. I supply a strength instance\rvariable; concrete subclasses provide a means of storing the constrained\rvariables and other information required to represent a constraint.\r\rInstance variables:\r\tstrength\t\t\tthe strength of this constraint <Strength>\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-DeltaBlue,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am an abstract class representing a system-maintainable relationship (or\r"constraint") between a set of variables. I supply a strength instance\rvariable; concrete subclasses provide a means of storing the constrained\rvariables and other information required to represent a constraint.\r\rInstance variables:\r\tstrength\t\t\tthe strength of this constraint <Strength>\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4256' ],		#self : OmReference [ '4257' ],		#time : DateAndTime [ '2024-03-03T08:20:59.356-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Benchmarking-DeltaBlue-Constraints,		#affectedPackageName : #PharoJs-Benchmarking	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4257' ],		#self : OmReference [ '4258' ],		#time : DateAndTime [ '2024-03-03T08:20:59.357-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDbAbstractConstraint subclass: #PjDbBinaryConstraint\r\tinstanceVariableNames: \'v1 v2 direction\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue-Constraints\'',				#superclassName : 'PjDbAbstractConstraint',				#traitCompositionSource : '{}'			},			#name : #PjDbBinaryConstraint,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbBinaryConstraint,						#isMetaSide : false					},					#name : #v1,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbBinaryConstraint,						#isMetaSide : false					},					#name : #v2,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbBinaryConstraint,						#isMetaSide : false					},					#name : #direction,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbBinaryConstraint class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbBinaryConstraint class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbBinaryConstraint,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-DeltaBlue-Constraints,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4258' ],		#self : OmReference [ '4259' ],		#time : DateAndTime [ '2024-03-03T08:20:59.358-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDbAbstractConstraint subclass: #PjDbBinaryConstraint\r\tinstanceVariableNames: \'v1 v2 direction\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue-Constraints\'',				#superclassName : 'PjDbAbstractConstraint',				#traitCompositionSource : '{}'			},			#name : #PjDbBinaryConstraint,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbBinaryConstraint,						#isMetaSide : false					},					#name : #v1,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbBinaryConstraint,						#isMetaSide : false					},					#name : #v2,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbBinaryConstraint,						#isMetaSide : false					},					#name : #direction,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbBinaryConstraint class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbBinaryConstraint class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbBinaryConstraint,					#isMetaSide : false				},				#parent : @8,				#content : 'I am an abstract superclass for constraints having two possible output\rvariables.\r\rInstance variables:\r\tv1, v2\t\tpossible output variables <Variable>\r\tdirection\t\tone of:\r\t\t\t\t\t#forward (v2 is output)\r\t\t\t\t\t#backward (\tv1 is output)\r\t\t\t\t\tnil (not satisfied)',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-DeltaBlue-Constraints,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am an abstract superclass for constraints having two possible output\rvariables.\r\rInstance variables:\r\tv1, v2\t\tpossible output variables <Variable>\r\tdirection\t\tone of:\r\t\t\t\t\t#forward (v2 is output)\r\t\t\t\t\t#backward (\tv1 is output)\r\t\t\t\t\tnil (not satisfied)',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4259' ],		#self : OmReference [ '4260' ],		#time : DateAndTime [ '2024-03-03T08:20:59.36-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDbBinaryConstraint subclass: #PjDbEqualityConstraint\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue-Constraints\'',				#superclassName : 'PjDbBinaryConstraint',				#traitCompositionSource : '{}'			},			#name : #PjDbEqualityConstraint,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbEqualityConstraint class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbEqualityConstraint class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbEqualityConstraint,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-DeltaBlue-Constraints,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4260' ],		#self : OmReference [ '4261' ],		#time : DateAndTime [ '2024-03-03T08:20:59.361-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDbBinaryConstraint subclass: #PjDbEqualityConstraint\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue-Constraints\'',				#superclassName : 'PjDbBinaryConstraint',				#traitCompositionSource : '{}'			},			#name : #PjDbEqualityConstraint,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbEqualityConstraint class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbEqualityConstraint class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbEqualityConstraint,					#isMetaSide : false				},				#parent : @8,				#content : 'I constrain two variables to have the same value: "v1 = v2".',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-DeltaBlue-Constraints,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I constrain two variables to have the same value: "v1 = v2".',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4261' ],		#self : OmReference [ '4262' ],		#time : DateAndTime [ '2024-03-03T08:20:59.362-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDbBinaryConstraint subclass: #PjDbScaleConstraint\r\tinstanceVariableNames: \'scale offset\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue-Constraints\'',				#superclassName : 'PjDbBinaryConstraint',				#traitCompositionSource : '{}'			},			#name : #PjDbScaleConstraint,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbScaleConstraint,						#isMetaSide : false					},					#name : #scale,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbScaleConstraint,						#isMetaSide : false					},					#name : #offset,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbScaleConstraint class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbScaleConstraint class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbScaleConstraint,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-DeltaBlue-Constraints,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4262' ],		#self : OmReference [ '4263' ],		#time : DateAndTime [ '2024-03-03T08:20:59.363-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDbBinaryConstraint subclass: #PjDbScaleConstraint\r\tinstanceVariableNames: \'scale offset\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue-Constraints\'',				#superclassName : 'PjDbBinaryConstraint',				#traitCompositionSource : '{}'			},			#name : #PjDbScaleConstraint,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbScaleConstraint,						#isMetaSide : false					},					#name : #scale,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbScaleConstraint,						#isMetaSide : false					},					#name : #offset,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbScaleConstraint class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbScaleConstraint class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbScaleConstraint,					#isMetaSide : false				},				#parent : @8,				#content : 'I relate two variables by the linear scaling relationship:\r"v2 = (v1 * scale) + offset". Either v1 or v2 may be changed to maintain this\rrelationship but the scale factor and offset are considered read-only.\r\rInstance variables:\r\tscale\t\tscale factor input variable <Variable>\r\toffset\t\toffset input variable <Variable>',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-DeltaBlue-Constraints,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I relate two variables by the linear scaling relationship:\r"v2 = (v1 * scale) + offset". Either v1 or v2 may be changed to maintain this\rrelationship but the scale factor and offset are considered read-only.\r\rInstance variables:\r\tscale\t\tscale factor input variable <Variable>\r\toffset\t\toffset input variable <Variable>',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4263' ],		#self : OmReference [ '4264' ],		#time : DateAndTime [ '2024-03-03T08:20:59.364-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDbAbstractConstraint subclass: #PjDbUnaryConstraint\r\tinstanceVariableNames: \'output satisfied\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue-Constraints\'',				#superclassName : 'PjDbAbstractConstraint',				#traitCompositionSource : '{}'			},			#name : #PjDbUnaryConstraint,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbUnaryConstraint,						#isMetaSide : false					},					#name : #output,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbUnaryConstraint,						#isMetaSide : false					},					#name : #satisfied,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbUnaryConstraint class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbUnaryConstraint class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbUnaryConstraint,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-DeltaBlue-Constraints,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4264' ],		#self : OmReference [ '4265' ],		#time : DateAndTime [ '2024-03-03T08:20:59.365-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDbAbstractConstraint subclass: #PjDbUnaryConstraint\r\tinstanceVariableNames: \'output satisfied\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue-Constraints\'',				#superclassName : 'PjDbAbstractConstraint',				#traitCompositionSource : '{}'			},			#name : #PjDbUnaryConstraint,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbUnaryConstraint,						#isMetaSide : false					},					#name : #output,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbUnaryConstraint,						#isMetaSide : false					},					#name : #satisfied,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbUnaryConstraint class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbUnaryConstraint class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbUnaryConstraint,					#isMetaSide : false				},				#parent : @8,				#content : 'I am an abstract superclass for constraints having a single possible output\rvariable.\r\rInstance variables:\r\toutput\t\tpossible output variable <Variable>\r\tsatisfied\t\ttrue if I am currently satisfied <Boolean>',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-DeltaBlue-Constraints,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am an abstract superclass for constraints having a single possible output\rvariable.\r\rInstance variables:\r\toutput\t\tpossible output variable <Variable>\r\tsatisfied\t\ttrue if I am currently satisfied <Boolean>',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4265' ],		#self : OmReference [ '4266' ],		#time : DateAndTime [ '2024-03-03T08:20:59.366-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDbUnaryConstraint subclass: #PjDbEditConstraint\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue-Constraints\'',				#superclassName : 'PjDbUnaryConstraint',				#traitCompositionSource : '{}'			},			#name : #PjDbEditConstraint,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbEditConstraint class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbEditConstraint class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbEditConstraint,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-DeltaBlue-Constraints,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4266' ],		#self : OmReference [ '4267' ],		#time : DateAndTime [ '2024-03-03T08:20:59.368-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDbUnaryConstraint subclass: #PjDbEditConstraint\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue-Constraints\'',				#superclassName : 'PjDbUnaryConstraint',				#traitCompositionSource : '{}'			},			#name : #PjDbEditConstraint,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbEditConstraint class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbEditConstraint class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbEditConstraint,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a unary input constraint used to mark a variable that the client\rwishes to change.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-DeltaBlue-Constraints,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a unary input constraint used to mark a variable that the client\rwishes to change.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4267' ],		#self : OmReference [ '4268' ],		#time : DateAndTime [ '2024-03-03T08:20:59.382-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDbUnaryConstraint subclass: #PjDbStayConstraint\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue-Constraints\'',				#superclassName : 'PjDbUnaryConstraint',				#traitCompositionSource : '{}'			},			#name : #PjDbStayConstraint,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbStayConstraint class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbStayConstraint class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbStayConstraint,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-DeltaBlue-Constraints,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4268' ],		#self : OmReference [ '4269' ],		#time : DateAndTime [ '2024-03-03T08:20:59.384-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjDbUnaryConstraint subclass: #PjDbStayConstraint\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue-Constraints\'',				#superclassName : 'PjDbUnaryConstraint',				#traitCompositionSource : '{}'			},			#name : #PjDbStayConstraint,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbStayConstraint class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbStayConstraint class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbStayConstraint,					#isMetaSide : false				},				#parent : @8,				#content : 'I mark variables that should, with some level of preference, stay the same.\rI have one method with zero inputs and one output, which does nothing. Planners\rmay exploit the fact that, if I am satisfied, my output will not change during\rplan execution. This is called "stay optimization."',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-DeltaBlue-Constraints,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I mark variables that should, with some level of preference, stay the same.\rI have one method with zero inputs and one output, which does nothing. Planners\rmay exploit the fact that, if I am satisfied, my output will not change during\rplan execution. This is called "stay optimization."',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4269' ],		#self : OmReference [ '4270' ],		#time : DateAndTime [ '2024-03-03T08:20:59.386-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjDbPlanner\r\tinstanceVariableNames: \'currentMark\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjDbPlanner,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbPlanner,						#isMetaSide : false					},					#name : #currentMark,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbPlanner class\r\tinstanceVariableNames: \'currentPlanner\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbPlanner class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjDbPlanner class'						},						#name : #currentPlanner,						#parent : @15					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbPlanner,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-DeltaBlue,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4270' ],		#self : OmReference [ '4271' ],		#time : DateAndTime [ '2024-03-03T08:20:59.388-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjDbPlanner\r\tinstanceVariableNames: \'currentMark\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjDbPlanner,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbPlanner,						#isMetaSide : false					},					#name : #currentMark,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbPlanner class\r\tinstanceVariableNames: \'currentPlanner\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbPlanner class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjDbPlanner class'						},						#name : #currentPlanner,						#parent : @15					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbPlanner,					#isMetaSide : false				},				#parent : @8,				#content : 'This benchmark is an implementation of the DeltaBlue Constraint Solver\rdescribed in `The DeltaBlue Algorithm: An Incremental Constraint\rHierarchy Solver\', by Bjorn N. Freeman-Benson and John Maloney,\rCommunications of the ACM, January 1990 (also as University of\rWashington TR 89-08-06). \r\rTo run the benchmark, execute the expression `Planner standardBenchmark\'.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-DeltaBlue,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'This benchmark is an implementation of the DeltaBlue Constraint Solver\rdescribed in `The DeltaBlue Algorithm: An Incremental Constraint\rHierarchy Solver\', by Bjorn N. Freeman-Benson and John Maloney,\rCommunications of the ACM, January 1990 (also as University of\rWashington TR 89-08-06). \r\rTo run the benchmark, execute the expression `Planner standardBenchmark\'.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4271' ],		#self : OmReference [ '4272' ],		#time : DateAndTime [ '2024-03-03T08:20:59.39-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjDbStrength\r\tinstanceVariableNames: \'symbolicValue arithmeticValue\'\r\tclassVariableNames: \'AbsoluteStrongest AbsoluteWeakest Required StrengthConstants StrengthTable\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjDbStrength,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbStrength,						#isMetaSide : false					},					#name : #symbolicValue,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbStrength,						#isMetaSide : false					},					#name : #arithmeticValue,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbStrength class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbStrength class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbStrength,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbStrength,						#isMetaSide : false					},					#name : #AbsoluteStrongest,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbStrength,						#isMetaSide : false					},					#name : #AbsoluteWeakest,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbStrength,						#isMetaSide : false					},					#name : #Required,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbStrength,						#isMetaSide : false					},					#name : #StrengthConstants,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbStrength,						#isMetaSide : false					},					#name : #StrengthTable,					#parent : @8				}			],			#category : #PharoJs-Benchmarking-DeltaBlue,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4272' ],		#self : OmReference [ '4273' ],		#time : DateAndTime [ '2024-03-03T08:20:59.391-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjDbStrength\r\tinstanceVariableNames: \'symbolicValue arithmeticValue\'\r\tclassVariableNames: \'AbsoluteStrongest AbsoluteWeakest Required StrengthConstants StrengthTable\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjDbStrength,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbStrength,						#isMetaSide : false					},					#name : #symbolicValue,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbStrength,						#isMetaSide : false					},					#name : #arithmeticValue,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbStrength class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbStrength class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbStrength,					#isMetaSide : false				},				#parent : @8,				#content : 'Strengths are used to measure the relative importance of constraints. The\rhierarchy of available strengths is determined by the class variable\rStrengthTable (see my class initialization method). Because Strengths are\rinvariant, references to Strength instances are shared (i.e. all references to\r"Strength of: #required" point to a single, shared instance). New strengths may\rbe inserted in the strength hierarchy without disrupting current constraints.\r\rInstance variables:\r\tsymbolicValue\t\tsymbolic strength name (e.g. #required) <Symbol>\r\tarithmeticValue\t\tindex of the constraint in the hierarchy, used for comparisons <Number>\r',				#stamp : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbStrength,						#isMetaSide : false					},					#name : #AbsoluteStrongest,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbStrength,						#isMetaSide : false					},					#name : #AbsoluteWeakest,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbStrength,						#isMetaSide : false					},					#name : #Required,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbStrength,						#isMetaSide : false					},					#name : #StrengthConstants,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbStrength,						#isMetaSide : false					},					#name : #StrengthTable,					#parent : @8				}			],			#category : #PharoJs-Benchmarking-DeltaBlue,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Strengths are used to measure the relative importance of constraints. The\rhierarchy of available strengths is determined by the class variable\rStrengthTable (see my class initialization method). Because Strengths are\rinvariant, references to Strength instances are shared (i.e. all references to\r"Strength of: #required" point to a single, shared instance). New strengths may\rbe inserted in the strength hierarchy without disrupting current constraints.\r\rInstance variables:\r\tsymbolicValue\t\tsymbolic strength name (e.g. #required) <Symbol>\r\tarithmeticValue\t\tindex of the constraint in the hierarchy, used for comparisons <Number>\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4273' ],		#self : OmReference [ '4274' ],		#time : DateAndTime [ '2024-03-03T08:20:59.393-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjDbVariable\r\tinstanceVariableNames: \'value constraints determinedBy walkStrength stay mark\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjDbVariable,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbVariable,						#isMetaSide : false					},					#name : #value,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbVariable,						#isMetaSide : false					},					#name : #constraints,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbVariable,						#isMetaSide : false					},					#name : #determinedBy,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbVariable,						#isMetaSide : false					},					#name : #walkStrength,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbVariable,						#isMetaSide : false					},					#name : #stay,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbVariable,						#isMetaSide : false					},					#name : #mark,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbVariable class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbVariable class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbVariable,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-DeltaBlue,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4274' ],		#self : OmReference [ '4275' ],		#time : DateAndTime [ '2024-03-03T08:20:59.394-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjDbVariable\r\tinstanceVariableNames: \'value constraints determinedBy walkStrength stay mark\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-DeltaBlue\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjDbVariable,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbVariable,						#isMetaSide : false					},					#name : #value,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbVariable,						#isMetaSide : false					},					#name : #constraints,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbVariable,						#isMetaSide : false					},					#name : #determinedBy,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbVariable,						#isMetaSide : false					},					#name : #walkStrength,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbVariable,						#isMetaSide : false					},					#name : #stay,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjDbVariable,						#isMetaSide : false					},					#name : #mark,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjDbVariable class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjDbVariable class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjDbVariable,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent a constrained variable. In addition to my value, I maintain the\rstructure of the constraint graph, the current dataflow graph, and various\rparameters of interest to the DeltaBlue incremental constraint solver.\r\rInstance variables:\r\tvalue\t\t\tmy value; changed by constraints, read by client <Object>\r\tconstraints\t\tnormal constraints that reference me <Array of Constraint>\r\tdeterminedBy\tthe constraint that currently determines\r\t\t\t\t\tmy value (or nil if there isn\'t one) <Constraint>\r\twalkStrength\t\tmy walkabout strength <Strength>\r\tstay\t\t\ttrue if I am a planning-time constant <Boolean>\r\tmark\t\t\tused by the planner to mark constraints <Number>',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-DeltaBlue,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I represent a constrained variable. In addition to my value, I maintain the\rstructure of the constraint graph, the current dataflow graph, and various\rparameters of interest to the DeltaBlue incremental constraint solver.\r\rInstance variables:\r\tvalue\t\t\tmy value; changed by constraints, read by client <Object>\r\tconstraints\t\tnormal constraints that reference me <Array of Constraint>\r\tdeterminedBy\tthe constraint that currently determines\r\t\t\t\t\tmy value (or nil if there isn\'t one) <Constraint>\r\twalkStrength\t\tmy walkabout strength <Strength>\r\tstay\t\t\ttrue if I am a planning-time constant <Boolean>\r\tmark\t\t\tused by the planner to mark constraints <Number>',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4275' ],		#self : OmReference [ '4276' ],		#time : DateAndTime [ '2024-03-03T08:20:59.395-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjExportBenchmarks\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-Application\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjExportBenchmarks,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjExportBenchmarks class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjExportBenchmarks class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjExportBenchmarks,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Application,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4276' ],		#self : OmReference [ '4277' ],		#time : DateAndTime [ '2024-03-03T08:20:59.398-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjPharoTimingApplication\r\tinstanceVariableNames: \'iterations prefix printedIterations\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-Application\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjPharoTimingApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjPharoTimingApplication,						#isMetaSide : false					},					#name : #iterations,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjPharoTimingApplication,						#isMetaSide : false					},					#name : #prefix,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjPharoTimingApplication,						#isMetaSide : false					},					#name : #printedIterations,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjPharoTimingApplication class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjPharoTimingApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjPharoTimingApplication,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Application,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4277' ],		#self : OmReference [ '4278' ],		#time : DateAndTime [ '2024-03-03T08:20:59.399-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjPharoTimingApplication\r\tinstanceVariableNames: \'iterations prefix printedIterations\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-Application\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjPharoTimingApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjPharoTimingApplication,						#isMetaSide : false					},					#name : #iterations,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjPharoTimingApplication,						#isMetaSide : false					},					#name : #prefix,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjPharoTimingApplication,						#isMetaSide : false					},					#name : #printedIterations,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjPharoTimingApplication class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjPharoTimingApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjPharoTimingApplication,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the class that provides comparative timing on Pharo or other native Smalltalk systems.\r\rI only run tests that have no explicit reference to Javascript objects.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Application,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am the class that provides comparative timing on Pharo or other native Smalltalk systems.\r\rI only run tests that have no explicit reference to Javascript objects.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4278' ],		#self : OmReference [ '4279' ],		#time : DateAndTime [ '2024-03-03T08:20:59.4-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Benchmarking-Richards,		#affectedPackageName : #PharoJs-Benchmarking	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4279' ],		#self : OmReference [ '4280' ],		#time : DateAndTime [ '2024-03-03T08:20:59.401-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjRbObject\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'DeviceA DeviceB DevicePacketKind HandlerA HandlerB Idler WorkPacketKind Worker\'\r\tpackage: \'PharoJs-Benchmarking-Richards\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjRbObject,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjRbObject class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjRbObject class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjRbObject,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbObject,						#isMetaSide : false					},					#name : #DeviceA,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbObject,						#isMetaSide : false					},					#name : #DeviceB,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbObject,						#isMetaSide : false					},					#name : #DevicePacketKind,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbObject,						#isMetaSide : false					},					#name : #HandlerA,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbObject,						#isMetaSide : false					},					#name : #HandlerB,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbObject,						#isMetaSide : false					},					#name : #Idler,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbObject,						#isMetaSide : false					},					#name : #WorkPacketKind,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbObject,						#isMetaSide : false					},					#name : #Worker,					#parent : @8				}			],			#category : #PharoJs-Benchmarking-Richards,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4280' ],		#self : OmReference [ '4281' ],		#time : DateAndTime [ '2024-03-03T08:20:59.403-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjRbObject subclass: #PjRbBenchmark\r\tinstanceVariableNames: \'taskList currentTask currentTaskIdentity taskTable tracing layout queuePacketCount holdCount\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-Richards\'',				#superclassName : 'PjRbObject',				#traitCompositionSource : '{}'			},			#name : #PjRbBenchmark,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbBenchmark,						#isMetaSide : false					},					#name : #taskList,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbBenchmark,						#isMetaSide : false					},					#name : #currentTask,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbBenchmark,						#isMetaSide : false					},					#name : #currentTaskIdentity,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbBenchmark,						#isMetaSide : false					},					#name : #taskTable,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbBenchmark,						#isMetaSide : false					},					#name : #tracing,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbBenchmark,						#isMetaSide : false					},					#name : #layout,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbBenchmark,						#isMetaSide : false					},					#name : #queuePacketCount,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbBenchmark,						#isMetaSide : false					},					#name : #holdCount,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjRbBenchmark class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjRbBenchmark class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjRbBenchmark,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Richards,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4281' ],		#self : OmReference [ '4282' ],		#time : DateAndTime [ '2024-03-03T08:20:59.404-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjRbObject subclass: #PjRbDeviceTaskDataRecord\r\tinstanceVariableNames: \'pending\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-Richards\'',				#superclassName : 'PjRbObject',				#traitCompositionSource : '{}'			},			#name : #PjRbDeviceTaskDataRecord,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbDeviceTaskDataRecord,						#isMetaSide : false					},					#name : #pending,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjRbDeviceTaskDataRecord class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjRbDeviceTaskDataRecord class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjRbDeviceTaskDataRecord,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Richards,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4282' ],		#self : OmReference [ '4283' ],		#time : DateAndTime [ '2024-03-03T08:20:59.405-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjRbObject subclass: #PjRbHandlerTaskDataRecord\r\tinstanceVariableNames: \'workIn deviceIn\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-Richards\'',				#superclassName : 'PjRbObject',				#traitCompositionSource : '{}'			},			#name : #PjRbHandlerTaskDataRecord,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbHandlerTaskDataRecord,						#isMetaSide : false					},					#name : #workIn,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbHandlerTaskDataRecord,						#isMetaSide : false					},					#name : #deviceIn,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjRbHandlerTaskDataRecord class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjRbHandlerTaskDataRecord class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjRbHandlerTaskDataRecord,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Richards,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4283' ],		#self : OmReference [ '4284' ],		#time : DateAndTime [ '2024-03-03T08:20:59.406-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjRbObject subclass: #PjRbIdleTaskDataRecord\r\tinstanceVariableNames: \'control count\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-Richards\'',				#superclassName : 'PjRbObject',				#traitCompositionSource : '{}'			},			#name : #PjRbIdleTaskDataRecord,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbIdleTaskDataRecord,						#isMetaSide : false					},					#name : #control,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbIdleTaskDataRecord,						#isMetaSide : false					},					#name : #count,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjRbIdleTaskDataRecord class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjRbIdleTaskDataRecord class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjRbIdleTaskDataRecord,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Richards,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4284' ],		#self : OmReference [ '4285' ],		#time : DateAndTime [ '2024-03-03T08:20:59.408-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjRbObject subclass: #PjRbPacket\r\tinstanceVariableNames: \'link identity kind datum data\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-Richards\'',				#superclassName : 'PjRbObject',				#traitCompositionSource : '{}'			},			#name : #PjRbPacket,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbPacket,						#isMetaSide : false					},					#name : #link,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbPacket,						#isMetaSide : false					},					#name : #identity,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbPacket,						#isMetaSide : false					},					#name : #kind,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbPacket,						#isMetaSide : false					},					#name : #datum,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbPacket,						#isMetaSide : false					},					#name : #data,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjRbPacket class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjRbPacket class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjRbPacket,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Richards,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4285' ],		#self : OmReference [ '4286' ],		#time : DateAndTime [ '2024-03-03T08:20:59.409-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjRbObject subclass: #PjRbTaskState\r\tinstanceVariableNames: \'packetPendingIV taskWaiting taskHolding\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-Richards\'',				#superclassName : 'PjRbObject',				#traitCompositionSource : '{}'			},			#name : #PjRbTaskState,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbTaskState,						#isMetaSide : false					},					#name : #packetPendingIV,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbTaskState,						#isMetaSide : false					},					#name : #taskWaiting,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbTaskState,						#isMetaSide : false					},					#name : #taskHolding,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjRbTaskState class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjRbTaskState class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjRbTaskState,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Richards,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4286' ],		#self : OmReference [ '4287' ],		#time : DateAndTime [ '2024-03-03T08:20:59.41-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjRbTaskState subclass: #PjRbTaskControlBlock\r\tinstanceVariableNames: \'link identity priority input state function handle\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-Richards\'',				#superclassName : 'PjRbTaskState',				#traitCompositionSource : '{}'			},			#name : #PjRbTaskControlBlock,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbTaskControlBlock,						#isMetaSide : false					},					#name : #link,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbTaskControlBlock,						#isMetaSide : false					},					#name : #identity,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbTaskControlBlock,						#isMetaSide : false					},					#name : #priority,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbTaskControlBlock,						#isMetaSide : false					},					#name : #input,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbTaskControlBlock,						#isMetaSide : false					},					#name : #state,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbTaskControlBlock,						#isMetaSide : false					},					#name : #function,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbTaskControlBlock,						#isMetaSide : false					},					#name : #handle,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjRbTaskControlBlock class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjRbTaskControlBlock class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjRbTaskControlBlock,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Richards,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4287' ],		#self : OmReference [ '4288' ],		#time : DateAndTime [ '2024-03-03T08:20:59.411-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjRbObject subclass: #PjRbWorkerTaskDataRecord\r\tinstanceVariableNames: \'destination count\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-Richards\'',				#superclassName : 'PjRbObject',				#traitCompositionSource : '{}'			},			#name : #PjRbWorkerTaskDataRecord,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbWorkerTaskDataRecord,						#isMetaSide : false					},					#name : #destination,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjRbWorkerTaskDataRecord,						#isMetaSide : false					},					#name : #count,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjRbWorkerTaskDataRecord class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjRbWorkerTaskDataRecord class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjRbWorkerTaskDataRecord,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Richards,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4288' ],		#self : OmReference [ '4289' ],		#time : DateAndTime [ '2024-03-03T08:20:59.412-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjTimingApplication\r\tinstanceVariableNames: \'index\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjBrowserGlobals\'\r\tpackage: \'PharoJs-Benchmarking-Application\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjTimingApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTimingApplication,						#isMetaSide : false					},					#name : #index,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTimingApplication class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTimingApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTimingApplication,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Application,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTimingApplication,						#isMetaSide : false					},					#name : #PjBrowserGlobals,					#parent : @8				}			]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4289' ],		#self : OmReference [ '4290' ],		#time : DateAndTime [ '2024-03-03T08:20:59.413-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjTimingApplication\r\tinstanceVariableNames: \'index\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'PjBrowserGlobals\'\r\tpackage: \'PharoJs-Benchmarking-Application\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjTimingApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTimingApplication,						#isMetaSide : false					},					#name : #index,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTimingApplication class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjTimingApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTimingApplication,					#isMetaSide : false				},				#parent : @8,				#content : 'I am the class with actual benchmark code.\r\rI have 4 class methods for the actual benchmarks, and a variety of instance methods to support them.\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Application,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [				RGPoolVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTimingApplication,						#isMetaSide : false					},					#name : #PjBrowserGlobals,					#parent : @8				}			]		},		#oldComment : '',		#newComment : 'I am the class with actual benchmark code.\r\rI have 4 class methods for the actual benchmarks, and a variety of instance methods to support them.\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4290' ],		#self : OmReference [ '4291' ],		#time : DateAndTime [ '2024-03-03T08:20:59.415-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjTimingTest\r\tinstanceVariableNames: \'exporter bridge nullBlock selector\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-Timing\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjTimingTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTimingTest,						#isMetaSide : false					},					#name : #exporter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTimingTest,						#isMetaSide : false					},					#name : #bridge,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTimingTest,						#isMetaSide : false					},					#name : #nullBlock,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTimingTest,						#isMetaSide : false					},					#name : #selector,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTimingTest class\r\tinstanceVariableNames: \'stats\'',					#traitCompositionSource : '{}'				},				#name : #'PjTimingTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjTimingTest class'						},						#name : #stats,						#parent : @21					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTimingTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Timing,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4291' ],		#self : OmReference [ '4292' ],		#time : DateAndTime [ '2024-03-03T08:20:59.416-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjTimingTest\r\tinstanceVariableNames: \'exporter bridge nullBlock selector\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Benchmarking-Timing\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjTimingTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTimingTest,						#isMetaSide : false					},					#name : #exporter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTimingTest,						#isMetaSide : false					},					#name : #bridge,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTimingTest,						#isMetaSide : false					},					#name : #nullBlock,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjTimingTest,						#isMetaSide : false					},					#name : #selector,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjTimingTest class\r\tinstanceVariableNames: \'stats\'',					#traitCompositionSource : '{}'				},				#name : #'PjTimingTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : true,							#className : #'PjTimingTest class'						},						#name : #stats,						#parent : @21					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjTimingTest,					#isMetaSide : false				},				#parent : @8,				#content : 'I run timings of blocks on a Javascript engine.\r\rMy primary use is to explore how useful a given optimization is, as I record the ratio of unoptimized versus optimized Javascript code.\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Benchmarking-Timing,			#package : #PharoJs-Benchmarking,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I run timings of blocks on a Javascript engine.\r\rMy primary use is to explore how useful a given optimization is, as I record the ratio of unoptimized versus optimized Javascript code.\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4292' ],		#self : OmReference [ '4293' ],		#time : DateAndTime [ '2024-03-03T08:20:59.648-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNodeTimingApplication class',				#isMetaSide : true			},			#name : #appClasses,			#protocol : #'accessing - description',			#sourceCode : 'appClasses\r\t<pharoJsSkip>\r\r\t^ super appClasses , { PjTimingApplication }',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4293' ],		#self : OmReference [ '4294' ],		#time : DateAndTime [ '2024-03-03T08:20:59.648-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNodeTimingApplication class',				#isMetaSide : true			},			#name : #appJsFileName,			#protocol : #'accessing - description',			#sourceCode : 'appJsFileName\r\t<pharoJsSkip>\r\r\t^ \'node.js\'',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4294' ],		#self : OmReference [ '4295' ],		#time : DateAndTime [ '2024-03-03T08:20:59.648-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNodeTimingApplication class',				#isMetaSide : true			},			#name : #playgroundDoNotList,			#protocol : #settings,			#sourceCode : 'playgroundDoNotList\r\t<pharoJsSkip>',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4295' ],		#self : OmReference [ '4296' ],		#time : DateAndTime [ '2024-03-03T08:20:59.648-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjNodeTimingApplication class',				#isMetaSide : true			},			#name : #start,			#protocol : #'start-stop application',			#sourceCode : 'start\r\t<script>\r\t\r\tPjTimingApplication runTimings: self new',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4296' ],		#self : OmReference [ '4297' ],		#time : DateAndTime [ '2024-03-03T08:20:59.649-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeTimingApplication,				#isMetaSide : false			},			#name : #cr,			#protocol : #accessing,			#sourceCode : 'cr\r\t^self',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4297' ],		#self : OmReference [ '4298' ],		#time : DateAndTime [ '2024-03-03T08:20:59.649-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeTimingApplication,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tprintedIterations := iterations := 1000000',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4298' ],		#self : OmReference [ '4299' ],		#time : DateAndTime [ '2024-03-03T08:20:59.649-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeTimingApplication,				#isMetaSide : false			},			#name : #iterations,			#protocol : #accessing,			#sourceCode : 'iterations\r\t^ iterations',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4299' ],		#self : OmReference [ '4300' ],		#time : DateAndTime [ '2024-03-03T08:20:59.65-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeTimingApplication,				#isMetaSide : false			},			#name : #'log:',			#protocol : #accessing,			#sourceCode : 'log: aString\r\tconsole log: aString',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4300' ],		#self : OmReference [ '4301' ],		#time : DateAndTime [ '2024-03-03T08:20:59.65-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeTimingApplication,				#isMetaSide : false			},			#name : #'prefix:',			#protocol : #accessing,			#sourceCode : 'prefix: aString\r\tprefix := aString',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4301' ],		#self : OmReference [ '4302' ],		#time : DateAndTime [ '2024-03-03T08:20:59.65-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeTimingApplication,				#isMetaSide : false			},			#name : #runs,			#protocol : #accessing,			#sourceCode : 'runs\r\t^ 10',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4302' ],		#self : OmReference [ '4303' ],		#time : DateAndTime [ '2024-03-03T08:20:59.65-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeTimingApplication,				#isMetaSide : false			},			#name : #'show:',			#protocol : #accessing,			#sourceCode : 'show: aString\r\tconsole log: aString',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4303' ],		#self : OmReference [ '4304' ],		#time : DateAndTime [ '2024-03-03T08:20:59.65-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeTimingApplication,				#isMetaSide : false			},			#name : #time,			#protocol : #accessing,			#sourceCode : 'time\r\tPjTimingApplication allTimingOn: self.\r\tPjTimingApplication jsTimingOn: self top: global.\r\tPjTimingApplication nodeTimingOn: self',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4304' ],		#self : OmReference [ '4305' ],		#time : DateAndTime [ '2024-03-03T08:20:59.65-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeTimingApplication,				#isMetaSide : false			},			#name : #'time:with:ratio:',			#protocol : #accessing,			#sourceCode : 'time: aString with: aBlock ratio: ratio\r\t| iters |\r\titers := (iterations * ratio) asInteger.\r\titers isZero ifTrue: [ iters := 1 ].\r\tprintedIterations = iters ifFalse: [\r\t\tself show: \'Running \';show: iters;show: \' iterations\';cr.\r\t\tprintedIterations := iters\r\t].\r\tconsole time: prefix,aString.\r\titers timesRepeat: [aBlock value].\r\tconsole timeEnd: prefix,aString',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4305' ],		#self : OmReference [ '4306' ],		#time : DateAndTime [ '2024-03-03T08:20:59.65-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjNodeTimingApplication,				#isMetaSide : false			},			#name : #warmups,			#protocol : #accessing,			#sourceCode : 'warmups\r\t^ 5',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4306' ],		#self : OmReference [ '4307' ],		#time : DateAndTime [ '2024-03-03T08:20:59.65-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingTestTranspiler,				#isMetaSide : false			},			#name : #delayDNU,			#protocol : #accessing,			#sourceCode : 'delayDNU\r\t^delayDNU',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4307' ],		#self : OmReference [ '4308' ],		#time : DateAndTime [ '2024-03-03T08:20:59.65-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingTestTranspiler,				#isMetaSide : false			},			#name : #'delayDNU:',			#protocol : #accessing,			#sourceCode : 'delayDNU: anObject\r\tdelayDNU := anObject',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4308' ],		#self : OmReference [ '4309' ],		#time : DateAndTime [ '2024-03-03T08:20:59.651-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingTestTranspiler,				#isMetaSide : false			},			#name : #'generateCodeStringFrom:',			#protocol : #transpiling,			#sourceCode : 'generateCodeStringFrom: jsAst\r\tself delayDNU\r\t\tifFalse: [ self enableWriteDnuDuring: [ self writeDnuList ] ].\r\tgenerator asString: jsAst on: self jsStream',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4309' ],		#self : OmReference [ '4310' ],		#time : DateAndTime [ '2024-03-03T08:20:59.651-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingTestTranspiler,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initailize-release,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself delayDNU: false.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4310' ],		#self : OmReference [ '4311' ],		#time : DateAndTime [ '2024-03-03T08:20:59.651-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBrowserTimingApplication class',				#isMetaSide : true			},			#name : #appClasses,			#protocol : #'accessing - description',			#sourceCode : 'appClasses\r\t<pharoJsSkip>\r\t\r\t^ super appClasses , { PjTimingApplication }',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4311' ],		#self : OmReference [ '4312' ],		#time : DateAndTime [ '2024-03-03T08:20:59.651-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBrowserTimingApplication class',				#isMetaSide : true			},			#name : #playgroundDoNotList,			#protocol : #settings,			#sourceCode : 'playgroundDoNotList\r\t<pharoJsSkip>\r\t',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4312' ],		#self : OmReference [ '4313' ],		#time : DateAndTime [ '2024-03-03T08:20:59.651-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjBrowserTimingApplication class',				#isMetaSide : true			},			#name : #start,			#protocol : #'start-stop application',			#sourceCode : 'start\r\t<script>\r\t\r\tPjTimingApplication runTimings: self new',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4313' ],		#self : OmReference [ '4314' ],		#time : DateAndTime [ '2024-03-03T08:20:59.651-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBrowserTimingApplication,				#isMetaSide : false			},			#name : #cr,			#protocol : #accessing,			#sourceCode : 'cr\r\t^self',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4314' ],		#self : OmReference [ '4315' ],		#time : DateAndTime [ '2024-03-03T08:20:59.651-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBrowserTimingApplication,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\r\tsuper initialize.\r\tprintedIterations := iterations := 1000000',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4315' ],		#self : OmReference [ '4316' ],		#time : DateAndTime [ '2024-03-03T08:20:59.652-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBrowserTimingApplication,				#isMetaSide : false			},			#name : #iterations,			#protocol : #accessing,			#sourceCode : 'iterations\r\r\t^ iterations',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4316' ],		#self : OmReference [ '4317' ],		#time : DateAndTime [ '2024-03-03T08:20:59.652-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBrowserTimingApplication,				#isMetaSide : false			},			#name : #'log:',			#protocol : #accessing,			#sourceCode : 'log: aString\r\r\tconsole log: aString.\r\t(document getElementById: #log) ifNotNil: [ : log | log innerHTML: log innerHTML, aString ]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4317' ],		#self : OmReference [ '4318' ],		#time : DateAndTime [ '2024-03-03T08:20:59.652-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBrowserTimingApplication,				#isMetaSide : false			},			#name : #'prefix:',			#protocol : #accessing,			#sourceCode : 'prefix: aString\r\r\tprefix := aString',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4318' ],		#self : OmReference [ '4319' ],		#time : DateAndTime [ '2024-03-03T08:20:59.652-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBrowserTimingApplication,				#isMetaSide : false			},			#name : #runs,			#protocol : #accessing,			#sourceCode : 'runs\r\r\t^ 10',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4319' ],		#self : OmReference [ '4320' ],		#time : DateAndTime [ '2024-03-03T08:20:59.652-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBrowserTimingApplication,				#isMetaSide : false			},			#name : #'show:',			#protocol : #accessing,			#sourceCode : 'show: aString\r\r\tconsole log: aString.\r\t(document getElementById: #log) ifNotNil: [ : log | log innerHTML: log innerHTML, aString ]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4320' ],		#self : OmReference [ '4321' ],		#time : DateAndTime [ '2024-03-03T08:20:59.653-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBrowserTimingApplication,				#isMetaSide : false			},			#name : #time,			#protocol : #accessing,			#sourceCode : 'time\r\r\tPjTimingApplication allTimingOn: self.\r\tPjTimingApplication jsTimingOn: self top: document.\r\tPjTimingApplication browserTimingOn: self',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4321' ],		#self : OmReference [ '4322' ],		#time : DateAndTime [ '2024-03-03T08:20:59.653-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBrowserTimingApplication,				#isMetaSide : false			},			#name : #'time:with:ratio:',			#protocol : #accessing,			#sourceCode : 'time: aString with: aBlock ratio: ratio\r\r\t| iters |\r\titers := (iterations * ratio) asInteger.\r\titers isZero ifTrue: [ iters := 1 ].\r\tprintedIterations = iters ifFalse: [ \r\t\tself\r\t\t\tshow: \'Running \';\r\t\t\tshow: iters;\r\t\t\tshow: \' iterations\';\r\t\t\tcr.\r\t\tprintedIterations := iters ].\r\tconsole time: prefix , aString.\r\titers timesRepeat: aBlock.\r\tconsole timeEnd: prefix , aString',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4322' ],		#self : OmReference [ '4323' ],		#time : DateAndTime [ '2024-03-03T08:20:59.653-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBrowserTimingApplication,				#isMetaSide : false			},			#name : #warmups,			#protocol : #accessing,			#sourceCode : 'warmups\r\r\t^ 5',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4323' ],		#self : OmReference [ '4324' ],		#time : DateAndTime [ '2024-03-03T08:20:59.653-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingPlatformApp class',				#isMetaSide : true			},			#name : #appJsFileName,			#protocol : #exporting,			#sourceCode : 'appJsFileName\r\t<pharoJsSkip>\r\t\r\t^ \'timing.js\'',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4324' ],		#self : OmReference [ '4325' ],		#time : DateAndTime [ '2024-03-03T08:20:59.653-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingPlatformApp class',				#isMetaSide : true			},			#name : #'excessiveVariance:',			#protocol : #timing,			#sourceCode : 'excessiveVariance: results\r\r\t^ false',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4325' ],		#self : OmReference [ '4326' ],		#time : DateAndTime [ '2024-03-03T08:20:59.653-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingPlatformApp class',				#isMetaSide : true			},			#name : #'findBaseIterations:and:min:',			#protocol : #timing,			#sourceCode : 'findBaseIterations: aBlock and: aBlock2 min: mintime\r\r\t| elapsed |\r\telapsed := 0.\r\t[ (elapsed := (self timeBlock: aBlock) + (self timeBlock: aBlock2) / 2) < mintime ] whileTrue: [\r\t\tconsole log: iterations.\r\t\titerations := iterations + iterations\r\t].\r\t[ (elapsed := (self timeBlock: aBlock) + (self timeBlock: aBlock2) / 2) /3  > mintime ] whileTrue: [\r\t\tconsole log: iterations.\r\t\titerations := iterations * 2 // 3\r\t].',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4326' ],		#self : OmReference [ '4327' ],		#time : DateAndTime [ '2024-03-03T08:20:59.653-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingPlatformApp class',				#isMetaSide : true			},			#name : #'findStableTiming:',			#protocol : #timing,			#sourceCode : 'findStableTiming: aBlock\r\r\t| results |\r\tresults := #().\r\t[ results size < minimumTrials or: [ self excessiveVariance: results ]] whileTrue: [\r\t\tresults add: (self timeBlock: aBlock)\r\t].\r\t^ results',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4327' ],		#self : OmReference [ '4328' ],		#time : DateAndTime [ '2024-03-03T08:20:59.654-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingPlatformApp class',				#isMetaSide : true			},			#name : #'ifFalseExample:',			#protocol : #'for testing',			#sourceCode : 'ifFalseExample: arg\r\r\targ < 10 ifFalse: [ ^ arg ]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4328' ],		#self : OmReference [ '4329' ],		#time : DateAndTime [ '2024-03-03T08:20:59.654-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingPlatformApp class',				#isMetaSide : true			},			#name : #'ifTrueExample:',			#protocol : #'for testing',			#sourceCode : 'ifTrueExample: arg\r\r\targ >= 10 ifTrue: [ ^ arg ]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4329' ],		#self : OmReference [ '4330' ],		#time : DateAndTime [ '2024-03-03T08:20:59.654-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingPlatformApp class',				#isMetaSide : true			},			#name : #playgroundDoNotList,			#protocol : #public,			#sourceCode : 'playgroundDoNotList\r\t< pharoJsSkip >\r',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4330' ],		#self : OmReference [ '4331' ],		#time : DateAndTime [ '2024-03-03T08:20:59.654-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingPlatformApp class',				#isMetaSide : true			},			#name : #start,			#protocol : #'start-stop application',			#sourceCode : 'start',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4331' ],		#self : OmReference [ '4332' ],		#time : DateAndTime [ '2024-03-03T08:20:59.654-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingPlatformApp class',				#isMetaSide : true			},			#name : #'timeBlock:',			#protocol : #timing,			#sourceCode : 'timeBlock: aBlock\r\t<javascript: \'\r\tvar start= +new Date();\r\tfor(var i=this.iterations|0;i>0;--i){aBlock()};\r\treturn +new Date()-start;\'>',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4332' ],		#self : OmReference [ '4333' ],		#time : DateAndTime [ '2024-03-03T08:20:59.654-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingPlatformApp class',				#isMetaSide : true			},			#name : #'timeNull:nonOptimized:optimized:',			#protocol : #public,			#sourceCode : 'timeNull: nullBlock nonOptimized: nonBlock optimized: optBlock\r\t| nullTime nonTime optTime |\r\titerations := 100.\r\tself findBaseIterations: nonBlock and: optBlock min: 400.\r\tminimumTrials := 3.\r\tnullTime := self findStableTiming: nullBlock.\r\tnonTime := self findStableTiming: nonBlock.\r\toptTime := self findStableTiming: optBlock.\r\t^ JSON stringify: { nullTime. nonTime. optTime }',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4333' ],		#self : OmReference [ '4334' ],		#time : DateAndTime [ '2024-03-03T08:20:59.654-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbPlan,				#isMetaSide : false			},			#name : #execute,			#protocol : #execution,			#sourceCode : 'execute\r\t"Execute my constraints in order."\r\r\tself do: [: c | c execute].',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4334' ],		#self : OmReference [ '4335' ],		#time : DateAndTime [ '2024-03-03T08:20:59.655-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDbAbstractConstraint class',				#isMetaSide : true			},			#name : #isAbstract,			#protocol : #testing,			#sourceCode : 'isAbstract\r\r\t^ self = PjDbAbstractConstraint',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4335' ],		#self : OmReference [ '4336' ],		#time : DateAndTime [ '2024-03-03T08:20:59.655-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbAbstractConstraint,				#isMetaSide : false			},			#name : #addConstraint,			#protocol : #add/remove,			#sourceCode : 'addConstraint\r\t"Activate this constraint and attempt to satisfy it."\r\r\tself addToGraph.\r\tPjDbPlanner current incrementalAdd: self',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4336' ],		#self : OmReference [ '4337' ],		#time : DateAndTime [ '2024-03-03T08:20:59.655-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbAbstractConstraint,				#isMetaSide : false			},			#name : #addToGraph,			#protocol : #add/remove,			#sourceCode : 'addToGraph\r\t"Add myself to the constraint graph."\r\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4337' ],		#self : OmReference [ '4338' ],		#time : DateAndTime [ '2024-03-03T08:20:59.655-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbAbstractConstraint,				#isMetaSide : false			},			#name : #'chooseMethod:',			#protocol : #planning,			#sourceCode : 'chooseMethod: mark\r\t"Decide if I can be satisfied and record that decision. The output of\r\t the choosen method must not have the given mark and must have a\r\t walkabout strength less than that of this constraint."\r\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4338' ],		#self : OmReference [ '4339' ],		#time : DateAndTime [ '2024-03-03T08:20:59.655-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbAbstractConstraint,				#isMetaSide : false			},			#name : #destroyConstraint,			#protocol : #add/remove,			#sourceCode : 'destroyConstraint\r\t"Deactivate this constraint, remove it from the constraint graph,\r\t possibly causing other constraints to be satisfied, and destroy it."\r\r\t(self isSatisfied) ifTrue: [PjDbPlanner current incrementalRemove: self].\r\tself removeFromGraph.\r\tself release',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4339' ],		#self : OmReference [ '4340' ],		#time : DateAndTime [ '2024-03-03T08:20:59.655-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbAbstractConstraint,				#isMetaSide : false			},			#name : #execute,			#protocol : #planning,			#sourceCode : 'execute\r\t"Enforce this constraint. Assume that it is satisfied."\r\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4340' ],		#self : OmReference [ '4341' ],		#time : DateAndTime [ '2024-03-03T08:20:59.655-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbAbstractConstraint,				#isMetaSide : false			},			#name : #'inputsDo:',			#protocol : #planning,			#sourceCode : 'inputsDo: aBlock\r\t"Assume that I am satisfied. Evaluate the given block on all my current\r\t input variables."\r\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4341' ],		#self : OmReference [ '4342' ],		#time : DateAndTime [ '2024-03-03T08:20:59.655-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbAbstractConstraint,				#isMetaSide : false			},			#name : #'inputsKnown:',			#protocol : #planning,			#sourceCode : 'inputsKnown: mark\r\t"Assume that I am satisfied. Answer true if all my current inputs are\r\t known. A variable is known if either a) it is \'stay\' (i.e. it is a\r\t constant at plan execution time), b) it has the given mark (indicating\r\t that it has been computed by a constraint appearing earlier in the\r\t plan), or c) it is not determined by any constraint."\r\r\tself inputsDo:\r\t\t[: v |\r\t\t ((v mark = mark) or: [(v stay) or: [v determinedBy == nil]]) ifFalse:\r\t\t\t[^false]].\r\t^true',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4342' ],		#self : OmReference [ '4343' ],		#time : DateAndTime [ '2024-03-03T08:20:59.655-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbAbstractConstraint,				#isMetaSide : false			},			#name : #isInput,			#protocol : #queries,			#sourceCode : 'isInput\r\t"Normal constraints are not input constraints. An input constraint is\r\t one that depends on external state, such as the mouse, the keyboard,\r\t a clock, or some arbitrary piece of imperative code."\r\r\t^false',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4343' ],		#self : OmReference [ '4344' ],		#time : DateAndTime [ '2024-03-03T08:20:59.656-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbAbstractConstraint,				#isMetaSide : false			},			#name : #isSatisfied,			#protocol : #queries,			#sourceCode : 'isSatisfied\r\t"Answer true if this constraint is satisfied in the current solution."\r\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4344' ],		#self : OmReference [ '4345' ],		#time : DateAndTime [ '2024-03-03T08:20:59.656-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbAbstractConstraint,				#isMetaSide : false			},			#name : #'longPrintOn:',			#protocol : #printing,			#sourceCode : 'longPrintOn: aStream\r\t \r\taStream nextPut: $(.\r\tself shortPrintOn: aStream.\r\taStream space; nextPutAll: self strength printString.\r\t(self isSatisfied)\r\t\tifTrue:\r\t\t\t[aStream cr; space; space; space.\r\t\t\t self inputsDo:\r\t\t\t\t[: in | aStream nextPutAll: \'v\', in asOop printString, \' \'].\r\t\t\taStream nextPutAll: \'-> \'.\r\t\t\taStream nextPutAll: \'v\', self output asOop printString]\r\t\tifFalse:\r\t\t\t[aStream space; nextPutAll: \'UNSATISFIED\'].\r\taStream nextPut: $); cr.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4345' ],		#self : OmReference [ '4346' ],		#time : DateAndTime [ '2024-03-03T08:20:59.656-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbAbstractConstraint,				#isMetaSide : false			},			#name : #markUnsatisfied,			#protocol : #planning,			#sourceCode : 'markUnsatisfied\r\t"Record the fact that I am unsatisfied."\r\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4346' ],		#self : OmReference [ '4347' ],		#time : DateAndTime [ '2024-03-03T08:20:59.656-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbAbstractConstraint,				#isMetaSide : false			},			#name : #output,			#protocol : #planning,			#sourceCode : 'output\r\t"Answer my current output variable. Raise an error if I am not\r\t currently satisfied."\r\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4347' ],		#self : OmReference [ '4348' ],		#time : DateAndTime [ '2024-03-03T08:20:59.656-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbAbstractConstraint,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\r\tself shortPrintOn: aStream',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4348' ],		#self : OmReference [ '4349' ],		#time : DateAndTime [ '2024-03-03T08:20:59.656-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbAbstractConstraint,				#isMetaSide : false			},			#name : #recalculate,			#protocol : #planning,			#sourceCode : 'recalculate\r\t"Calculate the walkabout strength, the stay flag, and, if it is \'stay\',\r\t the value for the current output of this constraint. Assume this\r\t constraint is satisfied."\r\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4349' ],		#self : OmReference [ '4350' ],		#time : DateAndTime [ '2024-03-03T08:20:59.656-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbAbstractConstraint,				#isMetaSide : false			},			#name : #removeFromGraph,			#protocol : #add/remove,			#sourceCode : 'removeFromGraph\r\t"Remove myself from the constraint graph."\r\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4350' ],		#self : OmReference [ '4351' ],		#time : DateAndTime [ '2024-03-03T08:20:59.656-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbAbstractConstraint,				#isMetaSide : false			},			#name : #'satisfy:',			#protocol : #planning,			#sourceCode : 'satisfy: mark\r\t"Attempt to find a way to enforce this (still unsatisfied) constraint.\r\t If successful, record the solution, perhaps modifying the current\r\t dataflow graph.  Answer the constraint that this constraint overrides,\r\t if there is one, or nil, if there isn\'t."\r\r\t| overridden out |\r\tself chooseMethod: mark.\r\t(self isSatisfied)\r\t\tifTrue:\t\t\t"constraint can be satisfied"\r\t\t\t["mark inputs to allow cycle detection in addPropagate"\r\t\t\t self inputsDo: [: in | in mark: mark].\r\t\t\t out := self output.\r\t\t\t overridden := out determinedBy.\r\t\t\t (overridden == nil) ifFalse: [overridden markUnsatisfied].\r\t\t\t out determinedBy: self.\r\t\t\t (PjDbPlanner current addPropagate: self mark: mark) ifFalse:\r\t\t\t\t[self notify:\r\t\t\t\t\t(\'Cycle encountered adding:\\   \',\r\t\t\t\t\t self printString,\r\t\t\t\t\t \'\\Constraint removed.\') withCRs.\r\t\t\t\t ^nil].\r\t\t\t out mark: mark]\r\t\tifFalse:\t\t\t"constraint cannot be satisfied"\r\t\t\t[overridden := nil.\r\t\t\t (strength sameAs: (PjDbStrength required)) ifTrue:\r\t\t\t\t[self notify: \'Failed to satisfy a required constraint\']].\r\t^overridden',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4351' ],		#self : OmReference [ '4352' ],		#time : DateAndTime [ '2024-03-03T08:20:59.658-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbAbstractConstraint,				#isMetaSide : false			},			#name : #'shortPrintOn:',			#protocol : #printing,			#sourceCode : 'shortPrintOn: aStream\r\r\taStream nextPutAll: self class name, \'(\', self asOop printString, \')\'.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4352' ],		#self : OmReference [ '4353' ],		#time : DateAndTime [ '2024-03-03T08:20:59.658-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbAbstractConstraint,				#isMetaSide : false			},			#name : #strength,			#protocol : #accessing,			#sourceCode : 'strength\r\t"Answer my strength."\r\r\t^strength',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4353' ],		#self : OmReference [ '4354' ],		#time : DateAndTime [ '2024-03-03T08:20:59.658-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbAbstractConstraint,				#isMetaSide : false			},			#name : #'strength:',			#protocol : #accessing,			#sourceCode : 'strength: strengthSymbol\r\t"Set my strength."\r\r\tstrength := PjDbStrength of: strengthSymbol.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4354' ],		#self : OmReference [ '4355' ],		#time : DateAndTime [ '2024-03-03T08:20:59.659-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDbBinaryConstraint class',				#isMetaSide : true			},			#name : #isAbstract,			#protocol : #testing,			#sourceCode : 'isAbstract\r\r\t^ self = PjDbBinaryConstraint',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4355' ],		#self : OmReference [ '4356' ],		#time : DateAndTime [ '2024-03-03T08:20:59.659-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbBinaryConstraint,				#isMetaSide : false			},			#name : #addToGraph,			#protocol : #add/remove,			#sourceCode : 'addToGraph\r\t"Add myself to the constraint graph."\r\r\tv1 addConstraint: self.\r\tv2 addConstraint: self.\r\tdirection := nil.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4356' ],		#self : OmReference [ '4357' ],		#time : DateAndTime [ '2024-03-03T08:20:59.659-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbBinaryConstraint,				#isMetaSide : false			},			#name : #'chooseMethod:',			#protocol : #planning,			#sourceCode : 'chooseMethod: mark\r\t"Decide if I can be satisfied and which way I should flow based on\r\t the relative strength of the variables I relate, and record that\r\t decision."\r\r\t(v1 mark == mark) ifTrue:\t\t"forward or nothing"\r\t\t[((v2 mark ~= mark) and: [strength stronger: v2 walkStrength])\r\t\t\tifTrue: [^direction := #forward]\r\t\t\tifFalse: [^direction := nil]].\r\r\t(v2 mark == mark) ifTrue:\t\t"backward or nothing"\r\t\t[((v1 mark ~= mark) and: [strength stronger: v1 walkStrength])\r\t\t\tifTrue: [^direction := #backward]\r\t\t\tifFalse: [^direction := nil]].\r\r\t"if we get here, neither variable is marked, so we have choice"\r\t(v1 walkStrength weaker: v2 walkStrength)\r\t\tifTrue:\r\t\t\t[(strength stronger: v1 walkStrength)\r\t\t\t\tifTrue: [^direction := #backward]\r\t\t\t\tifFalse: [^direction := nil]]\r\t\tifFalse:\r\t\t\t[(strength stronger: v2 walkStrength)\r\t\t\t\tifTrue: [^direction := #forward]\r\t\t\t\tifFalse: [^direction := nil]].',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4357' ],		#self : OmReference [ '4358' ],		#time : DateAndTime [ '2024-03-03T08:20:59.659-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbBinaryConstraint,				#isMetaSide : false			},			#name : #execute,			#protocol : #planning,			#sourceCode : 'execute\r\t"Enforce this constraint. Assume that it is satisfied."\r\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4358' ],		#self : OmReference [ '4359' ],		#time : DateAndTime [ '2024-03-03T08:20:59.659-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbBinaryConstraint,				#isMetaSide : false			},			#name : #'inputsDo:',			#protocol : #planning,			#sourceCode : 'inputsDo: aBlock\r\t"Evaluate the given block on my current input variable."\r\r\t(direction == #forward)\r\t\tifTrue: [aBlock value: v1]\r\t\tifFalse: [aBlock value: v2].',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4359' ],		#self : OmReference [ '4360' ],		#time : DateAndTime [ '2024-03-03T08:20:59.659-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbBinaryConstraint,				#isMetaSide : false			},			#name : #isSatisfied,			#protocol : #queries,			#sourceCode : 'isSatisfied\r\t"Answer true if this constraint is satisfied in the current solution."\r\r\t^direction notNil',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4360' ],		#self : OmReference [ '4361' ],		#time : DateAndTime [ '2024-03-03T08:20:59.659-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbBinaryConstraint,				#isMetaSide : false			},			#name : #markUnsatisfied,			#protocol : #planning,			#sourceCode : 'markUnsatisfied\r\t"Record the fact that I am unsatisfied."\r\r\tdirection := nil.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4361' ],		#self : OmReference [ '4362' ],		#time : DateAndTime [ '2024-03-03T08:20:59.659-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbBinaryConstraint,				#isMetaSide : false			},			#name : #output,			#protocol : #planning,			#sourceCode : 'output\r\t"Answer my current output variable."\r\r\t(direction == #forward)\r\t\tifTrue: [^v2]\r\t\tifFalse: [^v1]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4362' ],		#self : OmReference [ '4363' ],		#time : DateAndTime [ '2024-03-03T08:20:59.659-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbBinaryConstraint,				#isMetaSide : false			},			#name : #recalculate,			#protocol : #planning,			#sourceCode : 'recalculate\r\t"Calculate the walkabout strength, the stay flag, and, if it is \'stay\',\r         the value for the current output of this constraint. Assume this\r\t constraint is satisfied."\r\r\t| in out |\r\t(direction == #forward)\r\t\tifTrue: [in := v1. out := v2]\r\t\tifFalse: [in := v2. out := v1].\r\tout walkStrength: (strength weakest: in walkStrength).\r\tout stay: (in stay).\r\t(out stay) ifTrue: [self execute].\t\t"stay optimization"',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4363' ],		#self : OmReference [ '4364' ],		#time : DateAndTime [ '2024-03-03T08:20:59.659-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbBinaryConstraint,				#isMetaSide : false			},			#name : #removeFromGraph,			#protocol : #add/remove,			#sourceCode : 'removeFromGraph\r\t"Remove myself from the constraint graph."\r\r\t(v1 == nil) ifFalse: [v1 removeConstraint: self].\r\t(v2 == nil) ifFalse: [v2 removeConstraint: self].\r\tdirection := nil.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4364' ],		#self : OmReference [ '4365' ],		#time : DateAndTime [ '2024-03-03T08:20:59.66-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbBinaryConstraint,				#isMetaSide : false			},			#name : #'var:var:strength:',			#protocol : #initialize-release,			#sourceCode : 'var: variable1 var: variable2 strength: strengthSymbol\r\t"Initialize myself with the given variables and strength."\r\r\tstrength := PjDbStrength of: strengthSymbol.\r\tv1 := variable1.\r\tv2 := variable2.\r\tdirection := nil.\r\tself addConstraint.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4365' ],		#self : OmReference [ '4366' ],		#time : DateAndTime [ '2024-03-03T08:20:59.66-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDbEqualityConstraint class',				#isMetaSide : true			},			#name : #'var:var:strength:',			#protocol : #'instance creation',			#sourceCode : 'var: variable1 var: variable2 strength: strengthSymbol\r\t"Install a constraint with the given strength equating the given\r\t variables."\r\r\t^(self new) var: variable1 var: variable2 strength: strengthSymbol',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4366' ],		#self : OmReference [ '4367' ],		#time : DateAndTime [ '2024-03-03T08:20:59.66-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbEqualityConstraint,				#isMetaSide : false			},			#name : #execute,			#protocol : #execution,			#sourceCode : 'execute\r\t"Enforce this constraint. Assume that it is satisfied."\r\r\t(direction == #forward)\r\t\tifTrue: [v2 value: v1 value]\r\t\tifFalse: [v1 value: v2 value].',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4367' ],		#self : OmReference [ '4368' ],		#time : DateAndTime [ '2024-03-03T08:20:59.66-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDbScaleConstraint class',				#isMetaSide : true			},			#name : #'var:var:var:var:strength:',			#protocol : #'instance creation',			#sourceCode : 'var: src var: scale var: offset var: dst strength: strengthSymbol\r\t"Install a scale constraint with the given strength on the given\r\t variables."\r\r\t^(self new) src: src scale: scale offset: offset dst: dst strength: strengthSymbol',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4368' ],		#self : OmReference [ '4369' ],		#time : DateAndTime [ '2024-03-03T08:20:59.66-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbScaleConstraint,				#isMetaSide : false			},			#name : #addToGraph,			#protocol : #add/remove,			#sourceCode : 'addToGraph\r\t"Add myself to the constraint graph."\r\r\tv1 addConstraint: self.\r\tv2 addConstraint: self.\r\tscale addConstraint: self.\r\toffset addConstraint: self.\r\tdirection := nil.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4369' ],		#self : OmReference [ '4370' ],		#time : DateAndTime [ '2024-03-03T08:20:59.66-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbScaleConstraint,				#isMetaSide : false			},			#name : #execute,			#protocol : #planning,			#sourceCode : 'execute\r\t"Enforce this constraint. Assume that it is satisfied."\r\r\t(direction == #forward)\r\t\tifTrue: [v2 value: (v1 value * scale value) + offset value]\r\t\tifFalse: [v1 value: (v2 value - offset value) // scale value].',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4370' ],		#self : OmReference [ '4371' ],		#time : DateAndTime [ '2024-03-03T08:20:59.66-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbScaleConstraint,				#isMetaSide : false			},			#name : #'inputsDo:',			#protocol : #planning,			#sourceCode : 'inputsDo: aBlock\r\t"Evaluate the given block on my current input variable."\r\r\t(direction == #forward)\r\t\tifTrue: [aBlock value: v1; value: scale; value: offset]\r\t\tifFalse: [aBlock value: v2; value: scale; value: offset].',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4371' ],		#self : OmReference [ '4372' ],		#time : DateAndTime [ '2024-03-03T08:20:59.66-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbScaleConstraint,				#isMetaSide : false			},			#name : #recalculate,			#protocol : #planning,			#sourceCode : 'recalculate\r\t"Calculate the walkabout strength, the stay flag, and, if it is \'stay\',\r\t the value for the current output of this constraint. Assume this\r\t constraint is satisfied."\r\r\t| in out |\r\t(direction == #forward)\r\t\tifTrue: [in := v1. out := v2]\r\t\tifFalse: [out := v1. in := v2].\r\tout walkStrength: (strength weakest: in walkStrength).\r\tout stay: ((in stay) and: [(scale stay) and: [offset stay]]).\r\t(out stay) ifTrue: [self execute].\t\t"stay optimization"',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4372' ],		#self : OmReference [ '4373' ],		#time : DateAndTime [ '2024-03-03T08:20:59.66-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbScaleConstraint,				#isMetaSide : false			},			#name : #removeFromGraph,			#protocol : #add/remove,			#sourceCode : 'removeFromGraph\r\t"Remove myself from the constraint graph."\r\r\t(v1 == nil) ifFalse: [v1 removeConstraint: self].\r\t(v2 == nil) ifFalse: [v2 removeConstraint: self].\r\t(scale == nil) ifFalse: [scale removeConstraint: self].\r\t(offset == nil) ifFalse: [offset removeConstraint: self].\r\tdirection := nil.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4373' ],		#self : OmReference [ '4374' ],		#time : DateAndTime [ '2024-03-03T08:20:59.661-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbScaleConstraint,				#isMetaSide : false			},			#name : #'src:scale:offset:dst:strength:',			#protocol : #initialize-release,			#sourceCode : 'src: srcVar scale: scaleVar offset: offsetVar dst: dstVar strength: strengthSymbol\r\t"Initialize myself with the given variables and strength."\r\r\tstrength := PjDbStrength of: strengthSymbol.\r\tv1 := srcVar.\r\tv2 := dstVar.\r\tscale := scaleVar.\r\toffset := offsetVar.\r\tdirection := nil.\r\tself addConstraint.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4374' ],		#self : OmReference [ '4375' ],		#time : DateAndTime [ '2024-03-03T08:20:59.661-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDbEditConstraint class',				#isMetaSide : true			},			#name : #'var:strength:',			#protocol : #'instance creation',			#sourceCode : 'var: aVariable strength: strengthSymbol\r\t"Install an edit constraint with the given strength on the given\r\t variable."\r\r\t^(self new) var: aVariable strength: strengthSymbol',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4375' ],		#self : OmReference [ '4376' ],		#time : DateAndTime [ '2024-03-03T08:20:59.661-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbEditConstraint,				#isMetaSide : false			},			#name : #execute,			#protocol : #execution,			#sourceCode : 'execute\r\t"Edit constraints do nothing."',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4376' ],		#self : OmReference [ '4377' ],		#time : DateAndTime [ '2024-03-03T08:20:59.661-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbEditConstraint,				#isMetaSide : false			},			#name : #isInput,			#protocol : #queries,			#sourceCode : 'isInput\r\t"I indicate that a variable is to be changed by imperative code."\r\r\t^true',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4377' ],		#self : OmReference [ '4378' ],		#time : DateAndTime [ '2024-03-03T08:20:59.661-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDbStayConstraint class',				#isMetaSide : true			},			#name : #'var:strength:',			#protocol : #'instance creation',			#sourceCode : 'var: aVariable strength: strengthSymbol\r\t"Install a stay constraint with the given strength on the given variable."\r\r\t^(self new) var: aVariable strength: strengthSymbol',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4378' ],		#self : OmReference [ '4379' ],		#time : DateAndTime [ '2024-03-03T08:20:59.661-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbStayConstraint,				#isMetaSide : false			},			#name : #execute,			#protocol : #execution,			#sourceCode : 'execute\r\t"Stay constraints do nothing."',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4379' ],		#self : OmReference [ '4380' ],		#time : DateAndTime [ '2024-03-03T08:20:59.661-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDbUnaryConstraint class',				#isMetaSide : true			},			#name : #isAbstract,			#protocol : #testing,			#sourceCode : 'isAbstract\r\r\t^ self = PjDbUnaryConstraint',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4380' ],		#self : OmReference [ '4381' ],		#time : DateAndTime [ '2024-03-03T08:20:59.661-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbUnaryConstraint,				#isMetaSide : false			},			#name : #addToGraph,			#protocol : #add/remove,			#sourceCode : 'addToGraph\r\t"Add myself to the constraint graph."\r\r\toutput addConstraint: self.\r\tsatisfied := false.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4381' ],		#self : OmReference [ '4382' ],		#time : DateAndTime [ '2024-03-03T08:20:59.661-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbUnaryConstraint,				#isMetaSide : false			},			#name : #'chooseMethod:',			#protocol : #planning,			#sourceCode : 'chooseMethod: mark\r\t"Decide if I can be satisfied and record that decision."\r\r\tsatisfied :=\r\t\t(output mark ~= mark) and:\r\t\t[strength stronger: output walkStrength].',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4382' ],		#self : OmReference [ '4383' ],		#time : DateAndTime [ '2024-03-03T08:20:59.662-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbUnaryConstraint,				#isMetaSide : false			},			#name : #execute,			#protocol : #planning,			#sourceCode : 'execute\r\t"Enforce this constraint. Assume that it is satisfied."\r\r\tself subclassResponsibility',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4383' ],		#self : OmReference [ '4384' ],		#time : DateAndTime [ '2024-03-03T08:20:59.662-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbUnaryConstraint,				#isMetaSide : false			},			#name : #'inputsDo:',			#protocol : #planning,			#sourceCode : 'inputsDo: aBlock\r\t"I have no input variables."',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4384' ],		#self : OmReference [ '4385' ],		#time : DateAndTime [ '2024-03-03T08:20:59.662-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbUnaryConstraint,				#isMetaSide : false			},			#name : #isSatisfied,			#protocol : #queries,			#sourceCode : 'isSatisfied\r\t"Answer true if this constraint is satisfied in the current solution."\r\r\t^satisfied',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4385' ],		#self : OmReference [ '4386' ],		#time : DateAndTime [ '2024-03-03T08:20:59.662-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbUnaryConstraint,				#isMetaSide : false			},			#name : #markUnsatisfied,			#protocol : #planning,			#sourceCode : 'markUnsatisfied\r\t"Record the fact that I am unsatisfied."\r\r\tsatisfied := false.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4386' ],		#self : OmReference [ '4387' ],		#time : DateAndTime [ '2024-03-03T08:20:59.662-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbUnaryConstraint,				#isMetaSide : false			},			#name : #output,			#protocol : #planning,			#sourceCode : 'output\r\t"Answer my current output variable."\r\r\t^output',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4387' ],		#self : OmReference [ '4388' ],		#time : DateAndTime [ '2024-03-03T08:20:59.662-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbUnaryConstraint,				#isMetaSide : false			},			#name : #recalculate,			#protocol : #planning,			#sourceCode : 'recalculate\r\t"Calculate the walkabout strength, the stay flag, and, if it is \'stay\',\r\t the value for the current output of this constraint. Assume this\r\t constraint is satisfied."\r\r\toutput walkStrength: strength.\r\toutput stay: (self isInput not).\r\t(output stay) ifTrue: [self execute].\t"stay optimization"',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4388' ],		#self : OmReference [ '4389' ],		#time : DateAndTime [ '2024-03-03T08:20:59.662-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbUnaryConstraint,				#isMetaSide : false			},			#name : #removeFromGraph,			#protocol : #add/remove,			#sourceCode : 'removeFromGraph\r\t"Remove myself from the constraint graph."\r\r\t(output == nil) ifFalse: [output removeConstraint: self].\r\tsatisfied := false.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4389' ],		#self : OmReference [ '4390' ],		#time : DateAndTime [ '2024-03-03T08:20:59.662-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbUnaryConstraint,				#isMetaSide : false			},			#name : #'var:strength:',			#protocol : #initialize-release,			#sourceCode : 'var: aVariable strength: strengthSymbol\r\t"Initialize myself with the given variable and strength."\r\r\tstrength := PjDbStrength of: strengthSymbol.\r\toutput := aVariable.\r\tsatisfied := false.\r\tself addConstraint.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4390' ],		#self : OmReference [ '4391' ],		#time : DateAndTime [ '2024-03-03T08:20:59.662-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDbPlanner class',				#isMetaSide : true			},			#name : #'chainTest:',			#protocol : #benchmarks,			#sourceCode : 'chainTest: n\r\t"Do chain-of-equality-constraints performance tests."\r\r\t| vars editConstraint plan planner |\r\tplanner := PjDbPlanner new.\r\tvars := (1 to: n+1) collect: [ :i | PjDbVariable new].\r\r\t"thread a chain of equality constraints through the variables"\r\t1 to: n do:\r\t\t[ :i || v1 v2 |\r\t\t v1 := vars at: i.\r\t\t v2 := vars at: i + 1.\r\t\t PjDbEqualityConstraint var: v1 var: v2 strength: #required].\r\r\tPjDbStayConstraint var: vars last strength: #strongDefault.\r\teditConstraint := PjDbEditConstraint var: (vars first) strength: #preferred.\r\tplan := planner extractPlanFromConstraints: (Array with: editConstraint).\r\t1 to: 100 do: [ :v | \r\t\tvars first value: v.\r\t\tplan execute.\r\t\tvars last value ~= v ifTrue: [self error: \'Chain test failed!\']].\r\teditConstraint destroyConstraint',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4391' ],		#self : OmReference [ '4392' ],		#time : DateAndTime [ '2024-03-03T08:20:59.662-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDbPlanner class',				#isMetaSide : true			},			#name : #current,			#protocol : #accessing,			#sourceCode : 'current\r\t^currentPlanner',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4392' ],		#self : OmReference [ '4393' ],		#time : DateAndTime [ '2024-03-03T08:20:59.663-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDbPlanner class',				#isMetaSide : true			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new\r\t^currentPlanner := super new initialize',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4393' ],		#self : OmReference [ '4394' ],		#time : DateAndTime [ '2024-03-03T08:20:59.663-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDbPlanner class',				#isMetaSide : true			},			#name : #'projectionTest:',			#protocol : #benchmarks,			#sourceCode : 'projectionTest: n\r\t"This test constructs a two sets of variables related to each other by\r\t a simple linear transformation (scale and offset)."\r\r\t| scale offset src dst planner dests |\r\tplanner := PjDbPlanner new.\r\tdests := OrderedCollection new.\r\tscale := PjDbVariable value: 10.\r\toffset := PjDbVariable value: 1000.\r\t1 to: n do:\r\t\t[ :i |\r\t\tsrc := PjDbVariable value: i.\r\t\tdst := PjDbVariable value: i.\r\t\tdests add: dst.\r\t\tPjDbStayConstraint var: src strength: #default.\r\t\tPjDbScaleConstraint var: src var: scale var: offset var: dst strength: #required].\r\r\tplanner changeVar: src newValue: 17.\r\tdst value ~= 1170 ifTrue: [self error: \'Projection test 1 failed!\'].\r\r\tplanner changeVar: dst newValue: 1050.\r\tsrc value ~= 5 ifTrue: [self error: \'Projection test 2 failed!\'].\r\r\tplanner changeVar: scale newValue: 5.\r\t1 to: n - 1 do: [ :i |\r\t\t(dests at: i) value ~= (i*5 + 1000)\r\t\t\tifTrue: [self error: \'Projection test 3 failed!\']].\r\r\tplanner changeVar: offset newValue: 2000.\r\t1 to: n - 1 do: [ :i |\r\t\t(dests at: i) value ~= (i*5 + 2000)\r\t\t\tifTrue: [self error: \'Projection test 4 failed!\']].',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4394' ],		#self : OmReference [ '4395' ],		#time : DateAndTime [ '2024-03-03T08:20:59.663-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDbPlanner class',				#isMetaSide : true			},			#name : #'report:times:run:',			#protocol : #benchmarks,			#sourceCode : 'report: string times: count run: aBlock\r\t<pharoJsSkip>\r\t"Report the time required to execute the given block."\r\r\t| time |\r\ttime := Time millisecondsToRun: [count timesRepeat: aBlock].\r\tTranscript show: string, \' \', (time // count) printString, \' milliseconds\'; cr.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4395' ],		#self : OmReference [ '4396' ],		#time : DateAndTime [ '2024-03-03T08:20:59.663-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDbPlanner class',				#isMetaSide : true			},			#name : #standardBenchmark,			#protocol : #benchmarks,			#sourceCode : 'standardBenchmark\r\t<pharoJsSkip>\r\t"This the combined benchmark."\r\t"PjDbPlanner standardBenchmark"\r\r\tself report: \'Chain and projection tests\' times: 100 run: [\r\t\tself chainTest: 10000. \r\t\tself projectionTest: 10000\r\t]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4396' ],		#self : OmReference [ '4397' ],		#time : DateAndTime [ '2024-03-03T08:20:59.663-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbPlanner,				#isMetaSide : false			},			#name : #'addConstraintsConsuming:to:',			#protocol : #private,			#sourceCode : 'addConstraintsConsuming: v to: aCollection\r\r\t| determiningC |\r\tdeterminingC := v determinedBy.\r\tv constraints do:\r\t\t[: c |\r\t\t ((c == determiningC) or: [c isSatisfied not]) ifFalse:\r\t\t\t[aCollection add: c]]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4397' ],		#self : OmReference [ '4398' ],		#time : DateAndTime [ '2024-03-03T08:20:59.663-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbPlanner,				#isMetaSide : false			},			#name : #'addPropagate:mark:',			#protocol : #private,			#sourceCode : 'addPropagate: c mark: mark\r\t"Recompute the walkabout strengths and stay flags of all variables\r\t downstream of the given constraint and recompute the actual values\r\t of all variables whose stay flag is true. If a cycle is detected,\r\t remove the given constraint and answer false. Otherwise, answer true.\r\r\t Details: Cycles are detected when a marked variable is encountered\r\t downstream of the given constraint. The sender is assumed to have\r\t marked the inputs of the given constraint with the given mark. Thus,\r\t encountering a marked node downstream of the output constraint means\r\t that there is a path from the constraint\'s output to one of its\r\t inputs."\r\r\t| todo d |\r\ttodo := OrderedCollection with: c.\r\t[todo isEmpty] whileFalse:\r\t\t[d := todo removeFirst.\r\t\t (d output mark = mark) ifTrue:\r\t\t\t[self incrementalRemove: c.\r\t\t\t ^false].\r\t\t d recalculate.\r\t\t self addConstraintsConsuming: d output to: todo].\r\t^true',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4398' ],		#self : OmReference [ '4399' ],		#time : DateAndTime [ '2024-03-03T08:20:59.663-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbPlanner,				#isMetaSide : false			},			#name : #'changeVar:newValue:',			#protocol : #private,			#sourceCode : 'changeVar: aVariable newValue: newValue\r\r\t| editConstraint plan |\r\teditConstraint := PjDbEditConstraint\r\t\t                  var: aVariable\r\t\t                  strength: #preferred.\r\tplan := self extractPlanFromConstraints: (Array with: editConstraint).\r\t10 timesRepeat: [ \r\t\taVariable value: newValue.\r\t\tplan execute ].\r\teditConstraint destroyConstraint',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4399' ],		#self : OmReference [ '4400' ],		#time : DateAndTime [ '2024-03-03T08:20:59.663-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbPlanner,				#isMetaSide : false			},			#name : #'constraintsConsuming:do:',			#protocol : #private,			#sourceCode : 'constraintsConsuming: v do: aBlock\r\r\t| determiningC |\r\tdeterminingC := v determinedBy.\r\tv constraints do: [ :c | \r\t\t(c == determiningC or: [ c isSatisfied not ]) ifFalse: [ \r\t\t\taBlock value: c ] ]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4400' ],		#self : OmReference [ '4401' ],		#time : DateAndTime [ '2024-03-03T08:20:59.663-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbPlanner,				#isMetaSide : false			},			#name : #'extractPlanFromConstraints:',			#protocol : #'planning/value propagation',			#sourceCode : 'extractPlanFromConstraints: constraints\r\t"Extract a plan for resatisfaction starting from the outputs of the\r\t given constraints, usually a set of input constraints."\r\r\t| sources |\r\tsources := OrderedCollection new.\r\tconstraints do: [ :c | \r\t\t(c isInput and: [ c isSatisfied ]) ifTrue: [ sources add: c ] ].\r\t^ self makePlan: sources',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4401' ],		#self : OmReference [ '4402' ],		#time : DateAndTime [ '2024-03-03T08:20:59.664-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbPlanner,				#isMetaSide : false			},			#name : #'extractPlanFromVariables:',			#protocol : #'planning/value propagation',			#sourceCode : 'extractPlanFromVariables: variables\r\r\t"Extract a plan from the dataflow graph having the given variables. It\r\t is assumed that the given set of variables is complete, or at least\r\t that it contains all the input variables."\r\r\t| sources |\r\tsources := OrderedCollection new.\r\tvariables do: [ :v | \r\t\tv constraints do: [ :c | \r\t\t\t(c isInput and: [ c isSatisfied ]) ifTrue: [ sources add: c ] ] ].\r\t^ self makePlan: sources',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4402' ],		#self : OmReference [ '4403' ],		#time : DateAndTime [ '2024-03-03T08:20:59.664-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbPlanner,				#isMetaSide : false			},			#name : #'incrementalAdd:',			#protocol : #add/remove,			#sourceCode : 'incrementalAdd: c\r\t"Attempt to satisfy the given constraint and, if successful,\r\t incrementally update the dataflow graph.\r\r\t Details: If satifying the constraint is successful, it may override a\r\t weaker constraint on its output. The algorithm attempts to resatisfy\r\t that constraint using some other method. This process is repeated\r\t until either a) it reaches a variable that was not previously\r\t determined by any constraint or b) it reaches a constraint that\r\t is too weak to be satisfied using any of its methods. The variables\r\t of constraints that have been processed are marked with a unique mark\r\t value so that we know where we\'ve been. This allows the algorithm to\r\t avoid getting into an infinite loop even if the constraint graph has\r\t an inadvertent cycle."\r\r\t| mark overridden |\r\tmark := self newMark.\r\toverridden := c satisfy: mark.\r\t[overridden == nil] whileFalse:\r\t\t[overridden := overridden satisfy: mark].',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4403' ],		#self : OmReference [ '4404' ],		#time : DateAndTime [ '2024-03-03T08:20:59.664-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbPlanner,				#isMetaSide : false			},			#name : #'incrementalRemove:',			#protocol : #add/remove,			#sourceCode : 'incrementalRemove: c\r\t"Entry point for retracting a constraint. Remove the given constraint,\r\t which should be satisfied, and incrementally update the dataflow\r\t graph.\r\r\t Details: Retracting the given constraint may allow some currently\r\t unsatisfiable downstream constraint be satisfied. We thus collect a\r\t list of unsatisfied downstream constraints and attempt to satisfy\r\t each one in turn. This list is sorted by constraint strength,\r\t strongest first, as a heuristic for avoiding unnecessarily adding\r\t and then overriding weak constraints."\r\r\t| out unsatisfied |\r\tout := c output.\r\tc markUnsatisfied.\r\tc removeFromGraph.\r\tunsatisfied := self removePropagateFrom: out.\r\tunsatisfied do: [: u | self incrementalAdd: u]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4404' ],		#self : OmReference [ '4405' ],		#time : DateAndTime [ '2024-03-03T08:20:59.664-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbPlanner,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\r\tcurrentMark := 1',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4405' ],		#self : OmReference [ '4406' ],		#time : DateAndTime [ '2024-03-03T08:20:59.664-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbPlanner,				#isMetaSide : false			},			#name : #'makePlan:',			#protocol : #'planning/value propagation',			#sourceCode : 'makePlan: sources\r\t"Extract a plan for resatisfaction starting from the given satisfied\r\t source constraints, usually a set of input constraints. This method\r\t assumes that stay optimization is desired; the plan will contain only\r\t constraints whose output variables are not stay. Constraints that do\r\t no computation, such as stay and edit constraints, are not included\r\t in the plan.\r\r\t Details: The outputs of a constraint are marked when it is added to\r\t the plan under construction. A constraint may be appended to the plan\r\t when all its input variables are known. A variable is known if either\r\t a) the variable is marked (indicating that has been computed by a\r\t constraint appearing earlier in the plan), b) the variable is \'stay\'\r\t (i.e. it is a constant at plan execution time), or c) the variable\r\t is not determined by any constraint. The last provision is for past\r\t states of history variables, which are not stay but which are also\r\t not computed by any constraint."\r\r\t| mark plan todo c |\r\tmark := self newMark.\r\tplan := PjDbPlan new.\r\ttodo := sources.\r\t[todo isEmpty] whileFalse:\r\t\t[c := todo removeFirst.\r\t\t ((c output mark ~= mark) and:\t\t"not in plan already and..."\r\t\t  [c inputsKnown: mark]) ifTrue:\t"eligible for inclusion"\r\t\t\t[plan addLast: c.\r\t\t\t c output mark: mark.\r\t\t\t self addConstraintsConsuming: c output to: todo]].\r\t^plan',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4406' ],		#self : OmReference [ '4407' ],		#time : DateAndTime [ '2024-03-03T08:20:59.664-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbPlanner,				#isMetaSide : false			},			#name : #newMark,			#protocol : #private,			#sourceCode : 'newMark\r\t"Select a previously unused mark value.\r\r\t Details: We just keep incrementing. If necessary, the counter will\r\t turn into a LargePositiveInteger. In that case, it will be a bit\r\t slower to compute the next mark but the algorithms will all behave\r\t correctly. We reserve the value \'0\' to mean \'unmarked\'. Thus, this\r\t generator starts at \'1\' and will never produce \'0\' as a mark value."\r\r\t^currentMark := currentMark + 1',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4407' ],		#self : OmReference [ '4408' ],		#time : DateAndTime [ '2024-03-03T08:20:59.664-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbPlanner,				#isMetaSide : false			},			#name : #'propagateFrom:',			#protocol : #'planning/value propagation',			#sourceCode : 'propagateFrom: v\r\t"The given variable has changed. Propagate new values downstream."\r\r\t| todo c |\r\ttodo := OrderedCollection new.\r\tself addConstraintsConsuming: v to: todo.\r\t[todo isEmpty] whileFalse:\r\t\t[c := todo removeFirst.\r\t\t c execute.\r\t\t self addConstraintsConsuming: c output to: todo].',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4408' ],		#self : OmReference [ '4409' ],		#time : DateAndTime [ '2024-03-03T08:20:59.664-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbPlanner,				#isMetaSide : false			},			#name : #'removePropagateFrom:',			#protocol : #private,			#sourceCode : 'removePropagateFrom: out\r\t"Update the walkabout strengths and stay flags of all variables\r\t downstream of the given constraint. Answer a collection of unsatisfied\r\t constraints sorted in order of decreasing strength."\r\r\t| unsatisfied todo v nextC |\r\tunsatisfied := SortedCollection sortBlock:\r\t\t[: c1 : c2 | c1 strength stronger: c2 strength].\r\tout determinedBy: nil.\r\tout walkStrength: PjDbStrength absoluteWeakest.\r\tout stay: true.\r\ttodo := OrderedCollection with: out.\r\t[todo isEmpty] whileFalse:\r\t\t[v := todo removeFirst.\r\t\t v constraints do:\r\t\t \t[: c | (c isSatisfied) ifFalse: [unsatisfied add: c]].\r\t\t self constraintsConsuming: v do:\r\t\t\t[: c |\r\t\t\t c recalculate.\r\t\t\t todo add: c output]].\r\t^unsatisfied',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4409' ],		#self : OmReference [ '4410' ],		#time : DateAndTime [ '2024-03-03T08:20:59.664-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDbStrength class',				#isMetaSide : true			},			#name : #absoluteStrongest,			#protocol : #constants,			#sourceCode : 'absoluteStrongest\r\r\t^AbsoluteStrongest',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4410' ],		#self : OmReference [ '4411' ],		#time : DateAndTime [ '2024-03-03T08:20:59.665-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDbStrength class',				#isMetaSide : true			},			#name : #absoluteWeakest,			#protocol : #constants,			#sourceCode : 'absoluteWeakest\r\r\t^AbsoluteWeakest',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4411' ],		#self : OmReference [ '4412' ],		#time : DateAndTime [ '2024-03-03T08:20:59.665-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDbStrength class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'class initialization',			#sourceCode : 'initialize\r\t"Initialize the symbolic strength table. Fix the internally caches\r\t values of all existing instances."\r\t"Strength initialize"\r\r\tStrengthTable := Dictionary new.\r\tStrengthTable at: #absoluteStrongest put: -10000.\r\tStrengthTable at: #required put: -800.\r\tStrengthTable at: #strongPreferred put: -600.\r\tStrengthTable at: #preferred put: -400.\r\tStrengthTable at: #strongDefault put: -200.\r\tStrengthTable at: #default put: 0.\r\tStrengthTable at: #weakDefault put: 500.\r\tStrengthTable at: #absoluteWeakest put: 10000.\r\r\tStrengthConstants := Dictionary new.\r\tStrengthTable keys do:\r\t\t[: strengthSymbol |\r\t\t\tStrengthConstants\r\t\t\t\tat: strengthSymbol\r\t\t\t\tput: ((super new) initializeWith: strengthSymbol)].\r\r\tAbsoluteStrongest := PjDbStrength of: #absoluteStrongest.\r\tAbsoluteWeakest := PjDbStrength of: #absoluteWeakest.\r\tRequired := PjDbStrength of: #required.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4412' ],		#self : OmReference [ '4413' ],		#time : DateAndTime [ '2024-03-03T08:20:59.665-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDbStrength class',				#isMetaSide : true			},			#name : #'of:',			#protocol : #'instance creation',			#sourceCode : 'of: aSymbol\r\t"Answer an instance with the specified strength."\r\r\t^StrengthConstants at: aSymbol',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4413' ],		#self : OmReference [ '4414' ],		#time : DateAndTime [ '2024-03-03T08:20:59.665-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDbStrength class',				#isMetaSide : true			},			#name : #required,			#protocol : #constants,			#sourceCode : 'required\r\r\t^Required',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4414' ],		#self : OmReference [ '4415' ],		#time : DateAndTime [ '2024-03-03T08:20:59.666-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbStrength,				#isMetaSide : false			},			#name : #arithmeticValue,			#protocol : #private,			#sourceCode : 'arithmeticValue\r\t"Answer my arithmetic value. Used for comparisons. Note that\r\t STRONGER constraints have SMALLER arithmetic values."\r\r\t^arithmeticValue',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4415' ],		#self : OmReference [ '4416' ],		#time : DateAndTime [ '2024-03-03T08:20:59.666-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbStrength,				#isMetaSide : false			},			#name : #'initializeWith:',			#protocol : #private,			#sourceCode : 'initializeWith: symVal\r\t"Record my symbolic value and reset my arithmetic value."\r\r\tsymbolicValue := symVal.\r\tarithmeticValue := StrengthTable at: symbolicValue.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4416' ],		#self : OmReference [ '4417' ],		#time : DateAndTime [ '2024-03-03T08:20:59.666-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbStrength,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\t"Append a string which represents my strength onto aStream."\r\r\taStream nextPutAll: \'%\', symbolicValue, \'%\'.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4417' ],		#self : OmReference [ '4418' ],		#time : DateAndTime [ '2024-03-03T08:20:59.666-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbStrength,				#isMetaSide : false			},			#name : #'sameAs:',			#protocol : #comparing,			#sourceCode : 'sameAs: aStrength\r\t"Answer true if I am the same strength as the given Strength."\r\r\t^arithmeticValue = aStrength arithmeticValue',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4418' ],		#self : OmReference [ '4419' ],		#time : DateAndTime [ '2024-03-03T08:20:59.666-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbStrength,				#isMetaSide : false			},			#name : #'stronger:',			#protocol : #comparing,			#sourceCode : 'stronger: aStrength\r\t"Answer true if I am stronger than the given Strength."\r\r\t^arithmeticValue < aStrength arithmeticValue',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4419' ],		#self : OmReference [ '4420' ],		#time : DateAndTime [ '2024-03-03T08:20:59.666-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbStrength,				#isMetaSide : false			},			#name : #'strongest:',			#protocol : #max/min,			#sourceCode : 'strongest: aStrength\r\t"Answer the stronger of myself and aStrength."\r\r\t(aStrength stronger: self)\r\t\tifTrue: [^aStrength]\r\t\tifFalse: [^self].',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4420' ],		#self : OmReference [ '4421' ],		#time : DateAndTime [ '2024-03-03T08:20:59.666-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbStrength,				#isMetaSide : false			},			#name : #'weaker:',			#protocol : #comparing,			#sourceCode : 'weaker: aStrength\r\t"Answer true if I am weaker than the given Strength."\r\r\t^arithmeticValue > aStrength arithmeticValue',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4421' ],		#self : OmReference [ '4422' ],		#time : DateAndTime [ '2024-03-03T08:20:59.666-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbStrength,				#isMetaSide : false			},			#name : #'weakest:',			#protocol : #max/min,			#sourceCode : 'weakest: aStrength\r\t"Answer the weaker of myself and aStrength."\r\r\t(aStrength weaker: self)\r\t\tifTrue: [^aStrength]\r\t\tifFalse: [^self].',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4422' ],		#self : OmReference [ '4423' ],		#time : DateAndTime [ '2024-03-03T08:20:59.666-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjDbVariable class',				#isMetaSide : true			},			#name : #'value:',			#protocol : #'instance creation',			#sourceCode : 'value: aValue\r\r\t^self new value: aValue',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4423' ],		#self : OmReference [ '4424' ],		#time : DateAndTime [ '2024-03-03T08:20:59.667-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbVariable,				#isMetaSide : false			},			#name : #'addConstraint:',			#protocol : #access,			#sourceCode : 'addConstraint: aConstraint\r\t"Add the given constraint to the set of all constraints that refer\r\t to me."\r\r\tconstraints add: aConstraint.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4424' ],		#self : OmReference [ '4425' ],		#time : DateAndTime [ '2024-03-03T08:20:59.667-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbVariable,				#isMetaSide : false			},			#name : #constraints,			#protocol : #access,			#sourceCode : 'constraints\r\t"Answer the set of constraints that refer to me."\r\r\t^constraints',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4425' ],		#self : OmReference [ '4426' ],		#time : DateAndTime [ '2024-03-03T08:20:59.667-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbVariable,				#isMetaSide : false			},			#name : #determinedBy,			#protocol : #access,			#sourceCode : 'determinedBy\r\t"Answer the constraint that determines my value in the current\r\t dataflow."\r\r\t^determinedBy',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4426' ],		#self : OmReference [ '4427' ],		#time : DateAndTime [ '2024-03-03T08:20:59.667-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbVariable,				#isMetaSide : false			},			#name : #'determinedBy:',			#protocol : #access,			#sourceCode : 'determinedBy: aConstraint\r\t"Record that the given constraint determines my value in the current\r\t data flow."\r\r\tdeterminedBy := aConstraint.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4427' ],		#self : OmReference [ '4428' ],		#time : DateAndTime [ '2024-03-03T08:20:59.667-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbVariable,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\r\tvalue := 0.\r\tconstraints := OrderedCollection new: 2.\r\tdeterminedBy := nil.\r\twalkStrength := PjDbStrength absoluteWeakest.\r\tstay := true.\r\tmark := 0.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4428' ],		#self : OmReference [ '4429' ],		#time : DateAndTime [ '2024-03-03T08:20:59.667-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbVariable,				#isMetaSide : false			},			#name : #'longPrintOn:',			#protocol : #printing,			#sourceCode : 'longPrintOn: aStream\r\r\tself shortPrintOn: aStream.\r\taStream nextPutAll: \'   Constraints: \'.\r\t(constraints isEmpty)\r\t\tifTrue: [aStream cr; tab; nextPutAll: \'none\']\r\t\tifFalse:\r\t\t\t[constraints do:\r\t\t\t\t[: c | aStream cr; tab. c shortPrintOn: aStream]].\r\t(determinedBy isNil) ifFalse:\r\t\t[aStream cr; nextPutAll: \'   Determined by: \'.\r\t\t aStream cr; tab. determinedBy shortPrintOn: aStream].\r\taStream cr.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4429' ],		#self : OmReference [ '4430' ],		#time : DateAndTime [ '2024-03-03T08:20:59.667-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbVariable,				#isMetaSide : false			},			#name : #mark,			#protocol : #access,			#sourceCode : 'mark\r\t"Answer my mark value."\r\r\t^mark',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4430' ],		#self : OmReference [ '4431' ],		#time : DateAndTime [ '2024-03-03T08:20:59.667-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbVariable,				#isMetaSide : false			},			#name : #'mark:',			#protocol : #access,			#sourceCode : 'mark: markValue\r\t"Set my mark value."\r\r\tmark := markValue.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4431' ],		#self : OmReference [ '4432' ],		#time : DateAndTime [ '2024-03-03T08:20:59.667-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbVariable,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\r\tself shortPrintOn: aStream',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4432' ],		#self : OmReference [ '4433' ],		#time : DateAndTime [ '2024-03-03T08:20:59.667-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbVariable,				#isMetaSide : false			},			#name : #'removeConstraint:',			#protocol : #access,			#sourceCode : 'removeConstraint: c\r\t"Remove all traces of c from this variable."\r\r\tconstraints remove: c ifAbsent: [].\r\t(determinedBy == c) ifTrue: [determinedBy := nil].',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4433' ],		#self : OmReference [ '4434' ],		#time : DateAndTime [ '2024-03-03T08:20:59.668-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbVariable,				#isMetaSide : false			},			#name : #'setValue:',			#protocol : #changes,			#sourceCode : 'setValue: aValue\r\t"Attempt to assign the given value to me using a strength of\r\t #preferred."\r\r\tself setValue: aValue strength: #preferred.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4434' ],		#self : OmReference [ '4435' ],		#time : DateAndTime [ '2024-03-03T08:20:59.668-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbVariable,				#isMetaSide : false			},			#name : #'setValue:strength:',			#protocol : #changes,			#sourceCode : 'setValue: aValue strength: strengthSymbol\r\t"Attempt to assign the given value to me using the given strength."\r\r\t| editConstraint |\r\teditConstraint := PjDbEditConstraint var: self strength: strengthSymbol.\r\t(editConstraint isSatisfied) ifTrue:\r\t\t[self value: aValue.\r\t\t PjDbPlanner propagateFrom: self].\r\teditConstraint destroyConstraint.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4435' ],		#self : OmReference [ '4436' ],		#time : DateAndTime [ '2024-03-03T08:20:59.668-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbVariable,				#isMetaSide : false			},			#name : #'shortPrintOn:',			#protocol : #printing,			#sourceCode : 'shortPrintOn: aStream\r\r\taStream nextPutAll: \'V(\', self asOop printString, \', \'.\r\taStream nextPutAll: walkStrength printString, \', \'.\r\t(stay isNil) ifFalse:\r\t\t[aStream nextPutAll: (stay ifTrue: [\'stay, \'] ifFalse: [\'changing, \'])].\r\taStream nextPutAll: value printString.\r\taStream nextPutAll: \')\'.\r\taStream cr.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4436' ],		#self : OmReference [ '4437' ],		#time : DateAndTime [ '2024-03-03T08:20:59.668-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbVariable,				#isMetaSide : false			},			#name : #stay,			#protocol : #access,			#sourceCode : 'stay\r\t"Answer my stay flag."\r\r\t^stay',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4437' ],		#self : OmReference [ '4438' ],		#time : DateAndTime [ '2024-03-03T08:20:59.668-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbVariable,				#isMetaSide : false			},			#name : #'stay:',			#protocol : #access,			#sourceCode : 'stay: aBoolean\r\t"Set my stay flag."\r\r\tstay := aBoolean',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4438' ],		#self : OmReference [ '4439' ],		#time : DateAndTime [ '2024-03-03T08:20:59.668-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbVariable,				#isMetaSide : false			},			#name : #value,			#protocol : #access,			#sourceCode : 'value\r\t"Answer my value."\r\r\t^value',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4439' ],		#self : OmReference [ '4440' ],		#time : DateAndTime [ '2024-03-03T08:20:59.668-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbVariable,				#isMetaSide : false			},			#name : #'value:',			#protocol : #access,			#sourceCode : 'value: anObject\r\t"Set my value."\r\r\tvalue := anObject.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4440' ],		#self : OmReference [ '4441' ],		#time : DateAndTime [ '2024-03-03T08:20:59.668-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbVariable,				#isMetaSide : false			},			#name : #walkStrength,			#protocol : #access,			#sourceCode : 'walkStrength\r\t"Answer my walkabout strength in the current dataflow."\r\r\t^walkStrength',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4441' ],		#self : OmReference [ '4442' ],		#time : DateAndTime [ '2024-03-03T08:20:59.669-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjDbVariable,				#isMetaSide : false			},			#name : #'walkStrength:',			#protocol : #access,			#sourceCode : 'walkStrength: aStrength\r\t"Set my walkabout strength in the current dataflow."\r\r\twalkStrength := aStrength.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4442' ],		#self : OmReference [ '4443' ],		#time : DateAndTime [ '2024-03-03T08:20:59.669-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExportBenchmarks class',				#isMetaSide : true			},			#name : #benchAllExport,			#protocol : #benchmarking,			#sourceCode : 'benchAllExport\r\r\t<script>\r\tself benchExportingNodeTimingApplication.\r\tself benchExportingBrowserTimingApplication ',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4443' ],		#self : OmReference [ '4444' ],		#time : DateAndTime [ '2024-03-03T08:20:59.669-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExportBenchmarks class',				#isMetaSide : true			},			#name : #'benchExporting:',			#protocol : #benchmarking,			#sourceCode : 'benchExporting: appClass\r\r\tself benchExporting: appClass runsCount: self runsCount',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4444' ],		#self : OmReference [ '4445' ],		#time : DateAndTime [ '2024-03-03T08:20:59.669-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExportBenchmarks class',				#isMetaSide : true			},			#name : #'benchExporting:runsCount:',			#protocol : #benchmarking,			#sourceCode : 'benchExporting: appClass runsCount: runs\r\r\tself new benchExporting: appClass runsCount: runs',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4445' ],		#self : OmReference [ '4446' ],		#time : DateAndTime [ '2024-03-03T08:20:59.669-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExportBenchmarks class',				#isMetaSide : true			},			#name : #benchExportingBrowserTimingApplication,			#protocol : #benchmarking,			#sourceCode : 'benchExportingBrowserTimingApplication\r\t<script>\r\tself benchExporting: PjBrowserTimingApplication ',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4446' ],		#self : OmReference [ '4447' ],		#time : DateAndTime [ '2024-03-03T08:20:59.669-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExportBenchmarks class',				#isMetaSide : true			},			#name : #benchExportingNodeTimingApplication,			#protocol : #benchmarking,			#sourceCode : 'benchExportingNodeTimingApplication\r\t<script>\r\tself benchExporting: PjNodeTimingApplication ',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4447' ],		#self : OmReference [ '4448' ],		#time : DateAndTime [ '2024-03-03T08:20:59.669-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExportBenchmarks class',				#isMetaSide : true			},			#name : #'runExporting:',			#protocol : #benchmarking,			#sourceCode : 'runExporting: appClass\r\r\tself new runExporting: appClass',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4448' ],		#self : OmReference [ '4449' ],		#time : DateAndTime [ '2024-03-03T08:20:59.669-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjExportBenchmarks class',				#isMetaSide : true			},			#name : #runsCount,			#protocol : #benchmarking,			#sourceCode : 'runsCount\r\r\t^ 100',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4449' ],		#self : OmReference [ '4450' ],		#time : DateAndTime [ '2024-03-03T08:20:59.669-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExportBenchmarks,				#isMetaSide : false			},			#name : #'benchExporting:runsCount:',			#protocol : #benchmarking,			#sourceCode : 'benchExporting: appClass runsCount: runs\r\r\tTranscript\r\t\tcr;\r\t\tcr;\r\t\tshow: \'--- \';\r\t\tshow: appClass;\r\t\tshow: \' export bench at: \';\r\t\tshow: Time now print24;\r\t\tshow: \' - runs: \';\r\t\tshow: runs;\r\t\tshow: \'------------\'.\r\truns timesRepeat: [ self runExporting: appClass ]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4450' ],		#self : OmReference [ '4451' ],		#time : DateAndTime [ '2024-03-03T08:20:59.669-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExportBenchmarks,				#isMetaSide : false			},			#name : #'export:',			#protocol : #benchmarking,			#sourceCode : 'export: appClass\r\r\t| exporter |\r\texporter := PjExporter newWithAppClass: appClass.\r\t^exporter javascriptCode',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4451' ],		#self : OmReference [ '4452' ],		#time : DateAndTime [ '2024-03-03T08:20:59.67-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjExportBenchmarks,				#isMetaSide : false			},			#name : #'runExporting:',			#protocol : #benchmarking,			#sourceCode : 'runExporting: appClass\r\r\tSmalltalk garbageCollect.\r\tTranscript\r\t\t  cr;\r\t\t  show: [ self export: appClass ]\r\t\t                         timeToRunWithoutGC.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4452' ],		#self : OmReference [ '4453' ],		#time : DateAndTime [ '2024-03-03T08:20:59.67-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjPharoTimingApplication class',				#isMetaSide : true			},			#name : #start,			#protocol : #'start-stop application',			#sourceCode : 'start\r\t<script>\r\t\r\tTranscript clear.\r\tPjTimingApplication runTimings: self new',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4453' ],		#self : OmReference [ '4454' ],		#time : DateAndTime [ '2024-03-03T08:20:59.67-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPharoTimingApplication,				#isMetaSide : false			},			#name : #cr,			#protocol : #accessing,			#sourceCode : 'cr\r\t^Transcript cr',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4454' ],		#self : OmReference [ '4455' ],		#time : DateAndTime [ '2024-03-03T08:20:59.67-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPharoTimingApplication,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tprintedIterations := iterations := 1000000',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4455' ],		#self : OmReference [ '4456' ],		#time : DateAndTime [ '2024-03-03T08:20:59.67-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPharoTimingApplication,				#isMetaSide : false			},			#name : #iterations,			#protocol : #accessing,			#sourceCode : 'iterations\r\t^ iterations',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4456' ],		#self : OmReference [ '4457' ],		#time : DateAndTime [ '2024-03-03T08:20:59.67-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPharoTimingApplication,				#isMetaSide : false			},			#name : #'log:',			#protocol : #accessing,			#sourceCode : 'log: aString\r\tTranscript show: aString;cr.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4457' ],		#self : OmReference [ '4458' ],		#time : DateAndTime [ '2024-03-03T08:20:59.67-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPharoTimingApplication,				#isMetaSide : false			},			#name : #'prefix:',			#protocol : #accessing,			#sourceCode : 'prefix: aString\r\tprefix := aString',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4458' ],		#self : OmReference [ '4459' ],		#time : DateAndTime [ '2024-03-03T08:20:59.67-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPharoTimingApplication,				#isMetaSide : false			},			#name : #runs,			#protocol : #accessing,			#sourceCode : 'runs\r\t^ 10',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4459' ],		#self : OmReference [ '4460' ],		#time : DateAndTime [ '2024-03-03T08:20:59.67-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPharoTimingApplication,				#isMetaSide : false			},			#name : #'show:',			#protocol : #accessing,			#sourceCode : 'show: aString\r\tTranscript show: aString.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4460' ],		#self : OmReference [ '4461' ],		#time : DateAndTime [ '2024-03-03T08:20:59.67-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPharoTimingApplication,				#isMetaSide : false			},			#name : #time,			#protocol : #accessing,			#sourceCode : 'time\r\tPjTimingApplication allTimingOn: self',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4461' ],		#self : OmReference [ '4462' ],		#time : DateAndTime [ '2024-03-03T08:20:59.67-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPharoTimingApplication,				#isMetaSide : false			},			#name : #'time:with:ratio:',			#protocol : #accessing,			#sourceCode : 'time: aString with: aBlock ratio: ratio\r\t| iters |\r\titers := (iterations * ratio) asInteger.\r\titers isZero ifTrue: [ iters := 1 ].\r\tprintedIterations = iters ifFalse: [\r\t\tself show: \'Running \';show: iters;show: \' iterations\';cr.\r\t\tprintedIterations := iters\r\t].\r\tself\r\t\tshow: prefix;\r\t\tshow: aString;\r\t\tshow: \': \';\r\t\tshow:  (([ iters timesRepeat: aBlock ] timeToRunWithoutGC) printShowingDecimalPlaces: 3);\r\t\tshow: \'ms\';\r\t\tcr',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4462' ],		#self : OmReference [ '4463' ],		#time : DateAndTime [ '2024-03-03T08:20:59.671-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPharoTimingApplication,				#isMetaSide : false			},			#name : #warmups,			#protocol : #accessing,			#sourceCode : 'warmups\r\t^ 0',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4463' ],		#self : OmReference [ '4464' ],		#time : DateAndTime [ '2024-03-03T08:20:59.671-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjRbBenchmark class',				#isMetaSide : true			},			#name : #'report:times:run:',			#protocol : #'instance creation',			#sourceCode : 'report: string times: count run: aBlock\r\t<pharoJsSkip>\r        "Report the time required to execute the given block."\r\r        | time |\r        time := 0.\r\tcount timesRepeat: [ time := time + aBlock value ].\r        Transcript show: string, \' \', (time // count) printString, \' milliseconds\'; cr.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4464' ],		#self : OmReference [ '4465' ],		#time : DateAndTime [ '2024-03-03T08:20:59.671-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjRbBenchmark class',				#isMetaSide : true			},			#name : #standardBenchmark,			#protocol : #'instance creation',			#sourceCode : 'standardBenchmark\r\t<pharoJsSkip>\r        "This the combined benchmark."\r        "PjRbBenchmark standardBenchmark"\r\r        self report: \'Richards simulations\' times: 100000 run: [ self start ]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4465' ],		#self : OmReference [ '4466' ],		#time : DateAndTime [ '2024-03-03T08:20:59.671-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjRbBenchmark class',				#isMetaSide : true			},			#name : #start,			#protocol : #'instance creation',			#sourceCode : 'start\r    "RichardsBenchmark start"\r\r    ^self new start',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4466' ],		#self : OmReference [ '4467' ],		#time : DateAndTime [ '2024-03-03T08:20:59.671-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjRbBenchmark class',				#isMetaSide : true			},			#name : #'start:',			#protocol : #'instance creation',			#sourceCode : 'start: trace\r    "RichardsBenchmark start: true"\r\r    ^self new start: trace',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4467' ],		#self : OmReference [ '4468' ],		#time : DateAndTime [ '2024-03-03T08:20:59.671-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbBenchmark,				#isMetaSide : false			},			#name : #'createDevice:priority:work:state:',			#protocol : #creation,			#sourceCode : 'createDevice: identity priority: priority work: workX state: state \r    | dataX |\r    dataX := PjRbDeviceTaskDataRecord create.\r    self\r\tcreateTask: identity\r\tpriority: priority\r\twork: workX\r\tstate: state\r\tfunction: \r\t    [:work :word | | data functionWork |\r\t    data := word.\r\t    functionWork := work.\r\t    functionWork isNil\r\t\tifTrue:\r\t\t    [(functionWork := data pending) isNil\r\t\t\tifTrue: [self wait]\r\t\t\tifFalse: \r\t\t\t    [data pending: nil.\r\t\t\t    self queuePacket: functionWork]]\r\t\tifFalse: \r\t\t    [data pending: functionWork.\r\t\t    tracing\r\t\t\tifTrue: \r\t\t\t    [self trace: functionWork datum].\r\t\t    self holdSelf]]\r\tdata: dataX',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4468' ],		#self : OmReference [ '4469' ],		#time : DateAndTime [ '2024-03-03T08:20:59.671-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbBenchmark,				#isMetaSide : false			},			#name : #'createHandler:priority:work:state:',			#protocol : #creation,			#sourceCode : 'createHandler: identity priority: priority work: workX state: state \r    | dataX |\r    dataX := PjRbHandlerTaskDataRecord create.\r    self\r\tcreateTask: identity\r\tpriority: priority\r\twork: workX\r\tstate: state\r\tfunction: \r\t    [:work :word | | data workPacket count devicePacket |\r\t    data := word.\r\t    work isNil\r\t\tifFalse: [WorkPacketKind == work kind \r\t\t    ifTrue: [data workInAdd: work]\r\t\t    ifFalse: [data deviceInAdd: work]].\r\t    (workPacket := data workIn) isNil\r\t\tifTrue: [self wait]\r\t\tifFalse: \r\t\t    [count := workPacket datum.\r\t\t    count > 4\r\t\t\tifTrue: \r\t\t\t    [data workIn: workPacket link.\r\t\t\t    self queuePacket: workPacket]\r\t\t\tifFalse:\r\t\t\t    [(devicePacket := data deviceIn) isNil\r\t\t\t\tifTrue: [self wait]\r\t\t\t\tifFalse: \r\t\t\t\t    [data deviceIn: devicePacket link.\r\t\t\t\t    devicePacket datum: (workPacket data at: count).\r\t\t\t\t    workPacket datum: count + 1.\r\t\t\t\t    self queuePacket: devicePacket]]]]\r\tdata: dataX',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4469' ],		#self : OmReference [ '4470' ],		#time : DateAndTime [ '2024-03-03T08:20:59.671-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbBenchmark,				#isMetaSide : false			},			#name : #'createIdler:priority:work:state:',			#protocol : #creation,			#sourceCode : 'createIdler: identity priority: priority work: workX state: state \r    | dataX |\r    dataX := PjRbIdleTaskDataRecord create.\r    self\r\tcreateTask: identity\r\tpriority: priority\r\twork: workX\r\tstate: state\r\tfunction: \r\t    [:work :word | | data |\r\t    data := word.\r\t    data count: data count - 1.\r\t    0 = data count\r\t\tifTrue: [self holdSelf]\r\t\tifFalse:\r\t\t    [0 = (data control bitAnd: 1)\r\t\t\tifTrue: \r\t\t\t    [data control: data control // 2.\r\t\t\t    self release: DeviceA]\r\t\t\tifFalse: \r\t\t\t    [data control: (data control // 2 bitXor: 53256).\r\t\t\t    self release: DeviceB]]]\r\tdata: dataX',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4470' ],		#self : OmReference [ '4471' ],		#time : DateAndTime [ '2024-03-03T08:20:59.671-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbBenchmark,				#isMetaSide : false			},			#name : #'createPacket:identity:kind:',			#protocol : #creation,			#sourceCode : 'createPacket: link identity: identity kind: kind \r    ^PjRbPacket\r\tcreate: link\r\tidentity: identity\r\tkind: kind',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4471' ],		#self : OmReference [ '4472' ],		#time : DateAndTime [ '2024-03-03T08:20:59.671-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbBenchmark,				#isMetaSide : false			},			#name : #'createTask:priority:work:state:function:data:',			#protocol : #creation,			#sourceCode : 'createTask: identity priority: priority work: work state: state function: aBlock data: data \r    | t |\r    t := PjRbTaskControlBlock\r\t\tlink: taskList\r\t\tcreate: identity\r\t\tpriority: priority\r\t\tinitialWorkQueue: work\r\t\tinitialState: state\r\t\tfunction: aBlock\r\t\tprivateData: data.\r    taskList := t.\r    taskTable at: identity put: t',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4472' ],		#self : OmReference [ '4473' ],		#time : DateAndTime [ '2024-03-03T08:20:59.672-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbBenchmark,				#isMetaSide : false			},			#name : #'createWorker:priority:work:state:',			#protocol : #creation,			#sourceCode : 'createWorker: identity priority: priority work: workX state: state \r    | dataX |\r    dataX := PjRbWorkerTaskDataRecord create.\r    self\r\tcreateTask: identity\r\tpriority: priority\r\twork: workX\r\tstate: state\r\tfunction: \r\t    [:work :word | | data |\r\t    data := word.\r\t    work isNil\r\t\tifTrue: [self wait]\r\t\tifFalse: \r\t\t    [data destination: (HandlerA = data destination\r\t\t\t    ifTrue: [HandlerB]\r\t\t\t    ifFalse: [HandlerA]).\r\t\t    work identity: data destination.\r\t\t    work datum: 1.\r\t\t    1 to: 4 do: \r\t\t\t[:i | \r\t\t\tdata count: data count + 1.\r\t\t\tdata count > 26 ifTrue: [data count: 1].\r\t\t\twork data at: i put: $A asInteger + data count - 1].\r\t\t    self queuePacket: work]]\r\tdata: dataX',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4473' ],		#self : OmReference [ '4474' ],		#time : DateAndTime [ '2024-03-03T08:20:59.672-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbBenchmark,				#isMetaSide : false			},			#name : #'findTask:',			#protocol : #private,			#sourceCode : 'findTask: identity \r    | t |\r    t := taskTable at: identity.\r    t isNil ifTrue: [self error: \'findTask failed\'].\r    ^t',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4474' ],		#self : OmReference [ '4475' ],		#time : DateAndTime [ '2024-03-03T08:20:59.672-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbBenchmark,				#isMetaSide : false			},			#name : #holdSelf,			#protocol : #private,			#sourceCode : 'holdSelf\r    holdCount := holdCount + 1.\r    currentTask taskHolding: true.\r    ^currentTask link',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4475' ],		#self : OmReference [ '4476' ],		#time : DateAndTime [ '2024-03-03T08:20:59.672-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbBenchmark,				#isMetaSide : false			},			#name : #initScheduler,			#protocol : #private,			#sourceCode : 'initScheduler\r    queuePacketCount := holdCount := 0.\r    taskTable := Array new: 6.\r    taskList := nil',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4476' ],		#self : OmReference [ '4477' ],		#time : DateAndTime [ '2024-03-03T08:20:59.672-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbBenchmark,				#isMetaSide : false			},			#name : #'initTrace:',			#protocol : #private,			#sourceCode : 'initTrace: trace\r    tracing := trace.\r    layout := 0',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4477' ],		#self : OmReference [ '4478' ],		#time : DateAndTime [ '2024-03-03T08:20:59.672-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbBenchmark,				#isMetaSide : false			},			#name : #'queuePacket:',			#protocol : #private,			#sourceCode : 'queuePacket: packet \r    | t |\r    t := self findTask: packet identity.\r    t isNil ifTrue: [^nil].\r    queuePacketCount := queuePacketCount + 1.\r    packet link: nil.\r    packet identity: currentTaskIdentity.\r    ^t addInput: packet checkPriority: currentTask',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4478' ],		#self : OmReference [ '4479' ],		#time : DateAndTime [ '2024-03-03T08:20:59.672-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbBenchmark,				#isMetaSide : false			},			#name : #'release:',			#protocol : #private,			#sourceCode : 'release: identity \r    | t |\r    t := self findTask: identity.\r    t isNil ifTrue: [^nil].\r    t taskHolding: false.\r    t priority > currentTask priority\r\tifTrue: [^t]\r\tifFalse: [^currentTask]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4479' ],		#self : OmReference [ '4480' ],		#time : DateAndTime [ '2024-03-03T08:20:59.672-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbBenchmark,				#isMetaSide : false			},			#name : #schedule,			#protocol : #scheduling,			#sourceCode : 'schedule\r    currentTask := taskList. \r    [currentTask isNil]\r\twhileFalse: \r\t    [currentTask isTaskHoldingOrWaiting\r\t\tifTrue: [currentTask := currentTask link]\r\t\tifFalse: \r\t\t    [currentTaskIdentity := currentTask identity.\r\t\t    tracing ifTrue: [self trace: currentTaskIdentity].\r\t\t    currentTask := currentTask runTask]]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4480' ],		#self : OmReference [ '4481' ],		#time : DateAndTime [ '2024-03-03T08:20:59.672-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbBenchmark,				#isMetaSide : false			},			#name : #start,			#protocol : #initialization,			#sourceCode : 'start\r    ^self start: false',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4481' ],		#self : OmReference [ '4482' ],		#time : DateAndTime [ '2024-03-03T08:20:59.672-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbBenchmark,				#isMetaSide : false			},			#name : #'start:',			#protocol : #initialization,			#sourceCode : 'start: trace\r    | workQ mark1 mark2 mark3 mark4 |\r    self initTrace: trace; initScheduler.\r    mark1 := Time millisecondClockValue.\r    tracing ifTrue: [self show: \'Bench mark starting\'; cr].\r    self\r\tcreateIdler: Idler\r\tpriority: 0\r\twork: nil\r\tstate: PjRbTaskState running.\r    workQ := self\r\t\tcreatePacket: nil\r\t\tidentity: Worker\r\t\tkind: WorkPacketKind.\r    workQ := self\r\t\tcreatePacket: workQ\r\t\tidentity: Worker\r\t\tkind: WorkPacketKind.\r    self\r\tcreateWorker: Worker\r\tpriority: 1000\r\twork: workQ\r\tstate: PjRbTaskState waitingWithPacket.\r    workQ := self\r\t\tcreatePacket: nil\r\t\tidentity: DeviceA\r\t\tkind: DevicePacketKind.\r    workQ := self\r\t\tcreatePacket: workQ\r\t\tidentity: DeviceA\r\t\tkind: DevicePacketKind.\r    workQ := self\r\t\tcreatePacket: workQ\r\t\tidentity: DeviceA\r\t\tkind: DevicePacketKind.\r    self\r\tcreateHandler: HandlerA\r\tpriority: 2000\r\twork: workQ\r\tstate: PjRbTaskState waitingWithPacket.\r    workQ := self\r\t\tcreatePacket: nil\r\t\tidentity: DeviceB\r\t\tkind: DevicePacketKind.\r    workQ := self\r\t\tcreatePacket: workQ\r\t\tidentity: DeviceB\r\t\tkind: DevicePacketKind.\r    workQ := self\r\t\tcreatePacket: workQ\r\t\tidentity: DeviceB\r\t\tkind: DevicePacketKind.\r    self\r\tcreateHandler: HandlerB\r\tpriority: 3000\r\twork: workQ\r\tstate: PjRbTaskState waitingWithPacket.\r    self\r\tcreateDevice: DeviceA\r\tpriority: 4000\r\twork: nil\r\tstate: PjRbTaskState waiting.\r    self\r\tcreateDevice: DeviceB\r\tpriority: 5000\r\twork: nil\r\tstate: PjRbTaskState waiting.\r    tracing ifTrue: [self show: \'Starting\'; cr].\r    mark2 := Time millisecondClockValue.\r    self schedule.\r    mark3 := Time millisecondClockValue.\r    tracing\r\tifTrue: \r\t    [self show: \'Finished\'; cr.\r\t    self show: \'QueuePacket count = \', queuePacketCount printString;\r\t\tshow: \' HoldCount = \', holdCount printString;\r\t\tcr.\r\t    self cr; show: \'End of run\'; cr].\r    queuePacketCount = 23246 & (holdCount = 9297) ifFalse: [self error: \'wrong result\'].\r    mark4 := Time millisecondClockValue.\r    tracing\r\tifTrue:\r\t    [self show: \'***Scheduler time = \', (mark3 - mark2) printString;\r\t        show: \' Total time = \', (mark4 - mark1) printString;\r\t        cr].\r\r  ^mark4 - mark1',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4482' ],		#self : OmReference [ '4483' ],		#time : DateAndTime [ '2024-03-03T08:20:59.673-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbBenchmark,				#isMetaSide : false			},			#name : #'trace:',			#protocol : #private,			#sourceCode : 'trace: id \r    layout := layout - 1.\r    0 >= layout\r\tifTrue: \r\t    [self cr.\r\t    layout := 50].\r    self show: id printString',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4483' ],		#self : OmReference [ '4484' ],		#time : DateAndTime [ '2024-03-03T08:20:59.673-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbBenchmark,				#isMetaSide : false			},			#name : #wait,			#protocol : #private,			#sourceCode : 'wait \r    currentTask taskWaiting: true.\r    ^currentTask',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4484' ],		#self : OmReference [ '4485' ],		#time : DateAndTime [ '2024-03-03T08:20:59.673-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjRbDeviceTaskDataRecord class',				#isMetaSide : true			},			#name : #create,			#protocol : #'instance creation',			#sourceCode : 'create\r    ^super new create',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4485' ],		#self : OmReference [ '4486' ],		#time : DateAndTime [ '2024-03-03T08:20:59.673-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbDeviceTaskDataRecord,				#isMetaSide : false			},			#name : #create,			#protocol : #initialization,			#sourceCode : 'create\r    pending := nil',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4486' ],		#self : OmReference [ '4487' ],		#time : DateAndTime [ '2024-03-03T08:20:59.673-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbDeviceTaskDataRecord,				#isMetaSide : false			},			#name : #pending,			#protocol : #accessing,			#sourceCode : 'pending\r    ^pending',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4487' ],		#self : OmReference [ '4488' ],		#time : DateAndTime [ '2024-03-03T08:20:59.673-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbDeviceTaskDataRecord,				#isMetaSide : false			},			#name : #'pending:',			#protocol : #accessing,			#sourceCode : 'pending: packet \r    pending := packet',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4488' ],		#self : OmReference [ '4489' ],		#time : DateAndTime [ '2024-03-03T08:20:59.673-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjRbHandlerTaskDataRecord class',				#isMetaSide : true			},			#name : #create,			#protocol : #'instance creation',			#sourceCode : 'create\r    ^super new create',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4489' ],		#self : OmReference [ '4490' ],		#time : DateAndTime [ '2024-03-03T08:20:59.673-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbHandlerTaskDataRecord,				#isMetaSide : false			},			#name : #create,			#protocol : #initialization,			#sourceCode : 'create\r    workIn := deviceIn := nil',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4490' ],		#self : OmReference [ '4491' ],		#time : DateAndTime [ '2024-03-03T08:20:59.673-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbHandlerTaskDataRecord,				#isMetaSide : false			},			#name : #deviceIn,			#protocol : #accessing,			#sourceCode : 'deviceIn\r    ^deviceIn',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4491' ],		#self : OmReference [ '4492' ],		#time : DateAndTime [ '2024-03-03T08:20:59.674-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbHandlerTaskDataRecord,				#isMetaSide : false			},			#name : #'deviceIn:',			#protocol : #accessing,			#sourceCode : 'deviceIn: aPacket\r    deviceIn := aPacket',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4492' ],		#self : OmReference [ '4493' ],		#time : DateAndTime [ '2024-03-03T08:20:59.674-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbHandlerTaskDataRecord,				#isMetaSide : false			},			#name : #'deviceInAdd:',			#protocol : #accessing,			#sourceCode : 'deviceInAdd: packet\r    deviceIn := self append: packet head: deviceIn',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4493' ],		#self : OmReference [ '4494' ],		#time : DateAndTime [ '2024-03-03T08:20:59.674-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbHandlerTaskDataRecord,				#isMetaSide : false			},			#name : #workIn,			#protocol : #accessing,			#sourceCode : 'workIn\r    ^workIn',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4494' ],		#self : OmReference [ '4495' ],		#time : DateAndTime [ '2024-03-03T08:20:59.674-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbHandlerTaskDataRecord,				#isMetaSide : false			},			#name : #'workIn:',			#protocol : #accessing,			#sourceCode : 'workIn: aWorkQueue \r    workIn := aWorkQueue',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4495' ],		#self : OmReference [ '4496' ],		#time : DateAndTime [ '2024-03-03T08:20:59.674-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbHandlerTaskDataRecord,				#isMetaSide : false			},			#name : #'workInAdd:',			#protocol : #accessing,			#sourceCode : 'workInAdd: packet\r    workIn := self append: packet head: workIn',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4496' ],		#self : OmReference [ '4497' ],		#time : DateAndTime [ '2024-03-03T08:20:59.674-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjRbIdleTaskDataRecord class',				#isMetaSide : true			},			#name : #create,			#protocol : #'instance creation',			#sourceCode : 'create\r    ^super new create',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4497' ],		#self : OmReference [ '4498' ],		#time : DateAndTime [ '2024-03-03T08:20:59.674-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbIdleTaskDataRecord,				#isMetaSide : false			},			#name : #control,			#protocol : #accessing,			#sourceCode : 'control\r    ^control',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4498' ],		#self : OmReference [ '4499' ],		#time : DateAndTime [ '2024-03-03T08:20:59.674-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbIdleTaskDataRecord,				#isMetaSide : false			},			#name : #'control:',			#protocol : #accessing,			#sourceCode : 'control: aNumber\r    control := aNumber',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4499' ],		#self : OmReference [ '4500' ],		#time : DateAndTime [ '2024-03-03T08:20:59.674-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbIdleTaskDataRecord,				#isMetaSide : false			},			#name : #count,			#protocol : #accessing,			#sourceCode : 'count\r    ^count',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4500' ],		#self : OmReference [ '4501' ],		#time : DateAndTime [ '2024-03-03T08:20:59.674-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbIdleTaskDataRecord,				#isMetaSide : false			},			#name : #'count:',			#protocol : #accessing,			#sourceCode : 'count: aCount\r    count := aCount',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4501' ],		#self : OmReference [ '4502' ],		#time : DateAndTime [ '2024-03-03T08:20:59.674-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbIdleTaskDataRecord,				#isMetaSide : false			},			#name : #create,			#protocol : #initialization,			#sourceCode : 'create\r    control := 1.\r    count := 10000',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4502' ],		#self : OmReference [ '4503' ],		#time : DateAndTime [ '2024-03-03T08:20:59.675-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjRbObject class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'class initialization',			#sourceCode : 'initialize\r   \r    DeviceA := 5.\r    DeviceB := 6.\r    DevicePacketKind := 1.\r    HandlerA := 3.\r    HandlerB := 4.\r    Idler := 1.\r    Worker := 2.\r    WorkPacketKind := 2',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4503' ],		#self : OmReference [ '4504' ],		#time : DateAndTime [ '2024-03-03T08:20:59.675-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjRbObject class',				#isMetaSide : true			},			#name : #'show_jsGenerator:',			#protocol : #transcript,			#sourceCode : 'show_jsGenerator: transpiler\r\t<pharoJsSkip>\r\t\r\t^\'console.log(aString.\', transpiler pharoJsSelectorPrefix, \'asString())\'',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4504' ],		#self : OmReference [ '4505' ],		#time : DateAndTime [ '2024-03-03T08:20:59.675-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbObject,				#isMetaSide : false			},			#name : #'append:head:',			#protocol : #utilities,			#sourceCode : 'append: packet head: queueHead\r    | mouse link |\r    packet link: nil.\r    queueHead isNil ifTrue: [^packet].\r    mouse := queueHead.\r    [(link := mouse link) isNil]\r\twhileFalse: [mouse := link].\r    mouse link: packet.\r    ^queueHead',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4505' ],		#self : OmReference [ '4506' ],		#time : DateAndTime [ '2024-03-03T08:20:59.675-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbObject,				#isMetaSide : false			},			#name : #cr,			#protocol : #transcript,			#sourceCode : 'cr\r\t<javascript: \'\'>\r\tTranscript cr',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4506' ],		#self : OmReference [ '4507' ],		#time : DateAndTime [ '2024-03-03T08:20:59.675-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbObject,				#isMetaSide : false			},			#name : #'show:',			#protocol : #transcript,			#sourceCode : 'show: aString\r\t<jsGenerator: #show_jsGenerator:>\r\tTranscript show: aString',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4507' ],		#self : OmReference [ '4508' ],		#time : DateAndTime [ '2024-03-03T08:20:59.675-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjRbPacket class',				#isMetaSide : true			},			#name : #'create:identity:kind:',			#protocol : #'instance creation',			#sourceCode : 'create: link identity: identity kind: kind \r    ^super new\r\tlink: link\r\tidentity: identity\r\tkind: kind',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4508' ],		#self : OmReference [ '4509' ],		#time : DateAndTime [ '2024-03-03T08:20:59.675-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbPacket,				#isMetaSide : false			},			#name : #data,			#protocol : #accessing,			#sourceCode : 'data\r    ^data',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4509' ],		#self : OmReference [ '4510' ],		#time : DateAndTime [ '2024-03-03T08:20:59.675-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbPacket,				#isMetaSide : false			},			#name : #datum,			#protocol : #accessing,			#sourceCode : 'datum\r    ^datum',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4510' ],		#self : OmReference [ '4511' ],		#time : DateAndTime [ '2024-03-03T08:20:59.676-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbPacket,				#isMetaSide : false			},			#name : #'datum:',			#protocol : #accessing,			#sourceCode : 'datum:    someData\r    datum := someData',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4511' ],		#self : OmReference [ '4512' ],		#time : DateAndTime [ '2024-03-03T08:20:59.676-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbPacket,				#isMetaSide : false			},			#name : #identity,			#protocol : #accessing,			#sourceCode : 'identity\r    ^identity',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4512' ],		#self : OmReference [ '4513' ],		#time : DateAndTime [ '2024-03-03T08:20:59.676-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbPacket,				#isMetaSide : false			},			#name : #'identity:',			#protocol : #accessing,			#sourceCode : 'identity: anIdentity\r    identity := anIdentity',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4513' ],		#self : OmReference [ '4514' ],		#time : DateAndTime [ '2024-03-03T08:20:59.676-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbPacket,				#isMetaSide : false			},			#name : #kind,			#protocol : #accessing,			#sourceCode : 'kind\r    ^kind',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4514' ],		#self : OmReference [ '4515' ],		#time : DateAndTime [ '2024-03-03T08:20:59.676-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbPacket,				#isMetaSide : false			},			#name : #link,			#protocol : #accessing,			#sourceCode : 'link\r    ^link',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4515' ],		#self : OmReference [ '4516' ],		#time : DateAndTime [ '2024-03-03T08:20:59.676-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbPacket,				#isMetaSide : false			},			#name : #'link:',			#protocol : #accessing,			#sourceCode : 'link: aWorkQueue \r    link := aWorkQueue',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4516' ],		#self : OmReference [ '4517' ],		#time : DateAndTime [ '2024-03-03T08:20:59.676-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbPacket,				#isMetaSide : false			},			#name : #'link:identity:kind:',			#protocol : #initialization,			#sourceCode : 'link: aLink identity: anIdentity kind: aKind \r    link := aLink.\r    identity := anIdentity. \r    kind := aKind.\r    datum := 1.\r    data := ByteArray new: 4',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4517' ],		#self : OmReference [ '4518' ],		#time : DateAndTime [ '2024-03-03T08:20:59.676-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjRbTaskControlBlock class',				#isMetaSide : true			},			#name : #'link:create:priority:initialWorkQueue:initialState:function:privateData:',			#protocol : #'instance creation',			#sourceCode : 'link: link create: identity priority: priority initialWorkQueue: initialWorkQueue initialState: initialState function: aBlock privateData: privateData \r    ^super new\r\tlink: link\r\tidentity: identity\r\tpriority: priority\r\tinitialWorkQueue: initialWorkQueue\r\tinitialState: initialState\r\tfunction: aBlock\r\tprivateData: privateData',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4518' ],		#self : OmReference [ '4519' ],		#time : DateAndTime [ '2024-03-03T08:20:59.676-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbTaskControlBlock,				#isMetaSide : false			},			#name : #'addInput:checkPriority:',			#protocol : #scheduling,			#sourceCode : 'addInput: packet checkPriority: oldTask\r    input isNil\r\tifTrue: \r\t    [input := packet.\r\t    packetPendingIV := true.\r\t    priority > oldTask priority ifTrue: [^self]]\r\tifFalse: \r\t    [input := self append: packet head: input].\r    ^oldTask',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4519' ],		#self : OmReference [ '4520' ],		#time : DateAndTime [ '2024-03-03T08:20:59.676-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbTaskControlBlock,				#isMetaSide : false			},			#name : #identity,			#protocol : #accessing,			#sourceCode : 'identity\r    ^identity',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4520' ],		#self : OmReference [ '4521' ],		#time : DateAndTime [ '2024-03-03T08:20:59.676-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbTaskControlBlock,				#isMetaSide : false			},			#name : #link,			#protocol : #accessing,			#sourceCode : 'link\r    ^link',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4521' ],		#self : OmReference [ '4522' ],		#time : DateAndTime [ '2024-03-03T08:20:59.677-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbTaskControlBlock,				#isMetaSide : false			},			#name : #'link:identity:priority:initialWorkQueue:initialState:function:privateData:',			#protocol : #initialization,			#sourceCode : 'link: aLink identity: anIdentity priority: aPriority initialWorkQueue: anInitialWorkQueue initialState: anInitialState function: aBlock privateData: aPrivateData \r    link := aLink.\r    identity := anIdentity.\r    priority := aPriority.\r    input := anInitialWorkQueue.\r    packetPendingIV := anInitialState isPacketPending.\r    taskWaiting := anInitialState isTaskWaiting.\r    taskHolding := anInitialState isTaskHolding.\r    function := aBlock.\r    handle := aPrivateData',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4522' ],		#self : OmReference [ '4523' ],		#time : DateAndTime [ '2024-03-03T08:20:59.677-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbTaskControlBlock,				#isMetaSide : false			},			#name : #priority,			#protocol : #accessing,			#sourceCode : 'priority\r    ^priority',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4523' ],		#self : OmReference [ '4524' ],		#time : DateAndTime [ '2024-03-03T08:20:59.677-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbTaskControlBlock,				#isMetaSide : false			},			#name : #runTask,			#protocol : #scheduling,			#sourceCode : 'runTask\r    | message |\r    self isWaitingWithPacket\r\tifTrue: \r\t    [message := input.\r\t    input := message link.\r\t    input isNil\r\t\tifTrue: [self running]\r\t\tifFalse: [self packetPending]]\r\tifFalse: [message := nil].\r    ^function value: message value: handle',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4524' ],		#self : OmReference [ '4525' ],		#time : DateAndTime [ '2024-03-03T08:20:59.677-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjRbTaskState class',				#isMetaSide : true			},			#name : #packetPending,			#protocol : #'instance creation',			#sourceCode : 'packetPending\r    ^super new packetPending',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4525' ],		#self : OmReference [ '4526' ],		#time : DateAndTime [ '2024-03-03T08:20:59.677-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjRbTaskState class',				#isMetaSide : true			},			#name : #running,			#protocol : #'instance creation',			#sourceCode : 'running\r    ^super new running',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4526' ],		#self : OmReference [ '4527' ],		#time : DateAndTime [ '2024-03-03T08:20:59.677-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjRbTaskState class',				#isMetaSide : true			},			#name : #waiting,			#protocol : #'instance creation',			#sourceCode : 'waiting\r    ^super new waiting',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4527' ],		#self : OmReference [ '4528' ],		#time : DateAndTime [ '2024-03-03T08:20:59.677-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjRbTaskState class',				#isMetaSide : true			},			#name : #waitingWithPacket,			#protocol : #'instance creation',			#sourceCode : 'waitingWithPacket\r    ^super new waitingWithPacket',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4528' ],		#self : OmReference [ '4529' ],		#time : DateAndTime [ '2024-03-03T08:20:59.677-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbTaskState,				#isMetaSide : false			},			#name : #isPacketPending,			#protocol : #accessing,			#sourceCode : 'isPacketPending\r    ^packetPendingIV',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4529' ],		#self : OmReference [ '4530' ],		#time : DateAndTime [ '2024-03-03T08:20:59.677-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbTaskState,				#isMetaSide : false			},			#name : #isRunning,			#protocol : #testing,			#sourceCode : 'isRunning\r    ^packetPendingIV not and: [taskWaiting not and: [taskHolding not]]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4530' ],		#self : OmReference [ '4531' ],		#time : DateAndTime [ '2024-03-03T08:20:59.677-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbTaskState,				#isMetaSide : false			},			#name : #isTaskHolding,			#protocol : #accessing,			#sourceCode : 'isTaskHolding\r    ^taskHolding',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4531' ],		#self : OmReference [ '4532' ],		#time : DateAndTime [ '2024-03-03T08:20:59.678-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbTaskState,				#isMetaSide : false			},			#name : #isTaskHoldingOrWaiting,			#protocol : #testing,			#sourceCode : 'isTaskHoldingOrWaiting\r    ^taskHolding or: [packetPendingIV not and: [taskWaiting]]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4532' ],		#self : OmReference [ '4533' ],		#time : DateAndTime [ '2024-03-03T08:20:59.678-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbTaskState,				#isMetaSide : false			},			#name : #isTaskWaiting,			#protocol : #accessing,			#sourceCode : 'isTaskWaiting\r    ^taskWaiting',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4533' ],		#self : OmReference [ '4534' ],		#time : DateAndTime [ '2024-03-03T08:20:59.678-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbTaskState,				#isMetaSide : false			},			#name : #isWaiting,			#protocol : #testing,			#sourceCode : 'isWaiting\r    ^packetPendingIV not and: [taskWaiting and: [taskHolding not]]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4534' ],		#self : OmReference [ '4535' ],		#time : DateAndTime [ '2024-03-03T08:20:59.678-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbTaskState,				#isMetaSide : false			},			#name : #isWaitingWithPacket,			#protocol : #testing,			#sourceCode : 'isWaitingWithPacket\r    ^packetPendingIV and: [taskWaiting and: [taskHolding not]]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4535' ],		#self : OmReference [ '4536' ],		#time : DateAndTime [ '2024-03-03T08:20:59.678-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbTaskState,				#isMetaSide : false			},			#name : #packetPending,			#protocol : #initialization,			#sourceCode : 'packetPending\r    packetPendingIV := true.\r    taskWaiting := false.\r    taskHolding := false',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4536' ],		#self : OmReference [ '4537' ],		#time : DateAndTime [ '2024-03-03T08:20:59.678-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbTaskState,				#isMetaSide : false			},			#name : #running,			#protocol : #initialization,			#sourceCode : 'running\r    packetPendingIV := taskWaiting := taskHolding := false',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4537' ],		#self : OmReference [ '4538' ],		#time : DateAndTime [ '2024-03-03T08:20:59.678-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbTaskState,				#isMetaSide : false			},			#name : #'taskHolding:',			#protocol : #accessing,			#sourceCode : 'taskHolding: aBoolean\r    taskHolding := aBoolean',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4538' ],		#self : OmReference [ '4539' ],		#time : DateAndTime [ '2024-03-03T08:20:59.678-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbTaskState,				#isMetaSide : false			},			#name : #'taskWaiting:',			#protocol : #accessing,			#sourceCode : 'taskWaiting: aBoolean \r    taskWaiting := aBoolean',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4539' ],		#self : OmReference [ '4540' ],		#time : DateAndTime [ '2024-03-03T08:20:59.678-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbTaskState,				#isMetaSide : false			},			#name : #waiting,			#protocol : #initialization,			#sourceCode : 'waiting\r    packetPendingIV := taskHolding := false.\r    taskWaiting := true',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4540' ],		#self : OmReference [ '4541' ],		#time : DateAndTime [ '2024-03-03T08:20:59.678-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbTaskState,				#isMetaSide : false			},			#name : #waitingWithPacket,			#protocol : #initialization,			#sourceCode : 'waitingWithPacket\r    taskHolding := false.\r    taskWaiting := packetPendingIV := true',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4541' ],		#self : OmReference [ '4542' ],		#time : DateAndTime [ '2024-03-03T08:20:59.678-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjRbWorkerTaskDataRecord class',				#isMetaSide : true			},			#name : #create,			#protocol : #'instance creation',			#sourceCode : 'create\r    ^super new create',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4542' ],		#self : OmReference [ '4543' ],		#time : DateAndTime [ '2024-03-03T08:20:59.679-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbWorkerTaskDataRecord,				#isMetaSide : false			},			#name : #count,			#protocol : #accessing,			#sourceCode : 'count\r    ^count',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4543' ],		#self : OmReference [ '4544' ],		#time : DateAndTime [ '2024-03-03T08:20:59.679-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbWorkerTaskDataRecord,				#isMetaSide : false			},			#name : #'count:',			#protocol : #accessing,			#sourceCode : 'count: aCount\r    count := aCount',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4544' ],		#self : OmReference [ '4545' ],		#time : DateAndTime [ '2024-03-03T08:20:59.679-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbWorkerTaskDataRecord,				#isMetaSide : false			},			#name : #create,			#protocol : #initialization,			#sourceCode : 'create\r    destination := HandlerA.\r    count := 0',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4545' ],		#self : OmReference [ '4546' ],		#time : DateAndTime [ '2024-03-03T08:20:59.679-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbWorkerTaskDataRecord,				#isMetaSide : false			},			#name : #destination,			#protocol : #accessing,			#sourceCode : 'destination\r    ^destination',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4546' ],		#self : OmReference [ '4547' ],		#time : DateAndTime [ '2024-03-03T08:20:59.679-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjRbWorkerTaskDataRecord,				#isMetaSide : false			},			#name : #'destination:',			#protocol : #accessing,			#sourceCode : 'destination: aHandler\r    destination := aHandler',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4547' ],		#self : OmReference [ '4548' ],		#time : DateAndTime [ '2024-03-03T08:20:59.679-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingApplication class',				#isMetaSide : true			},			#name : #'allTimingOn:',			#protocol : #timings,			#sourceCode : 'allTimingOn: timer\r\t| x y instance |\r\tx := 0.\r\ty := 1.\r\tinstance := self new.\r\tself on: timer time: \'empty\' with: [ ].\r\tself on: timer time: \'add-1\' with: [ x := x + 1 ].\r\tself on: timer time: \'add-y\' with: [ x := x + y ].\r\tself on: timer time: \'add-expr\' with: [ x := x + instance one ].\r\tself on: timer time: \'fieldSetI\' with: [ y := instance index: 3 ].\r\tself on: timer time: \'fieldSetV\' with: [ y := instance instVarNamed: #index put: 3].\r\tself on: timer time: \'fieldGetI\' with: [ y := instance index ].\r\tself on: timer time: \'fieldGetV\' with: [ y := instance instVarNamed: #index ].\r\tself on: timer time: \'message\' with: [ instance ten ].\r\tself on: timer time: \'cond-return\' with: [ instance conditionalReturn ].\r\tself on: timer time: \'nonlocal\' with: [ instance nonlocalReturn ].\r\tself on: timer time: \'nonlocal-block\' with: [ instance nonlocalReturn2 ].\r\tself on: timer time: \'repeatLoop\' with: [ instance repeatLoop ].\r\tself on: timer time: \'toDoLoop\' with: [ instance toDoLoop ].\r\tself on: timer time: \'whileLoop\' with: [ instance whileLoop ].\r\tself on: timer time: \'unoptLoop\' with: [ instance whileRemoteLoop ].\r\tself on: timer time: \'DeltaBlue\' with: [\r\t\tPjDbPlanner chainTest: 100. \r\t\tPjDbPlanner projectionTest: 100\r\t] ratio: 0.0003.\r\tself on: timer time: \'Richards\' with: [ PjRbBenchmark start ] ratio: 0.00005',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4548' ],		#self : OmReference [ '4549' ],		#time : DateAndTime [ '2024-03-03T08:20:59.679-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingApplication class',				#isMetaSide : true			},			#name : #'browserTimingOn:',			#protocol : #timings,			#sourceCode : 'browserTimingOn: timer\r\tself on: timer time: \'docBody\' with: [ document body ].',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4549' ],		#self : OmReference [ '4550' ],		#time : DateAndTime [ '2024-03-03T08:20:59.679-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingApplication class',				#isMetaSide : true			},			#name : #'jsTimingOn:top:',			#protocol : #timings,			#sourceCode : 'jsTimingOn: timer top: top\r\t| x y |\r\tx := self makeObject.\r\ty := 0.\r\tself on: timer time: \'fieldSet\' with: [ x index: 1 ].\r\tself on: timer time: \'fieldSetN\' with: [ x js_at: #index put: 1 ].\r\tself on: timer time: \'fieldSetX\' with: [ x instVarNamed:#index put: 1 ].\r\tself on: timer time: \'fieldGet\' with: [ y := x index ].\r\tself on: timer time: \'fieldGetN\' with: [ y := x js_at: #index ].\r\tself on: timer time: \'fieldGetX\' with: [ y := x instVarNamed:#index ]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4550' ],		#self : OmReference [ '4551' ],		#time : DateAndTime [ '2024-03-03T08:20:59.679-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingApplication class',				#isMetaSide : true			},			#name : #makeObject,			#protocol : #'js support',			#sourceCode : 'makeObject\r\t"just here so we can create it the PharoJS and the Amber way"\r\t<javascript:\t\'var x={};x.index=42;return x\'>\r\t<amberJSCode:\t\'var x={};x.index=42;return $globals.JSObjectProxy._on_(x)\'>',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4551' ],		#self : OmReference [ '4552' ],		#time : DateAndTime [ '2024-03-03T08:20:59.679-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingApplication class',				#isMetaSide : true			},			#name : #'nodeTimingOn:',			#protocol : #timings,			#sourceCode : 'nodeTimingOn: timer',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4552' ],		#self : OmReference [ '4553' ],		#time : DateAndTime [ '2024-03-03T08:20:59.68-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingApplication class',				#isMetaSide : true			},			#name : #'on:time:with:',			#protocol : #running,			#sourceCode : 'on: aTimingApp time: desc with: block\r\r\tself on: aTimingApp time: desc with: block ratio: 1',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4553' ],		#self : OmReference [ '4554' ],		#time : DateAndTime [ '2024-03-03T08:20:59.68-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingApplication class',				#isMetaSide : true			},			#name : #'on:time:with:ratio:',			#protocol : #running,			#sourceCode : 'on: aTimingApp time: desc with: block ratio: ratio\r\r\taTimingApp prefix: \'(warmup)\'.\r\taTimingApp warmups timesRepeat: [ aTimingApp time: desc with: block ratio: ratio ].\r\taTimingApp prefix: \'\'.\r\taTimingApp runs timesRepeat: [ aTimingApp time: desc with: block ratio: ratio ]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4554' ],		#self : OmReference [ '4555' ],		#time : DateAndTime [ '2024-03-03T08:20:59.68-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingApplication class',				#isMetaSide : true			},			#name : #'runTimings:',			#protocol : #running,			#sourceCode : 'runTimings: aTimingApp\r\r\taTimingApp log: \'Running \', aTimingApp iterations asString,\' iterations\'.\r\taTimingApp time.\r\taTimingApp log: \'Done\'',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4555' ],		#self : OmReference [ '4556' ],		#time : DateAndTime [ '2024-03-03T08:20:59.68-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingApplication,				#isMetaSide : false			},			#name : #conditionalReturn,			#protocol : #cases,			#sourceCode : 'conditionalReturn\r\tself ten > 5 ifTrue: [ ^ #yes ].\r\t^ #no',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4556' ],		#self : OmReference [ '4557' ],		#time : DateAndTime [ '2024-03-03T08:20:59.68-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingApplication,				#isMetaSide : false			},			#name : #'conditionalReturn2:',			#protocol : #cases,			#sourceCode : 'conditionalReturn2: aBlock\r\tself ten > 5 ifTrue: aBlock.\r\t^ #no',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4557' ],		#self : OmReference [ '4558' ],		#time : DateAndTime [ '2024-03-03T08:20:59.68-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingApplication,				#isMetaSide : false			},			#name : #'conditionalReturn:',			#protocol : #cases,			#sourceCode : 'conditionalReturn: aBlock\r\tself ten > 5 ifTrue: [aBlock value].\r\t^ #no',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4558' ],		#self : OmReference [ '4559' ],		#time : DateAndTime [ '2024-03-03T08:20:59.68-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingApplication,				#isMetaSide : false			},			#name : #index,			#protocol : #cases,			#sourceCode : 'index\r\t^ index',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4559' ],		#self : OmReference [ '4560' ],		#time : DateAndTime [ '2024-03-03T08:20:59.68-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingApplication,				#isMetaSide : false			},			#name : #'index:',			#protocol : #cases,			#sourceCode : 'index: anInteger\r\tindex := anInteger',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4560' ],		#self : OmReference [ '4561' ],		#time : DateAndTime [ '2024-03-03T08:20:59.68-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingApplication,				#isMetaSide : false			},			#name : #nonlocalReturn,			#protocol : #cases,			#sourceCode : 'nonlocalReturn\r\tself conditionalReturn: [ ^ #yes ].\r\t^ #no',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4561' ],		#self : OmReference [ '4562' ],		#time : DateAndTime [ '2024-03-03T08:20:59.68-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingApplication,				#isMetaSide : false			},			#name : #nonlocalReturn2,			#protocol : #cases,			#sourceCode : 'nonlocalReturn2\r\tself conditionalReturn2: [ ^ #yes ].\r\t^ #no',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4562' ],		#self : OmReference [ '4563' ],		#time : DateAndTime [ '2024-03-03T08:20:59.683-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingApplication,				#isMetaSide : false			},			#name : #one,			#protocol : #cases,			#sourceCode : 'one\r\t^ 1',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4563' ],		#self : OmReference [ '4564' ],		#time : DateAndTime [ '2024-03-03T08:20:59.683-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingApplication,				#isMetaSide : false			},			#name : #repeatLoop,			#protocol : #cases,			#sourceCode : 'repeatLoop\r\t| x |\r\tx := 0.\r\t10 timesRepeat: [ x := x + 1 ].\r\t^ x',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4564' ],		#self : OmReference [ '4565' ],		#time : DateAndTime [ '2024-03-03T08:20:59.683-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingApplication,				#isMetaSide : false			},			#name : #ten,			#protocol : #cases,			#sourceCode : 'ten\r\t^ 7500',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4565' ],		#self : OmReference [ '4566' ],		#time : DateAndTime [ '2024-03-03T08:20:59.683-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingApplication,				#isMetaSide : false			},			#name : #toDoLoop,			#protocol : #cases,			#sourceCode : 'toDoLoop\r\t| x |\r\tx := 0.\r\t1 to: 10 do: [ : y | x := x + y ].\r\t^ x',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4566' ],		#self : OmReference [ '4567' ],		#time : DateAndTime [ '2024-03-03T08:20:59.683-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingApplication,				#isMetaSide : false			},			#name : #whileLoop,			#protocol : #cases,			#sourceCode : 'whileLoop\r\t| x y |\r\tx := y := 0.\r\t[ y < 10 ] whileTrue: [ y := y + 1. x := x + y ].\r\t^ x',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4567' ],		#self : OmReference [ '4568' ],		#time : DateAndTime [ '2024-03-03T08:20:59.683-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingApplication,				#isMetaSide : false			},			#name : #whileRemoteLoop,			#protocol : #cases,			#sourceCode : 'whileRemoteLoop\r\t| x y b1 b2 |\r\tx := y := 0.\r\tb1 := [ y < 10 ].\r\tb2 := [ y := y + 1. x := x + y ].\r\tb1 whileTrue: b2.\r\t^ x',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4568' ],		#self : OmReference [ '4569' ],		#time : DateAndTime [ '2024-03-03T08:20:59.683-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingTest class',				#isMetaSide : true			},			#name : #gatherStatistics,			#protocol : #stats,			#sourceCode : 'gatherStatistics\r\t<script>\r"\tself gatherStatistics "\r\tself runTests.\r\tself stats inspect.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4569' ],		#self : OmReference [ '4570' ],		#time : DateAndTime [ '2024-03-03T08:20:59.683-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingTest class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tself reset',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4570' ],		#self : OmReference [ '4571' ],		#time : DateAndTime [ '2024-03-03T08:20:59.683-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingTest class',				#isMetaSide : true			},			#name : #'ratio:betterThan:for:',			#protocol : #testing,			#sourceCode : 'ratio: aString  betterThan: factor for:  aTest\r\t| averages ratio unopt opt base |\r\taverages :=  (((((aString allButFirst: 2)\r\t\tallButLast: 2)\r\t\t\tsplitOn: \'],[\') collect: [ : each |\r\t\t\t\t($, split: each) collect: #asUnsignedInteger ])\r\t\t\t\t\tcollect: #average)\r\t\t\t\t\t\tcollect: #asFloat.\r\tbase := averages first.\r\topt := averages third.\r\tbase * 2 > opt ifTrue: [ base:=0 ].\r\topt := opt - base.\r\tunopt := averages second - base.\r\topt > 0 ifFalse: [ ^ aTest fail: \'optimized version inadequate time - rerun test\' ].\r\tratio := unopt / opt.\r\t(stats at: aTest selector ifAbsentPut: [ OrderedCollection new ]) add: ratio.\r\t^ ratio >= factor',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4571' ],		#self : OmReference [ '4572' ],		#time : DateAndTime [ '2024-03-03T08:20:59.684-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingTest class',				#isMetaSide : true			},			#name : #reset,			#protocol : #initialize-release,			#sourceCode : 'reset\r\tstats := Dictionary new.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4572' ],		#self : OmReference [ '4573' ],		#time : DateAndTime [ '2024-03-03T08:20:59.684-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingTest class',				#isMetaSide : true			},			#name : #runTests,			#protocol : #stats,			#sourceCode : 'runTests\r\t| instance |\r\tself testSelectors do: [: testName |\r\t\tinstance := self new.\r\t\tinstance selector: testName.\r\t\t[\r\t\t\tinstance setUp.\r\t\t\tinstance perform: testName asSymbol.\r\t\t] ensure: [[\r\t\t\t\tinstance tearDown\r\t\t\t] on: Error do: [  ]\r\t\t]\r\t]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4573' ],		#self : OmReference [ '4574' ],		#time : DateAndTime [ '2024-03-03T08:20:59.684-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingTest class',				#isMetaSide : true			},			#name : #stats,			#protocol : #stats,			#sourceCode : 'stats\r\t" self stats  "\r\t^ String streamContents: [ : aStream |\r\t\taStream nextPutAll: \'Ratio of unopt/optimized runs\';cr.\r\t\tstats keys sorted do: [ : key |\r\t\t\taStream nextPutAll: (key padRightTo: 30).\r\t\t\t(stats at: key) do: [ : each |\r\t\t\t\taStream nextPutAll: (each printShowingDecimalPlaces: 2);nextPut: $ \r\t\t\t].\r\t\t\taStream cr\r\t\t]\r\t]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4574' ],		#self : OmReference [ '4575' ],		#time : DateAndTime [ '2024-03-03T08:20:59.684-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjTimingTest class',				#isMetaSide : true			},			#name : #testSelectors,			#protocol : #stats,			#sourceCode : 'testSelectors\r\t^(self selectors select: [ :each | (each beginsWith: \'test\') and: [each numArgs isZero]])',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4575' ],		#self : OmReference [ '4576' ],		#time : DateAndTime [ '2024-03-03T08:20:59.684-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingTest,				#isMetaSide : false			},			#name : #'assert:isFasterThan:with:',			#protocol : #'testing support',			#sourceCode : 'assert: aBlock isFasterThan: bBlock with: someOptimizations\r\t| noOptim optim results |\r\texporter ifNil: [self assert: false description: \'no bridge available\'].\r\tself transpiler delayDNU: true.\r\tself transpiler removeAllConversions: someOptimizations.\r\tnoOptim := self transpiler convertToJs: bBlock.\r\tself transpiler addAllConversions: someOptimizations.\r\toptim := self transpiler convertToJs: aBlock.\r\tself transpiler delayDNU: false.\r\tresults := bridge evalMessage: (PjJavascriptMessage receiverId: #PjTimingPlatformApp selector: #timeNull:nonOptimized:optimized: arguments:  {\r\t\tPjUnparsedStringNode string: nullBlock.\r\t\tPjUnparsedStringNode string: noOptim.\r\t\tPjUnparsedStringNode string: optim }) .\r"\tresults := bridge evalJavascript: \'global.PjTimingPlatformApp.\', transpiler pharoJsSelectorPrefix, \'timeNull_nonOptimized_optimized_(\', nullBlock,\',\', noOptim,\',\', optim,\')\'.\r"\tself assert: (self class ratio: results betterThan:  1.2 for: self)',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4576' ],		#self : OmReference [ '4577' ],		#time : DateAndTime [ '2024-03-03T08:20:59.684-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingTest,				#isMetaSide : false			},			#name : #'assert:isFasterWith:',			#protocol : #'testing support',			#sourceCode : 'assert: aBlock isFasterWith: someOptimizations\r\tself assert: aBlock isFasterThan: aBlock with: someOptimizations',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4577' ],		#self : OmReference [ '4578' ],		#time : DateAndTime [ '2024-03-03T08:20:59.684-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingTest,				#isMetaSide : false			},			#name : #selector,			#protocol : #accessing,			#sourceCode : 'selector\r\t^ selector',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4578' ],		#self : OmReference [ '4579' ],		#time : DateAndTime [ '2024-03-03T08:20:59.684-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingTest,				#isMetaSide : false			},			#name : #'selector:',			#protocol : #accessing,			#sourceCode : 'selector: anObject\r\tselector := anObject',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4579' ],		#self : OmReference [ '4580' ],		#time : DateAndTime [ '2024-03-03T08:20:59.684-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tbridge := PjBridge new.\r"\tbridge withClientLogging.\r"\tbridge client openBrowserInBackground: true.\r\tself inform: \'Timing web browser should open in background\'.\r\tWorld doOneCycle;doOneCycle.\r\tbridge initializeWithAppClass: PjTimingPlatformApp.\r\tbridge timeout: 60 seconds.\r\texporter := bridge exporter.\r\texporter transpiler: PjTimingTestTranspiler new.\r\texporter setUpForPolyfill.\r\tself transpiler addAllOptionalConversions.\r\tself transpiler removeAllConversions: { PjIfFalseOptimization }.\r\tself transpiler addAllConversions: { PjIfTrueOptimization }.\r\tnullBlock := self transpiler convertToJs: [  ].\r\tbridge start.\r\tPjBridge soleBridge: bridge.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4580' ],		#self : OmReference [ '4581' ],		#time : DateAndTime [ '2024-03-03T08:20:59.684-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingTest,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #running,			#sourceCode : 'tearDown\r\tbridge stop.',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4581' ],		#self : OmReference [ '4582' ],		#time : DateAndTime [ '2024-03-03T08:20:59.684-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingTest,				#isMetaSide : false			},			#name : #testArithmeticOperators,			#protocol : #testing,			#sourceCode : 'testArithmeticOperators\r\tself assert: [ 1-2 ] isFasterWith: PjArithmeticOptimization allSubclasses',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4582' ],		#self : OmReference [ '4583' ],		#time : DateAndTime [ '2024-03-03T08:20:59.685-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingTest,				#isMetaSide : false			},			#name : #testComparisonOperators,			#protocol : #testing,			#sourceCode : 'testComparisonOperators\r\tself assert: [ 1<2 ] isFasterWith: PjComparisonOptimization allSubclasses',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4583' ],		#self : OmReference [ '4584' ],		#time : DateAndTime [ '2024-03-03T08:20:59.685-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingTest,				#isMetaSide : false			},			#name : #testIfThen,			#protocol : #testing,			#sourceCode : 'testIfThen\r\tself with: [ | w | w := 1 ] do: [\r\t\tself\r\t\t\tassert: [ | w | w := 1. w<2 ifTrue: [ w := 0]]\r\t\t\tisFasterWith: PjIfTrueIfFalseOptimization withAllSubclasses,\r\t\t\t\t\t\t\tPjComparisonOptimization allSubclasses\r\t]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4584' ],		#self : OmReference [ '4585' ],		#time : DateAndTime [ '2024-03-03T08:20:59.685-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingTest,				#isMetaSide : false			},			#name : #testNonlocalReturns,			#protocol : #testing,			#sourceCode : 'testNonlocalReturns\r\tbridge timeout: 150 seconds.\r\tself\r\t\tassert: [ PjTimingPlatformApp ifTrueExample: 15 ]\r\t\tisFasterThan: [ PjTimingPlatformApp ifFalseExample: 15 ]\r\t\twith: #()',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4585' ],		#self : OmReference [ '4586' ],		#time : DateAndTime [ '2024-03-03T08:20:59.685-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingTest,				#isMetaSide : false			},			#name : #testTimesRepeat,			#protocol : #testing,			#sourceCode : 'testTimesRepeat\r\tself with: [ | w | w := 0 . nil] do: [\r\t\tself\r\t\t\tassert: [ | w | 10 timesRepeat: [ w := 0]]\r\t\t\tisFasterWith: PjTimesRepeatOptimization withAllSubclasses\r\t]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4586' ],		#self : OmReference [ '4587' ],		#time : DateAndTime [ '2024-03-03T08:20:59.685-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingTest,				#isMetaSide : false			},			#name : #testToDo,			#protocol : #testing,			#sourceCode : 'testToDo\r\tself with: [ | w | w := 10. w := 0 . nil] do: [\r\t\tself\r\t\t\tassert: [ | w | w := 10. 1 to: w do: [ :x| w := x]]\r\t\t\tisFasterWith: PjToDoOptimization withAllSubclasses\r\t]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4587' ],		#self : OmReference [ '4588' ],		#time : DateAndTime [ '2024-03-03T08:20:59.685-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingTest,				#isMetaSide : false			},			#name : #testWhile,			#protocol : #testing,			#sourceCode : 'testWhile\r\tself with: [ | w x | x := 10. x := x - 1. w := 0. nil ] do: [\r\t\tself\r\t\t\tassert: [ | w x | x := 10. [x>0] whileTrue: [ x := x - 1. w := 0]]\r\t\t\tisFasterWith: PjWhileOptimization allSubclasses\r\t]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4588' ],		#self : OmReference [ '4589' ],		#time : DateAndTime [ '2024-03-03T08:20:59.685-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingTest,				#isMetaSide : false			},			#name : #transpiler,			#protocol : #accessing,			#sourceCode : 'transpiler\r\t^ exporter transpiler',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4589' ],		#self : OmReference [ '4590' ],		#time : DateAndTime [ '2024-03-03T08:20:59.686-05:00' ],		#trigger : OmReference [ '4240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjTimingTest,				#isMetaSide : false			},			#name : #'with:do:',			#protocol : #'testing support',			#sourceCode : 'with: nBlock do: tBlock\r\t| saveBlock |\r\tsaveBlock := nullBlock.\r\t[\r\t\tnullBlock := self transpiler convertToJs: nBlock.\r\t\ttBlock value\r\t] ensure: [ nullBlock := saveBlock ]',			#stamp : '',			#package : #PharoJs-Benchmarking		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:20:59.958-05:00' ],		#prior : OmReference [ '4590' ],		#self : OmReference [ '4591' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-Utilities-Statistics-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4591' ],		#self : OmReference [ '4592' ],		#time : DateAndTime [ '2024-03-03T08:20:59.985-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Utilities-Statistics,		#affectedPackageName : #PharoJs-Utilities-Statistics	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4592' ],		#self : OmReference [ '4593' ],		#time : DateAndTime [ '2024-03-03T08:20:59.987-05:00' ],		#trigger : OmReference [ '4591' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjStatistics\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Utilities-Statistics\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjStatistics,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjStatistics class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjStatistics class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjStatistics,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Utilities-Statistics,			#package : #PharoJs-Utilities-Statistics,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4593' ],		#self : OmReference [ '4594' ],		#time : DateAndTime [ '2024-03-03T08:20:59.992-05:00' ],		#trigger : OmReference [ '4591' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #PjStatistics\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Utilities-Statistics\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #PjStatistics,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjStatistics class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjStatistics class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjStatistics,					#isMetaSide : false				},				#parent : @8,				#content : 'Displays statistics of classes converted from Pharo to JS on the Transcript.\r\rExamples\r\rTranscript clear.\rPjStatistics statsForApp: PjCounterBrowserApp .\r\rPjStatistics statsForAll: { PjHelloWorldApp. PjMinimalBrowserApplication}',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Utilities-Statistics,			#package : #PharoJs-Utilities-Statistics,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Displays statistics of classes converted from Pharo to JS on the Transcript.\r\rExamples\r\rTranscript clear.\rPjStatistics statsForApp: PjCounterBrowserApp .\r\rPjStatistics statsForAll: { PjHelloWorldApp. PjMinimalBrowserApplication}',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4594' ],		#self : OmReference [ '4595' ],		#time : DateAndTime [ '2024-03-03T08:21:00.029-05:00' ],		#trigger : OmReference [ '4591' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjStatistics class',				#isMetaSide : true			},			#name : #example1,			#protocol : #examples,			#sourceCode : 'example1\r\r\tTranscript\r\t\topen;\r\t\tclear.\r\r\tself statsForApp: PjCounterBrowserApp',			#stamp : '',			#package : #PharoJs-Utilities-Statistics		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4595' ],		#self : OmReference [ '4596' ],		#time : DateAndTime [ '2024-03-03T08:21:00.03-05:00' ],		#trigger : OmReference [ '4591' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjStatistics class',				#isMetaSide : true			},			#name : #example2,			#protocol : #examples,			#sourceCode : 'example2\r\r\tTranscript\r\t\topen;\r\t\tclear.\r\r\tself statsForAll: { \r\t\t\tPjHelloWorldApp.\r\t\t\tPjMinimalWebApplication }',			#stamp : '',			#package : #PharoJs-Utilities-Statistics		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4596' ],		#self : OmReference [ '4597' ],		#time : DateAndTime [ '2024-03-03T08:21:00.03-05:00' ],		#trigger : OmReference [ '4591' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjStatistics class',				#isMetaSide : true			},			#name : #'statsForAll:',			#protocol : #statistics,			#sourceCode : 'statsForAll: appClasses\r\r\tappClasses do: [ : cl | self statsForApp: cl ]',			#stamp : '',			#package : #PharoJs-Utilities-Statistics		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4597' ],		#self : OmReference [ '4598' ],		#time : DateAndTime [ '2024-03-03T08:21:00.03-05:00' ],		#trigger : OmReference [ '4591' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjStatistics class',				#isMetaSide : true			},			#name : #'statsForApp:',			#protocol : #statistics,			#sourceCode : 'statsForApp: appClass\r\r\t| exporter actuallyExportedClasses methodsCount jsCode |\r\texporter := appClass exporterClass newWithAppClass: appClass.\r\tjsCode := String streamContents: [ :stream | exporter writeJsCodeOn: stream ].\r\tactuallyExportedClasses := exporter bootstrapClasses asSet\r\t\t, exporter nonBootstrapClasses asSet collect: #classToUseForJsConversion.\r\tmethodsCount := actuallyExportedClasses\r\t\tinject: 0\r\t\tinto: [ :count :cl | count + cl selectors size ].\r\tTranscript \r\t\tcr;\r\t\tshow: \'----------------\';\r\t\tcr;\r\t\tshow: appClass name;\r\t\tshow: \' - \';\r\t\tshow: Date today;\r\t\tshow: \' - \';\r\t\tshow: Time now print24;\r\t\tcr;\r\t\tcr;\r\t\tshow: \'Classes: \';\r\t\tshow: actuallyExportedClasses size;\r\t\tcr;\r\t\tshow: \'Methods: \';\r\t\tshow: methodsCount;\r\t\tcr;\r\t\tshow: \'Exported JS: \';\r\t\tshow: jsCode size humanReadableSIByteSize;\r\t\tcr;\r\t\tshow: \'----------------\'',			#stamp : '',			#package : #PharoJs-Utilities-Statistics		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:21:00.14-05:00' ],		#prior : OmReference [ '4598' ],		#self : OmReference [ '4599' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-Tools-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4599' ],		#self : OmReference [ '4600' ],		#time : DateAndTime [ '2024-03-03T08:21:00.169-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Tools-Inspector,		#affectedPackageName : #PharoJs-Tools	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4600' ],		#self : OmReference [ '4601' ],		#time : DateAndTime [ '2024-03-03T08:21:00.173-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Association subclass: #PjProxyField\r\tinstanceVariableNames: \'proxy\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Tools-Inspector\'',				#superclassName : 'Association',				#traitCompositionSource : '{}'			},			#name : #PjProxyField,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjProxyField,						#isMetaSide : false					},					#name : #proxy,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjProxyField class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjProxyField class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjProxyField,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Tools-Inspector,			#package : #PharoJs-Tools,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4601' ],		#self : OmReference [ '4602' ],		#time : DateAndTime [ '2024-03-03T08:21:00.176-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Tools-Tutorial,		#affectedPackageName : #PharoJs-Tools	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4602' ],		#self : OmReference [ '4603' ],		#time : DateAndTime [ '2024-03-03T08:21:00.177-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'AbstractTutorial subclass: #PharoJSTutorial\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Tools-Tutorial\'',				#superclassName : 'AbstractTutorial',				#traitCompositionSource : '{}'			},			#name : #PharoJSTutorial,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PharoJSTutorial class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PharoJSTutorial class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PharoJSTutorial,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Tools-Tutorial,			#package : #PharoJs-Tools,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4603' ],		#self : OmReference [ '4604' ],		#time : DateAndTime [ '2024-03-03T08:21:00.179-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'AbstractTutorial subclass: #PharoJSTutorial\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Tools-Tutorial\'',				#superclassName : 'AbstractTutorial',				#traitCompositionSource : '{}'			},			#name : #PharoJSTutorial,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PharoJSTutorial class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PharoJSTutorial class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PharoJSTutorial,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a tutorial for some of the elements of PharoJS',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Tools-Tutorial,			#package : #PharoJs-Tools,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a tutorial for some of the elements of PharoJS',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4604' ],		#self : OmReference [ '4605' ],		#time : DateAndTime [ '2024-03-03T08:21:00.181-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Tools-Playground,		#affectedPackageName : #PharoJs-Tools	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4605' ],		#self : OmReference [ '4606' ],		#time : DateAndTime [ '2024-03-03T08:21:00.182-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'StPlayground subclass: #PjPlayground\r\tinstanceVariableNames: \'bridge\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Tools-Playground\'',				#superclassName : 'StPlayground',				#traitCompositionSource : '{}'			},			#name : #PjPlayground,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjPlayground,						#isMetaSide : false					},					#name : #bridge,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjPlayground class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjPlayground class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjPlayground,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Tools-Playground,			#package : #PharoJs-Tools,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4606' ],		#self : OmReference [ '4607' ],		#time : DateAndTime [ '2024-03-03T08:21:00.184-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Tools-Help,		#affectedPackageName : #PharoJs-Tools	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4607' ],		#self : OmReference [ '4608' ],		#time : DateAndTime [ '2024-03-03T08:21:00.185-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'CustomHelp subclass: #PharoJsHelp\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Tools-Help\'',				#superclassName : 'CustomHelp',				#traitCompositionSource : '{}'			},			#name : #PharoJsHelp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PharoJsHelp class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PharoJsHelp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PharoJsHelp,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Tools-Help,			#package : #PharoJs-Tools,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4608' ],		#self : OmReference [ '4609' ],		#time : DateAndTime [ '2024-03-03T08:21:00.187-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'CustomHelp subclass: #PharoJsHelp\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Tools-Help\'',				#superclassName : 'CustomHelp',				#traitCompositionSource : '{}'			},			#name : #PharoJsHelp,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PharoJsHelp class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PharoJsHelp class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PharoJsHelp,					#isMetaSide : false				},				#parent : @8,				#content : 'Hierarchical help for PharoJS',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Tools-Help,			#package : #PharoJs-Tools,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Hierarchical help for PharoJS',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4609' ],		#self : OmReference [ '4610' ],		#time : DateAndTime [ '2024-03-03T08:21:00.189-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PharoJsHelp subclass: #PharoJsHelpApplication\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Tools-Help\'',				#superclassName : 'PharoJsHelp',				#traitCompositionSource : '{}'			},			#name : #PharoJsHelpApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PharoJsHelpApplication class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PharoJsHelpApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PharoJsHelpApplication,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Tools-Help,			#package : #PharoJs-Tools,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4610' ],		#self : OmReference [ '4611' ],		#time : DateAndTime [ '2024-03-03T08:21:00.19-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PharoJsHelp subclass: #PharoJsHelpApplication\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Tools-Help\'',				#superclassName : 'PharoJsHelp',				#traitCompositionSource : '{}'			},			#name : #PharoJsHelpApplication,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PharoJsHelpApplication class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PharoJsHelpApplication class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PharoJsHelpApplication,					#isMetaSide : false				},				#parent : @8,				#content : 'Help pages to describe Applications with PharoJS',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Tools-Help,			#package : #PharoJs-Tools,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Help pages to describe Applications with PharoJS',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4611' ],		#self : OmReference [ '4612' ],		#time : DateAndTime [ '2024-03-03T08:21:00.276-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #asProxyInfo,			#protocol : #'*PharoJs-Tools-Inspector',			#sourceCode : 'asProxyInfo\r\r\t| pi |\r\tpi := PjProxyInfo new.\r\tpi oid: self oid.\r\tpi globalName: jsName.\r\t^ pi',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4612' ],		#self : OmReference [ '4613' ],		#time : DateAndTime [ '2024-03-03T08:21:00.278-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'gefFieldValueFor:',			#protocol : #'*PharoJs-Tools-Inspector',			#sourceCode : 'gefFieldValueFor: key\r\r\t^ self jsBridge: [ :bridge | \r\t\t  bridge evalJavascript: jsName , \'.\' , key ]',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4613' ],		#self : OmReference [ '4614' ],		#time : DateAndTime [ '2024-03-03T08:21:00.279-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #'gtInspectorProxyIn:',			#protocol : #'*PharoJs-Tools-Inspector',			#sourceCode : 'gtInspectorProxyIn: composite\r\t<gtInspectorPresentationOrder: 1>\r\t\r\t| associations |\r\tassociations := OrderedCollection new.\r\tself keysForProxy associationsDo: [ :assoc | associations add: assoc ].\r\t^ composite table\r\t\t  title: \'Javascript\';\r\t\t  display: [ :each | associations ];\r\t\t  column: \'Key\' evaluated: #key;\r\t\t  column: \'Value\' evaluated: #value;\r\t\t  send: #value',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4614' ],		#self : OmReference [ '4615' ],		#time : DateAndTime [ '2024-03-03T08:21:00.279-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxy,				#isMetaSide : false			},			#name : #keysForProxy,			#protocol : #'*PharoJs-Tools-Inspector',			#sourceCode : 'keysForProxy\r\r\t^ self jsBridge: [ :bridge | \r\t\t  [ \r\t\t  | msg |\r\t\t  msg := PjMessageGetKeys newWithId.\r\t\t  msg proxyInfo: self asProxyInfo.\r\t\t  bridge sendMessageAndWaitForResponse: msg ]\r\t\t\t  on: Error\r\t\t\t  do: [ ^ #(  ) ] ]',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4615' ],		#self : OmReference [ '4616' ],		#time : DateAndTime [ '2024-03-03T08:21:00.279-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjMinimalWebApplication class',				#isMetaSide : true			},			#name : #'writePlaygroundContentsOn:',			#protocol : #'*PharoJs-Tools',			#sourceCode : 'writePlaygroundContentsOn: str\r\r\t<pharoJsSkip>\r\tsuper writePlaygroundContentsOn: str.\r\tstr\r\t\t<< \'"Sample code:"\';\r\t\tcr;\r\t\t<< \'console dir: document.\';\r\t\tcr;\r\t\t<< \'document fonts. " inspect this "\';\r\t\tcr;\r\t\t<< \'document body style backgroundColor: \'\'#fee\'\'.\';\r\t\tcr',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4616' ],		#self : OmReference [ '4617' ],		#time : DateAndTime [ '2024-03-03T08:21:00.28-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #classSubclassResponsibilitySet,			#protocol : #'*PharoJs-Tools',			#sourceCode : 'classSubclassResponsibilitySet\r\t| set |\r\tset := self == PjApplication ifTrue: [ Set new ] ifFalse: [ self superclass classSubclassResponsibilitySet ].\r\tself class methods do: [:cm | | selector |\r\t\tselector := cm selector.\r\t\t(cm sendsSelector: #subclassResponsibility) ifTrue: [\r\t\t\t\tset add: selector\r\t\t\t] ifFalse: [\r\t\t\t\tset remove: selector ifAbsent: [ ]\r\t\t\t]]..\r\t^ set',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4617' ],		#self : OmReference [ '4618' ],		#time : DateAndTime [ '2024-03-03T08:21:00.28-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #isAbstract,			#protocol : #'*PharoJs-Tools',			#sourceCode : 'isAbstract\r\t^ self subclassResponsibilitySet isNotEmpty or: [\r\t\t\tself classSubclassResponsibilitySet isNotEmpty\r\t\t]',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4618' ],		#self : OmReference [ '4619' ],		#time : DateAndTime [ '2024-03-03T08:21:00.28-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #playground,			#protocol : #'*PharoJs-Tools',			#sourceCode : 'playground\r\t<pharoJsSkip>\r\t^ self bridge playground',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4619' ],		#self : OmReference [ '4620' ],		#time : DateAndTime [ '2024-03-03T08:21:00.28-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #subclassResponsibilitySet,			#protocol : #'*PharoJs-Tools',			#sourceCode : 'subclassResponsibilitySet\r\t| set |\r\tset := self == PjApplication ifTrue: [ Set new ] ifFalse: [ self superclass subclassResponsibilitySet ].\r\tself methods do: [:cm | | selector |\r\t\tselector := cm selector.\r\t\t(cm sendsSelector: #subclassResponsibility) ifTrue: [\r\t\t\t\tset add: selector\r\t\t\t] ifFalse: [\r\t\t\t\tset remove: selector ifAbsent: [ ]\r\t\t\t]]..\r\t^ set',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4620' ],		#self : OmReference [ '4621' ],		#time : DateAndTime [ '2024-03-03T08:21:00.28-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #title,			#protocol : #'*PharoJs-Tools',			#sourceCode : 'title\r\t<pharoJsSkip>\r\t^ self name',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4621' ],		#self : OmReference [ '4622' ],		#time : DateAndTime [ '2024-03-03T08:21:00.281-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjApplication class',				#isMetaSide : true			},			#name : #'writePlaygroundContentsOn:',			#protocol : #'*PharoJs-Tools',			#sourceCode : 'writePlaygroundContentsOn: str\r\r\t<pharoJsSkip>\r\tstr\r\t\t<< $"\r\t\t<<\r\t\t\t\'PharoJS playground preset bindings including the bridge and JS globals.\';\r\t\tcr;\r\t\t<< \'You can find them all in the bindings menu above.\';\r\t\t<< $";\r\t\tcr;\r\t\tcr',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4622' ],		#self : OmReference [ '4623' ],		#time : DateAndTime [ '2024-03-03T08:21:00.281-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #StPlaygroundPagePresenter,				#isMetaSide : false			},			#name : #'addBinding:',			#protocol : #'*PharoJs-Tools',			#sourceCode : 'addBinding: aVariable\r\r\t"Used by PharoJS Playground to add instances of WorkspaceVariable "\r\r\ttext addBinding: aVariable',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4623' ],		#self : OmReference [ '4624' ],		#time : DateAndTime [ '2024-03-03T08:21:00.281-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #playground,			#protocol : #'*PharoJs-Tools',			#sourceCode : 'playground\r\r\t^ PjPlayground openFor: self\r',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4624' ],		#self : OmReference [ '4625' ],		#time : DateAndTime [ '2024-03-03T08:21:00.282-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridge,				#isMetaSide : false			},			#name : #'writePlaygroundContentsOn:',			#protocol : #'*PharoJs-Tools',			#sourceCode : 'writePlaygroundContentsOn: str\r\r\tstr\r\t\t<< $";\r\t\t<<\r\t\t\t\'Connection established with Javascript via PharoJS bridge listening on port \';\r\t\tprint: self port;\r\t\t<< $.;\r\t\t<< $";\r\t\tcr;\r\t\tcr.\r\tself client writePlaygroundContentsOn: str',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4625' ],		#self : OmReference [ '4626' ],		#time : DateAndTime [ '2024-03-03T08:21:00.282-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjProxyField class',				#isMetaSide : true			},			#name : #'proxy:key:',			#protocol : #creating,			#sourceCode : 'proxy: aPjProxy key: aString\r\t^ self new\r\t\tproxy: aPjProxy key: aString;\r\t\tyourself',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4626' ],		#self : OmReference [ '4627' ],		#time : DateAndTime [ '2024-03-03T08:21:00.282-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyField,				#isMetaSide : false			},			#name : #'proxy:key:',			#protocol : #initialization,			#sourceCode : 'proxy: aPjProxy key: aString\r\tproxy := aPjProxy.\r\tkey := aString.\r\tvalue := self',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4627' ],		#self : OmReference [ '4628' ],		#time : DateAndTime [ '2024-03-03T08:21:00.282-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjProxyField,				#isMetaSide : false			},			#name : #value,			#protocol : #accessing,			#sourceCode : 'value\r\tvalue == self ifFalse: [ ^ value ].\r\tvalue := proxy gefFieldValueFor: key.\r\tproxy := nil.\r\t^ value',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4628' ],		#self : OmReference [ '4629' ],		#time : DateAndTime [ '2024-03-03T08:21:00.282-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjMinimalFileBasedWebApp class',				#isMetaSide : true			},			#name : #'writePlaygroundContentsOn:',			#protocol : #'*PharoJs-Tools',			#sourceCode : 'writePlaygroundContentsOn: str\r\r\t<pharoJsSkip>\r\tsuper writePlaygroundContentsOn: str.\r\tstr\r\t\t<< \'"Sample code:"\';\r\t\tcr;\r\t\t<< \'console dir: document.\';\r\t\tcr;\r\t\t<< \'document fonts. " inspect this "\';\r\t\tcr;\r\t\t<< \'document body style backgroundColor: \'\'#fee\'\'.\';\r\t\tcr',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4629' ],		#self : OmReference [ '4630' ],		#time : DateAndTime [ '2024-03-03T08:21:00.282-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PharoJSTutorial,				#isMetaSide : false			},			#name : #pjPlayground,			#protocol : #lessons,			#sourceCode : 'pjPlayground\r\t^ Lesson\r\t\ttitle: \'PharoJS Playground\'\r\t\tlesson:\r\'"The Playground lets you explore the browser side of an app.\r\rYou can access it from the world menu or do the following:\r"\r\tPjPlayground popUpMenu\'',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4630' ],		#self : OmReference [ '4631' ],		#time : DateAndTime [ '2024-03-03T08:21:00.282-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PharoJSTutorial,				#isMetaSide : false			},			#name : #pjUseHelp,			#protocol : #lessons,			#sourceCode : 'pjUseHelp\r\t^ Lesson\r\t\ttitle: \'Use PharoJS Help instead\'\r\t\tlesson:\r\'"It is very hard to do a tutorial, as most of the interactions are only available inside a PharoJS Playground.\r\rSo all the information is currently in the Help menu available from the World menu, or doing the following:"\r\r\tHelpBrowser openOn: PharoJsHelp\'',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4631' ],		#self : OmReference [ '4632' ],		#time : DateAndTime [ '2024-03-03T08:21:00.283-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PharoJSTutorial,				#isMetaSide : false			},			#name : #tutorial,			#protocol : #tutorial,			#sourceCode : 'tutorial\r\t^ #(\r\tpjUseHelp\r\tpjPlayground\r\t)',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4632' ],		#self : OmReference [ '4633' ],		#time : DateAndTime [ '2024-03-03T08:21:00.283-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjBridgeClient,				#isMetaSide : false			},			#name : #'writePlaygroundContentsOn:',			#protocol : #'*PharoJs-Tools',			#sourceCode : 'writePlaygroundContentsOn: str\r\r\t^ self appClass writePlaygroundContentsOn: str',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4633' ],		#self : OmReference [ '4634' ],		#time : DateAndTime [ '2024-03-03T08:21:00.283-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjPlayground class',				#isMetaSide : true			},			#name : #applicationList,			#protocol : #'world menu',			#sourceCode : 'applicationList\r\t^ (PjApplication allSubclasses select: [ :class |\r\t\t\t\tclass isAbstract not and: [ (class hasClassMethod: #playgroundDoNotList) not ]\r\t\t]) sort: [ : l : r | l name <= r name ]',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4634' ],		#self : OmReference [ '4635' ],		#time : DateAndTime [ '2024-03-03T08:21:00.283-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjPlayground class',				#isMetaSide : true			},			#name : #defaultTitle,			#protocol : #accessing,			#sourceCode : 'defaultTitle\r\r\t^ \'PharoJS Playground\'',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4635' ],		#self : OmReference [ '4636' ],		#time : DateAndTime [ '2024-03-03T08:21:00.283-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjPlayground class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\r\tSystemAnnouncer uniqueInstance\r\t\tunsubscribe: self;\r\t\twhen: ClassAnnouncement do: [ \r\t\t\tself resetMenuBar ]',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4636' ],		#self : OmReference [ '4637' ],		#time : DateAndTime [ '2024-03-03T08:21:00.284-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjPlayground class',				#isMetaSide : true			},			#name : #open,			#protocol : #opening,			#sourceCode : 'open\r\r\t| playground |\r\tplayground := self new.\r\tplayground open.\r\t^ playground',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4637' ],		#self : OmReference [ '4638' ],		#time : DateAndTime [ '2024-03-03T08:21:00.284-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjPlayground class',				#isMetaSide : true			},			#name : #'openFor:',			#protocol : #opening,			#sourceCode : 'openFor: aPjBridge\r\r\t| playground |\r\tplayground := self open.\r\tplayground initializeWithBridge: aPjBridge.\r\t^ playground',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4638' ],		#self : OmReference [ '4639' ],		#time : DateAndTime [ '2024-03-03T08:21:00.284-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjPlayground class',				#isMetaSide : true			},			#name : #'pharoJsMenuOn:',			#protocol : #'world menu',			#sourceCode : 'pharoJsMenuOn: aBuilder\r\r\t<worldMenu>\r\t(aBuilder item: #PharoJsPlayground)\r\t\torder: 40;\r\t\tlabel: \'PharoJS\';\r\t\ticon: (self iconNamed: #smallWindowIcon);\r\t\twith: [ \r\t\t\tself applicationList do: [ :class | \r\t\t\t\t\t| n |\r\t\t\t\t\tn := class name.\r\t\t\t\t\t(aBuilder item: n asSymbol)\r\t\t\t\t\t\tlabel: n;\r\t\t\t\t\t\twith: [ \r\t\t\t\t\t\t\t(aBuilder item: (n , \':js\') asSymbol)\r\t\t\t\t\t\t\t\tlabel: \'playground\';\r\t\t\t\t\t\t\t\taction: [ class playground ].\r\t\t\t\t\t\t\t(aBuilder item: (n , \':browse\') asSymbol)\r\t\t\t\t\t\t\t\tlabel: \'export app\';\r\t\t\t\t\t\t\t\taction: [ class exportApp ].\r\t\t\t\t\t\t\t(aBuilder item: (n , \':browse\') asSymbol)\r\t\t\t\t\t\t\t\tlabel: \'browse\';\r\t\t\t\t\t\t\t\taction: [ class browse ] ] ].\r\t\t\t(aBuilder item: #HelpPharoJs)\r\t\t\t\tlabel: \'PharoJS Help\';\r\t\t\t\ticon: (self iconNamed: #smallHelp);\r\t\t\t\taction: [ HelpBrowser openOn: PharoJsHelp ] ]',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4639' ],		#self : OmReference [ '4640' ],		#time : DateAndTime [ '2024-03-03T08:21:00.311-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjPlayground class',				#isMetaSide : true			},			#name : #resetMenuBar,			#protocol : #'world menu',			#sourceCode : 'resetMenuBar\r\r\t<script>\r\tMenubarMorph reset',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4640' ],		#self : OmReference [ '4641' ],		#time : DateAndTime [ '2024-03-03T08:21:00.312-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlayground,				#isMetaSide : false			},			#name : #'addBinding:',			#protocol : #accessing,			#sourceCode : 'addBinding: anAssociation\r\r\tself firstPage addBinding: anAssociation',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4641' ],		#self : OmReference [ '4642' ],		#time : DateAndTime [ '2024-03-03T08:21:00.312-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlayground,				#isMetaSide : false			},			#name : #'addWorkspaceVariableNamed:value:',			#protocol : #initialization,			#sourceCode : 'addWorkspaceVariableNamed: jsGlobalName value: jsGlobal\r\r\t^ self addBinding:\r\t\t  (WorkspaceVariable key: jsGlobalName value: jsGlobal)',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4642' ],		#self : OmReference [ '4643' ],		#time : DateAndTime [ '2024-03-03T08:21:00.312-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlayground,				#isMetaSide : false			},			#name : #bridge,			#protocol : #accessing,			#sourceCode : 'bridge\r\t^bridge',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4643' ],		#self : OmReference [ '4644' ],		#time : DateAndTime [ '2024-03-03T08:21:00.312-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlayground,				#isMetaSide : false			},			#name : #'bridge:',			#protocol : #accessing,			#sourceCode : 'bridge: aBridge\r\tbridge := aBridge \r\t',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4644' ],		#self : OmReference [ '4645' ],		#time : DateAndTime [ '2024-03-03T08:21:00.312-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlayground,				#isMetaSide : false			},			#name : #'displayWaitingForConnectionMessageForDuration:',			#protocol : #initialization,			#sourceCode : 'displayWaitingForConnectionMessageForDuration: aDuration\r\r\t| waitDescription |\r\twaitDescription := String streamContents: [ :str | \r\t\t                   str\r\t\t\t                   << $";\r\t\t\t                   cr;\r\t\t\t                   << \'PharoJS bridge server listening on: \';\r\t\t\t                   print: bridge serverUrl;\r\t\t\t                   cr;\r\t\t\t                   << \'Waiting for client connection for \';\r\t\t\t                   print: aDuration seconds;\r\t\t\t<< \' seconds\';\r\t\t\t                   cr;\r\t\t\t                   << $" ].\r\tself contents: waitDescription',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4645' ],		#self : OmReference [ '4646' ],		#time : DateAndTime [ '2024-03-03T08:21:00.313-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlayground,				#isMetaSide : false			},			#name : #initBindings,			#protocol : #initialization,			#sourceCode : 'initBindings\r\r\t| jsGlobal |\r\tself addWorkspaceVariableNamed: #bridge value: bridge.\r\tbridge client jsGlobalNames do: [ :jsGlobalName | \r\t\tjsGlobal := PjProxy proxyNamed: jsGlobalName onBridge: bridge.\r\t\tself addWorkspaceVariableNamed: jsGlobalName value: jsGlobal ]',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4646' ],		#self : OmReference [ '4647' ],		#time : DateAndTime [ '2024-03-03T08:21:00.313-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlayground,				#isMetaSide : false			},			#name : #initTitleWithBridge,			#protocol : #initialization,			#sourceCode : 'initTitleWithBridge\r\r\t| newTitle |\r\tnewTitle := String streamContents: [ : ws |\r\t\tws << self class defaultTitle;\r\t\t<< \' - \';\r\t\t<< bridge clientTitle\r\t].\r\tself title: newTitle',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4647' ],		#self : OmReference [ '4648' ],		#time : DateAndTime [ '2024-03-03T08:21:00.313-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlayground,				#isMetaSide : false			},			#name : #initialContents,			#protocol : #initialization,			#sourceCode : 'initialContents\r\r\t^ String streamContents: [ :str | \r\t\t  self writePlaygroundContentsOn: str ]',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4648' ],		#self : OmReference [ '4649' ],		#time : DateAndTime [ '2024-03-03T08:21:00.313-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlayground,				#isMetaSide : false			},			#name : #'initializeWindow:',			#protocol : #initialization,			#sourceCode : 'initializeWindow: aWindowPresenter\r\r\tsuper initializeWindow: aWindowPresenter.\r\taWindowPresenter whenClosedDo: [ bridge stop ]',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4649' ],		#self : OmReference [ '4650' ],		#time : DateAndTime [ '2024-03-03T08:21:00.314-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlayground,				#isMetaSide : false			},			#name : #'initializeWithBridge:',			#protocol : #initialization,			#sourceCode : 'initializeWithBridge: aPjBridge\r\r\tbridge := aPjBridge.\r\tbridge startWithoutWaitingForClient.\r\tself initTitleWithBridge.\r\tself waitForClientToStart.\r\tself initBindings.\r\tself contents: self initialContents',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4650' ],		#self : OmReference [ '4651' ],		#time : DateAndTime [ '2024-03-03T08:21:00.314-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlayground,				#isMetaSide : false			},			#name : #title,			#protocol : #accessing,			#sourceCode : 'title\r\t\r\tself hasWindow ifFalse: [ ^nil ].\r\t^ self window title',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4651' ],		#self : OmReference [ '4652' ],		#time : DateAndTime [ '2024-03-03T08:21:00.314-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlayground,				#isMetaSide : false			},			#name : #'title:',			#protocol : #accessing,			#sourceCode : 'title: aString\r\r\tself window title: aString',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4652' ],		#self : OmReference [ '4653' ],		#time : DateAndTime [ '2024-03-03T08:21:00.314-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlayground,				#isMetaSide : false			},			#name : #waitForClientToStart,			#protocol : #initialization,			#sourceCode : 'waitForClientToStart\r\r\t| waitTime endTime |\r\twaitTime := 60 seconds.\r\tendTime := DateAndTime now + waitTime.\r\tbridge waitForClientToStartFor: waitTime doing: [ \r\t\tself displayWaitingForConnectionMessageForDuration:\r\t\t\tendTime - DateAndTime now.\r\t\tWorld doOneCycle ].',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4653' ],		#self : OmReference [ '4654' ],		#time : DateAndTime [ '2024-03-03T08:21:00.314-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlayground,				#isMetaSide : false			},			#name : #'writePlaygroundContentsOn:',			#protocol : #writing,			#sourceCode : 'writePlaygroundContentsOn: aWriteStream \r\tself bridge writePlaygroundContentsOn: aWriteStream ',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4654' ],		#self : OmReference [ '4655' ],		#time : DateAndTime [ '2024-03-03T08:21:00.314-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjMinimalNodeApplication class',				#isMetaSide : true			},			#name : #'writePlaygroundContentsOn:',			#protocol : #'*PharoJs-Tools',			#sourceCode : 'writePlaygroundContentsOn: str\r\r\t<pharoJsSkip>\r\tsuper writePlaygroundContentsOn: str.\r\tstr\r\t\t<< \'"Sample code:"\';\r\t\tcr;\r\t\t<< \'console log: \'\'hello\'\'.\';\r\t\tcr;\r\t\t<< \'global. " inspect this "\';\r\t\tcr',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4655' ],		#self : OmReference [ '4656' ],		#time : DateAndTime [ '2024-03-03T08:21:00.314-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PharoJsHelp class',				#isMetaSide : true			},			#name : #bookName,			#protocol : #accessing,			#sourceCode : 'bookName\r\r\t^\'PharoJS\'',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4656' ],		#self : OmReference [ '4657' ],		#time : DateAndTime [ '2024-03-03T08:21:00.315-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PharoJsHelp class',				#isMetaSide : true			},			#name : #key,			#protocol : #accessing,			#sourceCode : 'key\r\r\t^ self name',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4657' ],		#self : OmReference [ '4658' ],		#time : DateAndTime [ '2024-03-03T08:21:00.315-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PharoJsHelp class',				#isMetaSide : true			},			#name : #pages,			#protocol : #accessing,			#sourceCode : 'pages\r\r\t^ (self class methods collect: #selector thenSelect: [ : s | s beginsWith: #topic ]) sort,\r\t\t(self subclasses collect: #name)',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4658' ],		#self : OmReference [ '4659' ],		#time : DateAndTime [ '2024-03-03T08:21:00.317-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PharoJsHelp class',				#isMetaSide : true			},			#name : #topic0Overview,			#protocol : #documentation,			#sourceCode : 'topic0Overview\r\r\t"This method was automatically generated."\r\t<script: \'self edit: #topic0Overview\'>\r\t^HelpTopic\r\t\ttitle: \'Introduction\'\r\t\tcontents: \r\'PharoJS allows you to develop code for the web - from the comfort of your Pharo environment.\r\rPharoJS can support this several ways:\r1) PharoJS can export an application to a file ready to be deployed\r2) PharoJS can interactively run an application in a browser with interaction via a PharoJS playground\r3) PharoJS can run an application within Pharo that interacts directly with the object in a Javascript engine (web browser of Node)\r!\' readStream nextChunkText',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4659' ],		#self : OmReference [ '4660' ],		#time : DateAndTime [ '2024-03-03T08:21:00.317-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PharoJsHelp class',				#isMetaSide : true			},			#name : #topicPjInspector,			#protocol : #documentation,			#sourceCode : 'topicPjInspector\r\r\t<script: \'self edit: #topicPjInspector\'>\r\t^ HelpTopic\r\t\ttitle: \'Inspector\'\r\t\tcontents:\r\'The Inspector understands PjProxy values and communicates with the\rrelevant Javascript engine (browser or NodeJS) to examine programmatic values.\r\rFor example by selecting and Cmd-I the following:\r\tdocument fonts\ryou would get an inspector showing all the fields of the object\r-- if document were defined in this scope, which it\'\'s not.\r\rHowever this works fine in a PharoJS Playground, or in\rmethods of a class that specify the poolDictionary PjDomGlobals\'',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4660' ],		#self : OmReference [ '4661' ],		#time : DateAndTime [ '2024-03-03T08:21:00.317-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PharoJsHelp class',				#isMetaSide : true			},			#name : #topicPjPlayground,			#protocol : #documentation,			#sourceCode : 'topicPjPlayground\r\r\t<script: \'self edit: #topicPjPlayground\'>\r\t^ HelpTopic\r\t\ttitle: \'Playground\'\r\t\tcontents:\r\'The PharoJS Playground lets you explore the browser side of an app.\r\rAccess the PharoJS Playground from the world menu which will allow you to launch a playground for any app that you have in the image.\r\rYou can launch the app on Pharo, which means that all of your Pharo Smalltalk code will run in the Pharo image, but you can access the DOM, Javascript libraries, and other Javascript values via proxies visible as globals in the playground.\r\rYou can also launch the app on the Javascript engine (Web browser or Node). In this case, the code is all translated to Javascript and installed in the JSE.  In addition to the proxies mentioned above, the application and other installed classes running on the JSE are accessible via proxies.\r\'',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4661' ],		#self : OmReference [ '4662' ],		#time : DateAndTime [ '2024-03-03T08:21:00.317-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PharoJsHelpApplication class',				#isMetaSide : true			},			#name : #bookName,			#protocol : #accessing,			#sourceCode : 'bookName \r\t^\'Building Applications\'',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4662' ],		#self : OmReference [ '4663' ],		#time : DateAndTime [ '2024-03-03T08:21:00.317-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PharoJsHelpApplication class',				#isMetaSide : true			},			#name : #key,			#protocol : #accessing,			#sourceCode : 'key\r\t^ self name',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4663' ],		#self : OmReference [ '4664' ],		#time : DateAndTime [ '2024-03-03T08:21:00.317-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PharoJsHelpApplication class',				#isMetaSide : true			},			#name : #pages,			#protocol : #accessing,			#sourceCode : 'pages\r\t^ (self class methods collect: #selector thenSelect: [ : s | s beginsWith: #topic ]) sort,\r\t\t(self subclasses collect: #name)',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4664' ],		#self : OmReference [ '4665' ],		#time : DateAndTime [ '2024-03-03T08:21:00.318-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PharoJsHelpApplication class',				#isMetaSide : true			},			#name : #topicApplication,			#protocol : #pages,			#sourceCode : 'topicApplication\r\t<script: \'self edit: #topicApplication\'>\r\t^HelpTopic\r\t\ttitle: \'Introduction\'\r\t\tcontents: \r\'To develop an application, whether a Single Page Application (SPA)  or simply code to support a conventional web page, create a class that is a subclass of PjApplication - usually a subclass of PjBrowserApplication or PjNodeApplication.\r\rThe subclasses define appropriate Javascript values to be referenced by proxies when code is running on Pharo.\rThese are defined by shared pool dictionaries.!\' readStream nextChunkText',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4665' ],		#self : OmReference [ '4666' ],		#time : DateAndTime [ '2024-03-03T08:21:00.318-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PharoJsHelpApplication class',				#isMetaSide : true			},			#name : #topicGlobalsAndPolyfills,			#protocol : #pages,			#sourceCode : 'topicGlobalsAndPolyfills\r\t"This method was automatically generated."\r\t<script: \'self edit: #topicGlobalsAndPolyfills\'>\r\t^HelpTopic\r\t\ttitle: \'Globals and Polyfills\'\r\t\tcontents: \r\'When code is running on Pharo, references to Javascript values such as the DOM need to be in scope.\rWhen code is running on Pharo or a Javascript engine, polyfills are used to sew together the application with other libraries.\r\rBoth of these requirements are achieved by using Shared Pool Dictionaries.\r!\' readStream nextChunkText',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4666' ],		#self : OmReference [ '4667' ],		#time : DateAndTime [ '2024-03-03T08:21:00.318-05:00' ],		#trigger : OmReference [ '4599' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SpCodePresenter,				#isMetaSide : false			},			#name : #'addBinding:',			#protocol : #'*PharoJs-Tools',			#sourceCode : 'addBinding: aVariable\r\r\t"Used by PharoJS Playground to add instances of WorkspaceVariable "\r\r\tself interactionModel addBinding: aVariable',			#stamp : '',			#package : #PharoJs-Tools		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2024-03-03T08:21:00.622-05:00' ],		#prior : OmReference [ '4667' ],		#self : OmReference [ '4668' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PharoJs-Tools-Tests-CompatibleUserName.1689935303'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4668' ],		#self : OmReference [ '4669' ],		#time : DateAndTime [ '2024-03-03T08:21:00.647-05:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Tools-Tests-Playground,		#affectedPackageName : #PharoJs-Tools-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4669' ],		#self : OmReference [ '4670' ],		#time : DateAndTime [ '2024-03-03T08:21:00.649-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjPlaygroundTest\r\tinstanceVariableNames: \'playground window\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Tools-Tests-Playground\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PjPlaygroundTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjPlaygroundTest,						#isMetaSide : false					},					#name : #playground,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PjPlaygroundTest,						#isMetaSide : false					},					#name : #window,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjPlaygroundTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjPlaygroundTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjPlaygroundTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Tools-Tests-Playground,			#package : #PharoJs-Tools-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4670' ],		#self : OmReference [ '4671' ],		#time : DateAndTime [ '2024-03-03T08:21:00.705-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjPlaygroundTest subclass: #PjAppPlaygroundTest\r\tuses: PjTWaitUntilReady\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Tools-Tests-Playground\'',				#superclassName : 'PjPlaygroundTest',				#traitCompositionSource : 'PjTWaitUntilReady'			},			#name : #PjAppPlaygroundTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjAppPlaygroundTest class\r\tuses: PjTWaitUntilReady classTrait\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : 'PjTWaitUntilReady classTrait'				},				#name : #'PjAppPlaygroundTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjAppPlaygroundTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Tools-Tests-Playground,			#package : #PharoJs-Tools-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4671' ],		#self : OmReference [ '4672' ],		#time : DateAndTime [ '2024-03-03T08:21:00.743-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Tools-Tests-Base,		#affectedPackageName : #PharoJs-Tools-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4672' ],		#self : OmReference [ '4673' ],		#time : DateAndTime [ '2024-03-03T08:21:00.744-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #PjToolsTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Tools-Tests-Base\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #PjToolsTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjToolsTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjToolsTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjToolsTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Tools-Tests-Base,			#package : #PharoJs-Tools-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4673' ],		#self : OmReference [ '4674' ],		#time : DateAndTime [ '2024-03-03T08:21:00.768-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PharoJs-Tools-Tests-Data,		#affectedPackageName : #PharoJs-Tools-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4674' ],		#self : OmReference [ '4675' ],		#time : DateAndTime [ '2024-03-03T08:21:00.769-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebApplication subclass: #PjToolsTestClass1\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Tools-Tests-Data\'',				#superclassName : 'PjWebApplication',				#traitCompositionSource : '{}'			},			#name : #PjToolsTestClass1,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjToolsTestClass1 class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjToolsTestClass1 class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjToolsTestClass1,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Tools-Tests-Data,			#package : #PharoJs-Tools-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4675' ],		#self : OmReference [ '4676' ],		#time : DateAndTime [ '2024-03-03T08:21:00.81-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjWebApplication subclass: #PjToolsTestClass1\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Tools-Tests-Data\'',				#superclassName : 'PjWebApplication',				#traitCompositionSource : '{}'			},			#name : #PjToolsTestClass1,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjToolsTestClass1 class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjToolsTestClass1 class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjToolsTestClass1,					#isMetaSide : false				},				#parent : @8,				#content : 'A class used in tests with some "subclass responsibility" methods defined as an indirect subclass of PjApplication. This is used to verify that the class is seen as abstract class without having to explicitly declare #isAbstract.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Tools-Tests-Data,			#package : #PharoJs-Tools-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A class used in tests with some "subclass responsibility" methods defined as an indirect subclass of PjApplication. This is used to verify that the class is seen as abstract class without having to explicitly declare #isAbstract.',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4676' ],		#self : OmReference [ '4677' ],		#time : DateAndTime [ '2024-03-03T08:21:00.82-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjToolsTestClass1 subclass: #PjToolsTestClass2\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Tools-Tests-Data\'',				#superclassName : 'PjToolsTestClass1',				#traitCompositionSource : '{}'			},			#name : #PjToolsTestClass2,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjToolsTestClass2 class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjToolsTestClass2 class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjToolsTestClass2,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Tools-Tests-Data,			#package : #PharoJs-Tools-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4677' ],		#self : OmReference [ '4678' ],		#time : DateAndTime [ '2024-03-03T08:21:00.866-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjToolsTestClass1 subclass: #PjToolsTestClass2\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Tools-Tests-Data\'',				#superclassName : 'PjToolsTestClass1',				#traitCompositionSource : '{}'			},			#name : #PjToolsTestClass2,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjToolsTestClass2 class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjToolsTestClass2 class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjToolsTestClass2,					#isMetaSide : false				},				#parent : @8,				#content : 'A class used in tests with some "subclass responsibility" methods defined as a subclass of another subclass with "subclass responsibility" methods. This is used to verify that the class is seen as abstract class without having an explicit implementation of an own #isAbstract method.\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Tools-Tests-Data,			#package : #PharoJs-Tools-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A class used in tests with some "subclass responsibility" methods defined as a subclass of another subclass with "subclass responsibility" methods. This is used to verify that the class is seen as abstract class without having an explicit implementation of an own #isAbstract method.\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4678' ],		#self : OmReference [ '4679' ],		#time : DateAndTime [ '2024-03-03T08:21:00.868-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjToolsTestClass2 subclass: #PjToolsTestClass3\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Tools-Tests-Data\'',				#superclassName : 'PjToolsTestClass2',				#traitCompositionSource : '{}'			},			#name : #PjToolsTestClass3,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjToolsTestClass3 class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjToolsTestClass3 class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjToolsTestClass3,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Tools-Tests-Data,			#package : #PharoJs-Tools-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4679' ],		#self : OmReference [ '4680' ],		#time : DateAndTime [ '2024-03-03T08:21:00.91-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjToolsTestClass2 subclass: #PjToolsTestClass3\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Tools-Tests-Data\'',				#superclassName : 'PjToolsTestClass2',				#traitCompositionSource : '{}'			},			#name : #PjToolsTestClass3,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjToolsTestClass3 class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjToolsTestClass3 class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjToolsTestClass3,					#isMetaSide : false				},				#parent : @8,				#content : 'A class used in tests with some concrete methods originally defined as "subclass responsiblity" in one of the superclasses. This is used to verify that the class is seen as non-abstract (concrete) class and returning false for #isAbstract without having an explicit implementation of an own #isAbstract method.\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Tools-Tests-Data,			#package : #PharoJs-Tools-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A class used in tests with some concrete methods originally defined as "subclass responsiblity" in one of the superclasses. This is used to verify that the class is seen as non-abstract (concrete) class and returning false for #isAbstract without having an explicit implementation of an own #isAbstract method.\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4680' ],		#self : OmReference [ '4681' ],		#time : DateAndTime [ '2024-03-03T08:21:00.919-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjToolsTestClass1 subclass: #PjToolsTestClass2b\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Tools-Tests-Data\'',				#superclassName : 'PjToolsTestClass1',				#traitCompositionSource : '{}'			},			#name : #PjToolsTestClass2b,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjToolsTestClass2b class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjToolsTestClass2b class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjToolsTestClass2b,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Tools-Tests-Data,			#package : #PharoJs-Tools-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4681' ],		#self : OmReference [ '4682' ],		#time : DateAndTime [ '2024-03-03T08:21:00.967-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PjToolsTestClass1 subclass: #PjToolsTestClass2b\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'PharoJs-Tools-Tests-Data\'',				#superclassName : 'PjToolsTestClass1',				#traitCompositionSource : '{}'			},			#name : #PjToolsTestClass2b,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'PjToolsTestClass2b class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'PjToolsTestClass2b class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PjToolsTestClass2b,					#isMetaSide : false				},				#parent : @8,				#content : 'A class used in tests with some concrete methods originally defined as "subclass responsiblity" in one of the superclasses. This is used to verify that the class is seen as non-abstract (concrete) class and returning false for #isAbstract without having an explicit implementation of an own #isAbstract method.\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #PharoJs-Tools-Tests-Data,			#package : #PharoJs-Tools-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A class used in tests with some concrete methods originally defined as "subclass responsiblity" in one of the superclasses. This is used to verify that the class is seen as non-abstract (concrete) class and returning false for #isAbstract without having an explicit implementation of an own #isAbstract method.\r',		#oldStamp : '',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4682' ],		#self : OmReference [ '4683' ],		#time : DateAndTime [ '2024-03-03T08:21:01.215-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjAppPlaygroundTest class',				#isMetaSide : true			},			#name : #shouldInheritSelectors,			#protocol : #asserting,			#sourceCode : 'shouldInheritSelectors\r\t^true',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4683' ],		#self : OmReference [ '4684' ],		#time : DateAndTime [ '2024-03-03T08:21:01.216-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppPlaygroundTest,				#isMetaSide : false			},			#name : #setUpPlayground,			#protocol : #tests,			#sourceCode : 'setUpPlayground\r\r\tplayground := PjMinimalFileBasedWebApp playground.\r\tself waitUntil: [ playground bridge isConnected ]',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4684' ],		#self : OmReference [ '4685' ],		#time : DateAndTime [ '2024-03-03T08:21:01.217-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjAppPlaygroundTest,				#isMetaSide : false			},			#name : #testVerifyTitle,			#protocol : #tests,			#sourceCode : 'testVerifyTitle\r\r\tself assert: (playground title includesSubstring: \'PharoJS\').\r\tself assert:\r\t\t(playground title includesSubstring: PjMinimalFileBasedWebApp name)',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4685' ],		#self : OmReference [ '4686' ],		#time : DateAndTime [ '2024-03-03T08:21:01.217-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlaygroundTest,				#isMetaSide : false			},			#name : #closeWindow,			#protocol : #testing,			#sourceCode : 'closeWindow\r\twindow ifNotNil: [ window delete ]',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4686' ],		#self : OmReference [ '4687' ],		#time : DateAndTime [ '2024-03-03T08:21:01.218-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlaygroundTest,				#isMetaSide : false			},			#name : #'eval:',			#protocol : #testing,			#sourceCode : 'eval: statementsString\r\r\t| codePresenter |\r\tcodePresenter := playground firstPage text.\r\t^ codePresenter\r\t\t  evaluate: statementsString\r\t\t  onCompileError: [ :err | err pass ]\r\t\t  onError: [ :err | err pass ]',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4687' ],		#self : OmReference [ '4688' ],		#time : DateAndTime [ '2024-03-03T08:21:01.218-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlaygroundTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #testing,			#sourceCode : 'setUp\r\r\tsuper setUp.\r\tself setUpPlayground.\r\twindow := playground window',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4688' ],		#self : OmReference [ '4689' ],		#time : DateAndTime [ '2024-03-03T08:21:01.218-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlaygroundTest,				#isMetaSide : false			},			#name : #setUpPlayground,			#protocol : #testing,			#sourceCode : 'setUpPlayground\r\r\tplayground := PjWebApplication playground.\r\tplayground title: \'PharoJS Playground Test\'',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4689' ],		#self : OmReference [ '4690' ],		#time : DateAndTime [ '2024-03-03T08:21:01.218-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlaygroundTest,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #testing,			#sourceCode : 'tearDown\r\tsuper tearDown.\r\tself closeWindow',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4690' ],		#self : OmReference [ '4691' ],		#time : DateAndTime [ '2024-03-03T08:21:01.218-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlaygroundTest,				#isMetaSide : false			},			#name : #testReadJsGlobal,			#protocol : #testing,			#sourceCode : 'testReadJsGlobal\r\t|result|\r\tself shouldnt: [result := self eval: \'window.\'] raise: Error.\r\tself assert: (result isKindOf: PjProxy).\r\tself assert: result asJSON equals: #window',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4691' ],		#self : OmReference [ '4692' ],		#time : DateAndTime [ '2024-03-03T08:21:01.219-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlaygroundTest,				#isMetaSide : false			},			#name : #testSendMessageToGlobal,			#protocol : #testing,			#sourceCode : 'testSendMessageToGlobal\r\t|result|\r\tself shouldnt: [result := self eval: \'window document.\'] raise: Error.\r\tself assert: (result isKindOf: PjProxy).\r\tself assert: result asJSON equals: #document',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4692' ],		#self : OmReference [ '4693' ],		#time : DateAndTime [ '2024-03-03T08:21:01.219-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjPlaygroundTest,				#isMetaSide : false			},			#name : #testSetNewVariable,			#protocol : #testing,			#sourceCode : 'testSetNewVariable\r\t|result| \r\tself shouldnt: [result := self eval: \'newVar := 1.\'] raise: Error.\r\tself assert: result equals: 1',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4693' ],		#self : OmReference [ '4694' ],		#time : DateAndTime [ '2024-03-03T08:21:01.219-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjToolsTest,				#isMetaSide : false			},			#name : #testClassAbstract,			#protocol : #testing,			#sourceCode : 'testClassAbstract\r\t"Test that subclasses of PjApplication return true for #isAbstract although they might \r\t not necessarily implement an #isAbstract method. Having a single subclass responsibility\r\t makes them an abstract class already."\r\t\t\r\tself assert: PjApplication isAbstract.\r\tself assert: PjDOMApplication isAbstract.\r\tself assert: PjFileBasedWebApp isAbstract.\r\tself assert: PjWebApplication isAbstract.\r\tself assert: PjNodeApplication isAbstract.\r\t\r\tself assert: PjToolsTestClass1 subclassResponsibilitySet equals: #(m1 m2) asSet.\r\tself assert: PjToolsTestClass1 classSubclassResponsibilitySet equals: #(c1) asSet.\r\tself assert: PjToolsTestClass1 isAbstract.\r\t\r\tself assert: PjToolsTestClass2 subclassResponsibilitySet equals: #(m2) asSet.\r\tself assert: PjToolsTestClass2 classSubclassResponsibilitySet isEmpty.\r\tself assert: PjToolsTestClass2 isAbstract.\r\t\r\tself assert: PjToolsTestClass3 subclassResponsibilitySet isEmpty.\r\tself assert: PjToolsTestClass3 classSubclassResponsibilitySet isEmpty.\r\tself deny: PjToolsTestClass3 isAbstract.\r\t\r\tself assert: PjToolsTestClass2b subclassResponsibilitySet isEmpty.\r\tself assert: PjToolsTestClass2b classSubclassResponsibilitySet equals: #(c1) asSet.\r\tself assert: PjToolsTestClass2b isAbstract',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4694' ],		#self : OmReference [ '4695' ],		#time : DateAndTime [ '2024-03-03T08:21:01.219-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjToolsTestClass1 class',				#isMetaSide : true			},			#name : #bridgeClientClass,			#protocol : #accessing,			#sourceCode : 'bridgeClientClass\r\t^ nil',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4695' ],		#self : OmReference [ '4696' ],		#time : DateAndTime [ '2024-03-03T08:21:01.219-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjToolsTestClass1 class',				#isMetaSide : true			},			#name : #c1,			#protocol : #accessing,			#sourceCode : 'c1\r\t^ self subclassResponsibility',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4696' ],		#self : OmReference [ '4697' ],		#time : DateAndTime [ '2024-03-03T08:21:01.22-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjToolsTestClass1,				#isMetaSide : false			},			#name : #m1,			#protocol : #'abstract sample methods',			#sourceCode : 'm1\r\t^ self subclassResponsibility',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4697' ],		#self : OmReference [ '4698' ],		#time : DateAndTime [ '2024-03-03T08:21:01.22-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjToolsTestClass1,				#isMetaSide : false			},			#name : #m2,			#protocol : #'abstract sample methods',			#sourceCode : 'm2\r\t^ self subclassResponsibility',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4698' ],		#self : OmReference [ '4699' ],		#time : DateAndTime [ '2024-03-03T08:21:01.22-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjToolsTestClass1,				#isMetaSide : false			},			#name : #m3,			#protocol : #'abstract sample methods',			#sourceCode : 'm3\r\t^ 18',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4699' ],		#self : OmReference [ '4700' ],		#time : DateAndTime [ '2024-03-03T08:21:01.22-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjToolsTestClass2 class',				#isMetaSide : true			},			#name : #c1,			#protocol : #accessing,			#sourceCode : 'c1\r\t^ 12',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4700' ],		#self : OmReference [ '4701' ],		#time : DateAndTime [ '2024-03-03T08:21:01.22-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjToolsTestClass2,				#isMetaSide : false			},			#name : #m1,			#protocol : #'abstract sample methods',			#sourceCode : 'm1\r\t^ 4',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4701' ],		#self : OmReference [ '4702' ],		#time : DateAndTime [ '2024-03-03T08:21:01.22-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PjToolsTestClass3 class',				#isMetaSide : true			},			#name : #playgroundDoNotList,			#protocol : #settings,			#sourceCode : 'playgroundDoNotList\r\t<pharoJsSkip>',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4702' ],		#self : OmReference [ '4703' ],		#time : DateAndTime [ '2024-03-03T08:21:01.221-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjToolsTestClass3,				#isMetaSide : false			},			#name : #m2,			#protocol : #'concrete sample methods',			#sourceCode : 'm2\r\t^ 7',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4703' ],		#self : OmReference [ '4704' ],		#time : DateAndTime [ '2024-03-03T08:21:01.221-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjToolsTestClass2b,				#isMetaSide : false			},			#name : #m1,			#protocol : #'concrete sample methods',			#sourceCode : 'm1\r\t^ #m1',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4704' ],		#self : OmReference [ '4705' ],		#time : DateAndTime [ '2024-03-03T08:21:01.221-05:00' ],		#trigger : OmReference [ '4668' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjToolsTestClass2b,				#isMetaSide : false			},			#name : #m2,			#protocol : #'concrete sample methods',			#sourceCode : 'm2\r\t^ #m2',			#stamp : '',			#package : #PharoJs-Tools-Tests		}	}}OmEntry {	#tags : {		#author : 'AlexandraCroce',		#time : DateAndTime [ '2024-03-03T08:24:52.43-05:00' ],		#prior : OmReference [ '4705' ],		#self : OmReference [ '4706' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounter,				#isMetaSide : false			},			#name : #increment,			#protocol : #'initialize - release',			#sourceCode : 'increment\r\tself count: self count + 1',			#stamp : '',			#package : #PharoJs-Examples		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjCounter,				#isMetaSide : false			},			#name : #increment,			#protocol : #'initialize - release',			#sourceCode : 'increment\r\tself count: self count - 1',			#stamp : 'AlexandraCroce 3/3/2024 08:24',			#package : #PharoJs-Examples		}	}}OmEntry {	#tags : {		#author : 'AlexandraCroce',		#time : DateAndTime [ '2024-03-03T10:04:00.881-05:00' ],		#prior : OmReference [ '4706' ],		#self : OmReference [ '4707' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGeneratingCounterApp,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\t| container incrementButton decrementButton |\r\tsuper initialize.\r\tcontainer := self addElement: \'div\' style: self containerCss.\r\tcountDisplay := self addElement: \'div\' to: container style: {#fontSize -> \'300%\'}.\r\tself addElement: \'br\' to: container.\r\tincrementButton := self addElement: \'button\' to: container style: self buttonsSharedCss.\r\tincrementButton innerHTML: \'Increment\'.\r\tself setElement: incrementButton style: {#backgroundColor -> \'#ccf5ff\'}.\r\tself onClickElement: incrementButton do: [ self count: self count + 1 ].\r\tdecrementButton := self addElement: \'button\' to: container style: self buttonsSharedCss.\r\tdecrementButton innerHTML: \'Decrement\'.\r\tself onClickElement: decrementButton do: [ self count: self count - 1 ].\r\tself setElement: decrementButton style: {#backgroundColor -> \'#ffe6e6\'}.\r\tself count: 0',			#stamp : '',			#package : #PharoJs-Examples		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PjHtmlGeneratingCounterApp,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\t| container incrementButton decrementButton |\r\tsuper initialize.\r\tcontainer := self addElement: \'div\' style: self containerCss.\r\tcountDisplay := self addElement: \'div\' to: container style: {#fontSize -> \'300%\'}.\r\tself addElement: \'br\' to: container.\r\tincrementButton := self addElement: \'button\' to: container style: self buttonsSharedCss.\r\tincrementButton innerHTML: \'Open Door\'.\r\tself setElement: incrementButton style: {#backgroundColor -> \'#ccf5ff\'}.\r\tself onClickElement: incrementButton do: [ self count: self count + 1 ].\r\tdecrementButton := self addElement: \'button\' to: container style: self buttonsSharedCss.\r\tdecrementButton innerHTML: \'Decrement\'.\r\tself onClickElement: decrementButton do: [ self count: self count - 1 ].\r\tself setElement: decrementButton style: {#backgroundColor -> \'#ffe6e6\'}.\r\tself count: 0',			#stamp : 'AlexandraCroce 3/3/2024 10:04',			#package : #PharoJs-Examples		}	}}